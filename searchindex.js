Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "api/iqm.benchmarks.compressive_gst.gst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.bootstrap_counts", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_ghz_deneb", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/example_quantum_volume_deneb", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.bootstrap_counts.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_ghz_deneb.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/example_quantum_volume_deneb.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "iqm.benchmarks.compressive_gst.gst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.bootstrap_counts", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "QV on Deneb", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 20, 70, 115, 121, 129, 131, 136, 141, 155, 156, 161, 167, 170, 171], "python": 1, "librari": [1, 95, 100, 129, 152, 162], "suit": [1, 171], "qcvv": [1, 28, 153, 169, 171], "subpackag": [1, 19, 38, 55, 68, 87, 88, 93, 98], "modul": [1, 5, 15, 19, 38, 54, 55, 68, 87, 88, 93, 98, 169], "gener": [2, 3, 18, 20, 21, 22, 30, 33, 38, 40, 41, 46, 47, 48, 49, 50, 51, 57, 65, 70, 73, 76, 85, 91, 95, 96, 100, 103, 104, 105, 108, 109, 118, 119, 120, 135, 136, 150, 155, 156, 157, 159, 160, 161, 162, 163, 170], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 24, 39, 40, 41, 56, 57, 58, 69, 70, 71, 75, 76, 77, 89, 90, 91, 94, 95, 96, 99, 100, 101, 118, 131, 132, 150, 152, 153, 170, 171], "inherit": [2, 3, 5, 15, 20, 39, 56, 69, 75, 89, 94, 99, 131], "benchmarkbas": [2, 4, 171], "abc": [2, 3, 5, 6, 20, 39, 56, 69, 75, 89, 94, 99], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 24, 39, 41, 56, 58, 69, 71, 75, 77, 89, 90, 94, 95, 99, 100, 171], "pydant": [2, 4, 20, 22, 39, 41, 56, 58, 69, 71, 75, 77, 89, 90, 94, 95, 99, 100], "main": [2, 7, 8, 20, 21, 39, 56, 69, 75, 89, 94, 99, 155], "basemodel": [2, 4, 20, 39, 56, 69, 75, 89, 94, 99], "backend": [3, 6, 20, 21, 23, 25, 29, 40, 41, 42, 49, 57, 65, 70, 71, 76, 77, 85, 91, 96, 101, 103, 104, 105, 118, 119, 126, 127, 129, 130, 132, 133, 134, 138, 139, 141, 142, 145, 146, 147, 150, 153, 160, 161, 171], "iqmbackendbas": [3, 6, 21, 40, 57, 70, 76, 91, 96, 101, 103, 104, 105, 118, 119, 120, 126, 127, 129, 130, 133, 138, 139, 141, 145, 147], "configur": [3, 4, 6, 21, 22, 24, 25, 27, 29, 32, 33, 35, 37, 40, 41, 57, 58, 70, 71, 76, 77, 84, 90, 91, 95, 96, 100, 101, 150, 170, 171], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 44, 51, 57, 58, 60, 70, 71, 76, 77, 90, 91, 95, 96, 100, 101, 113, 132, 150, 151, 155, 156, 170], "The": [3, 6, 7, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 57, 58, 61, 67, 70, 71, 73, 76, 77, 79, 80, 82, 83, 90, 91, 95, 96, 100, 101, 102, 103, 104, 114, 124, 128, 134, 136, 138, 139, 141, 142, 143, 144, 148, 155, 156, 157, 160, 161, 162, 166, 167, 168, 170, 171], "implement": [3, 5, 6, 40, 41, 45, 160, 161], "all": [3, 4, 6, 7, 16, 17, 18, 22, 27, 30, 31, 33, 40, 41, 51, 53, 57, 64, 70, 74, 76, 78, 79, 80, 83, 84, 90, 91, 95, 96, 101, 118, 124, 126, 127, 132, 143, 144, 150, 153, 155, 156, 157, 159, 160, 161, 163, 165, 166, 167, 168, 170, 171], "from": [3, 4, 6, 7, 11, 21, 22, 27, 29, 32, 33, 35, 36, 37, 40, 41, 42, 49, 51, 52, 58, 61, 67, 71, 73, 74, 76, 77, 78, 83, 85, 90, 95, 100, 102, 111, 124, 125, 128, 132, 134, 136, 139, 143, 144, 145, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171], "which": [3, 6, 7, 8, 19, 22, 24, 29, 30, 31, 37, 40, 41, 42, 49, 52, 57, 58, 66, 68, 70, 71, 72, 76, 86, 90, 91, 92, 95, 96, 97, 100, 101, 107, 118, 124, 128, 132, 142, 155, 156, 160, 161, 162, 170, 171], "thei": [3, 17, 32, 162], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 19, 21, 22, 40, 41, 44, 57, 58, 70, 71, 76, 77, 90, 91, 95, 96, 100, 101, 132, 141, 150, 155, 156, 158, 159, 160, 161, 162, 166, 167], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 162], "abstract": [3, 6, 162], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 23, 24, 41, 53, 58, 65, 71, 73, 77, 85, 90, 95, 100, 111, 117, 118, 134, 139, 142, 150, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 170], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 20, 21, 37, 40, 51, 55, 57, 65, 68, 70, 71, 76, 77, 78, 85, 90, 91, 95, 96, 100, 101, 102, 115, 121, 126, 127, 128, 141, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 170, 171], "full": [3, 19, 20, 22, 71, 77, 162, 171], "given": [3, 6, 7, 11, 22, 30, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 63, 68, 70, 76, 83, 84, 93, 102, 119, 120, 146, 155, 156, 160, 161, 162, 171], "static": [3, 6, 21, 40, 57, 70, 76, 91, 96, 101], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 22, 23, 24, 27, 28, 30, 36, 40, 41, 42, 44, 45, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 85, 90, 91, 95, 96, 100, 101, 102, 103, 104, 105, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 147, 149, 152, 153, 155, 159, 160, 161, 162, 164, 166, 167], "check": [3, 25, 64, 84, 152, 155, 156], "whether": [3, 4, 22, 41, 58, 64, 65, 67, 70, 71, 76, 77, 84, 85, 90, 95, 119, 124, 136, 141, 160, 161, 163, 170], "requir": [3, 4, 22, 41, 58, 71, 77, 90, 95, 100, 152, 160, 162, 170, 171], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 23, 25, 27, 31, 32, 37, 40, 41, 51, 52, 76, 77, 105, 124, 130, 140, 142, 150, 152, 155, 156, 160, 161, 162, 168, 170, 171], "met": 3, "valid": [3, 24, 129, 130, 169, 171], "dictionari": [3, 4, 7, 11, 22, 29, 35, 41, 58, 61, 70, 71, 74, 76, 77, 78, 81, 82, 83, 90, 95, 100, 101, 103, 104, 114, 118, 119, 120, 122, 126, 127, 133, 134, 136, 138, 140, 146, 149, 157, 159, 162, 163], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 155, 162, 170], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 21, 22, 28, 30, 41, 49, 52, 58, 65, 70, 71, 76, 77, 90, 95, 100, 103, 104, 105, 109, 114, 117, 118, 119, 120, 124, 126, 127, 129, 132, 136, 141, 142, 143, 147, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 171], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 57, 58, 70, 71, 76, 77, 90, 91, 95, 96, 100, 101, 148, 162, 166, 167, 170], "shot": [4, 22, 41, 58, 71, 76, 77, 90, 95, 100, 126, 127, 132, 133, 147, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171], "int": [4, 9, 11, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 76, 77, 78, 81, 84, 85, 90, 95, 100, 101, 102, 103, 104, 105, 106, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 133, 136, 137, 140, 141, 143, 145, 146, 147, 149, 160, 161, 162], "256": [4, 58, 71, 77, 90, 95, 100, 157, 159, 164, 165], "max_gates_per_batch": [4, 22, 41, 58, 71, 77, 90, 95, 100, 126, 127, 147, 155, 156, 157, 158, 159, 164, 166, 167, 171], "calset_id": [4, 22, 41, 58, 71, 77, 90, 95, 100, 126, 127, 147, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 171], "routing_method": [4, 22, 41, 58, 71, 77, 90, 95, 100, 104, 105, 141, 155, 156, 157, 158, 159, 164, 166, 167, 171], "liter": [4, 22, 41, 58, 71, 77, 90, 95, 100, 145], "basic": [4, 22, 41, 58, 71, 77, 90, 95, 100, 104, 105], "lookahead": [4, 22, 41, 58, 71, 77, 90, 95, 100], "stochast": [4, 22, 41, 58, 71, 77, 90, 95, 100], "sabr": [4, 22, 41, 58, 71, 77, 90, 95, 100, 141, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 171], "physical_layout": [4, 22, 41, 58, 71, 77, 90, 95, 100, 145, 155, 156, 157, 158, 159, 164, 166, 167, 171], "fix": [4, 22, 29, 41, 58, 71, 77, 90, 95, 100, 101, 104, 119, 126, 128, 145, 150, 155, 156, 157, 158, 159, 162, 166, 167, 171], "batch": [4, 17, 22, 41, 58, 71, 77, 90, 95, 100, 126, 127, 145, 146, 147, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167], "number": [4, 22, 23, 24, 27, 28, 31, 40, 41, 45, 46, 47, 48, 49, 50, 51, 53, 55, 57, 58, 60, 62, 63, 65, 67, 68, 71, 76, 77, 84, 85, 87, 90, 95, 100, 101, 102, 103, 104, 105, 106, 115, 118, 119, 120, 121, 126, 127, 132, 133, 136, 137, 138, 147, 155, 156, 158, 159, 160, 161, 162], "us": [4, 6, 9, 16, 19, 20, 21, 22, 27, 28, 29, 32, 33, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 58, 65, 67, 70, 71, 77, 100, 102, 117, 124, 132, 134, 147, 150, 152, 153, 155, 156, 160, 162, 163, 168, 170], "circuit": [4, 7, 10, 15, 16, 17, 20, 21, 22, 23, 24, 27, 37, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 61, 68, 70, 71, 76, 77, 78, 81, 84, 85, 90, 91, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 114, 115, 118, 119, 120, 121, 126, 127, 129, 132, 133, 137, 138, 141, 142, 146, 147, 149, 150, 152, 153, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169], "default": [4, 6, 12, 22, 27, 30, 41, 58, 71, 76, 77, 85, 90, 95, 100, 120, 124, 132, 136, 145, 155, 157, 159, 162, 163, 165, 167], "i": [4, 6, 7, 19, 21, 22, 23, 24, 27, 28, 29, 30, 33, 41, 42, 46, 49, 51, 53, 57, 58, 64, 66, 67, 70, 71, 72, 76, 77, 84, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 106, 107, 110, 125, 129, 132, 136, 141, 145, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171], "2": [4, 22, 23, 24, 28, 52, 58, 64, 77, 84, 100, 119, 125, 137, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171], "8": [4, 22, 125, 152, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171], "maximum": [4, 31, 67, 126, 127, 147, 155, 156, 162], "gate": [4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 35, 37, 40, 41, 46, 50, 51, 52, 58, 68, 70, 71, 77, 87, 88, 91, 93, 95, 96, 100, 103, 105, 114, 117, 118, 119, 120, 122, 124, 126, 127, 129, 137, 138, 141, 147, 150, 155, 160, 161, 164, 168, 169, 171], "per": [4, 22, 68, 71, 77, 90, 100, 102, 104, 105, 106, 126, 127, 132, 133, 147, 162, 168, 169], "option": [4, 20, 41, 52, 58, 65, 76, 77, 95, 104, 105, 114, 117, 119, 120, 124, 126, 127, 129, 136, 141, 142, 143, 147, 150, 153, 158, 159, 161, 162, 167, 169], "calibr": [4, 6, 41, 42, 52, 76, 77, 126, 127, 132, 133, 147, 150, 159, 160, 161, 163, 165, 167], "id": [4, 147, 158, 159, 163, 165], "last": [4, 22], "avail": [4, 33, 170, 171], "qiskit": [4, 6, 22, 29, 58, 71, 77, 95, 100, 129, 141, 150, 152, 153, 155, 162], "rout": [4, 71, 77, 100, 141, 158, 159, 160, 161, 162, 166, 167], "transpil": [4, 16, 21, 40, 41, 44, 45, 58, 70, 71, 77, 100, 118, 119, 129, 133, 138, 141, 146, 150, 153, 155, 158, 159, 160, 161, 162, 166, 167], "physic": [4, 22, 24, 30, 41, 58, 70, 71, 76, 77, 81, 95, 100, 104, 145, 158, 159, 162, 166, 167, 169], "layout": [4, 8, 11, 16, 17, 22, 24, 41, 53, 58, 70, 71, 76, 77, 100, 101, 126, 127, 134, 141, 145, 150, 155, 158, 159, 160, 161, 162, 164, 166, 167], "constrain": [4, 145, 171], "dure": [4, 13, 23, 76, 91, 96], "select": [4, 22, 41, 58, 77, 83, 162], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 24, 27, 29, 32, 33, 35, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 61, 67, 68, 70, 71, 76, 77, 81, 85, 87, 90, 91, 95, 100, 101, 102, 103, 104, 105, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 132, 134, 137, 141, 142, 145, 146, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169], "initi": [4, 6, 19, 20, 22, 27, 37, 41, 54, 134, 155, 162], "allow": [4, 150, 155, 156, 160, 161, 171], "ani": [4, 8, 22, 23, 27, 44, 45, 74, 76, 95, 101, 106, 124, 126, 127, 133, 142, 144, 152, 156, 170, 171], "other": [4, 21, 27, 41, 150, 155, 156, 170, 171], "accord": [4, 27, 40, 47, 48, 57, 103, 145, 146, 152, 158, 159, 162, 166, 167], "final": [4, 6, 32, 52, 71, 76, 77, 81, 100, 141, 145, 146, 155], "measur": [4, 19, 20, 22, 27, 29, 33, 35, 40, 41, 44, 57, 60, 70, 71, 76, 77, 81, 90, 95, 100, 128, 133, 138, 145, 146, 153, 155, 156, 158, 160, 161, 162], "model_computed_field": [4, 22, 41, 58, 71, 77, 90, 95, 100], "classvar": [4, 22, 41, 58, 71, 77, 90, 95, 100], "dict": [4, 7, 11, 22, 23, 24, 41, 44, 45, 58, 60, 61, 67, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 90, 95, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 120, 121, 122, 124, 126, 127, 128, 133, 134, 136, 138, 140, 143, 144, 146, 147, 149, 153], "computedfieldinfo": [4, 22, 41, 58, 71, 77, 90, 95, 100], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 66, 70, 71, 72, 74, 76, 77, 82, 83, 86, 90, 91, 92, 95, 100, 101, 103, 104, 107, 114, 117, 119, 120, 126, 127, 136, 140, 141, 142, 145, 149, 155, 160, 161, 162, 170, 171], "comput": [4, 22, 27, 33, 40, 41, 43, 49, 58, 60, 61, 71, 76, 77, 78, 79, 80, 82, 90, 95, 100, 114, 115, 121, 140, 152, 155, 156, 160, 162, 169, 170, 171], "field": [4, 6, 22, 41, 58, 71, 77, 90, 95, 100, 170], "correspond": [4, 22, 23, 30, 41, 57, 58, 66, 68, 70, 71, 72, 76, 77, 81, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 107, 124, 128, 133, 146, 150, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167], "object": [4, 7, 8, 9, 10, 16, 17, 18, 22, 24, 27, 28, 35, 40, 41, 43, 53, 58, 71, 76, 77, 90, 95, 100, 101, 109, 126, 127, 139, 143, 144, 147, 162, 166, 167, 170], "model_config": [4, 22, 41, 58, 71, 77, 90, 95, 100], "configdict": [4, 22, 41, 58, 71, 77, 90, 95, 100], "model": [4, 22, 27, 41, 58, 71, 77, 90, 95, 100, 117, 123, 124, 155], "should": [4, 6, 8, 10, 22, 40, 41, 49, 54, 58, 71, 77, 90, 95, 100, 119, 150, 158, 159, 160, 161, 162, 170], "conform": [4, 22, 28, 41, 58, 71, 77, 90, 95, 100], "config": [4, 22, 41, 58, 71, 77, 90, 95, 100], "model_field": [4, 22, 41, 58, 71, 77, 90, 95, 100], "fieldinfo": [4, 22, 41, 58, 71, 77, 90, 95, 100], "annot": [4, 22, 41, 58, 71, 77, 90, 95, 100, 134, 170], "true": [4, 22, 27, 41, 44, 58, 71, 76, 77, 90, 95, 100, 124, 141, 152, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 171], "union": [4, 22, 41, 58, 71, 77, 90, 95, 100, 134, 162, 170], "nonetyp": [4, 22, 41, 58, 71, 77, 90, 95, 100], "fals": [4, 22, 27, 41, 58, 71, 77, 85, 90, 95, 100, 124, 132, 136, 141, 155, 157, 159, 166], "metadata": [4, 21, 22, 40, 41, 53, 57, 58, 70, 71, 74, 76, 77, 90, 91, 95, 96, 100, 101, 144], "about": [4, 22, 41, 58, 71, 77, 90, 95, 100, 150, 160], "defin": [4, 5, 6, 7, 22, 24, 25, 41, 49, 51, 58, 71, 77, 90, 95, 100, 118, 142, 153, 155, 160, 161, 170, 171], "map": [4, 7, 21, 22, 41, 49, 52, 58, 60, 61, 71, 77, 90, 95, 100, 141, 145, 146, 150, 160, 161], "thi": [4, 5, 6, 15, 16, 22, 23, 28, 33, 40, 41, 49, 53, 58, 64, 71, 77, 84, 90, 95, 100, 125, 134, 151, 152, 153, 154, 155, 156, 160, 161, 162, 168, 170, 171], "replac": [4, 22, 41, 58, 71, 77, 90, 95, 100, 170], "__fields__": [4, 22, 41, 58, 71, 77, 90, 95, 100], "v1": [4, 22, 41, 58, 71, 77, 90, 95, 100], "function": [5, 6, 20, 21, 22, 26, 34, 37, 39, 56, 57, 61, 66, 69, 70, 72, 75, 76, 86, 89, 91, 92, 94, 96, 97, 99, 101, 107, 108, 110, 111, 113, 114, 116, 117, 123, 125, 131, 135, 148, 150, 162], "benchmarkobservationidentifi": [5, 8, 35, 150, 157, 159, 163, 165, 166, 167], "benchmarkobserv": [5, 7, 35, 53, 150, 157, 159, 163, 165, 166, 167], "benchmarkrunresult": [5, 6, 7, 12, 21, 34, 40, 43, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 150], "benchmarkanalysisresult": [5, 6, 12, 21, 34, 40, 43, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 150], "kwarg": 6, "run": [6, 7, 8, 10, 20, 21, 22, 24, 27, 34, 35, 40, 41, 43, 57, 61, 66, 70, 71, 72, 76, 86, 91, 92, 96, 97, 101, 107, 153, 155, 156, 159, 162, 168, 171], "cortex": [6, 11], "experi": [6, 27, 29, 32, 33, 35, 37, 53, 57, 65, 66, 70, 72, 73, 76, 77, 79, 80, 86, 91, 92, 96, 97, 101, 107, 116, 123, 124, 128, 130, 159, 168], "In": [6, 155, 156, 162, 170, 171], "order": [6, 22, 27, 42, 52, 53, 117, 125, 160, 161, 171], "write": [6, 132, 152, 153, 170], "new": [6, 7, 11, 142, 150, 153, 155, 156, 162, 167, 171], "recommend": [6, 162, 170, 171], "deriv": [6, 170], "baseclass": 6, "addition": [6, 160, 161], "custom": [6, 58, 77, 155, 156, 159, 165, 166, 167, 171], "analysi": [6, 7, 12, 21, 22, 26, 34, 57, 66, 70, 72, 73, 76, 86, 91, 92, 96, 97, 101, 107, 150, 155], "can": [6, 10, 16, 22, 30, 32, 41, 42, 55, 57, 68, 76, 134, 150, 155, 160, 161, 162, 166, 167, 171], "give": [6, 21, 61, 150, 155, 160, 161, 162, 170], "pointer": 6, "analysis_funct": [6, 21, 40, 57, 70, 76, 91, 96, 101, 153], "accept": [6, 22, 65, 150, 170], "analysisresult": [6, 7, 40, 43, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 150, 153], "its": [6, 111, 142, 150, 155, 156, 170], "input": [6, 11, 24, 71, 77, 106, 125, 129, 130, 134, 145, 158, 159, 162], "result": [6, 7, 8, 10, 11, 12, 20, 21, 22, 27, 28, 31, 32, 33, 34, 35, 36, 53, 55, 57, 60, 66, 67, 68, 70, 72, 76, 77, 84, 85, 86, 91, 92, 96, 97, 101, 107, 115, 121, 123, 145, 150, 153, 155, 156, 159, 166, 167, 170, 171], "onli": [6, 12, 23, 71, 77, 142, 155, 156, 160, 161, 162, 164, 170], "pass": [6, 12, 106, 134, 141, 153, 159, 165], "through": [6, 12, 45, 170], "iqmbackend": [6, 76, 101, 126, 127, 167], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 27, 29, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 53, 57, 70, 73, 76, 91, 96, 101, 108, 110, 124, 149, 150, 153, 155, 156, 157, 159, 160, 162, 163, 166, 167], "overridden": 6, "an": [6, 16, 17, 19, 20, 21, 22, 31, 34, 35, 37, 40, 41, 43, 44, 57, 70, 96, 97, 125, 129, 133, 134, 150, 152, 153, 155, 156, 160, 161, 162, 170, 171], "xarrai": [6, 7, 11, 13, 21, 27, 29, 33, 35, 37, 40, 44, 57, 70, 76, 91, 96, 101, 149, 150, 153], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 24, 27, 28, 29, 31, 32, 33, 35, 37, 40, 42, 43, 44, 45, 53, 101, 103, 126, 127, 142, 150, 155, 156, 162, 166, 167, 168, 170, 171], "inform": [6, 10, 52, 54, 170], "necessari": [6, 155, 160, 161, 171], "analys": 6, "calibration_set_id": [6, 161, 167], "uuid": 6, "calibrationsetid": 6, "latest": [6, 147, 160, 161, 169], "set": [6, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 37, 40, 58, 71, 77, 103, 104, 106, 112, 124, 138, 145, 147, 152, 155, 156, 160, 163, 168, 169, 171], "runresult": [6, 7, 10, 40, 43, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 150, 153], "analyz": [6, 10, 40, 43, 137, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 171], "run_index": [6, 159, 166, 167], "1": [6, 22, 33, 58, 62, 83, 100, 104, 105, 116, 119, 125, 141, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171], "intern": [6, 17], "perform": [6, 21, 33, 58, 71, 77, 117, 128, 141, 155, 162, 168, 170, 171], "make": [6, 76, 147, 151, 155, 169, 170, 171], "shallow": 6, "copi": [6, 136, 152, 170], "produc": [6, 20, 24, 31, 33, 52, 77, 171], "therefor": [6, 64, 84], "chang": [6, 22, 150, 167, 169, 170], "data": [6, 7, 11, 20, 21, 22, 26, 27, 33, 40, 41, 42, 44, 52, 73, 85, 109, 112, 117, 123, 132, 153, 158, 159, 160, 161, 162, 166, 167], "just": [6, 155], "structur": [6, 155, 156], "arrai": [6, 20, 27, 29, 31, 33, 37, 70, 90, 95, 100, 124, 125, 130, 134, 162], "index": [6, 40, 42, 49, 51, 52, 70, 76, 104, 156, 166, 167, 169], "construct": [6, 19, 41, 46], "updat": [6, 21, 34, 70, 71, 150, 155, 156, 158, 159, 171], "core": 7, "circuit_contain": 7, "plot": [7, 20, 21, 22, 34, 40, 43, 53, 85, 124, 150, 153, 155, 156, 157, 159, 160, 161, 163, 171], "matplotlib": [7, 28, 153, 155, 156, 162], "figur": [7, 14, 28, 31, 32, 33, 53, 65, 73, 85, 124, 153, 159, 162], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 34, 35, 40, 43, 53, 73, 124, 150, 155, 156, 157, 159, 160, 161, 163, 165, 166, 167], "list": [7, 9, 11, 13, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 44, 45, 49, 51, 52, 53, 57, 59, 60, 61, 63, 65, 67, 70, 71, 76, 78, 79, 80, 81, 82, 84, 85, 100, 101, 102, 103, 104, 105, 106, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 149, 150, 152, 156, 160, 161, 162, 166, 167, 170, 171], "dataclass": [7, 8, 10], "store": [7, 8, 10, 21, 34, 53, 150, 171], "consist": [7, 19, 160, 161, 170], "kei": [7, 60, 67, 70, 76, 81, 100, 103, 138, 140, 146, 152, 162, 166, 167], "valu": [7, 8, 22, 36, 40, 41, 45, 49, 60, 61, 67, 70, 71, 100, 103, 116, 138, 140, 141, 146, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "pair": [7, 36, 42, 50, 52, 70, 130, 155], "plot_nam": 7, "plot_al": [7, 153, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167], "from_run_result": 7, "creat": [7, 21, 23, 27, 32, 40, 41, 49, 50, 57, 61, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 151, 153, 161, 167, 171], "identifi": [8, 9, 11, 27, 35, 76, 101, 117, 124, 126, 127, 129, 143, 149, 155, 157, 159, 160, 161, 162, 163, 165, 166, 167, 170], "uncertainti": [8, 22, 36, 45, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "singl": [8, 10, 13, 16, 18, 22, 36, 41, 53, 58, 59, 70, 71, 76, 77, 103, 110, 150, 155, 156, 162, 171], "string": [8, 9, 11, 17, 18, 27, 30, 36, 143, 171], "qubit_indic": [9, 16, 157, 159, 163, 165, 166, 167], "eas": 9, "indic": [9, 76, 81, 140, 146, 170], "wa": [9, 25, 32, 64, 84, 128, 155, 156, 170], "properti": [9, 16, 17], "string_identifi": [9, 155, 159, 160, 161, 162], "version": [9, 108, 152, 155, 156, 170, 171], "enough": [10, 160, 161], "those": [10, 76, 81, 145, 155, 156, 162, 170], "count": [11, 22, 27, 29, 32, 33, 35, 37, 40, 41, 43, 60, 61, 67, 76, 78, 102, 115, 121, 128, 133, 134, 136, 138, 143, 144, 149, 150, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "add": [11, 17, 21, 40, 51, 57, 70, 76, 91, 96, 101, 103, 148, 150, 152, 170, 171], "job": [11, 70, 74, 76, 101, 126, 127, 143, 153, 157, 158, 159, 163, 164, 166, 167], "If": [11, 22, 27, 33, 41, 58, 100, 155, 156, 162, 164, 170], "same": [11, 17, 42, 52, 100, 155, 156, 158, 159, 160, 161, 170], "alreadi": [11, 157], "present": 11, "old": 11, "both": [11, 21, 77, 155, 163, 171], "ad": [11, 150, 157, 159, 160, 163, 164, 166, 167], "togeth": [11, 171], "bitstr": [11, 60, 61, 62, 67, 83, 128, 140], "current": [11, 27, 29, 30, 32, 33, 35, 37, 41, 70, 132, 160, 161, 162, 171], "instanc": [11, 16, 17, 21, 34, 44, 45, 65, 150, 162], "xr": [11, 13, 32, 40, 44, 45, 53, 57, 70, 73, 76, 91, 96, 101, 124, 149, 153], "merg": [11, 13], "where": [11, 16, 17, 22, 24, 25, 27, 37, 41, 105, 150, 155, 156, 160, 161, 162, 170], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 41, 49, 51, 123, 160, 161], "size": [13, 22, 28, 41, 49, 55, 57, 65, 67, 153, 155, 159, 165], "dateset": 13, "fig": [14, 53, 153], "show": [14, 153, 155, 156, 159, 160, 161], "close": [14, 22, 153], "easili": [15, 150, 171], "interact": [15, 150], "quantum": [15, 21, 22, 23, 24, 40, 41, 44, 46, 47, 48, 49, 50, 57, 68, 70, 71, 75, 76, 77, 78, 81, 84, 86, 103, 104, 115, 119, 120, 121, 132, 133, 137, 138, 141, 142, 147, 150, 160, 161, 162, 168, 169, 171], "circuitgroup": [15, 16, 40, 150], "benchmarkcircuit": [15, 18, 150], "circuit_group": 16, "group": [16, 17, 91, 151, 155, 169], "purpos": [16, 17, 170], "typic": [16, 17, 155, 156], "repres": [16, 17, 23, 28, 73, 85, 140, 170], "exampl": [16, 108, 150, 151, 153, 154, 160, 162, 169, 170, 171], "insid": [16, 150], "get_circuit_group_by_nam": 16, "get": [16, 20, 22, 111, 139, 159, 164], "desir": [16, 17, 21], "doe": [16, 41, 170], "exist": [16, 18, 150, 155, 156, 171], "group_nam": 16, "integ": [16, 17, 22, 24, 41, 76, 81, 104], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 23, 24, 27, 31, 32, 33, 36, 37, 41, 42, 45, 49, 60, 61, 65, 67, 70, 71, 73, 76, 81, 85, 101, 117, 118, 119, 120, 122, 124, 126, 133, 141, 146, 147], "qubit_layout": [16, 17, 22, 23, 24, 25, 27, 29, 31, 32, 33, 35, 40, 42, 44, 45, 49, 51, 52, 53, 155, 159, 160, 161, 162], "qiskit_iqm": [17, 41, 150, 153, 155, 156, 159, 160, 161, 167], "iqm_circuit": 17, "iqmcircuit": [17, 23, 24, 40, 46, 47, 48, 49, 50, 70, 76, 81, 101, 103, 104, 105, 114, 118, 119, 120, 122, 126, 127, 129, 133, 137, 138, 141, 142, 146, 147, 150], "It": [17, 152, 155, 156, 160, 171], "common": [17, 113, 170], "activ": [17, 142, 171], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 170, 171], "found": [17, 42, 155, 156, 171], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 170], "compress": [19, 20, 21, 22, 26, 34, 150, 168, 169, 171], "gst": [19, 21, 22, 27, 28, 29, 32, 33, 34, 35, 150, 168, 169], "self": [19, 21, 120, 153], "character": [19, 21, 155, 169], "process": [19, 20, 27, 77, 155, 156, 157, 159, 163, 164, 166, 167], "matric": [19, 31, 162], "well": [19, 21, 33, 34], "parametr": [19, 27, 61, 68, 70, 71, 155, 156, 158, 159, 162], "state": [19, 22, 27, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 115, 121, 150, 153, 162, 168, 169, 170, 171], "povm": [19, 27, 31, 37, 162], "low": [19, 162], "rank": [19, 22, 31, 33, 150, 162], "matrix": [19, 20, 31, 106, 152, 155, 156], "reduc": [19, 22, 41, 142], "post": [19, 77, 157, 159, 163, 164, 166, 167], "overhead": 19, "tomographi": [20, 26, 168, 169, 171], "follow": [20, 155, 156, 160, 161, 162, 170, 171], "step": 20, "said": 20, "convers": [20, 170], "ideal": [20, 78, 102, 155, 156], "numpi": [20, 29, 31, 33, 136, 152, 155, 156, 159, 162, 163], "mgst": [20, 22, 29, 36, 37, 150, 162, 170, 171], "first": [20, 22, 27, 37, 51, 57, 70, 100, 160, 161, 162, 164, 166, 167, 168], "estim": [20, 22, 27, 31, 33, 37, 40, 41, 44, 45, 55, 57, 71, 76, 91, 96, 101, 102, 128, 150, 155, 156, 158, 159, 160, 161, 163], "gaug": [20, 31, 33, 162], "optim": [20, 22, 31, 33, 41, 70, 71, 77, 100, 141, 150, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167, 171], "target": [20, 22, 27, 33, 37, 141, 162], "pygsti": [20, 27], "rerun": [20, 160], "bootstrap": [20, 22, 27, 32, 33, 136, 150, 162], "error": [20, 22, 25, 27, 31, 32, 33, 35, 36, 41, 44, 58, 76, 77, 82, 124, 134, 150, 155, 159, 160, 161, 162], "bar": [20, 27, 32, 33, 124, 153, 162], "tabl": [20, 22, 28, 31, 32, 33, 155, 162], "reconstruct": [20, 22, 27, 37, 162], "compressivegst": [20, 22, 162], "benchmark_definit": [20, 22, 39, 41, 56, 58, 69, 71, 75, 77, 89, 90, 94, 95, 99, 100, 153], "gstconfigur": [20, 21, 24, 162], "spam": [21, 27, 32, 35, 155], "robust": [21, 155], "generate_meas_circuit": 21, "random": [21, 22, 40, 41, 58, 70, 87, 89, 94, 95, 99, 100, 103, 105, 113, 119, 120, 136, 150, 152, 156, 158, 160, 161, 162, 165, 168, 169, 171], "distribut": [21, 82, 83, 140, 152, 155, 156, 170], "among": [21, 155, 171], "differ": [21, 24, 27, 40, 73, 100, 155, 160, 161, 162, 166, 167, 168, 170, 171], "depth": [21, 22, 41, 46, 47, 48, 49, 58, 76, 85, 100, 101, 104, 105, 116, 119, 123, 126, 128, 155, 156, 157, 158, 159, 160, 161, 163, 164], "rang": [21, 149, 150, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 171], "l_min": 21, "l_max": 21, "seq_len_list": [21, 22], "No": 21, "than": [21, 41, 155, 156, 160, 161, 164], "need": [21, 22, 28, 40, 70, 134, 155, 156, 162, 171], "axactli": 21, "describ": [21, 170], "meaning": [21, 55, 57, 68, 76, 77], "float": [21, 22, 28, 36, 42, 52, 57, 59, 60, 62, 63, 64, 65, 67, 70, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 95, 100, 102, 103, 104, 105, 115, 116, 117, 121, 124, 128, 129, 132, 134, 138, 140], "time": [21, 22, 27, 70, 73, 74, 76, 101, 126, 127, 148, 155, 156, 158, 159, 161, 162], "took": 21, "circuit_gen_transp_tim": 21, "add_configuration_to_dataset": [21, 40], "sourc": [21, 162, 169, 170], "further": [21, 40, 150], "storag": [21, 40, 150], "routin": [21, 28, 40, 41, 58, 77, 117], "1024": [22, 41], "gate_set": [22, 23, 24, 162], "num_circuit": [22, 27, 37, 71, 77, 155, 156, 158, 159, 162, 166, 167, 171], "gate_label": [22, 162], "14": [22, 152, 157, 158, 159, 161, 163, 164, 171], "from_init": 22, "bool": [22, 27, 41, 58, 64, 65, 67, 70, 71, 76, 77, 84, 85, 90, 95, 124, 132, 136, 141], "max_init": 22, "20": [22, 152, 153, 157, 158, 159, 161, 163], "opt_method": 22, "auto": 22, "max_iter": 22, "convergence_criteria": 22, "4": [22, 70, 125, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171], "0": [22, 40, 42, 49, 51, 52, 57, 64, 77, 100, 103, 104, 105, 125, 141, 145, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171], "0001": [22, 153], "batch_siz": 22, "bootstrap_sampl": [22, 162], "test": [22, 150, 155, 156, 171], "ghzbenchmark": [22, 39, 41, 155, 156, 159, 160, 161], "sequenc": [22, 29, 41, 58, 71, 76, 77, 90, 95, 100, 101, 102, 115, 118, 119, 120, 121, 141, 145, 155, 157, 159, 162, 163], "e": [22, 23, 24, 27, 37, 41, 95, 100, 125, 149, 155, 156, 158, 159, 160, 161, 162, 166, 167], "g": [22, 41, 95, 100, 125, 149, 152, 155, 156, 158, 159, 160, 161, 162, 166, 167], "specifi": [22, 23, 24, 27, 37, 41, 71, 76, 77, 95, 101, 103, 104, 126, 127, 130, 138, 140, 145, 147, 155, 156, 164, 171], "label": [22, 23, 24, 28, 30, 41, 71, 85, 95, 104, 114, 120, 124, 141, 145, 150, 152, 153, 155, 160, 161], "meant": [22, 24, 41], "either": [22, 58, 117, 134, 138, 152, 160, 161, 162, 170, 171], "cirucuit": 22, "one": [22, 71, 125, 147, 153, 155, 160, 161, 162, 164, 170, 171], "predefin": [22, 23, 162], "1qxyi": [22, 162], "2qxycz": [22, 162], "2qxycz_extend": [22, 162], "3qxycz": [22, 162], "tomograph": 22, "complet": 22, "mean": [22, 64, 138, 152, 155, 156, 158, 162, 170], "vacuum": 22, "abl": 22, "prepar": [22, 37, 40, 153, 155, 160, 161, 162, 170], "form": [22, 103, 170], "frame": [22, 162], "space": 22, "practic": [22, 171], "suffici": [22, 160, 161], "condit": [22, 64, 84, 160, 161, 170], "combin": [22, 30, 155, 156, 170], "local": [22, 160], "pauli": [22, 30, 33, 100, 102, 104, 105, 106, 152, 162], "eigenst": 22, "quantumcircuit": [22, 23, 24, 40, 46, 47, 48, 49, 50, 57, 70, 76, 81, 101, 103, 114, 118, 119, 120, 126, 127, 133, 137, 141, 142, 146, 147, 150, 152, 153, 162], "how": [22, 40, 151, 154, 162, 168, 169, 170, 171], "mani": [22, 40, 70, 150, 160], "guidelin": 22, "choos": [22, 30, 41, 57, 156, 160, 161, 170], "At": 22, "least": [22, 77, 155, 156, 162, 170], "50": [22, 153, 155, 156, 159, 162, 163, 164, 165, 167, 170], "3": [22, 41, 58, 71, 77, 84, 125, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171], "400": [22, 152, 157, 159, 165], "two": [22, 100, 103, 152, 153, 155, 160, 161, 162], "6": [22, 31, 152, 157, 158, 159, 160, 161, 163, 164, 165, 167, 170, 171], "2000": [22, 156, 162], "three": [22, 155, 156], "9": [22, 152, 153, 155, 157, 158, 159, 160, 161, 163, 164, 170, 171], "expect": [22, 60, 61, 67, 100, 103, 105, 150, 155], "grow": 22, "linearli": [22, 41], "exponenti": [22, 116, 155], "krau": [22, 27, 31, 33, 37, 162], "coher": [22, 40, 41, 44, 155, 156, 159, 160, 161], "dim": 22, "control": [22, 28, 160, 161, 170], "maxim": [22, 50, 155, 156], "middl": 22, "cutoff": 22, "below": [22, 155, 156, 160, 161, 162, 170, 171], "possibl": [22, 41, 160, 161, 166, 167, 170], "algorithm": [22, 37, 41, 51, 103, 155, 156, 160, 161], "point": [22, 124, 160, 161], "tri": 22, "limit": [22, 152, 170], "amount": [22, 148, 149], "retri": 22, "gd": 22, "sfn": 22, "gradient": 22, "descent": 22, "saddl": 22, "free": [22, 170], "newton": 22, "respect": [22, 41, 100, 102, 155, 161], "automat": [22, 32, 171], "iter": [22, 134, 140], "while": [22, 132, 160, 161, 162, 170], "second": [22, 27, 37, 68, 70, 168, 169], "determin": [22, 41, 170], "when": [22, 77, 150, 155, 160, 161, 171], "termin": [22, 170, 171], "multipli": [22, 62], "cost": [22, 155, 156], "threshold": [22, 64, 65, 77, 84, 85, 155, 156], "nois": [22, 155], "consid": [22, 71, 77, 145], "success": [22, 64, 84, 155, 156], "10": [22, 71, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 171], "usual": [22, 33, 160], "sensibl": 22, "rel": 22, "between": [22, 50, 51, 105, 132, 155, 156, 160], "consecut": [22, 41], "1e": [22, 162], "hyperparamt": 22, "converg": [22, 162], "behaviour": 22, "smaller": [22, 40, 41, 49, 155], "runtim": 22, "lead": [22, 150, 160, 161, 162], "errat": 22, "jump": 22, "lack": 22, "repeat": [22, 155, 156], "fake": [22, 150], "via": [22, 40, 41, 155, 156, 162], "num_qubit": [23, 24, 45, 46, 47, 48, 50, 57, 58, 76, 102, 115, 121, 156, 158, 161], "assign": [23, 70, 71, 100, 136, 155, 156, 158, 159], "transipil": 23, "so": [23, 32, 150, 155, 162], "stage": [23, 150], "mai": [23, 152, 155, 156, 170], "actual": [23, 155, 156], "gate_labels_dict": [23, 24], "rx": [23, 24, 162], "pi": [23, 24, 152, 159, 163], "rotat": [23, 24, 33, 152, 153], "around": [23, 24, 155, 156], "x": [23, 24, 27, 37, 62, 110, 112, 124, 150, 152, 153, 161, 162, 164, 166, 167], "axi": [23, 24, 27, 37, 124, 150], "num_gat": [23, 24], "handl": [24, 171], "variabl": [24, 57, 70, 76, 91, 96, 101, 117, 153, 162, 171], "correct": [25, 85, 102, 132, 133, 155, 156, 162], "properli": [25, 31, 33, 35, 155, 156], "rais": [25, 103, 106, 130, 132, 141, 145], "code": [26, 155, 156, 162, 169, 170, 171], "y": [27, 29, 37, 152], "ndarrai": [27, 29, 31, 33, 37, 70, 116, 117, 123], "k": [27, 37, 152, 155, 156, 158, 164, 166, 167], "rho": [27, 37, 162], "target_mdl": 27, "resampl": [27, 136], "outcom": [27, 29, 37, 133, 155, 156, 162], "each": [27, 29, 37, 42, 51, 53, 65, 79, 80, 81, 85, 95, 100, 102, 105, 109, 128, 133, 138, 157, 158, 159, 160, 161, 162, 163, 164, 170, 171], "repetit": 27, "newli": 27, "sampl": [27, 40, 61, 67, 77, 83, 95, 100, 102, 103, 104, 105, 106, 118, 119, 120, 136, 162], "non": [27, 32, 35, 116, 155, 156, 170], "corresp": 27, "probabl": [27, 29, 37, 79, 80, 82, 83, 100, 103, 115, 121, 128, 140, 155, 156, 164, 171], "save": [27, 28, 32, 162], "num_povm": [27, 37], "subarrai": [27, 37], "along": [27, 37, 170], "oper": [27, 33, 37, 68, 87, 129, 138, 150, 152, 160, 161, 162, 168, 169], "enumer": [27, 37, 160, 161, 162], "3d": [27, 31, 33, 162], "cpt": [27, 37], "superoper": [27, 37, 162], "standard": [27, 28, 30, 31, 33, 37, 65, 77, 80, 89, 124, 138, 150, 162, 171], "basi": [27, 30, 33, 37, 129, 141, 152, 155, 156, 162, 170], "stack": [27, 37], "els": [27, 152], "x_arrai": 27, "tensor": 27, "e_arrai": 27, "rho_arrai": 27, "df_g_arrai": 27, "qualiti": [27, 32, 35, 40, 155, 156], "df_o_arrai": 27, "df": 28, "datafram": [28, 31, 32, 33, 35], "row_label": 28, "col_width": 28, "fontsiz": 28, "12": [28, 152, 157, 158, 159, 162, 163, 164, 166, 167], "turn": [28, 29, 31, 32, 33, 155, 160], "panda": [28, 31, 32, 33, 35], "file": [28, 150, 170, 171], "row": 28, "cell": [28, 155, 156, 160], "width": [28, 155, 156], "font": 28, "text": [28, 155, 156, 162, 170], "obtain": [29, 152, 155, 156, 170, 171], "format": [29, 31, 32, 33, 35, 36, 155, 170], "2d": [29, 31], "j": [29, 152, 155, 156, 160, 161, 162], "column": 29, "pdim": 30, "dimens": [30, 153, 162], "like": [30, 35, 134, 152, 155, 156, 171], "ii": [30, 152, 153, 170], "ix": 30, "xx": 30, "df_g": [31, 33, 35], "x_opt": [31, 33], "e_opt": 31, "rho_opt": 31, "max_ev": 31, "arbitrari": 31, "them": [31, 33, 51, 153, 171], "after": [31, 33, 119, 171], "conta": 31, "element": [31, 57], "densiti": [31, 100, 103, 105, 124, 155, 156], "optmiz": 31, "eigenvalu": 31, "choi": 31, "df_g_evals_fin": 31, "fig_g": [31, 33], "fidel": [31, 33, 40, 41, 42, 43, 44, 45, 51, 52, 53, 71, 87, 88, 91, 93, 96, 98, 101, 102, 117, 124, 150, 162, 168, 169, 171], "etc": [31, 33], "fig_choi": 31, "df_g_final": [31, 33], "df_o": [32, 35], "also": [32, 33, 134, 150, 162, 166, 167, 170, 171], "metric": [32, 33, 71, 155, 156, 162, 163], "fit": [32, 35, 95, 108, 109, 110, 112, 116, 117, 123, 124, 150, 162, 170], "df_o_fin": 32, "k_target": [33, 37], "includ": [33, 65, 73, 136, 150, 155, 156, 160, 161, 170], "hamiltonian": [33, 150, 162], "diamond": [33, 162], "distanc": [33, 41, 51, 162], "4d": 33, "df_g_rotat": 33, "fig_rot": 33, "convert": [35, 36, 106, 152], "high": [35, 41, 155, 156, 160, 161], "level": [35, 41, 58, 71, 77, 100, 155, 156, 158, 159, 160, 161, 166, 167], "simpl": [35, 153, 155, 171], "observation_list": 35, "result_str": 36, "err": 36, "interv": 36, "floar": 36, "wrapper": [37, 40], "alg": 37, "x_target": 37, "e_target": 37, "rho_target": 37, "ghz": [38, 150, 168, 169, 171], "verifi": [38, 129, 152], "greenberg": [38, 40, 155, 156, 168, 169], "horn": [38, 40, 155, 156, 168, 169], "zeiling": [38, 40, 155, 156, 168, 169], "ghzconfigur": [39, 40, 155, 156, 159, 160, 161], "generate_native_ghz": 40, "qubit_count": [40, 41], "nativ": [40, 52, 119, 120, 122, 129, 138, 150, 155], "topologi": [40, 58, 141, 145, 150, 155, 156, 161], "subset": [40, 42, 44, 45, 49, 51, 52], "system": [40, 41, 42, 44, 45, 49, 51, 52, 132, 155, 156, 162, 170, 171], "protocol": [40, 42, 44, 45, 49, 51, 52, 155, 156, 168], "equal": [40, 49, 76, 150, 155, 156], "generate_coherence_meas_circuit": 40, "take": [40, 41, 141, 148, 150, 155, 156, 162, 171], "output": [40, 54, 78, 79, 80, 81, 82, 83, 84, 132, 150, 152, 155, 156, 162, 166, 167, 171], "mult": 40, "q": [40, 55, 57, 58, 64, 159, 162, 168, 169, 171], "qc_list_transpil": 40, "append_rm": 40, "num_rm": [40, 41, 160, 161], "append": [40, 70, 152, 153, 162], "1q": [40, 122, 150, 155], "clifford": [40, 88, 89, 90, 91, 92, 94, 95, 96, 103, 114, 118, 119, 120, 122, 129, 130, 150, 151, 163, 168, 169, 171], "uniformli": [40, 155], "param": [40, 46, 47, 48, 50, 70, 79, 91, 96, 106, 110, 112, 114, 115, 126, 127, 128, 130, 140, 143, 144], "origin": [40, 76, 81, 136, 141, 142, 170], "generate_readout_circuit": 40, "creation": [40, 160], "all_circuits_list": 40, "state_generation_routin": [41, 155, 156, 159, 160, 161], "tree": [41, 49, 51, 155, 159, 160, 161], "custom_qubits_arrai": [41, 57, 58, 77, 155, 156, 159, 160, 161, 165, 166, 167, 171], "qiskit_optim_level": [41, 58, 71, 77, 100, 104, 105, 141, 155, 156, 158, 159, 164, 166, 167, 171], "optimize_sqg": [41, 58, 70, 71, 77, 141, 155, 156, 158, 159, 166, 167, 171], "fidelity_routin": [41, 155, 156, 159, 160, 161], "100": [41, 71, 77, 136, 155, 156, 158, 159, 162, 165, 171], "rem": [41, 44, 58, 77, 85, 133, 150, 155, 156, 159, 160, 161, 165, 166, 167, 171], "mit_shot": [41, 58, 76, 77, 133, 155, 156, 159, 160, 161, 165, 166, 167, 171], "1000": [41, 58, 77, 133, 153, 155, 156, 159, 160, 161, 162, 165, 166, 167], "cal_url": [41, 42], "log": [41, 47, 48, 49, 51], "coupl": [41, 42, 49, 52, 71, 77, 141, 145, 155, 160, 161], "cz": [41, 42, 50, 51, 52, 119, 138, 141, 152, 155, 158, 160, 161], "account": [41, 58, 141, 162, 171], "span": [41, 49, 51], "largest": [41, 155, 156, 160, 161], "weight": [41, 51, 52, 83], "parallel": [41, 51, 68, 90, 95, 119, 126, 128, 137, 155, 156, 158, 159, 160, 161, 163], "applic": [41, 51, 103, 152, 160, 161, 170], "cx": [41, 46, 51, 70], "scale": [41, 155, 156], "logarithm": [41, 160, 161], "connect": [41, 51, 130, 150, 160, 161], "naiv": [41, 58, 160, 161], "appli": [41, 46, 51, 70, 77, 150, 159, 160, 161, 164, 170], "textbook": [41, 160, 161], "assum": [41, 53, 125, 170], "NOT": 41, "support": [41, 52, 170], "denot": 41, "provid": [41, 63, 151, 153, 154, 155, 156, 159, 170], "here": [41, 102, 153, 155, 156, 162], "ha": [41, 58, 155, 156, 157, 162, 164, 167, 170, 171], "small": [41, 150], "architectur": 41, "iqm_transpil": 41, "optimize_single_qubit_g": 41, "multipl": [41, 44, 108, 150, 155, 156, 160, 161], "moonei": [41, 44, 155, 156, 160, 161], "2021": [41, 44, 155, 156, 160, 161, 171], "randomized_measur": [41, 160, 161], "outlin": 41, "http": [41, 45, 47, 48, 108, 152, 153, 156, 159, 160, 162, 170, 171], "arxiv": [41, 45, 47, 48, 71, 103, 152, 160, 161, 171], "org": [41, 45, 47, 48, 152, 160, 162, 170], "ab": [41, 45, 47, 48, 152, 160], "1812": [41, 45], "02624": [41, 45], "chosen": [41, 58, 155, 156, 160, 161, 162], "boolean": [41, 160, 161], "flag": 41, "readout": [41, 44, 58, 76, 77, 82, 131, 132, 134, 150, 159, 160, 161], "mitig": [41, 44, 58, 76, 77, 82, 131, 132, 133, 134, 150, 159, 160, 161], "total": [41, 112, 152, 155, 156, 160, 161], "url": [41, 42, 155, 171], "retriev": [41, 70, 74, 143, 144, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "priorit": 41, "under": [42, 150, 152, 155, 162, 170], "list_fid": 42, "wai": [42, 52, 150, 155, 156], "list_coupl": 42, "ideal_prob": 45, "cross": [45, 155, 156, 170], "correl": [45, 160], "rm": 45, "eq": [45, 152], "34": [45, 153, 157, 158, 159, 161, 165, 166], "hadamard": [46, 152, 161], "seri": 46, "linear": [46, 161], "fashion": 46, "symmetr": 46, "halv": 46, "1807": [47, 160, 161], "05572": [47, 160, 161], "2101": [48, 160, 161], "08946": [48, 160, 161], "graph": [49, 51, 52, 57, 58, 59, 60, 61, 62, 64, 65, 67, 155, 156, 160, 161], "n_state": [49, 155], "networkx": [49, 51, 52, 57, 59, 60, 61, 62, 155, 156], "n": [49, 58, 91, 101, 152, 155, 156, 160, 161], "participating_qubit": 49, "qc": [49, 70, 152, 153, 171], "move": [50, 150, 167], "calcul": [51, 59, 65, 81, 112, 137, 148, 150, 155, 156], "cx_map": 51, "particip": 51, "2qb": 51, "subgraph": 51, "edg": [51, 52, 60, 61, 62, 103, 155, 156], "Then": [51, 171], "find": [51, 155, 156, 160, 161], "most": [51, 162], "central": 51, "posit": 51, "next": 51, "start": [51, 57, 125, 155, 158, 159, 160, 161, 162, 171], "smallest": 51, "layer": [51, 59, 63, 67, 68, 70, 71, 76, 100, 101, 103, 104, 105, 126, 137, 159, 168, 169, 171], "coupling_map": [52, 141, 155, 156, 160], "couplingmap": [52, 145], "edges_c": 52, "fidelities_c": 52, "have": [52, 119, 155, 156, 170, 171], "v": [53, 65, 70, 72, 155, 156, 159, 163], "user": [53, 167, 171], "identif": [53, 170], "logger": [54, 148], "everi": 54, "warn": [54, 152, 155, 156, 161, 167], "score": [55, 57, 58, 64, 159, 168, 169, 171], "combinatori": [55, 57, 155, 156], "problem": [55, 57, 59, 60, 61, 62, 64, 65, 155, 156, 171], "qscorebenchmark": [56, 58, 155, 156, 159, 165], "qscoreconfigur": [56, 57, 155, 156, 159, 165], "backend_arg": [57, 70, 76, 91, 96, 101, 103, 104, 105, 118, 119, 120, 126, 127, 129, 130, 133, 138], "generate_maxcut_ansatz": 57, "theta": 57, "ansatz": [57, 59, 61, 63, 67], "qaoa": [57, 58, 59, 63, 67], "maxcut": [57, 59, 60, 61, 62, 63, 67, 155, 156, 159, 165], "end": [57, 70, 76, 152, 170], "variat": [57, 155, 156], "gamma": [57, 59], "beta": [57, 59, 64, 65, 155, 156, 159, 165], "add_all_meta_to_dataset": [57, 70, 76, 96, 101], "choose_qubits_na": 57, "sequenti": [57, 127, 157, 159], "choose_qubits_custom": 57, "match": 57, "num_inst": [58, 65, 155, 156, 159, 165], "num_qaoa_lay": [58, 155, 156, 159, 165], "min_num_nod": [58, 155, 156, 159, 165], "max_num_nod": [58, 155, 156, 159, 165], "use_virtual_nod": [58, 65, 155, 156, 159, 165], "use_classically_optimized_angl": [58, 65, 155, 156, 159, 165], "choose_qubits_routin": [58, 77, 155, 156, 159, 165, 166, 167, 171], "min_num_qubit": 58, "seed": [58, 155, 156, 159, 165], "qpu_topologi": [58, 155, 156, 165], "crystal": [58, 155, 165], "min": [58, 132, 155, 156], "node": [58, 60, 61, 65, 67, 155, 156, 165], "taken": [58, 155, 156], "max": [58, 155, 156], "increas": [58, 125, 162], "potenti": 58, "pre": 58, "optimis": 58, "tune": 58, "minumum": 58, "virtual_nod": [58, 60, 61, 67], "upon": [58, 71, 77], "qpu": [58, 131, 150, 155, 156, 161], "star": [58, 141, 145, 150, 154, 155, 161, 169], "angl": [59, 63, 65, 67], "qubit_to_nod": [60, 61], "val": 60, "virtual": [60, 61, 65, 67, 141], "cut": [60, 61, 62, 67, 155, 156], "avg": [60, 159, 162, 165], "callabl": [61, 117, 123], "minu": 62, "sign": 62, "solut": [62, 155, 156], "obj": 62, "num_lay": 63, "approximation_ratio": [64, 159], "approxim": [64, 65, 155, 156, 159, 165], "ratio": [64, 65, 155, 156, 159, 165], "abov": [64, 84, 155, 156, 162, 170], "being": [64, 70, 76, 81, 84, 85, 102, 103, 115, 121, 138, 140, 155, 156], "beta_ratio": 65, "beta_std": 65, "backend_nam": [65, 85, 142, 157, 158, 164, 166, 167], "timestamp": [65, 85, 157, 164], "deviat": [65, 77, 80, 124, 138], "classic": [65, 67, 76], "graph_phys": 67, "qubit_nod": 67, "use_classical_angl": 67, "qaoa_lay": 67, "solv": [67, 155, 156], "averag": [67, 79, 84, 85, 91, 96, 102, 117, 150, 155, 156, 161, 162], "presenc": 67, "volum": [68, 75, 76, 77, 86, 150, 168, 169, 171], "reflect": [68, 70, 76, 87, 88, 93, 98], "deepest": [68, 76], "clop": [68, 150, 168, 169, 171], "speed": [68, 70, 155, 156], "clops_v": [68, 155, 156, 158], "qv": [68, 70, 71, 76, 77, 79, 80, 84, 85, 150, 155, 156, 158, 159, 168, 169], "clops_h": [68, 71, 158], "squar": [68, 155, 156, 162], "clopsbenchmark": [69, 71, 155, 156, 158, 159], "clopsconfigur": [69, 70, 155, 156, 158, 159], "h": [70, 72], "append_parameterized_unitari": 70, "q0": 70, "q1": 70, "decompos": [70, 155], "su": 70, "involv": [70, 155, 156], "belong": 70, "generate_single_circuit": [70, 76], "generate_circuit_list": [70, 76], "generate_random_paramet": 70, "templat": [70, 155, 156, 158, 159], "np": [70, 116, 123, 152, 155, 156, 159, 160, 162, 163], "float64": 70, "assign_random_parameters_to_al": 70, "dict_parametrized_circ": 70, "clops_cycl": 70, "sorted_transpiled_qc_list": [70, 76, 147], "cycl": 70, "elaps": [70, 73, 74, 148, 158, 159], "submiss": [70, 76, 101, 126, 127, 155, 156, 170], "generate_transpiled_clops_templ": 70, "num_upd": [71, 155, 156, 158, 159], "num_shot": [71, 155, 156, 158, 159], "clops_h_bool": [71, 158, 159], "establish": [71, 158, 159], "By": [71, 158, 159], "definit": [71, 155, 156, 158, 159, 170], "2110": [71, 171], "14108": [71, 171], "quant": [71, 103, 171], "ph": [71, 103, 171], "rigor": [71, 162], "loos": 71, "www": [71, 152, 170], "ibm": [71, 132], "com": [71, 156], "blog": 71, "restrict": [71, 77, 145, 159, 166, 167], "clops_data": 73, "job_meta": 74, "quantumvolumebenchmark": [75, 77, 155, 156, 159, 166, 167], "quantumvolumeconfigur": [75, 76, 155, 156, 159, 166, 167, 171], "add_all_circuits_to_dataset": [76, 91, 96], "classical_permut": 76, "permut": 76, "avoid": 76, "swap": [76, 152], "get_rem_quasidistro": 76, "sorted_qc_list_indic": [76, 81], "execution_result": [76, 78], "quasicollect": [76, 82, 133], "quasiprob": [76, 82, 133, 134], "qubii": 76, "untranspil": [76, 81, 118, 141, 150], "submit_single_qv_job": 76, "submit": [76, 101, 126, 127, 147, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 170], "vanilla": [76, 85, 101, 126, 127], "dd": [76, 85, 101, 126, 127], "num_sigma": [77, 84, 85, 155, 156, 159, 166, 167, 171], "criteria": 77, "consensu": 77, "unmitig": 77, "1_000": [77, 155, 156, 159, 166, 167, 171], "ideal_heavy_output": [78, 82], "hop": [78, 79, 80, 84, 85, 150], "heavi": [78, 79, 80, 81, 82, 83, 84, 155, 156], "cumul": [79, 80], "individu": [79, 80, 124, 150, 155, 160, 161, 162, 170, 171], "trial": [79, 80], "qc_list": [81, 141], "bitrstr": 81, "all_rem_quasidistro": 82, "noiseless": [82, 159, 166, 167], "project": [83, 171], "onto": 83, "associ": [83, 158, 159, 170], "heavy_output_prob": [84, 166, 167], "over": [84, 132, 140, 155], "within": [84, 170, 171], "sigma": [84, 85], "qv_result": [85, 155, 156, 166, 167], "qv_results_typ": [85, 166, 167], "in_volumetr": 85, "plot_rem": 85, "come": [85, 102, 134], "context": 85, "volumetr": 85, "rb": [88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 115, 116, 117, 119, 121, 123, 124, 127, 128, 130, 150, 152, 155, 159, 163, 168, 169], "cliffordrandomizedbenchmark": [89, 90, 155, 157, 159], "cliffordrbconfigur": [89, 91, 155, 157, 159], "qubits_arrai": [90, 95, 100, 119, 124, 126, 128, 130, 155, 157, 159, 163, 164, 171], "sequence_length": [90, 95, 118, 119, 155, 157, 159, 163, 171], "num_circuit_sampl": [90, 95, 100, 118, 155, 157, 159, 163, 164, 171], "parallel_execut": [90, 95, 155, 157, 159, 163, 171], "length": [90, 95, 102, 106, 118, 119, 120, 152, 155, 157, 159, 163], "add_all_metadata_to_dataset": 91, "interleav": [93, 94, 95, 96, 97, 100, 105, 116, 117, 118, 119, 120, 124, 150, 157, 168, 169, 171], "interleavedrandomizedbenchmark": [94, 95, 155, 159, 163], "interleavedrbconfigur": [94, 96, 155, 159, 163, 171], "interleaved_g": [95, 118, 119, 120, 124, 155, 159, 163, 171], "interleaved_gate_param": [95, 155, 159, 163, 171], "simultaneous_fit": [95, 155, 159, 163, 171], "amplitud": [95, 116, 155, 159, 163, 171], "offset": [95, 116, 155, 159, 163, 171], "irb": [95, 117, 150, 168, 169], "ygate": 95, "czgate": [95, 100, 152, 155, 159, 162, 163, 164, 171], "enter": [95, 117, 119], "simultan": [95, 117], "specif": [96, 141, 152, 154, 155, 156, 159, 162, 166, 167, 168, 170], "mirror": [98, 99, 100, 101, 105, 150, 168, 169, 171], "mirrorrandomizedbenchmark": [99, 100, 159, 164, 171], "mirrorrbconfigur": [99, 101, 159, 164, 171], "depths_arrai": [100, 159, 164, 171], "num_pauli_sampl": [100, 102, 106, 159, 164, 171], "two_qubit_gate_ensembl": [100, 103, 104, 105, 159, 164, 171], "density_2q_g": [100, 103, 104, 105, 159, 164, 171], "25": [100, 103, 104, 105, 155, 157, 158, 159, 160, 163, 164, 165, 166, 167, 169, 171], "mrb": [100, 101, 104, 107, 117, 124, 126, 127, 150, 159, 168, 169], "len": [100, 152, 155, 156, 162], "ensembl": [100, 101, 103, 124], "cxgate": 100, "submit_single_mrb_job": 101, "sorted_transpiled_circuit_dict": [101, 126], "canon": [101, 104, 105, 126], "noisy_count": 102, "ideal_count": 102, "num_circ_sampl": [102, 106, 120], "polar": [102, 117], "noisi": 102, "rescal": 102, "few": [102, 155, 156], "effect": [102, 155, 156, 161], "real": [102, 171], "simul": [102, 132, 150, 158, 159, 164, 166, 167], "qubit_set": [103, 117], "n_layer": 103, "grab": [103, 132], "see": [103, 152, 155, 160, 161, 162, 170], "2204": 103, "07568": 103, "2q": [103, 105, 122, 124, 155, 158, 159], "subsequ": [103, 170], "valueerror": [103, 106, 130, 141, 145], "do": [103, 132, 163, 170], "up": [103, 155, 171], "uniti": 103, "circ_sampl": 104, "pauli_samples_per_circ": [104, 105], "dress": [104, 105, 106], "input_list": 106, "flat": 106, "shape": 106, "lmfit": [108, 109, 117], "extend": [108, 150], "shown": [108, 155, 156, 160, 161, 162], "document": [108, 155, 156, 170, 171], "github": [108, 171], "io": 108, "py": [108, 161, 167, 171], "example_fit_multi_dataset": 108, "html": [108, 171], "sphx": 108, "glr": 108, "multi": [108, 155, 156], "func": [109, 110, 111, 112, 117, 123], "initial_guess": 109, "constraint": [109, 171], "simultaneously_fit_var": 109, "line": 109, "evalu": [110, 155, 156], "signatur": 111, "residu": 112, "sever": [112, 150, 155, 156], "techniqu": 113, "qc_inv": 114, "clifford_dictionari": 114, "invers": [114, 155], "invert": 114, "de": [114, 120], "stabil": [114, 120, 150], "ground": [115, 121, 153], "depolarization_prob": 116, "depolar": 116, "p": [116, 155], "decai": [116, 124, 150, 155], "rb_identifi": 117, "simultaneous_fit_var": 117, "interleaved_gate_str": 117, "0th": 117, "ap": [117, 162], "m": [117, 155, 156, 157, 159, 163, 164, 167, 171], "b": [117, 152, 155, 170], "stdrb": 117, "clifford_dict": [118, 120], "fir": 118, "cliffords_1q": 119, "cliffords_2q": 119, "num_sampl": [119, 120], "befor": [119, 155], "term": [119, 152, 162, 170], "r": [119, 138, 141, 152, 158, 162, 167], "seq_length": 120, "import": [122, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171], "fit_paramet": 123, "fit_data": 123, "minimizerresult": 123, "violin": 124, "scatter": 124, "shade_stdev": 124, "shade_meanerror": 124, "logscal": 124, "mrb_2q_densiti": 124, "mrb_2q_ensembl": 124, "shade": 124, "titl": [124, 170], "arr": 125, "helper": 125, "relabel": 125, "increasingli": 125, "zero": [125, 150, 155, 156], "5": [125, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171], "7": [125, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 170, 171], "note": [125, 134, 150, 160, 161, 162, 171], "sort": [125, 146, 164, 166, 167], "transpiled_circuit": [127, 133, 167], "margin": [128, 132, 140], "surviv": [128, 155], "gate_id": 129, "gate_param": 129, "m3": [131, 132, 133], "modif": [131, 170], "m3iqm": [131, 134], "mthree": [131, 134], "m3mitig": [131, 132], "iter_threshold": 132, "4096": 132, "modifi": [132, 150, 155, 156, 170], "work": [132, 134, 155, 156, 170, 171], "devic": [132, 150, 155, 156, 169, 171], "cals_from_system": 132, "initial_reset": 132, "rep_delai": [132, 161, 167], "cals_fil": 132, "async_c": 132, "cal_id": 132, "array_lik": 132, "1e4": 132, "max_shot": 132, "balanc": 132, "hardwar": [132, 169], "independ": [132, 155], "reset": 132, "begin": [132, 152], "delai": 132, "path": 132, "json": [132, 162], "async": 132, "separ": [132, 150, 166, 167, 170], "thread": 132, "m3error": 132, "call": [132, 150], "progress": 132, "against": [133, 170], "mit": [134, 170], "processor": [134, 155, 156], "argument": [134, 150, 171], "util": [134, 150, 160, 161], "final_measurement_map": 134, "qubit_name_to_index": 134, "quasiprobabilti": 134, "we": [134, 153, 155, 156, 162, 170], "could": 134, "would": 134, "out": [134, 160, 170], "box": 134, "u": 134, "sinc": [134, 155, 156, 162], "original_count": 136, "num_bootstrap_sampl": 136, "rgen": 136, "include_original_count": 136, "default_rng": 136, "circuit_list": 137, "transpiled_qc_list": 138, "barrier": [138, 152, 153, 158], "outermost": 138, "backend_label": 139, "prob_dist": 140, "bit": 140, "basis_g": 141, "drop_final_rz": 141, "optimization_level": [141, 153, 155], "sqg": [141, 158, 159, 160, 161, 166, 167], "z": 141, "drop": 141, "rz": 141, "emploi": 141, "iqm_job": [143, 144], "iqmjob": [143, 144, 147], "relev": 144, "transpiled_circuit_list": 146, "sorted_indic": 146, "sorted_circuit": 146, "sent": [147, 170], "manag": [147, 170, 171], "f": [148, 152, 153, 155, 156, 159, 160, 161, 162, 167], "decor": 148, "statement": [148, 170], "counts_rang": 149, "extract": [149, 155, 171], "were": [149, 150], "deneb": [150, 156, 157, 158, 159, 161, 163, 164, 165, 166, 168, 169], "notebook": [150, 153, 155, 156, 162, 168, 169], "benchmark": [150, 151, 152, 154, 162, 165, 166, 167, 168], "iqm": [150, 151, 152, 153, 154, 160, 162, 163, 168, 170], "bug": 150, "done": [150, 152], "qscore": [150, 155, 156], "instal": [150, 155, 162, 169], "command": [150, 171], "develop": [150, 152, 161, 169], "mode": [150, 152, 171], "41": [150, 159, 163, 164, 165], "folder": [150, 170, 171], "doc": [150, 171], "spark": [150, 154, 169], "30": [150, 155, 157, 159, 163, 165, 171], "compat": 150, "adapt": [150, 171], "behavior": 150, "report": [150, 155], "displai": [150, 152, 155, 156, 157, 159, 162, 163, 167, 170], "publish": 150, "ci": 150, "secur": [150, 171], "scan": [150, 171], "lockfil": [150, 171], "depend": [150, 160, 161, 162, 169], "relat": [150, 155], "modulenotfounderror": 150, "enabl": 150, "pyrit": [150, 165], "wrong": 150, "incorrect": 150, "improv": [150, 170], "compil": [150, 155, 162, 170], "revert": 150, "ones": [150, 155, 156, 171], "now": [150, 157, 158, 159, 160, 161, 162, 163], "instead": [150, 171], "port": 150, "subclass": 150, "usag": 150, "place": [150, 170], "miscellan": 150, "relax": 150, "api": [150, 169, 171], "build": [150, 171], "overwrit": 150, "tutori": 150, "remov": 150, "explicit": 150, "minor": 150, "longer": [150, 155], "renam": 150, "rebas": 150, "randomizedbenchmark": 150, "quantumvolum": 150, "serial": 150, "some": [150, 155, 156], "available_benchmark": 150, "__init__": 150, "public": 150, "hint": 150, "docstr": 150, "messag": 150, "prevent": 150, "exclus": [150, 170], "jupyt": 150, "section": [151, 154, 168, 170], "guidanc": [151, 154], "packag": [151, 155, 160, 161, 167, 168, 171], "your": [151, 155, 169, 170, 171], "own": [151, 169, 170, 171], "decomposit": [151, 169], "1402": 152, "4848": 152, "copyright": [152, 170], "2024": [152, 157, 158, 167, 170], "licens": [152, 169], "apach": [152, 170], "you": [152, 155, 156, 163, 167, 170, 171], "except": [152, 153, 170], "complianc": [152, 170], "unless": [152, 170], "law": [152, 170], "agre": [152, 170], "softwar": [152, 170], "AS": [152, 170], "without": [152, 155, 156, 160, 161, 170], "warranti": [152, 170], "OR": [152, 170], "OF": [152, 170], "kind": [152, 170], "express": [152, 170], "impli": [152, 170], "languag": [152, 170], "govern": [152, 170], "permiss": [152, 170], "quantum_info": 152, "qi": 152, "c0": 152, "c": [152, 155, 167, 170], "_": [152, 155, 162], "24": [152, 157, 158, 159, 160, 163, 165], "half": 152, "x2": 152, "to_gat": 152, "y2": 152, "x2m": 152, "y2m": 152, "compos": 152, "inplac": 152, "2pi": 152, "11": [152, 153, 155, 156, 157, 159, 160, 161, 163, 164, 167, 171], "13": [152, 157, 159, 160, 161, 163, 164, 167, 171], "15": [152, 155, 157, 158, 159, 161, 163, 164, 167], "16": [152, 157, 158, 159, 160, 163, 164, 166], "17": [152, 157, 158, 159, 160, 163, 164, 166, 171], "18": [152, 157, 158, 159, 160, 163, 164, 171], "19": [152, 158, 159, 160, 162, 163, 164], "21": [152, 158, 159, 163, 169], "22": [152, 158, 159, 162, 163, 164], "23": [152, 157, 158, 159, 160, 163, 164, 166, 167], "clifford_sqg": 152, "s1": 152, "s1x2": 152, "s1y2": 152, "displaystyl": 152, "sum_": [152, 162], "prime": 152, "left": 152, "mathrm": [152, 155, 156], "tr": [152, 162], "u_": 152, "dagger": [152, 155, 162], "u_k": 152, "right": [152, 170], "s2": 152, "satisfi": [152, 162], "c_kei": 152, "aux": 152, "total_triangl": 152, "c1": 152, "adjoint": 152, "c2": 152, "c3": 152, "to_matrix": 152, "trace": [152, 162], "print": [152, 155, 158, 159, 160, 161, 162, 164, 166, 167, 170], "0f": 152, "diagon": [152, 155, 156], "nsum": 152, "sum": 152, "clifford_2qg": 152, "product": [152, 170], "c2q_0": 152, "c2q": 152, "counter": 152, "to_label": 152, "sqg_class_": 152, "cnot": [152, 160, 161], "sy2": 152, "cnot_class_": 152, "iswap": 152, "sy1": 152, "sx2": 152, "i_swap_class_": 152, "swap_class_": 152, "clifford_1qg": 152, "open": 152, "clifford_1q": 152, "pkl": 152, "wb": 152, "clifford_2q": 152, "loaded_dict": 152, "def": [152, 153], "count_rcz": 152, "c_list": 152, "no_cz": 152, "no_r": 152, "count_op": 152, "num_2qcz": 152, "num_2qr": 152, "num_1qcz": 152, "num_1qr": 152, "875": [152, 155, 159, 163, 166], "200": [152, 159, 160, 165], "randint": [152, 155, 156, 159, 165], "11520": 152, "draw": [152, 155, 156, 160, 167], "mpl": 152, "style": 152, "iqp": 152, "fold": 152, "ninvers": 152, "qc_aux": 152, "qcinv": 152, "op_seq": 152, "ncomposit": 152, "ident": 152, "modulo": 152, "phase": 152, "equiv": 152, "latex": 152, "composit": 152, "bmatrix": 152, "520": [152, 159, 165], "132": [152, 159, 163], "710": [152, 165], "suffic": 152, "triangular": 152, "part": [152, 170], "howev": [152, 170, 171], "still": [152, 162], "op": 152, "adj": 152, "prod": 152, "100000": 152, "ndone": 152, "defit": 153, "anoth": 153, "excit": 153, "add_counts_to_dataset": 153, "pyplot": [153, 155, 156, 162], "plt": [153, 155, 156, 162], "generate_readout_test_circuit": 153, "n_qubit": 153, "qb_to_measur": 153, "qc_transpil": 153, "plot_histogram": [153, 155], "try": 153, "state_": 153, "counts_": 153, "break": 153, "xtick": 153, "90": 153, "legend": 153, "readout_analysi": 153, "histogram": [153, 155], "readouttest": 153, "default_opt": 153, "n_shot": 153, "2048": 153, "staticmethod": 153, "readout_test": 153, "iqmprovid": [153, 155, 156, 159, 171], "iqm_server_url": 153, "station": [153, 171], "fi": [153, 171], "coco": [153, 156, 171], "get_backend": [153, 155, 156, 159, 171], "480b": 153, "state_0": 153, "state_1": 153, "coordin": 153, "u4": 153, "144b": 153, "0000": 153, "0010": 153, "1010": 153, "1100": 153, "176b": 153, "0011": 153, "0101": 153, "0110": 153, "1101": 153, "1110": 153, "1111": 153, "counts_0": 153, "int64": 153, "72b": 153, "1924": 153, "26": [153, 159, 160, 163, 165], "39": [153, 159, 162, 163, 165], "counts_1": 153, "88b": 153, "72": 153, "48": [153, 159, 163, 165], "78": 153, "36": [153, 159, 165], "1801": 153, "sure": [155, 171], "pip": [155, 171], "ipykernel": 155, "o": [155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 171], "environ": [155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 171], "iqm_tokens_fil": 155, "token": [155, 156, 163, 171], "iqm_url": [155, 156, 159], "access": [155, 156, 171], "everyth": [155, 156], "nx": [155, 156], "add_edges_from": [155, 156], "po": [155, 156, 160], "spring_layout": [155, 156, 160], "42": [155, 156, 159, 163, 165], "with_label": [155, 156, 160], "node_color": [155, 156, 160], "lightblu": [155, 156], "edge_color": [155, 156], "grai": [155, 156], "node_s": [155, 156], "font_siz": [155, 156], "linewidth": [155, 156], "ignor": [155, 156], "critic": [155, 156], "filterwarn": [155, 156], "action": [155, 156], "entangl": [155, 156, 159, 160, 161, 171], "more": [155, 156, 170, 171], "superposit": [155, 156], "rangl": [155, 156], "frac": [155, 156, 162], "sqrt": [155, 156], "otim": [155, 156], "act": [155, 156, 170], "wit": [155, 156], "genuin": [155, 156, 160, 161], "cannot": [155, 156, 170], "explain": [155, 156], "great": [155, 156], "rho_": [155, 156], "langl": [155, 156], "pure": [155, 156], "case": [155, 156], "entri": [155, 156, 162], "written": [155, 156, 170], "00": [155, 156, 159, 162, 164, 166], "corner": [155, 156], "simplifi": [155, 156], "four": [155, 156], "compon": [155, 156], "formula": [155, 156], "nullifi": [155, 156], "To": [155, 156, 157, 160, 161, 162, 170, 171], "off": [155, 156], "want": [155, 156, 171], "pleas": [155, 156], "refer": [155, 156, 162, 169, 171], "visual": [155, 160], "generate_ghz_spanning_tre": 155, "get_edg": 155, "ghz_circuit": 155, "qc_transp": 155, "re": [155, 163], "10000": [155, 156, 165], "get_count": 155, "benchmark_ghz": [155, 156, 159, 160, 161], "run_ghz": [155, 156, 159, 160, 161], "result_ghz": [155, 156], "introduc": [155, 156], "2019": [155, 156, 160, 161, 171], "unitari": [155, 156, 162, 167], "successfulli": [155, 156, 157, 159, 163, 164, 166, 167], "occcur": [155, 156], "greater": [155, 156], "median": [155, 156], "ask": [155, 156], "confid": [155, 156], "higher": [155, 156], "97": [155, 156], "85": [155, 156, 171], "asymptot": [155, 156], "log_2": [155, 156], "v_q": [155, 156], "underset": [155, 156], "argmax": [155, 156], "d": [155, 156, 160, 161, 170], "leq": [155, 156], "achiev": [155, 156], "quantum_volum": [155, 156, 158, 159, 166, 167, 171], "due": [155, 156], "must": [155, 156, 170, 171], "topmost": 155, "500": [155, 156, 159, 164, 166, 167, 171], "60_000": [155, 159, 166, 167, 171], "minut": [155, 156, 162], "benchmark_qv": [155, 156, 159, 166, 167], "run_qv": [155, 156], "result_qv": [155, 156], "That": [155, 156], "wack": [155, 156], "constitut": [155, 156, 170], "_time": [155, 156], "notic": [155, 156, 170], "plot_tim": [155, 156], "benchmark_clop": [155, 156, 158, 159], "run_clop": [155, 156, 158, 159], "result_clop": [155, 156, 158, 159], "fig_clop": [155, 156], "idea": 155, "behind": 155, "crb": 155, "certain": [155, 156], "langle0": 155, "c_": 155, "inv": 155, "c_m": 155, "cdot": 155, "_2c_1": 155, "sim": 155, "c_1": 155, "c_2": 155, "ldot": 155, "c_1c_2": 155, "_m": 155, "leq1": 155, "constant": 155, "isol": 155, "magesan": 155, "2012": [155, 171], "infer": 155, "assumpt": 155, "markovian": 155, "stationari": 155, "theori": [155, 170], "fact": 155, "design": [155, 170, 171], "fulli": [155, 162], "ensur": 155, "our": 155, "overlin": 155, "intend": 155, "becaus": 155, "eventu": 155, "mention": 155, "barend": 155, "2014": 155, "approx": 155, "alwai": [155, 160, 161], "slightli": 155, "care": 155, "compar": 155, "spec": 155, "randomized_benchmark": [155, 157, 159, 163, 164, 171], "clifford_rb": [155, 157, 159], "benchmark_clifford_rb": [155, 157, 159], "run_clifford_rb": [155, 157, 159], "result_clifford_rb": [155, 157, 159], "previou": 155, "aim": [155, 160, 161], "interest": 155, "sole": [155, 170], "made": [155, 170], "rate": 155, "wish": [155, 167], "interleaved_rb": [155, 159, 163, 171], "irb_cz": 155, "nb": [155, 157, 158, 159], "benchmark_irb_cz": 155, "run_irb_cz": 155, "result_irb_cz": 155, "martiel": [155, 156], "erd\u0151": [155, 156], "r\u00e9nyi": [155, 156], "geq": [155, 156, 162], "999999": [155, 156, 159, 165], "benchmark_qscor": [155, 156, 159, 165], "run_qscor": [155, 156, 159], "result_qscor": [155, 156, 159], "summar": 155, "obs_ghz": [155, 156], "round": [155, 156], "obs_qv": [155, 156], "obs_clop": [155, 156], "item": [155, 156], "obs_crb": 155, "f_crb": 155, "obs_irb": 155, "f_irb": 155, "avg_gate_fidelity_interleav": [155, 159, 163], "obs_q": [155, 156], "argmin": [155, 156], "mean_approximation_ratio": [155, 156, 165], "3000": 155, "999": [155, 157, 158], "98": 155, "num": 155, "iqm_token": [156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 171], "reson": [156, 163, 171], "meetiqm": 156, "chosen_layout": 156, "10_000": 156, "load_ext": [157, 158, 159, 162, 163, 164, 165, 166, 167], "autoreload": [157, 158, 159, 162, 163, 164, 165, 166, 167], "extens": 157, "load": 157, "reload": 157, "reload_ext": 157, "fakeadoni": [157, 158, 159, 163, 164, 165, 166], "fakeapollo": [157, 158, 159, 160, 163, 164, 165, 166], "garnet": [157, 158, 159, 162, 163, 164, 165, 166, 171], "example_crb": [157, 159], "56": [157, 159, 165], "750": [157, 165], "logging_config": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "info": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "Will": [157, 158, 159, 162, 163, 164, 166, 167], "31": [157, 158, 159, 160, 161, 163, 164, 165], "63": [157, 159, 163], "831": [157, 163, 165], "992": [157, 158, 165], "341": [157, 165], "040": [157, 159, 163], "469": [157, 159], "291": 157, "292": [157, 159, 163], "349": 157, "541": [157, 164], "600": [157, 159], "756": [157, 159], "837": [157, 163, 165, 166], "025": [157, 165], "171": [157, 159], "905": [157, 165], "544": [157, 159, 165], "899": [157, 159], "32": [157, 158, 159, 160, 161, 162, 164, 165], "624": [157, 159], "004": [157, 159, 163, 165], "43": [157, 159, 162, 163, 165], "319": 157, "569": [157, 164, 165], "777": [157, 159], "840": 157, "44": [157, 159, 162, 163, 165], "048": [157, 163], "098": [157, 158, 159, 165], "qubits_": [157, 159, 164], "_depth_1": [157, 159, 163], "323": 157, "45": [157, 159, 163, 164, 165], "186": [157, 163], "_depth_3": [157, 159, 163], "225": [157, 159], "_depth_7": [157, 159, 163], "267": [157, 159, 165], "_depth_15": [157, 159, 163], "314": [157, 159], "_depth_31": [157, 159, 163], "315": [157, 159, 165], "364": [157, 159, 164], "_depth_63": [157, 159, 163], "416": [157, 165], "417": [157, 165, 167], "476": 157, "542": [157, 159, 164], "615": [157, 159], "616": [157, 159, 165], "697": [157, 165], "789": [157, 159, 163, 165], "890": [157, 159, 163], "conclud": [157, 159, 163, 164, 166, 167], "931": [157, 159, 165], "938": 157, "945": [157, 159, 160, 164], "952": [157, 163], "959": [157, 159], "966": [157, 159, 165], "972": [157, 159, 165], "979": [157, 159, 165], "986": [157, 159], "993": [157, 159, 164], "46": [157, 159, 162, 165, 167], "006": [157, 159, 165], "013": 157, "946844466999168": 157, "9429197366921651": 157, "attr": [157, 158, 162, 164, 166, 167], "session_timestamp": [157, 158, 164, 166, 167], "20241217": 157, "115553": 157, "execution_timestamp": [157, 158, 164, 166, 167], "backend_configuration_nam": [157, 158, 164, 166, 167], "iqmfakeapollobackend": [157, 158, 160, 162, 166], "depth_1": 157, "time_circuit_gener": [157, 158, 164, 166, 167], "541001081466675": 157, "time_submit": [157, 164, 166, 167], "0006990432739257812": 157, "time_retriev": [157, 164, 166, 167], "22491073608398438": 157, "all_job_metadata": [157, 164, 166, 167], "batch_job_1": [157, 164], "job_id": [157, 164], "8f305755": 157, "e038": 157, "4596": 157, "8617": 157, "d96ba3f42ca9": 157, "aer_simul": [157, 164], "statu": [157, 164], "circuits_in_batch": [157, 164], "depth_3": 157, "05647683143615723": 157, "0005230903625488281": 157, "2fe0b406": 157, "8977": 157, "4567": 157, "bba0": 157, "d4168f0883ed": 157, "depth_7": 157, "19257187843322754": 157, "0004839897155761719": 157, "8299918c": 157, "be26": 157, "40d5": 157, "8778": 157, "9ea4468a1df2": 157, "depth_15": 157, "05831408500671387": 157, "0004811286926269531": 157, "174640c4": 157, "9ff3": 157, "4ca3": 157, "9ffc": 157, "d6aa5be304f3": 157, "depth_31": 157, "1564040184020996": 157, "0006189346313476562": 157, "7bb739f2": 157, "31bc": 157, "40af": 157, "8dbf": 157, "1d60a9310391": 157, "depth_63": 157, "08135986328125": 157, "0004200935363769531": 157, "f414a2c1": 157, "75c8": 157, "4d5a": 157, "9e4b": 157, "ccce29903f5f": 157, "147684812545776": 157, "0005502700805664062": 157, "00039887428283691406": 157, "8832576a": 157, "6d6e": 157, "4abe": 157, "8cfa": 157, "5001e6bb98e": 157, "08015298843383789": 157, "00039315223693847656": 157, "ecc1bcea": 157, "ef4c": 157, "4f35": 157, "9284": 157, "ab49af0c5b9f": 157, "16936397552490234": 157, "0003960132598876953": 157, "5582c842": 157, "0f07": 157, "46b6": 157, "96be": 157, "2fb3925b19d9": 157, "20774221420288086": 157, "0004191398620605469": 157, "6423b02b": 157, "8417": 157, "4300": 157, "b7ac": 157, "84d59f87a51f": 157, "0635080337524414": 157, "0004169940948486328": 157, "0b324804": 157, "44fe": 157, "4c16": 157, "83eb": 157, "08e5cd67aa79": 157, "20784401893615723": 157, "0004961490631103516": 157, "6c633640": 157, "d4b4": 157, "47de": 157, "a46d": 157, "d3ae4c84d212": 157, "avg_gate_fidel": [157, 164], "0012220693932290373": 157, "001545469960991071": 157, "xxxxxx": 158, "example_clop": [158, 159], "06": [158, 159, 164], "07": [158, 159, 163, 164], "198": [158, 159, 165], "199": 158, "828": [158, 163], "829": [158, 159, 163, 165], "383": [158, 163], "401": [158, 159, 165], "458": [158, 159], "010": [158, 165], "428": [158, 164, 165], "429": [158, 159], "497": [158, 159], "029": [158, 159], "482": [158, 159, 165], "483": [158, 159], "502": [158, 159, 165], "113": 158, "843": 158, "844": [158, 165], "906": [158, 163, 165], "527": [158, 165], "987": [158, 159, 165], "988": [158, 159], "050": [158, 159, 164, 165, 166], "636": [158, 159, 163, 165], "099": [158, 159], "166": [158, 163, 165], "712": [158, 165], "27": [158, 159, 160, 163, 165], "328": [158, 159], "329": [158, 159], "404": [158, 159, 165], "766": [158, 159, 164, 165], "29": [158, 159, 163, 165, 166], "386": [158, 159], "387": [158, 159, 163, 164], "406": [158, 159, 165], "418": [158, 159, 167], "487": [158, 159, 165], "037": 158, "33": [158, 159, 161, 164, 165], "488": [158, 159], "556": [158, 159, 165], "240": [158, 159, 165], "916": [158, 163], "There": [158, 159], "all_times_parameter_assign": 158, "all_times_retriev": 158, "all_times_submit": 158, "assign_parameters_tot": 158, "clops_tim": 158, "counts_per_upd": 158, "job_meta_per_upd": 158, "num_paramet": 158, "operation_count": [158, 166, 167], "parallel_2q_lay": 158, "parameters_per_upd": 158, "time_count_lay": 158, "time_sort_batch": 158, "time_transpil": [158, 166, 167], "u_per_lay": 158, "user_retrieve_tot": 158, "user_submit_tot": 158, "9603960396039604": 158, "std": 158, "3960396039603959": 158, "285": [158, 159, 163], "970297029703": 158, "28": [158, 159, 163, 165, 166], "718661075530303": 158, "40594059405941": 158, "915387814641763": 158, "9900990099009901": 158, "09900990099009897": 158, "18796": 158, "nan": [158, 162], "56388": 158, "iqm_provid": [159, 161, 167], "2025": [159, 160, 161, 162, 163, 164, 165, 166, 169], "01": [159, 160, 162, 163, 164, 165, 166], "58": [159, 161, 163, 165], "410": [159, 165], "411": [159, 165], "127": [159, 163], "639": [159, 160, 161], "949": [159, 165], "35": [159, 165], "841": 159, "251": [159, 165], "53": [159, 163, 165], "648": [159, 165], "690": 159, "785": [159, 163], "953": [159, 165], "815": [159, 165], "59": [159, 163, 164, 165], "821": [159, 163, 165], "808": [159, 165], "834": 159, "860": [159, 163], "02": [159, 161, 162, 164, 165, 169], "350": [159, 165], "351": [159, 160], "424": [159, 165], "466": 159, "510": [159, 165], "511": [159, 165], "558": 159, "_depth_127": [159, 163], "559": [159, 165], "611": [159, 165], "643": [159, 165], "647": 159, "651": [159, 164, 165, 167], "655": [159, 165], "659": 159, "663": 159, "667": [159, 165], "9487496885745926": 159, "example_irb_1q": [159, 163], "rgate": [159, 162, 163], "benchmark_irb_1q": [159, 163], "run_irb_1q": [159, 163], "734": [159, 163, 165], "958": 159, "wxecut": 159, "255": [159, 163], "000": [159, 163, 165], "041": [159, 165], "122": 159, "925": 159, "229": 159, "054": 159, "37": [159, 165, 167], "672": 159, "694": 159, "753": 159, "849": [159, 164, 165], "38": [159, 163, 165], "039": [159, 163, 165], "402": [159, 165], "108": [159, 165], "40": [159, 165], "570": [159, 165], "277": [159, 165], "331": [159, 164, 165], "399": [159, 165], "495": [159, 165], "650": [159, 163], "929": [159, 165], "51": [159, 162, 163, 165, 167], "439": 159, "52": [159, 161, 162, 163, 164, 165, 167], "352": [159, 161, 165], "432": [159, 163], "475": [159, 163], "666": [159, 165], "812": 159, "881": [159, 163, 165], "761": 159, "804": 159, "894": [159, 160], "907": [159, 165], "03": [159, 163, 164], "020": 159, "188": [159, 163, 165], "270": 159, "426": [159, 165], "718": 159, "04": [159, 161, 163, 164], "307": [159, 164, 165], "05": [159, 163, 164], "836": [159, 163, 165], "904": [159, 165], "003": [159, 162, 163], "196": [159, 163, 165, 166], "557": [159, 164], "719": 159, "653": [159, 164, 165], "149": [159, 164], "754": [159, 165], "231": 159, "163": [159, 163], "261": 159, "446": [159, 165], "524": 159, "635": [159, 163], "112": 159, "693": [159, 165], "811": 159, "826": [159, 165], "920": [159, 165], "091": [159, 160], "173": [159, 163], "338": [159, 163, 165], "640": [159, 163, 165], "230": 159, "545": [159, 164], "54": [159, 163, 165, 167], "939": [159, 163, 165], "961": 159, "55": [159, 164, 165], "011": [159, 162], "105": [159, 165], "299": [159, 167], "384": 159, "57": [159, 163, 165], "824": [159, 165], "662": 159, "717": [159, 163, 165], "790": [159, 162, 163, 164], "889": [159, 164], "301": [159, 164, 165], "799": [159, 167], "083": [159, 165], "152": [159, 164, 165], "254": 159, "420": [159, 165], "758": [159, 162, 163, 164], "634": [159, 165], "947": [159, 164], "994": [159, 162, 165], "548": [159, 161], "159": [159, 165], "724": [159, 161], "746": 159, "791": [159, 164, 165], "884": [159, 164], "074": [159, 163, 165], "128": [159, 164, 165], "561": 159, "477": 159, "550": [159, 165], "623": [159, 162, 163, 165], "726": 159, "880": [159, 165], "47": [159, 162, 163, 165], "508": 159, "606": [159, 164], "838": [159, 165], "944": [159, 164, 165], "49": [159, 162, 163, 165], "427": 159, "963": [159, 165], "970": [159, 164], "008": [159, 163, 165], "071": 159, "305": 159, "391": [159, 162, 165], "555": [159, 165], "444": 159, "649": [159, 160, 161, 165, 167], "063": [159, 165], "119": [159, 164], "212": [159, 160], "397": [159, 165], "467": [159, 165], "678": [159, 164, 165], "688": [159, 163, 166], "741": 159, "810": [159, 165], "908": 159, "805": [159, 161, 165], "682": [159, 163], "730": 159, "816": 159, "094": [159, 163, 165], "259": [159, 160], "547": 159, "066": [159, 165], "138": [159, 165], "clifford_qubits_": [159, 163], "176": [159, 164, 165], "354": 159, "355": [159, 163, 165], "390": 159, "459": 159, "591": [159, 165], "592": [159, 165], "644": 159, "_depth_255": [159, 163], "703": [159, 163], "767": [159, 164], "768": [159, 165], "839": 159, "918": 159, "919": [159, 160, 161], "007": [159, 163], "104": [159, 165], "211": 159, "728": 159, "971": 159, "232": [159, 165], "509": [159, 163], "151": [159, 165], "498": 159, "862": [159, 165], "248": 159, "249": 159, "654": [159, 165], "142": [159, 165], "143": 159, "085": 159, "626": [159, 164], "180": [159, 164], "732": 159, "733": [159, 165], "923": 159, "interleaved_qubits_": [159, 163], "924": [159, 165], "560": [159, 165], "237": 159, "940": [159, 164], "447": [159, 167], "075": [159, 162, 165], "076": [159, 165], "845": [159, 160, 163], "846": 159, "783": [159, 165, 166], "784": [159, 163, 165], "782": 159, "813": 159, "814": 159, "201": [159, 164, 165], "202": 159, "378": [159, 165], "379": 159, "909": 159, "910": [159, 165], "284": [159, 165], "658": 159, "111": [159, 165, 166], "571": [159, 162, 165], "572": [159, 160, 165], "062": [159, 160, 165], "021": [159, 166], "022": [159, 163], "735": 159, "736": [159, 165], "546": [159, 163, 164], "09": [159, 160, 162, 163, 166], "361": [159, 165], "362": 159, "330": [159, 164], "304": [159, 165], "269": [159, 167], "471": [159, 165], "596": [159, 163, 164, 165], "842": [159, 163, 164], "086": [159, 165], "642": [159, 160, 161], "983": [159, 164], "460": 159, "result_irb_1q": [159, 163], "855": 159, "901": 159, "943": 159, "033": [159, 163, 166], "116": [159, 164], "161": 159, "206": [159, 163, 165], "300": [159, 162, 165], "344": 159, "433": [159, 165], "519": 159, "603": [159, 165], "686": [159, 165], "727": [159, 165], "769": [159, 165], "853": 159, "936": [159, 165], "978": [159, 165], "019": 159, "106": [159, 165], "191": [159, 162], "274": [159, 165], "316": 159, "357": [159, 164, 165], "440": [159, 163], "565": 159, "607": [159, 163], "774": 159, "858": [159, 165], "941": 159, "030": [159, 165], "072": [159, 165], "114": 159, "156": [159, 165], "197": [159, 163], "239": 159, "280": 159, "322": 159, "405": 159, "489": 159, "531": 159, "614": 159, "656": [159, 165], "698": 159, "747": 159, "794": 159, "948": [159, 164], "061": [159, 165], "110": 159, "157": [159, 163], "9987487631380596": 159, "9976446981909068": 159, "9966759568052321": 159, "993530034195362": 159, "9990404653517758": 159, "9981264795208118": 159, "9993022807449614": 159, "9986351324410088": 159, "9973448276409616": 159, "9955188886796882": 159, "252344351282814e": 159, "avg_gate_fidelity_clifford": [159, 163], "427765436266417e": 159, "311072136492597e": 159, "508513064336435e": 159, "00011479325016746003": 159, "00013605231315518148": 159, "126965739294625e": 159, "500976481016944e": 159, "726101631810375e": 159, "232463034652631e": 159, "example_irb_2q": [159, 163], "benchmark_irb_2q": [159, 163], "run_irb_2q": [159, 163], "921": 159, "001": [159, 162, 165], "164": [159, 165], "481": 159, "08": [159, 162, 163, 164, 165], "367": [159, 165], "937": [159, 165], "095": [159, 163], "396": [159, 163, 165], "026": 159, "620": [159, 165], "765": [159, 163, 165], "930": [159, 165], "216": [159, 163], "738": 159, "729": 159, "674": [159, 165], "965": 159, "264": [159, 164, 165], "470": 159, "463": [159, 165], "078": [159, 161], "370": [159, 165], "771": 159, "968": [159, 163], "140": 159, "441": [159, 161, 163], "192": 159, "743": [159, 165], "268": 159, "298": 159, "625": [159, 165, 166], "461": 159, "009": 159, "991": [159, 163], "014": 159, "807": [159, 165], "165": 159, "817": 159, "295": [159, 160, 165], "464": [159, 165], "721": [159, 165], "398": 159, "581": 159, "714": 159, "689": [159, 165], "801": [159, 165], "912": [159, 161, 167], "891": 159, "435": 159, "484": 159, "181": [159, 164], "194": [159, 165], "451": 159, "290": [159, 163, 166], "955": 159, "359": 159, "096": [159, 164], "445": [159, 165], "521": 159, "681": [159, 163], "628": 159, "214": [159, 164], "385": 159, "309": 159, "579": 159, "652": [159, 163, 164], "131": [159, 163, 165], "168": [159, 163], "169": [159, 165], "207": [159, 163], "208": [159, 163], "252": [159, 160, 166], "253": [159, 165], "345": 159, "346": [159, 163, 165], "457": 159, "523": [159, 164], "595": [159, 161, 163, 165], "676": [159, 164], "764": [159, 163, 165], "863": 159, "969": 159, "088": [159, 166], "089": 159, "218": [159, 160], "360": [159, 165, 167], "514": 159, "283": [159, 166], "034": [159, 163], "035": 159, "313": 159, "612": 159, "272": [159, 164], "637": [159, 167], "036": [159, 165], "876": [159, 163, 165], "877": [159, 163], "861": [159, 163], "365": [159, 164, 165], "366": 159, "897": [159, 165], "468": [159, 165], "051": 159, "661": 159, "028": [159, 165], "739": [159, 163, 165], "740": [159, 161, 163], "241": [159, 165], "042": 159, "673": 159, "641": 159, "757": [159, 166], "866": 159, "005": [159, 160, 162, 163, 165], "177": [159, 164, 165], "178": 159, "431": 159, "result_irb_2q": [159, 163], "704": [159, 161, 163], "795": 159, "888": 159, "070": [159, 165], "101": 159, "223": [159, 163, 165], "374": [159, 165], "465": 159, "526": 159, "586": [159, 165], "677": [159, 165], "707": 159, "798": [159, 165], "859": 159, "950": [159, 163], "981": [159, 163], "162": [159, 165], "9742310809885095": 159, "9459834045099638": 159, "9702389918426017": 159, "9373183372682623": 159, "9829862612568532": 159, "9651704260970525": 159, "9600628980342876": 159, "9331175707494691": 159, "example_irb_iswap": [159, 163], "iswapg": [159, 163, 164, 171], "benchmark_irb_iswap": [159, 163], "run_irb_iswap": [159, 163], "567": 159, "751": [159, 163, 165], "573": [159, 165], "742": [159, 165], "879": 159, "079": [159, 164, 165], "954": [159, 163, 165], "145": 159, "781": [159, 163, 166], "496": [159, 163], "725": [159, 165], "408": [159, 162, 165], "895": 159, "788": [159, 163], "513": 159, "517": [159, 165], "087": [159, 165], "773": [159, 163], "684": [159, 165], "638": [159, 165], "691": [159, 163], "204": [159, 161, 163, 166], "339": [159, 161, 163], "580": 159, "608": 159, "609": [159, 164, 165], "336": [159, 160, 165], "708": 159, "833": [159, 165], "990": 159, "084": 159, "187": 159, "303": 159, "576": [159, 165], "097": [159, 164], "530": [159, 163, 165], "776": [159, 161], "044": 159, "045": 159, "332": [159, 165], "333": [159, 163, 165], "984": [159, 165], "985": 159, "result_irb_iswap": [159, 163], "796": 159, "902": [159, 165], "073": 159, "115": [159, 165], "136": 159, "179": [159, 165], "221": [159, 165], "296": [159, 164, 165], "325": [159, 165], "388": [159, 165], "9296485294294863": 159, "9468865104887559": 159, "9168663709049512": 159, "9389212110918619": 159, "mirror_rb": [159, 164, 171], "example_mrb": [159, 164, 171], "benchmark_mrb": [159, 164], "run_mrb": [159, 164], "10x5": [159, 164], "64": [159, 164], "512": [159, 164], "090": [159, 163, 165], "109": [159, 171], "775": 159, "802": [159, 165], "779": [159, 162, 163, 165], "533": 159, "246": 159, "442": [159, 163], "369": 159, "491": [159, 163], "092": [159, 165], "613": 159, "631": [159, 163], "692": [159, 163], "375": [159, 164, 165], "723": [159, 161, 165], "878": 159, "266": 159, "123": 159, "_depth_2": [159, 164], "_depth_4": [159, 164], "_depth_8": [159, 164], "_depth_16": [159, 164], "_depth_32": [159, 164], "822": 159, "_depth_64": [159, 164], "_depth_128": [159, 164], "174": [159, 163], "_depth_256": [159, 164], "175": 159, "_depth_512": [159, 164], "515": 159, "720": [159, 165], "219": [159, 161], "857": [159, 165], "242": 159, "243": [159, 165, 167], "670": 159, "671": [159, 163], "147": [159, 164], "result_mrb": [159, 164], "706": [159, 163], "882": [159, 163], "962": 159, "067": [159, 163], "260": 159, "356": [159, 161], "1600x1200": 159, "ax": 159, "all_qubit_layout": [159, 164], "key_mrb_plot": [159, 164], "example_qv": [159, 166, 167, 171], "run0_qv": [159, 166, 167], "iqmfakeadonisbackend": 159, "234": [159, 165], "subbatch": [159, 166, 167], "562": 159, "588": 159, "093": 159, "023": 159, "434": [159, 165], "587": 159, "result0_qv": [159, 166, 167], "413": [159, 164], "run1_qv": [159, 166, 167], "result1_qv": [159, 166, 167], "865": [159, 165, 167], "213": [159, 165], "800": [159, 162], "321": 159, "887": [159, 160, 164, 165], "024": [159, 167], "155": [159, 165], "516": [159, 165], "247": 159, "278": [159, 161, 165], "347": 159, "265": [159, 165], "358": 159, "453": [159, 165, 166], "454": 159, "554": 159, "552": 159, "minimal_ghz": [159, 160, 161], "745": [159, 163], "792": [159, 165], "900": 159, "049": [159, 163], "238": 159, "306": 159, "423": [159, 165], "8309361141069083": 159, "fidelity_rem": [159, 161], "8897643257271268": 159, "example_qscor": [159, 165], "20_000": 159, "4767": 159, "4900": 159, "6739": 159, "3733": 159, "6246": 159, "3894": 159, "4881": 159, "4714": 159, "4767012007999197": 159, "09979310484432205": 159, "is_succes": [159, 165, 166, 167], "qscore_result": [159, 165], "6738975057778192": 159, "07204344830310698": 159, "6246025280898877": 159, "04717318377784287": 159, "4881333882446109": 159, "04133470512287928": 159, "multipartit": [160, 161], "One": [160, 161, 166, 167], "larger": [160, 161, 162], "leibfri": [160, 161], "et": [160, 161], "al": [160, 161], "six": 160, "atom": 160, "schr\u00f6dinger": 160, "cat": 160, "natur": [160, 161], "438": [160, 161, 165], "2005": [160, 161], "offer": [160, 161, 170], "verif": [160, 169, 171], "superconduct": 160, "phy": [160, 161, 171], "commun": [160, 161, 170], "095004": [160, 161], "elben": [160, 161], "statist": 160, "toolbox": 160, "probe": 160, "bodi": 160, "rev": [160, 161, 171], "99": [160, 161], "052323": [160, 161], "ciruit": [160, 161], "hadamrd": 160, "addit": [160, 161, 162, 170, 171], "log_depth": [160, 161], "cruz": [160, 161], "yield": [160, 161], "lower": [160, 161, 162], "hous": 160, "reli": [160, 161], "dai": 160, "thu": [160, 161], "comparison": [160, 161], "best": [160, 161], "gme": [160, 161], "prefer": [160, 161, 170], "whenev": [160, 161], "mitgat": [160, 161], "arang": 160, "For": [160, 162, 170, 171], "think": 160, "help": 160, "rustworkx": 160, "iqmfakeapollo": [160, 162], "scrambl": 160, "readabl": [160, 170], "mpl_draw": 160, "fake_backend": 160, "fake_apollo": 160, "arrow": 160, "32a8a4": 160, "num_it": 160, "209": [160, 165], "759": [160, 165], "760": [160, 165], "823": [160, 165], "233": 160, "597": [160, 164, 165], "016": [160, 165], "236": [160, 165], "594": [160, 165], "917": [160, 165], "279": 160, "fidelitii": [160, 161], "filter": [160, 161], "descript": [160, 161, 170], "l0": [160, 161], "l1": [160, 161], "tailor": 161, "novel": 161, "opt": 161, "anaconda3": [161, 167], "env": [161, 167], "lib": [161, 167], "python3": 161, "site": [161, 167], "170": [161, 165, 167], "userwarn": [161, 167], "unknown": [161, 167], "unknown_opt": [161, 167], "205": [161, 163, 165], "276": 161, "308": 161, "543": 161, "081": [161, 165], "125": [161, 164, 165], "927": 161, "872": 161, "455": 161, "102": 161, "9430881954317198": 161, "9742741960417851": 161, "introduct": 162, "what": [162, 163], "background": 162, "journal": 162, "prxquantum": 162, "1103": 162, "010325": [162, 171], "compressive_gst": 162, "iqmfakeadoni": 162, "k_i": 162, "trigger": 162, "benefit": 162, "less": [162, 164], "captur": 162, "domin": 162, "trustworthi": 162, "veri": 162, "consum": 162, "minimal_1q_gst": 162, "minimal_2q_gst": 162, "Be": 162, "extra": 162, "871": [162, 165], "20it": 162, "621": 162, "criterion": 162, "53e": 162, "uncertaintit": 162, "restult": 162, "idl": 162, "qb1": 162, "99693": 162, "00703": 162, "unitar": 162, "98781": 162, "99918": 162, "0013": 162, "99674": 162, "ry": 162, "99509": 162, "01332": 162, "98074": 162, "tvd": 162, "00698": 162, "03296": 162, "dist": 162, "00601": 162, "04366": 162, "results_layout_": 162, "dict_kei": 162, "raw_kraus_oper": 162, "raw_gat": 162, "raw_povm": 162, "raw_stat": 162, "gauge_opt_g": 162, "gauge_opt_gates_pauli_basi": 162, "gauge_opt_povm": 162, "gauge_opt_st": 162, "main_mgst_tim": 162, "gauge_optimization_tim": 162, "choi_ev": 162, "full_metr": 162, "raw": 162, "raw_result": 162, "array_str": 162, "precis": 162, "suppress_smal": 162, "995": [162, 165], "002": [162, 163, 165], "002j": 162, "003j": 162, "004j": 162, "998": 162, "These": 162, "diplai": 162, "disc": 162, "represent": 162, "sinlg": 162, "g_": 162, "ij": 162, "p_i": 162, "p_j": 162, "layout_": 162, "_gate_metr": 162, "_choi_eigenvalu": 162, "_other_metr": 162, "_process_matrix_0": 162, "_process_matrix_1": 162, "_process_matrix_2": 162, "_spam_matrices_r": 162, "_spam_matrices_imag": 162, "altern": 162, "ourselv": 162, "xyi": 162, "instruct": 162, "gate_list": 162, "indentif": 162, "\u03c0": [162, 167], "custom_1q_gst": 162, "verbos": 162, "806": [162, 166], "61": 162, "803": 162, "42e": 162, "008j": 162, "989": [162, 163, 165], "001j": 162, "553": 163, "324": [163, 165], "964": 163, "064": 163, "065": 163, "294": 163, "664": 163, "107": 163, "982": [163, 164], "058": [163, 165], "538": [163, 165], "120": [163, 165], "121": [163, 165], "146": 163, "522": [163, 164], "103": [163, 165], "744": [163, 165], "780": [163, 164, 166], "818": 163, "819": [163, 164], "133": [163, 164], "286": 163, "287": 163, "376": [163, 165], "583": 163, "9975073376613797": 163, "9957157328789242": 163, "9976959612386156": 163, "9957310522299055": 163, "752861001879659e": 163, "028839025109517e": 163, "64196778583225e": 163, "243656712565855e": 163, "know": 163, "679": [163, 164, 165], "118": [163, 165], "820": [163, 165], "915": 163, "577": 163, "148": [163, 165], "874": [163, 165], "951": [163, 165], "380": 163, "381": 163, "485": 163, "685": [163, 165], "9798030906041997": 163, "9431232937255942": 163, "9840858225184934": 163, "945382422883015": 163, "593": [163, 165], "885": [163, 165], "490": [163, 165], "883": [163, 164, 165], "038": 163, "215": [163, 164], "282": 163, "348": 163, "394": 163, "395": [163, 165], "492": 163, "675": 163, "752": [163, 165], "932": 163, "933": 163, "158": [163, 165], "289": [163, 165], "436": [163, 165], "566": 163, "9344679810705316": 163, "9463377694591251": 163, "9267928870925659": 163, "943379008472002": 163, "892": 164, "589": 164, "646": 164, "702": 164, "244": 164, "996": 164, "598": [164, 165], "867": [164, 165], "117": 164, "271": [164, 165], "448": [164, 165], "449": [164, 165], "150": [164, 165], "450": [164, 165], "605": 164, "184": 164, "342": 164, "343": 164, "422": [164, 165], "134": 164, "456": 164, "529": [164, 165], "attr_kei": [164, 166, 167], "depth_2": 164, "14302134513855": 164, "007565975189208984": 164, "06883907318115234": 164, "f8d9d789": 164, "0e9a": 164, "4086": 164, "ab36": 164, "685064a7b66": 164, "depth_4": 164, "0004930496215820312": 164, "0007040500640869141": 164, "87e367b7": 164, "c3ae": 164, "4457": 164, "8a2d": 164, "7b169c528033": 164, "depth_8": 164, "0004889965057373047": 164, "0005979537963867188": 164, "d84330c9": 164, "101f": 164, "40ff": 164, "bea8": 164, "f5e4c0b41527": 164, "depth_16": 164, "0004627704620361328": 164, "0006148815155029297": 164, "1f58b4a0": 164, "fb16": 164, "4d12": 164, "a9e8": 164, "c9263da52418": 164, "depth_32": 164, "00047278404235839844": 164, "0005419254302978516": 164, "4e43834b": 164, "5694": 164, "4c6d": 164, "8a83": 164, "796913d67e40": 164, "depth_64": 164, "000469207763671875": 164, "0005609989166259766": 164, "036e1dd": 164, "ca95": 164, "42a1": 164, "ab68": 164, "30a243f6b4ba": 164, "depth_128": 164, "0004668235778808594": 164, "0005328655242919922": 164, "13a59ca8": 164, "2ab0": 164, "4de8": 164, "a643": 164, "5b3f318f03d4": 164, "depth_256": 164, "0004749298095703125": 164, "e673defd": 164, "039c": 164, "4c37": 164, "9ef3": 164, "d4734436f39a": 164, "depth_512": 164, "0005099773406982422": 164, "0005548000335693359": 164, "d83ac439": 164, "2929": 164, "4d78": 164, "b52b": 164, "f297873c3e44": 164, "9710221314803044": 164, "001462493086363885": 164, "9473471466489307": 164, "00285118172031131": 164, "xxxxxxxxxxxxxx": 165, "put": 165, "run0_qscor": 165, "549": 165, "680": 165, "622": 165, "772": 165, "869": 165, "898": 165, "462": 165, "563": 165, "027": 165, "235": 165, "602": 165, "928": 165, "193": 165, "353": 165, "494": 165, "539": 165, "568": 165, "645": 165, "696": 165, "167": 165, "293": 165, "472": 165, "505": 165, "632": 165, "778": 165, "851": 165, "210": [165, 166], "275": 165, "326": 165, "540": 165, "715": 165, "922": 165, "057": 165, "129": [165, 171], "302": 165, "506": 165, "683": 165, "141": 165, "478": 165, "056": 165, "135": 165, "493": 165, "528": 165, "599": 165, "687": 165, "047": 165, "228": 165, "317": 165, "452": 165, "809": 165, "957": 165, "913": 165, "183": 165, "430": 165, "480": 165, "716": 165, "926": 165, "974": 165, "052": 165, "762": 165, "793": 165, "847": 165, "419": 165, "850": 165, "903": 165, "474": 165, "507": 165, "564": 165, "711": 165, "189": 165, "273": [165, 167], "327": 165, "503": 165, "590": 165, "709": 165, "363": 165, "473": 165, "669": 165, "018": 165, "479": 165, "830": 165, "914": 165, "139": 165, "421": 165, "535": 165, "585": 165, "617": 165, "934": 165, "335": 165, "392": 165, "551": 165, "699": 165, "827": 165, "281": 165, "534": 165, "633": 165, "946": 165, "980": 165, "032": [165, 166], "340": 165, "337": 165, "310": 165, "203": 165, "258": 165, "318": 165, "124": 165, "226": 165, "601": 165, "956": 165, "017": 165, "053": 165, "137": 165, "result0_qscor": 165, "4370": 165, "4700": 165, "6695": 165, "3692": 165, "5902": 165, "3404": 165, "5068": 165, "5085": 165, "4374": 165, "8942": 165, "43697610073325965": 165, "09963324394097106": 165, "6694825328517715": 165, "07553199096996285": 165, "5901951757699432": 165, "04806723107119834": 165, "5067731707198324": 165, "03884606517763287": 165, "4373922810576933": 165, "034249084355823": 165, "217": 166, "082": 166, "rem_quasidistribut": [166, 167], "time_batch": [166, 167], "cumulative_average_heavy_output_prob": [166, 167], "cumulative_stddev_heavy_output_prob": [166, 167], "rem_cumulative_average_heavy_output_prob": [166, 167], "rem_cumulative_stddev_heavy_output_prob": [166, 167], "rem_heavy_output_prob": [166, 167], "60546875": 166, "71875": 166, "578125": 166, "74609375": 166, "6328125": 166, "546875": 166, "56640625": 166, "76953125": 166, "75390625": 166, "67578125": 166, "6171875": 166, "55078125": 166, "64453125": 166, "6875": 166, "7109375": 166, "82421875": 166, "76171875": 166, "6484375": 166, "6015625": 166, "73828125": 166, "63671875": 166, "69140625": 166, "61328125": 166, "734375": 166, "57421875": 166, "6953125": 166, "55859375": 166, "69921875": 166, "609375": 166, "671875": 166, "77734375": 166, "6796875": 166, "62890625": 166, "6640625": 166, "66796875": 166, "62109375": 166, "703125": 166, "68359375": 166, "58984375": 166, "71484375": 166, "59375": 166, "79296875": 166, "66015625": 166, "65234375": 166, "59765625": 166, "65625": 166, "84765625": 166, "5859375": 166, "5625": 166, "72265625": 166, "640625": 166, "58203125": 166, "54296875": 166, "8203125": 166, "78515625": 166, "7265625": 166, "53515625": 166, "5703125": 166, "5546875": 166, "5390625": 166, "828125": 166, "80859375": 166, "765625": 166, "81640625": 166, "5234375": 166, "75": 166, "73046875": 166, "87890625": 166, "7890625": 166, "7734375": 166, "7421875": 166, "70703125": 166, "50390625": 166, "7578125": 166, "52734375": 166, "78125": 166, "8125": 166, "average_heavy_output_prob": [166, 167], "649203125": 166, "021341903733745705": 166, "672703125": 166, "020984452845629994": 166, "rem_average_heavy_output_prob": [166, 167], "67954478782619": 166, "020869291754367154": 166, "rem_is_succes": [166, 167], "rem_qv_result": [166, 167], "710149650958595": 166, "020289757228807877": 166, "vanilla_4_qubits_": [166, 167], "vanilla_rem_4_qubits_": 166, "Or": [166, 167], "onc": [166, 167, 171], "668": 167, "pedrofigueroaromero": 167, "190": 167, "server": 167, "e48420cb": 167, "30dc": 167, "4274": 167, "9d7d": 167, "e5fffa68f73a": 167, "7404ae11": 167, "823a": 167, "4e66": 167, "b2c4": 167, "41361cf10c69": 167, "untranspiled_circuit": 167, "q_0": 167, "q_1": 167, "q_2": 167, "mea": 167, "48526": 167, "79781": 167, "58665": 167, "3705": 167, "1471": 167, "1775": 167, "1521": 167, "q_3": 167, "q_4": 167, "73475": 167, "1344": 167, "q_5": 167, "q_6": 167, "30103": 167, "7711": 167, "3108": 167, "6909": 167, "6665": 167, "65249": 167, "8837": 167, "24328": 167, "3169": 167, "6809": 167, "71478125": 167, "020192524094250205": 167, "7261292473074281": 167, "019943197512544274": 167, "vanilla_3_qubits_": 167, "vanilla_rem_3_qubits_": 167, "collect": 168, "demonstr": 168, "variou": 168, "rest": 168, "summari": [168, 169], "releas": 169, "date": [169, 170], "finland": 169, "tool": [169, 171], "changelog": 169, "search": 169, "page": [169, 170], "januari": 170, "2004": 170, "AND": 170, "FOR": 170, "reproduct": 170, "shall": 170, "licensor": 170, "owner": 170, "entiti": 170, "author": 170, "grant": 170, "legal": 170, "power": 170, "direct": 170, "indirect": 170, "caus": 170, "contract": 170, "ownership": 170, "fifti": 170, "percent": 170, "outstand": 170, "iii": 170, "benefici": 170, "exercis": 170, "mechan": 170, "transform": 170, "translat": 170, "media": 170, "authorship": 170, "attach": 170, "appendix": 170, "editori": 170, "revis": 170, "elabor": 170, "whole": 170, "remain": 170, "mere": 170, "link": 170, "bind": 170, "interfac": 170, "thereof": 170, "contribut": 170, "intention": 170, "inclus": 170, "behalf": 170, "electron": 170, "verbal": 170, "mail": 170, "issu": 170, "track": 170, "discuss": 170, "exclud": 170, "conspicu": 170, "mark": 170, "Not": 170, "contributor": 170, "whom": 170, "been": 170, "receiv": 170, "incorpor": 170, "subject": 170, "herebi": 170, "perpetu": 170, "worldwid": 170, "charg": 170, "royalti": 170, "irrevoc": 170, "reproduc": 170, "publicli": 170, "sublicens": 170, "patent": 170, "sell": 170, "transfer": 170, "claim": 170, "necessarili": 170, "infring": 170, "alon": 170, "institut": 170, "litig": 170, "counterclaim": 170, "lawsuit": 170, "alleg": 170, "contributori": 170, "redistribut": 170, "medium": 170, "meet": 170, "recipi": 170, "carri": 170, "promin": 170, "retain": 170, "trademark": 170, "pertain": 170, "wherev": 170, "third": 170, "parti": 170, "normal": 170, "appear": 170, "content": 170, "alongsid": 170, "addendum": 170, "constru": 170, "compli": 170, "explicitli": 170, "notwithstand": 170, "noth": 170, "herein": 170, "supersed": 170, "agreement": 170, "regard": 170, "trade": 170, "servic": [170, 171], "reason": 170, "customari": 170, "disclaim": 170, "merchant": 170, "particular": 170, "respons": 170, "appropri": 170, "risk": 170, "liabil": 170, "event": 170, "tort": 170, "neglig": 170, "deliber": [170, 171], "grossli": 170, "liabl": 170, "damag": 170, "special": 170, "incident": 170, "consequenti": 170, "charact": 170, "aris": 170, "inabl": 170, "loss": 170, "goodwil": 170, "stoppag": 170, "failur": 170, "malfunct": 170, "commerci": 170, "even": 170, "advis": 170, "fee": 170, "indemn": 170, "oblig": 170, "indemnifi": 170, "defend": 170, "hold": 170, "harmless": 170, "incur": 170, "assert": 170, "boilerpl": 170, "enclos": 170, "bracket": 170, "don": 170, "t": 170, "comment": 170, "syntax": 170, "easier": 170, "archiv": 170, "repositori": [170, 171], "licenc": 170, "src": 170, "raphael": 170, "brieger": 170, "ingo": 170, "roth": 170, "martin": 170, "kliesch": 170, "comprehens": 171, "modular": 171, "easi": 171, "042311": 171, "lett": 171, "080505": 171, "prx": 171, "2023": 171, "150502": 171, "2022": 171, "holist": 171, "032328": 171, "0712": 171, "0921": 171, "2007": 171, "ieee": 171, "tran": 171, "eng": 171, "split": 171, "legaci": 171, "wrap": 171, "benchmarkexperi": 171, "uv": 171, "highli": 171, "With": 171, "machin": 171, "venv": 171, "read": 171, "prompt": 171, "suppli": 171, "txt": 171, "lock": 171, "directli": 171, "repo": 171, "pypi": 171, "lint": 171, "cicd": 171, "clone": 171, "directori": 171, "edit": 171, "docbuild": 171, "pyproject": 171, "toml": 171, "commit": 171, "upgrad": 171, "transit": 171, "cloud": 171, "prem": 171, "platform": 171, "authent": 171, "your_token": 171, "example_irb": 171, "example_experi": 171, "setup": 171, "weekli": 171, "daili": 171, "gitlab": 171, "scheduled_experi": 171}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "compressive_gst"], [38, 0, 0, "-", "entanglement"], [54, 0, 0, "-", "logging_config"], [55, 0, 0, "-", "optimization"], [68, 0, 0, "-", "quantum_volume"], [87, 0, 0, "-", "randomized_benchmarking"], [131, 0, 0, "-", "readout_mitigation"], [135, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[20, 0, 0, "-", "compressive_gst"], [26, 0, 0, "-", "gst_analysis"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[21, 1, 1, "", "CompressiveGST"], [22, 1, 1, "", "GSTConfiguration"], [23, 5, 1, "", "create_predefined_gate_set"], [24, 5, 1, "", "parse_gate_set"], [25, 5, 1, "", "parse_layouts"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_meas_circuits"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, 3, 1, "", "batch_size"], [22, 3, 1, "", "benchmark"], [22, 3, 1, "", "bootstrap_samples"], [22, 3, 1, "", "convergence_criteria"], [22, 3, 1, "", "from_init"], [22, 3, 1, "", "gate_labels"], [22, 3, 1, "", "gate_set"], [22, 3, 1, "", "max_inits"], [22, 3, 1, "", "max_iterations"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_circuits"], [22, 3, 1, "", "opt_method"], [22, 3, 1, "", "qubit_layouts"], [22, 3, 1, "", "rank"], [22, 3, 1, "", "seq_len_list"], [22, 3, 1, "", "shots"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[27, 5, 1, "", "bootstrap_errors"], [28, 5, 1, "", "dataframe_to_figure"], [29, 5, 1, "", "dataset_counts_to_mgst_format"], [30, 5, 1, "", "generate_basis_labels"], [31, 5, 1, "", "generate_gate_results"], [32, 5, 1, "", "generate_non_gate_results"], [33, 5, 1, "", "generate_unit_rank_gate_results"], [34, 5, 1, "", "mgst_analysis"], [35, 5, 1, "", "pandas_results_to_observations"], [36, 5, 1, "", "result_str_to_floats"], [37, 5, 1, "", "run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[39, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[40, 1, 1, "", "GHZBenchmark"], [41, 1, 1, "", "GHZConfiguration"], [42, 5, 1, "", "extract_fidelities"], [43, 5, 1, "", "fidelity_analysis"], [44, 5, 1, "", "fidelity_ghz_coherences"], [45, 5, 1, "", "fidelity_ghz_randomized_measurements"], [46, 5, 1, "", "generate_ghz_linear"], [47, 5, 1, "", "generate_ghz_log_cruz"], [48, 5, 1, "", "generate_ghz_log_mooney"], [49, 5, 1, "", "generate_ghz_spanning_tree"], [50, 5, 1, "", "generate_ghz_star"], [51, 5, 1, "", "get_cx_map"], [52, 5, 1, "", "get_edges"], [53, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, 2, 1, "", "add_configuration_to_dataset"], [40, 2, 1, "", "analysis_function"], [40, 2, 1, "", "append_rms"], [40, 2, 1, "", "execute"], [40, 2, 1, "", "generate_coherence_meas_circuits"], [40, 2, 1, "", "generate_native_ghz"], [40, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, 3, 1, "", "benchmark"], [41, 3, 1, "", "cal_url"], [41, 3, 1, "", "custom_qubits_array"], [41, 3, 1, "", "fidelity_routine"], [41, 3, 1, "", "mit_shots"], [41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "num_RMs"], [41, 3, 1, "", "optimize_sqg"], [41, 3, 1, "", "qiskit_optim_level"], [41, 3, 1, "", "qubit_counts"], [41, 3, 1, "", "rem"], [41, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[41, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[56, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[57, 1, 1, "", "QScoreBenchmark"], [58, 1, 1, "", "QScoreConfiguration"], [59, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [60, 5, 1, "", "compute_expectation_value"], [61, 5, 1, "", "create_objective_function"], [62, 5, 1, "", "cut_cost_function"], [63, 5, 1, "", "get_optimal_angles"], [64, 5, 1, "", "is_successful"], [65, 5, 1, "", "plot_approximation_ratios"], [66, 5, 1, "", "qscore_analysis"], [67, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[57, 2, 1, "", "add_all_meta_to_dataset"], [57, 2, 1, "", "analysis_function"], [57, 2, 1, "", "choose_qubits_custom"], [57, 2, 1, "", "choose_qubits_naive"], [57, 2, 1, "", "execute"], [57, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[58, 3, 1, "", "REM"], [58, 3, 1, "", "benchmark"], [58, 3, 1, "", "choose_qubits_routine"], [58, 3, 1, "", "custom_qubits_array"], [58, 3, 1, "", "max_num_nodes"], [58, 3, 1, "", "min_num_nodes"], [58, 3, 1, "", "min_num_qubits"], [58, 3, 1, "", "mit_shots"], [58, 3, 1, "", "model_computed_fields"], [58, 3, 1, "", "model_config"], [58, 3, 1, "", "model_fields"], [58, 3, 1, "", "num_instances"], [58, 3, 1, "", "num_qaoa_layers"], [58, 3, 1, "", "optimize_sqg"], [58, 3, 1, "", "qiskit_optim_level"], [58, 3, 1, "", "qpu_topology"], [58, 3, 1, "", "seed"], [58, 3, 1, "", "use_classically_optimized_angles"], [58, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[69, 0, 0, "-", "clops"], [75, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[70, 1, 1, "", "CLOPSBenchmark"], [71, 1, 1, "", "CLOPSConfiguration"], [72, 5, 1, "", "clops_analysis"], [73, 5, 1, "", "plot_times"], [74, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[70, 2, 1, "", "add_all_meta_to_dataset"], [70, 2, 1, "", "analysis_function"], [70, 2, 1, "", "append_parameterized_unitary"], [70, 2, 1, "", "assign_random_parameters_to_all"], [70, 2, 1, "", "clops_cycle"], [70, 2, 1, "", "execute"], [70, 2, 1, "", "generate_circuit_list"], [70, 2, 1, "", "generate_random_parameters"], [70, 2, 1, "", "generate_single_circuit"], [70, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[71, 3, 1, "", "benchmark"], [71, 3, 1, "", "clops_h_bool"], [71, 3, 1, "", "model_computed_fields"], [71, 3, 1, "", "model_config"], [71, 3, 1, "", "model_fields"], [71, 3, 1, "", "num_circuits"], [71, 3, 1, "", "num_shots"], [71, 3, 1, "", "num_updates"], [71, 3, 1, "", "optimize_sqg"], [71, 3, 1, "", "physical_layout"], [71, 3, 1, "", "qiskit_optim_level"], [71, 3, 1, "", "qubits"], [71, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[76, 1, 1, "", "QuantumVolumeBenchmark"], [77, 1, 1, "", "QuantumVolumeConfiguration"], [78, 5, 1, "", "compute_heavy_output_probabilities"], [79, 5, 1, "", "cumulative_hop"], [80, 5, 1, "", "cumulative_std"], [81, 5, 1, "", "get_ideal_heavy_outputs"], [82, 5, 1, "", "get_rem_hops"], [83, 5, 1, "", "heavy_projector"], [84, 5, 1, "", "is_successful"], [85, 5, 1, "", "plot_hop_threshold"], [86, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[76, 2, 1, "", "add_all_circuits_to_dataset"], [76, 2, 1, "", "add_all_meta_to_dataset"], [76, 2, 1, "", "analysis_function"], [76, 2, 1, "", "execute"], [76, 2, 1, "", "generate_circuit_list"], [76, 2, 1, "", "generate_single_circuit"], [76, 2, 1, "", "get_rem_quasidistro"], [76, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[77, 3, 1, "", "benchmark"], [77, 3, 1, "", "choose_qubits_routine"], [77, 3, 1, "", "custom_qubits_array"], [77, 3, 1, "", "mit_shots"], [77, 3, 1, "", "model_computed_fields"], [77, 3, 1, "", "model_config"], [77, 3, 1, "", "model_fields"], [77, 3, 1, "", "num_circuits"], [77, 3, 1, "", "num_sigmas"], [77, 3, 1, "", "optimize_sqg"], [77, 3, 1, "", "physical_layout"], [77, 3, 1, "", "qiskit_optim_level"], [77, 3, 1, "", "rem"], [77, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[88, 0, 0, "-", "clifford_rb"], [93, 0, 0, "-", "interleaved_rb"], [98, 0, 0, "-", "mirror_rb"], [108, 0, 0, "-", "multi_lmfit"], [113, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[89, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[90, 1, 1, "", "CliffordRBConfiguration"], [91, 1, 1, "", "CliffordRandomizedBenchmarking"], [92, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[90, 3, 1, "", "benchmark"], [90, 3, 1, "", "model_computed_fields"], [90, 3, 1, "", "model_config"], [90, 3, 1, "", "model_fields"], [90, 3, 1, "", "num_circuit_samples"], [90, 3, 1, "", "parallel_execution"], [90, 3, 1, "", "qubits_array"], [90, 3, 1, "", "sequence_lengths"], [90, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[91, 2, 1, "", "add_all_circuits_to_dataset"], [91, 2, 1, "", "add_all_metadata_to_dataset"], [91, 2, 1, "", "analysis_function"], [91, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[94, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[95, 1, 1, "", "InterleavedRBConfiguration"], [96, 1, 1, "", "InterleavedRandomizedBenchmarking"], [97, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[95, 3, 1, "", "interleaved_gate"], [95, 3, 1, "", "interleaved_gate_params"], [95, 3, 1, "", "model_computed_fields"], [95, 3, 1, "", "model_config"], [95, 3, 1, "", "model_fields"], [95, 3, 1, "", "num_circuit_samples"], [95, 3, 1, "", "parallel_execution"], [95, 3, 1, "", "qubits_array"], [95, 3, 1, "", "sequence_lengths"], [95, 3, 1, "", "shots"], [95, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[96, 2, 1, "", "add_all_circuits_to_dataset"], [96, 2, 1, "", "add_all_meta_to_dataset"], [96, 2, 1, "", "analysis_function"], [96, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[99, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[100, 1, 1, "", "MirrorRBConfiguration"], [101, 1, 1, "", "MirrorRandomizedBenchmarking"], [102, 5, 1, "", "compute_polarizations"], [103, 5, 1, "", "edge_grab"], [104, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [105, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [106, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [107, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[100, 3, 1, "", "benchmark"], [100, 3, 1, "", "density_2q_gates"], [100, 3, 1, "", "depths_array"], [100, 3, 1, "", "model_computed_fields"], [100, 3, 1, "", "model_config"], [100, 3, 1, "", "model_fields"], [100, 3, 1, "", "num_circuit_samples"], [100, 3, 1, "", "num_pauli_samples"], [100, 3, 1, "", "qiskit_optim_level"], [100, 3, 1, "", "qubits_array"], [100, 3, 1, "", "routing_method"], [100, 3, 1, "", "shots"], [100, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[101, 2, 1, "", "add_all_meta_to_dataset"], [101, 2, 1, "", "analysis_function"], [101, 2, 1, "", "execute"], [101, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[109, 5, 1, "", "create_multi_dataset_params"], [110, 5, 1, "", "eval_func_single_dataset"], [111, 5, 1, "", "get_param_names_from_func_signature"], [112, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[114, 5, 1, "", "compute_inverse_clifford"], [115, 5, 1, "", "estimate_survival_probabilities"], [116, 5, 1, "", "exponential_rb"], [117, 5, 1, "", "fit_decay_lmfit"], [118, 5, 1, "", "generate_all_rb_circuits"], [119, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [120, 5, 1, "", "generate_random_clifford_seq_circuits"], [121, 5, 1, "", "get_survival_probabilities"], [122, 5, 1, "", "import_native_gate_cliffords"], [123, 5, 1, "", "lmfit_minimizer"], [124, 5, 1, "", "plot_rb_decay"], [125, 5, 1, "", "relabel_qubits_array_from_zero"], [126, 5, 1, "", "submit_parallel_rb_job"], [127, 5, 1, "", "submit_sequential_rb_jobs"], [128, 5, 1, "", "survival_probabilities_parallel"], [129, 5, 1, "", "validate_irb_gate"], [130, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[132, 1, 1, "", "M3IQM"], [133, 5, 1, "", "apply_readout_error_mitigation"], [134, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[132, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[136, 5, 1, "", "bootstrap_counts"], [137, 5, 1, "", "count_2q_layers"], [138, 5, 1, "", "count_native_gates"], [139, 5, 1, "", "get_iqm_backend"], [140, 5, 1, "", "marginal_distribution"], [141, 5, 1, "", "perform_backend_transpilation"], [142, 5, 1, "", "reduce_to_active_qubits"], [143, 5, 1, "", "retrieve_all_counts"], [144, 5, 1, "", "retrieve_all_job_metadata"], [145, 5, 1, "", "set_coupling_map"], [146, 5, 1, "", "sort_batches_by_final_layout"], [147, 5, 1, "", "submit_execute"], [148, 5, 1, "", "timeit"], [149, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 169, 171], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 169, 171], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 155, 156, 158, 167], "compressive_gst": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "compressivegst": 21, "gstconfigur": 22, "create_predefined_gate_set": 23, "parse_gate_set": 24, "parse_layout": 25, "gst_analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "bootstrap_error": 27, "dataframe_to_figur": 28, "dataset_counts_to_mgst_format": 29, "generate_basis_label": 30, "generate_gate_result": 31, "generate_non_gate_result": 32, "generate_unit_rank_gate_result": 33, "mgst_analysi": 34, "pandas_results_to_observ": 35, "result_str_to_float": 36, "run_mgst_wrapp": 37, "entangl": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "ghz": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 155, 156, 159, 160, 161], "ghzbenchmark": 40, "ghzconfigur": 41, "extract_fidel": 42, "fidelity_analysi": 43, "fidelity_ghz_coher": 44, "fidelity_ghz_randomized_measur": 45, "generate_ghz_linear": 46, "generate_ghz_log_cruz": 47, "generate_ghz_log_moonei": 48, "generate_ghz_spanning_tre": 49, "generate_ghz_star": 50, "get_cx_map": 51, "get_edg": 52, "plot_fidel": 53, "logging_config": 54, "optim": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "qscore": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 159, 165], "qscorebenchmark": 57, "qscoreconfigur": 58, "calculate_optimal_angles_for_qaoa_p1": 59, "compute_expectation_valu": 60, "create_objective_funct": 61, "cut_cost_funct": 62, "get_optimal_angl": 63, "is_success": [64, 84], "plot_approximation_ratio": 65, "qscore_analysi": 66, "run_qaoa": 67, "quantum_volum": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "clop": [69, 70, 71, 72, 73, 74, 155, 156, 158, 159], "clopsbenchmark": 70, "clopsconfigur": 71, "clops_analysi": 72, "plot_tim": 73, "retrieve_clops_elapsed_tim": 74, "quantumvolumebenchmark": 76, "quantumvolumeconfigur": 77, "compute_heavy_output_prob": 78, "cumulative_hop": 79, "cumulative_std": 80, "get_ideal_heavy_output": 81, "get_rem_hop": 82, "heavy_projector": 83, "plot_hop_threshold": 85, "qv_analysi": 86, "randomized_benchmark": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "clifford_rb": [88, 89, 90, 91, 92], "cliffordrbconfigur": 90, "cliffordrandomizedbenchmark": 91, "clifford_rb_analysi": 92, "interleaved_rb": [93, 94, 95, 96, 97], "interleavedrbconfigur": 95, "interleavedrandomizedbenchmark": 96, "interleaved_rb_analysi": 97, "mirror_rb": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "mirrorrbconfigur": 100, "mirrorrandomizedbenchmark": 101, "compute_polar": 102, "edge_grab": 103, "generate_fixed_depth_mrb_circuit": 104, "generate_pauli_dressed_mrb_circuit": 105, "list_to_numcircuit_times_numpauli_matrix": 106, "mrb_analysi": 107, "multi_lmfit": [108, 109, 110, 111, 112], "create_multi_dataset_param": 109, "eval_func_single_dataset": 110, "get_param_names_from_func_signatur": 111, "multi_dataset_residu": 112, "randomized_benchmarking_common": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "compute_inverse_clifford": 114, "estimate_survival_prob": 115, "exponential_rb": 116, "fit_decay_lmfit": 117, "generate_all_rb_circuit": 118, "generate_fixed_depth_parallel_rb_circuit": 119, "generate_random_clifford_seq_circuit": 120, "get_survival_prob": 121, "import_native_gate_clifford": 122, "lmfit_minim": 123, "plot_rb_decai": 124, "relabel_qubits_array_from_zero": 125, "submit_parallel_rb_job": 126, "submit_sequential_rb_job": 127, "survival_probabilities_parallel": 128, "validate_irb_g": 129, "validate_rb_qubit": 130, "readout_mitig": [131, 132, 133, 134], "m3iqm": 132, "apply_readout_error_mitig": 133, "readout_error_m3": 134, "util": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "bootstrap_count": 136, "count_2q_lay": 137, "count_native_g": 138, "get_iqm_backend": 139, "marginal_distribut": 140, "perform_backend_transpil": 141, "reduce_to_active_qubit": 142, "retrieve_all_count": 143, "retrieve_all_job_metadata": 144, "set_coupling_map": 145, "sort_batches_by_final_layout": 146, "submit_execut": 147, "timeit": 148, "xrvariable_to_count": 149, "changelog": 150, "version": 150, "2": [150, 152], "21": 150, "20": 150, "19": 150, "18": 150, "17": 150, "16": 150, "15": 150, "14": 150, "13": 150, "12": 150, "11": 150, "10": 150, "9": 150, "8": 150, "7": 150, "6": 150, "5": 150, "4": 150, "3": 150, "1": [150, 156], "0": [150, 156], "develop": [151, 171], "qubit": [152, 156], "clifford": [152, 155, 157, 159], "group": 152, "decomposit": 152, "gener": [152, 158, 164, 166, 167], "1q": [152, 163], "2q": [152, 163], "dump": 152, "pickl": 152, "file": 152, "load": 152, "count": 152, "element": 152, "A": 152, "wai": 152, "work": 152, "out": [152, 162], "invers": 152, "sequenc": 152, "design": 152, "condit": 152, "how": 153, "make": 153, "your": 153, "own": 153, "devic": 154, "spark": 155, "connect": [155, 156], "backend": [155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167], "state": [155, 156, 159, 160, 161], "fidel": [155, 156, 159, 160, 161], "quantum": [155, 156, 159, 166, 167], "volum": [155, 156, 159, 166, 167], "layer": [155, 156, 158], "oper": [155, 156, 158], "per": [155, 156, 158], "second": [155, 156, 158], "random": [155, 157, 159, 163, 164], "interleav": [155, 159, 163], "irb": [155, 163], "q": [155, 156, 165], "score": [155, 156, 165], "summari": [155, 156, 159], "star": 156, "As": 156, "one": 156, "can": 156, "see": 156, "label": 156, "i": 156, "reserv": 156, "resontor": 156, "so": 156, "advis": 156, "defin": [156, 157, 158, 159, 162, 163, 164, 165, 166], "indic": [156, 169], "layout": 156, "interest": 156, "start": 156, "from": 156, "rb": [157, 164], "choos": [157, 158, 159, 162, 163, 164, 165, 166, 167], "set": [157, 158, 159, 161, 162, 164, 165, 166, 167], "token": [157, 158, 159, 161, 164, 165, 166, 167], "us": [157, 158, 159, 161, 164, 165, 166, 167, 171], "reson": [157, 158, 159, 161, 164, 165, 166, 167], "configur": [157, 158, 160, 161, 162, 163, 164, 165, 166, 167], "run": [157, 158, 160, 161, 163, 164, 165, 166, 167], "experi": [157, 158, 162, 163, 164, 165, 166, 167], "perform": [157, 158, 165, 166, 167], "analysi": [157, 158, 165, 166, 167], "list": [158, 164], "all": [158, 162, 164], "kei": [158, 164], "attribut": [158, 164], "dataset": [158, 164], "The": [158, 164], "observ": [158, 162, 164], "object": [158, 164], "contain": [158, 164], "result": [158, 160, 161, 162, 163, 164], "plot": [158, 162, 164, 166, 167], "notebook": [159, 171], "mirror": [159, 164], "greenberg": [160, 161], "horn": [160, 161], "zeiling": [160, 161], "definit": [160, 161], "access": [160, 161, 162], "compress": 162, "gate": [162, 163], "tomographi": 162, "gst": 162, "minim": 162, "execut": 162, "": 162, "examin": 162, "high": 162, "level": 162, "store": 162, "final": 162, "estim": 162, "further": 162, "process": 162, "creat": 162, "custom": 162, "check": 162, "matrix": 162, "correspond": 162, "pi": 162, "rotat": 162, "around": 162, "y": 162, "axi": 162, "analyz": [163, 164], "non": 163, "nativ": 163, "mrb": 164, "qv": [166, 167], "deneb": 167, "inspect": 167, "exampl": 168, "content": 169, "tabl": 169, "licens": 170, "instal": 171, "latest": 171, "releas": 171, "option": 171, "depend": 171, "chang": 171, "character": 171, "physic": 171, "hardwar": 171, "jupyt": 171, "python": 171, "script": 171, "schedul": 171, "ci": 171, "cd": 171, "pipelin": 171}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, "iqm-benchmarks-compressive-gst-compressive-gst-compressivegst"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, "iqm-benchmarks-compressive-gst-compressive-gst-gstconfiguration"]], "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set": [[23, "iqm-benchmarks-compressive-gst-compressive-gst-create-predefined-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set": [[24, "iqm-benchmarks-compressive-gst-compressive-gst-parse-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts": [[25, "iqm-benchmarks-compressive-gst-compressive-gst-parse-layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors": [[27, "iqm-benchmarks-compressive-gst-gst-analysis-bootstrap-errors"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure": [[28, "iqm-benchmarks-compressive-gst-gst-analysis-dataframe-to-figure"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format": [[29, "iqm-benchmarks-compressive-gst-gst-analysis-dataset-counts-to-mgst-format"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels": [[30, "iqm-benchmarks-compressive-gst-gst-analysis-generate-basis-labels"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results": [[31, "iqm-benchmarks-compressive-gst-gst-analysis-generate-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results": [[32, "iqm-benchmarks-compressive-gst-gst-analysis-generate-non-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results": [[33, "iqm-benchmarks-compressive-gst-gst-analysis-generate-unit-rank-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis": [[34, "iqm-benchmarks-compressive-gst-gst-analysis-mgst-analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations": [[35, "iqm-benchmarks-compressive-gst-gst-analysis-pandas-results-to-observations"]], "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats": [[36, "iqm-benchmarks-compressive-gst-gst-analysis-result-str-to-floats"]], "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper": [[37, "iqm-benchmarks-compressive-gst-gst-analysis-run-mgst-wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[42, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[43, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[44, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[45, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[46, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[47, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[48, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[49, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[50, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[51, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[52, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[53, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[54, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[55, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[56, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[57, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[58, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[59, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[60, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[61, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[62, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[63, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[64, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[65, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[66, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[67, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[69, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[70, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[71, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[72, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[73, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[74, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[75, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[76, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[77, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[78, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[79, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[80, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[81, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[82, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[83, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[84, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[85, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[86, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[87, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[89, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[90, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[91, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[92, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[94, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[95, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[96, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[97, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[99, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[100, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[101, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[102, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[103, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[104, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[105, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[106, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[107, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[108, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[109, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[110, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[111, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[112, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[113, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[114, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[115, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[116, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[117, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[118, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[119, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[120, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[121, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[122, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[123, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[124, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[125, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[126, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[127, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[128, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[129, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[130, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[131, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[132, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[133, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[134, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[135, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.bootstrap_counts": [[136, "iqm-benchmarks-utils-bootstrap-counts"]], "iqm.benchmarks.utils.count_2q_layers": [[137, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[138, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[139, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[140, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[141, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[142, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[143, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[144, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[145, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[146, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[147, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[148, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[149, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[150, "changelog"]], "Version 2.21": [[150, "version-2-21"]], "Version 2.20": [[150, "version-2-20"]], "Version 2.19": [[150, "version-2-19"]], "Version 2.18": [[150, "version-2-18"]], "Version 2.17": [[150, "version-2-17"]], "Version 2.16": [[150, "version-2-16"]], "Version 2.15": [[150, "version-2-15"]], "Version 2.14": [[150, "version-2-14"]], "Version 2.13": [[150, "version-2-13"]], "Version 2.12": [[150, "version-2-12"]], "Version 2.11": [[150, "version-2-11"]], "Version 2.10": [[150, "version-2-10"]], "Version 2.9": [[150, "version-2-9"]], "Version 2.8": [[150, "version-2-8"]], "Version 2.7": [[150, "version-2-7"]], "Version 2.6": [[150, "version-2-6"]], "Version 2.5": [[150, "version-2-5"]], "Version 2.4": [[150, "version-2-4"]], "Version 2.3": [[150, "version-2-3"]], "Version 2.2": [[150, "version-2-2"]], "Version 2.1": [[150, "version-2-1"]], "Version 2.0": [[150, "version-2-0"]], "Version 1.12": [[150, "version-1-12"]], "Version 1.11": [[150, "version-1-11"]], "Version 1.10": [[150, "version-1-10"]], "Version 1.9": [[150, "version-1-9"]], "Version 1.8": [[150, "version-1-8"]], "Version 1.7": [[150, "version-1-7"]], "Version 1.6": [[150, "version-1-6"]], "Version 1.5": [[150, "version-1-5"]], "Version 1.4": [[150, "version-1-4"]], "Version 1.3": [[150, "version-1-3"]], "Version 1.2": [[150, "version-1-2"]], "Version 1.1": [[150, "version-1-1"]], "Version 1.0": [[150, "version-1-0"]], "Development": [[151, "development"]], "2-Qubit Clifford Group Decomposition": [[152, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[152, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[152, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[152, "dump-on-a-pickle-file"]], "Load": [[152, "load"]], "Count elements": [[152, "count-elements"]], "2Q": [[152, "q"]], "1Q": [[152, "id1"]], "A way to work out the inverse of sequences": [[152, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[152, "design-condition"]], "How to make your own benchmark?": [[153, "how-to-make-your-own-benchmark"]], "Devices": [[154, "devices"]], "Benchmarking IQM Spark": [[155, "benchmarking-iqm-spark"]], "Connect to the backend": [[155, "connect-to-the-backend"], [156, "connect-to-the-backend"]], "GHZ state fidelity": [[155, "ghz-state-fidelity"], [156, "ghz-state-fidelity"], [159, "ghz-state-fidelity"]], "Quantum Volume": [[155, "quantum-volume"], [156, "quantum-volume"], [159, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[155, "circuit-layer-operations-per-second-clops"], [156, "circuit-layer-operations-per-second-clops"], [158, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[155, "clifford-randomized-benchmarking"], [159, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[155, "interleaved-randomized-benchmarking-irb"], [163, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[155, "q-score"], [156, "q-score"], [165, "q-score"]], "Summary": [[155, "summary"], [156, "summary"]], "Benchmarking IQM Star": [[156, "benchmarking-iqm-star"]], "As one can see, the label \u201c0\u201d is reserved for the resontor. So it is advised to define the qubit indices in the layout of interest starting from 1.": [[156, "as-one-can-see-the-label-0-is-reserved-for-the-resontor-so-it-is-advised-to-define-the-qubit-indices-in-the-layout-of-interest-starting-from-1"]], "Clifford Randomized Benchmarking (RB)": [[157, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[157, "choose-or-define-a-backend"], [158, "choose-or-define-a-backend"], [159, "choose-or-define-a-backend"], [162, "choose-or-define-a-backend"], [163, "choose-or-define-a-backend"], [164, "choose-or-define-a-backend"], [165, "choose-or-define-a-backend"], [166, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[157, "set-iqm-token-if-using-resonance"], [159, "set-iqm-token-if-using-resonance"], [161, "set-iqm-token-if-using-resonance"], [164, "set-iqm-token-if-using-resonance"], [165, "set-iqm-token-if-using-resonance"], [166, "set-iqm-token-if-using-resonance"], [167, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[157, "randomized-benchmarking-configuration"]], "Run the experiment": [[157, "run-the-experiment"], [158, "run-the-experiment"], [164, "run-the-experiment"], [165, "run-the-experiment"], [166, "run-the-experiment"], [167, "run-the-experiment"]], "Perform the analysis": [[157, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[158, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[158, "clops-configuration"]], "Perform Analysis": [[158, "perform-analysis"], [165, "perform-analysis"], [166, "perform-analysis"], [167, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[158, "list-all-the-keys-in-the-attributes-of-the-dataset"], [164, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[158, "the-observation-object-contains-the-benchmark-results"], [164, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[158, "generate-plots"], [164, "generate-plots"], [166, "generate-plots"], [167, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[159, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[159, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[159, "mirror-randomized-benchmarking"]], "CLOPS": [[159, "clops"]], "QScore": [[159, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[160, "greenbergerhornezeilinger-ghz-state-fidelity"], [161, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[160, "definition-of-the-benchmark-configuration"], [161, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[160, "running-the-benchmark"], [161, "running-the-benchmark"]], "Accessing the results": [[160, "accessing-the-results"], [161, "accessing-the-results"]], "Compressive Gate Set Tomography (GST)": [[162, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[162, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[162, "execute-gst-experiment-s"]], "Examine the results": [[162, "examine-the-results"]], "High level results stored at result.observations": [[162, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[162, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[162, "plots"]], "Creating a custom gate set": [[162, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[162, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[162, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[163, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[163, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[163, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[163, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[163, "id1"]], "Run the experiment - 2Q gate IRB": [[163, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[163, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[163, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[164, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[164, "mirror-rb-configuration"]], "Analyze the results": [[164, "analyze-the-results"]], "Qscore Configuration": [[165, "qscore-configuration"]], "Quantum Volume (QV)": [[166, "quantum-volume-qv"]], "Quantum Volume Configuration": [[166, "quantum-volume-configuration"], [167, "quantum-volume-configuration"]], "QV on Deneb": [[167, "qv-on-deneb"]], "Choose Deneb as a backend": [[167, "choose-deneb-as-a-backend"]], "Inspect the circuits": [[167, "inspect-the-circuits"]], "Examples": [[168, "examples"]], "IQM Benchmarks": [[169, "iqm-benchmarks"], [171, "iqm-benchmarks"]], "Contents": [[169, "contents"]], "Indices and tables": [[169, "indices-and-tables"]], "License": [[170, "license"]], "Installation (latest release)": [[171, "installation-latest-release"]], "Optional dependencies": [[171, "optional-dependencies"]], "Development installation (latest changes)": [[171, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[171, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[171, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[171, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.compressive_gst"], [20, "module-iqm.benchmarks.compressive_gst.compressive_gst"], [26, "module-iqm.benchmarks.compressive_gst.gst_analysis"], [38, "module-iqm.benchmarks.entanglement"], [39, "module-iqm.benchmarks.entanglement.ghz"], [54, "module-iqm.benchmarks.logging_config"], [55, "module-iqm.benchmarks.optimization"], [56, "module-iqm.benchmarks.optimization.qscore"], [68, "module-iqm.benchmarks.quantum_volume"], [69, "module-iqm.benchmarks.quantum_volume.clops"], [75, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [87, "module-iqm.benchmarks.randomized_benchmarking"], [88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [89, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [94, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [99, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [108, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [113, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [131, "module-iqm.benchmarks.readout_mitigation"], [135, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "compressivegst (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST"]], "add_configuration_to_dataset() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst static method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.analysis_function"]], "execute() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.execute"]], "generate_meas_circuits() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.generate_meas_circuits"]], "gstconfiguration (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration"]], "batch_size (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.batch_size"]], "benchmark (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.benchmark"]], "bootstrap_samples (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.bootstrap_samples"]], "convergence_criteria (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.convergence_criteria"]], "from_init (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.from_init"]], "gate_labels (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_labels"]], "gate_set (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_set"]], "max_inits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_inits"]], "max_iterations (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_iterations"]], "model_computed_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_config"]], "model_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.num_circuits"]], "opt_method (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.opt_method"]], "qubit_layouts (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.qubit_layouts"]], "rank (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rank"]], "seq_len_list (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.seq_len_list"]], "shots (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.shots"]], "create_predefined_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[23, "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set"]], "parse_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[24, "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set"]], "parse_layouts() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[25, "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "bootstrap_errors() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[27, "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors"]], "dataframe_to_figure() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[28, "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure"]], "dataset_counts_to_mgst_format() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[29, "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format"]], "generate_basis_labels() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[30, "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels"]], "generate_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[31, "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results"]], "generate_non_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[32, "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results"]], "generate_unit_rank_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[33, "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results"]], "mgst_analysis() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[34, "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis"]], "pandas_results_to_observations() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[35, "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations"]], "result_str_to_floats() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[36, "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats"]], "run_mgst_wrapper() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[37, "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[42, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[43, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[44, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[45, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[46, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[47, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[48, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[49, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[50, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[51, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[52, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[53, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[54, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[55, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[56, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "qpu_topology (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qpu_topology"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[59, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[60, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[61, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[62, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[63, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[64, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[65, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[66, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[67, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[69, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[72, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[73, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[74, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[75, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[78, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[79, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[80, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[81, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[82, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[83, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[84, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[85, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[86, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[87, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[89, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[92, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[94, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[97, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[99, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[102, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[103, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[104, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[105, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[107, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[108, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[109, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[110, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[111, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[112, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[113, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[114, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[115, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[116, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[117, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[118, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[119, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[120, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[121, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[122, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[123, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[124, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[125, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[126, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[127, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[128, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[129, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[130, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[131, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[132, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[132, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[133, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[134, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[135, "module-iqm.benchmarks.utils"]], "bootstrap_counts() (in module iqm.benchmarks.utils)": [[136, "iqm.benchmarks.utils.bootstrap_counts"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[137, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[138, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[139, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[140, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[141, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[142, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[143, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[144, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[145, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[146, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[147, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[148, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[149, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})