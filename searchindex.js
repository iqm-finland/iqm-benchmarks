Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "api/iqm.benchmarks.compressive_gst.gst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/example_quantum_volume_deneb", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/example_quantum_volume_deneb.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "iqm.benchmarks.compressive_gst.gst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "QV on Deneb", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 20, 69, 114, 120, 128, 130, 139, 153, 163, 166, 167], "python": 1, "librari": [1, 94, 99, 128, 150, 158], "suit": [1, 167], "qcvv": [1, 28, 151, 165, 167], "subpackag": [1, 19, 38, 54, 67, 86, 87, 92, 97], "modul": [1, 5, 15, 19, 38, 53, 54, 67, 86, 87, 92, 97, 165], "gener": [2, 3, 18, 20, 21, 22, 30, 33, 38, 40, 41, 46, 47, 48, 49, 50, 56, 64, 69, 72, 75, 84, 90, 94, 95, 99, 102, 103, 104, 107, 108, 117, 118, 119, 134, 148, 153, 154, 156, 157, 158, 159, 166], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 24, 39, 40, 41, 55, 56, 57, 68, 69, 70, 74, 75, 76, 88, 89, 90, 93, 94, 95, 98, 99, 100, 117, 130, 131, 148, 150, 151, 166, 167], "inherit": [2, 3, 5, 15, 20, 39, 55, 68, 74, 88, 93, 98, 130], "benchmarkbas": [2, 4, 167], "abc": [2, 3, 5, 6, 20, 39, 55, 68, 74, 88, 93, 98], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 24, 39, 41, 55, 57, 68, 70, 74, 76, 88, 89, 93, 94, 98, 99, 167], "pydant": [2, 4, 20, 22, 39, 41, 55, 57, 68, 70, 74, 76, 88, 89, 93, 94, 98, 99], "main": [2, 7, 8, 20, 21, 39, 55, 68, 74, 88, 93, 98, 153], "basemodel": [2, 4, 20, 39, 55, 68, 74, 88, 93, 98], "backend": [3, 6, 20, 21, 23, 25, 29, 40, 41, 42, 49, 56, 64, 69, 70, 75, 76, 84, 90, 95, 100, 102, 103, 104, 117, 118, 125, 126, 128, 129, 131, 132, 133, 136, 137, 139, 140, 143, 144, 145, 148, 151, 157, 167], "iqmbackendbas": [3, 6, 21, 40, 56, 69, 75, 90, 95, 100, 102, 103, 104, 117, 118, 119, 125, 126, 128, 129, 132, 136, 137, 139, 143, 145], "configur": [3, 4, 6, 21, 22, 24, 25, 27, 29, 32, 33, 35, 37, 40, 41, 56, 57, 69, 70, 75, 76, 83, 89, 90, 94, 95, 99, 100, 148, 166, 167], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 44, 50, 56, 57, 59, 69, 70, 75, 76, 89, 90, 94, 95, 99, 100, 112, 131, 148, 149, 153, 166], "The": [3, 6, 7, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 56, 57, 60, 66, 69, 70, 72, 75, 76, 78, 79, 81, 82, 89, 90, 94, 95, 99, 100, 101, 102, 103, 113, 123, 127, 133, 136, 137, 139, 140, 141, 142, 146, 153, 154, 157, 158, 161, 162, 163, 164, 166, 167], "implement": [3, 5, 6, 40, 41, 45, 157], "all": [3, 4, 6, 7, 16, 17, 18, 22, 27, 30, 31, 33, 40, 41, 50, 52, 56, 63, 69, 73, 75, 77, 78, 79, 82, 83, 89, 90, 94, 95, 100, 117, 123, 125, 126, 131, 141, 142, 148, 151, 153, 154, 156, 157, 159, 162, 163, 164, 166, 167], "from": [3, 4, 6, 7, 11, 21, 22, 27, 29, 32, 33, 35, 36, 37, 40, 41, 42, 49, 50, 51, 57, 60, 66, 70, 72, 73, 75, 76, 77, 82, 84, 89, 94, 99, 101, 110, 123, 124, 127, 131, 133, 137, 141, 142, 143, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167], "which": [3, 6, 7, 8, 19, 22, 24, 29, 30, 31, 37, 40, 41, 42, 49, 51, 56, 65, 67, 69, 70, 71, 75, 85, 89, 90, 91, 94, 95, 96, 99, 100, 106, 117, 123, 127, 131, 140, 153, 157, 158, 166, 167], "thei": [3, 17, 32, 158], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 19, 21, 22, 40, 41, 44, 56, 57, 69, 70, 75, 76, 89, 90, 94, 95, 99, 100, 131, 139, 148, 153, 155, 156, 157, 158, 162, 163], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 155, 156, 157, 158], "abstract": [3, 6, 158], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 23, 24, 41, 52, 57, 64, 70, 72, 76, 84, 89, 94, 99, 110, 116, 117, 133, 137, 140, 148, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 163, 166], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 95, 96, 100, 101, 102, 103, 104, 105, 106, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 20, 21, 37, 40, 50, 54, 56, 64, 67, 69, 70, 75, 76, 77, 84, 89, 90, 94, 95, 99, 100, 101, 114, 120, 125, 126, 127, 139, 145, 146, 147, 148, 151, 153, 154, 155, 156, 159, 160, 162, 163, 166, 167], "full": [3, 19, 20, 22, 70, 76, 158, 167], "given": [3, 6, 7, 11, 22, 30, 40, 41, 49, 50, 51, 52, 54, 56, 62, 67, 69, 75, 82, 83, 92, 101, 118, 119, 144, 153, 157, 158, 167], "static": [3, 6, 21, 40, 56, 69, 75, 90, 95, 100], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 22, 23, 24, 27, 28, 30, 36, 40, 41, 42, 44, 45, 57, 59, 60, 61, 64, 66, 69, 70, 72, 73, 75, 76, 77, 80, 81, 82, 84, 89, 90, 94, 95, 99, 100, 101, 102, 103, 104, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 145, 147, 150, 151, 153, 156, 157, 158, 160, 162, 163], "check": [3, 25, 63, 83, 150, 153], "whether": [3, 4, 22, 41, 57, 63, 64, 66, 69, 70, 75, 76, 83, 84, 89, 94, 118, 123, 139, 157, 159, 166], "requir": [3, 4, 22, 41, 57, 70, 76, 89, 94, 99, 150, 157, 158, 166, 167], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 23, 25, 27, 31, 32, 37, 40, 41, 50, 51, 75, 76, 104, 123, 129, 138, 140, 148, 150, 153, 157, 158, 164, 166, 167], "met": 3, "valid": [3, 24, 128, 129, 165, 167], "dictionari": [3, 4, 7, 11, 22, 29, 35, 41, 57, 60, 69, 70, 73, 75, 76, 77, 80, 81, 82, 89, 94, 99, 100, 102, 103, 113, 117, 118, 119, 121, 125, 126, 132, 133, 136, 138, 144, 147, 154, 156, 158, 159], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 153, 158, 166], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 21, 22, 28, 30, 41, 49, 51, 57, 64, 69, 70, 75, 76, 89, 94, 99, 102, 103, 104, 108, 113, 116, 117, 118, 119, 123, 125, 126, 128, 131, 139, 140, 141, 145, 153, 154, 155, 156, 159, 160, 161, 162, 163, 167], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 56, 57, 69, 70, 75, 76, 89, 90, 94, 95, 99, 100, 146, 158, 162, 163, 166], "shot": [4, 22, 41, 57, 70, 75, 76, 89, 94, 99, 125, 126, 131, 132, 145, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167], "int": [4, 9, 11, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 61, 62, 64, 66, 69, 70, 72, 75, 76, 77, 80, 83, 84, 89, 94, 99, 100, 101, 102, 103, 104, 105, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 131, 132, 135, 138, 139, 141, 143, 144, 145, 147, 157, 158], "256": [4, 57, 70, 76, 89, 94, 99, 154, 156, 160], "max_gates_per_batch": [4, 22, 41, 57, 70, 76, 89, 94, 99, 125, 126, 145, 153, 154, 155, 156, 160, 162, 163, 167], "calset_id": [4, 22, 41, 57, 70, 76, 89, 94, 99, 125, 126, 145, 153, 154, 155, 156, 159, 160, 161, 162, 163, 167], "routing_method": [4, 22, 41, 57, 70, 76, 89, 94, 99, 103, 104, 139, 153, 154, 155, 156, 160, 162, 163, 167], "liter": [4, 22, 41, 57, 70, 76, 89, 94, 99, 143], "basic": [4, 22, 41, 57, 70, 76, 89, 94, 99, 103, 104], "lookahead": [4, 22, 41, 57, 70, 76, 89, 94, 99], "stochast": [4, 22, 41, 57, 70, 76, 89, 94, 99], "sabr": [4, 22, 41, 57, 70, 76, 89, 94, 99, 139, 153, 154, 155, 156, 157, 158, 162, 163, 167], "physical_layout": [4, 22, 41, 57, 70, 76, 89, 94, 99, 143, 153, 154, 155, 156, 160, 162, 163, 167], "fix": [4, 22, 29, 41, 57, 70, 76, 89, 94, 99, 100, 103, 118, 125, 127, 143, 148, 153, 154, 155, 156, 158, 162, 163, 167], "batch": [4, 17, 22, 41, 57, 70, 76, 89, 94, 99, 125, 126, 143, 144, 145, 154, 155, 156, 157, 158, 159, 160, 162, 163], "number": [4, 22, 23, 24, 27, 28, 31, 40, 41, 45, 46, 47, 48, 49, 50, 52, 54, 56, 59, 61, 62, 64, 66, 67, 70, 75, 76, 83, 84, 86, 89, 94, 99, 100, 101, 102, 103, 104, 105, 114, 117, 118, 119, 120, 125, 126, 131, 132, 135, 136, 145, 153, 155, 156, 157, 158], "us": [4, 6, 9, 16, 19, 20, 21, 22, 27, 28, 29, 32, 33, 40, 41, 42, 44, 45, 49, 50, 51, 52, 53, 64, 66, 69, 70, 76, 99, 101, 116, 123, 131, 133, 145, 148, 150, 151, 153, 157, 158, 159, 164, 166], "circuit": [4, 7, 10, 15, 16, 17, 20, 21, 22, 23, 24, 27, 37, 40, 41, 44, 45, 46, 47, 48, 49, 50, 56, 60, 67, 69, 70, 75, 76, 77, 80, 83, 84, 89, 90, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 113, 114, 117, 118, 119, 120, 125, 126, 128, 131, 132, 135, 136, 139, 140, 144, 145, 147, 148, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165], "default": [4, 6, 12, 22, 27, 30, 41, 57, 70, 75, 76, 84, 89, 94, 99, 119, 123, 131, 143, 153, 154, 156, 158, 159, 161, 163], "i": [4, 6, 7, 19, 21, 22, 23, 24, 27, 28, 29, 30, 33, 41, 42, 46, 49, 50, 52, 56, 57, 63, 65, 66, 69, 70, 71, 75, 76, 83, 84, 85, 89, 90, 91, 94, 95, 96, 99, 100, 101, 105, 106, 109, 124, 128, 131, 139, 143, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167], "2": [4, 22, 23, 24, 28, 51, 57, 63, 76, 83, 99, 118, 124, 135, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167], "8": [4, 22, 124, 150, 153, 154, 155, 156, 157, 159, 160, 162, 163, 166, 167], "maximum": [4, 31, 66, 125, 126, 145, 153, 158], "gate": [4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 35, 37, 40, 41, 46, 50, 51, 57, 67, 69, 70, 76, 86, 87, 90, 92, 94, 95, 99, 102, 104, 113, 116, 117, 118, 119, 121, 123, 125, 126, 128, 135, 136, 139, 145, 148, 153, 157, 160, 164, 165, 167], "per": [4, 22, 67, 70, 76, 89, 99, 101, 103, 104, 105, 125, 126, 131, 132, 145, 158, 164, 165], "option": [4, 20, 41, 51, 57, 64, 75, 76, 94, 103, 104, 113, 116, 118, 119, 123, 125, 126, 128, 139, 140, 141, 145, 148, 151, 155, 156, 158, 163, 165], "calibr": [4, 6, 41, 42, 51, 75, 76, 125, 126, 131, 132, 145, 156, 157, 159, 161, 163], "id": [4, 145, 155, 156, 159, 161], "last": [4, 22], "avail": [4, 33, 166, 167], "qiskit": [4, 6, 22, 29, 57, 70, 76, 94, 99, 128, 139, 148, 150, 151, 153, 158], "rout": [4, 70, 76, 99, 139, 155, 156, 157, 158, 162, 163], "transpil": [4, 16, 21, 40, 41, 44, 45, 57, 69, 70, 76, 99, 117, 118, 128, 132, 136, 139, 144, 148, 151, 153, 155, 156, 157, 158, 162, 163], "physic": [4, 22, 24, 30, 41, 57, 69, 70, 75, 76, 80, 94, 99, 103, 143, 155, 156, 158, 162, 163, 165], "layout": [4, 8, 11, 16, 17, 22, 24, 41, 52, 57, 69, 70, 75, 76, 99, 100, 125, 126, 133, 139, 143, 148, 153, 155, 156, 157, 158, 160, 162, 163], "constrain": [4, 143, 167], "dure": [4, 13, 23, 75, 90, 95], "select": [4, 22, 41, 57, 76, 82, 158], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 24, 27, 29, 32, 33, 35, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 66, 67, 69, 70, 75, 76, 80, 84, 86, 89, 90, 94, 99, 100, 101, 102, 103, 104, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 129, 131, 133, 135, 139, 140, 143, 144, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165], "initi": [4, 6, 19, 20, 22, 27, 37, 41, 53, 133, 153, 158], "allow": [4, 148, 153, 157, 167], "ani": [4, 8, 22, 23, 27, 44, 45, 73, 75, 94, 100, 105, 123, 125, 126, 132, 140, 142, 150, 166, 167], "other": [4, 21, 27, 41, 148, 153, 166, 167], "accord": [4, 27, 40, 47, 48, 56, 102, 143, 144, 150, 155, 156, 158, 162, 163], "final": [4, 6, 32, 51, 70, 75, 76, 80, 99, 139, 143, 144, 153], "measur": [4, 19, 20, 22, 27, 29, 33, 35, 40, 41, 44, 56, 59, 69, 70, 75, 76, 80, 89, 94, 99, 127, 132, 136, 143, 144, 151, 153, 155, 157, 158], "model_computed_field": [4, 22, 41, 57, 70, 76, 89, 94, 99], "classvar": [4, 22, 41, 57, 70, 76, 89, 94, 99], "dict": [4, 7, 11, 22, 23, 24, 41, 44, 45, 57, 59, 60, 66, 69, 70, 72, 73, 75, 76, 77, 80, 81, 82, 89, 94, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 119, 120, 121, 123, 125, 126, 127, 132, 133, 136, 138, 141, 142, 144, 145, 147, 151], "computedfieldinfo": [4, 22, 41, 57, 70, 76, 89, 94, 99], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 56, 57, 65, 69, 70, 71, 73, 75, 76, 81, 82, 85, 89, 90, 91, 94, 99, 100, 102, 103, 106, 113, 116, 118, 119, 125, 126, 138, 139, 140, 143, 147, 153, 157, 158, 166, 167], "comput": [4, 22, 27, 33, 40, 41, 43, 49, 57, 59, 60, 70, 75, 76, 77, 78, 79, 81, 89, 94, 99, 113, 114, 120, 138, 150, 153, 157, 158, 165, 166, 167], "field": [4, 6, 22, 41, 57, 70, 76, 89, 94, 99, 166], "correspond": [4, 22, 23, 30, 41, 56, 57, 65, 67, 69, 70, 71, 75, 76, 80, 84, 85, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 106, 123, 127, 132, 144, 153, 154, 155, 156, 157, 159, 160, 162, 163], "object": [4, 7, 8, 9, 10, 16, 17, 18, 22, 24, 27, 28, 35, 40, 41, 43, 52, 57, 70, 75, 76, 89, 94, 99, 100, 108, 125, 126, 137, 141, 142, 145, 158, 162, 163, 166], "model_config": [4, 22, 41, 57, 70, 76, 89, 94, 99], "configdict": [4, 22, 41, 57, 70, 76, 89, 94, 99], "model": [4, 22, 27, 41, 57, 70, 76, 89, 94, 99, 116, 122, 123, 153], "should": [4, 6, 8, 10, 22, 40, 41, 49, 53, 57, 70, 76, 89, 94, 99, 118, 148, 155, 156, 157, 158, 166], "conform": [4, 22, 28, 41, 57, 70, 76, 89, 94, 99], "config": [4, 22, 41, 57, 70, 76, 89, 94, 99], "model_field": [4, 22, 41, 57, 70, 76, 89, 94, 99], "fieldinfo": [4, 22, 41, 57, 70, 76, 89, 94, 99], "annot": [4, 22, 41, 57, 70, 76, 89, 94, 99, 133, 166], "true": [4, 22, 27, 41, 44, 57, 70, 75, 76, 89, 94, 99, 123, 139, 150, 153, 155, 156, 157, 158, 159, 161, 162, 163, 167], "union": [4, 22, 41, 57, 70, 76, 89, 94, 99, 133, 158, 166], "nonetyp": [4, 22, 41, 57, 70, 76, 89, 94, 99], "fals": [4, 22, 27, 41, 57, 70, 76, 84, 89, 94, 99, 123, 131, 139, 153, 154, 156, 162], "metadata": [4, 21, 22, 40, 41, 52, 56, 57, 69, 70, 73, 75, 76, 89, 90, 94, 95, 99, 100, 142], "about": [4, 22, 41, 57, 70, 76, 89, 94, 99, 148, 157], "defin": [4, 5, 6, 7, 22, 24, 25, 41, 49, 50, 57, 70, 76, 89, 94, 99, 117, 140, 151, 153, 157, 166, 167], "map": [4, 7, 21, 22, 41, 49, 51, 57, 59, 60, 70, 76, 89, 94, 99, 139, 143, 144, 148, 157], "thi": [4, 5, 6, 15, 16, 22, 23, 28, 33, 40, 41, 49, 52, 57, 63, 70, 76, 83, 89, 94, 99, 124, 133, 149, 150, 151, 152, 153, 157, 158, 164, 166, 167], "replac": [4, 22, 41, 57, 70, 76, 89, 94, 99, 166], "__fields__": [4, 22, 41, 57, 70, 76, 89, 94, 99], "v1": [4, 22, 41, 57, 70, 76, 89, 94, 99], "function": [5, 6, 20, 21, 22, 26, 34, 37, 39, 55, 56, 60, 65, 68, 69, 71, 74, 75, 85, 88, 90, 91, 93, 95, 96, 98, 100, 106, 107, 109, 110, 112, 113, 115, 116, 122, 124, 130, 134, 146, 148, 158], "benchmarkobservationidentifi": [5, 8, 35, 148, 154, 156, 159, 161, 162, 163], "benchmarkobserv": [5, 7, 35, 52, 148, 154, 156, 159, 161, 162, 163], "benchmarkrunresult": [5, 6, 7, 12, 21, 34, 40, 43, 56, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 148], "benchmarkanalysisresult": [5, 6, 12, 21, 34, 40, 43, 56, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 148], "kwarg": 6, "run": [6, 7, 8, 10, 20, 21, 22, 24, 27, 34, 35, 40, 41, 43, 56, 60, 65, 69, 70, 71, 75, 85, 90, 91, 95, 96, 100, 106, 151, 153, 156, 158, 164, 167], "cortex": [6, 11], "experi": [6, 27, 29, 32, 33, 35, 37, 52, 56, 64, 65, 69, 71, 72, 75, 76, 78, 79, 85, 90, 91, 95, 96, 100, 106, 115, 122, 123, 127, 129, 156, 164], "In": [6, 153, 158, 166, 167], "order": [6, 22, 27, 42, 51, 52, 116, 124, 157, 167], "write": [6, 131, 150, 151, 166], "new": [6, 7, 11, 140, 148, 151, 153, 158, 163, 167], "recommend": [6, 158, 166, 167], "deriv": [6, 166], "baseclass": 6, "addition": [6, 157], "custom": [6, 57, 76, 153, 156, 161, 162, 163, 167], "analysi": [6, 7, 12, 21, 22, 26, 34, 56, 65, 69, 71, 72, 75, 85, 90, 91, 95, 96, 100, 106, 148, 153], "can": [6, 10, 16, 22, 30, 32, 41, 42, 54, 56, 67, 75, 133, 148, 153, 157, 158, 162, 163, 167], "give": [6, 21, 60, 148, 153, 157, 158, 166], "pointer": 6, "analysis_funct": [6, 21, 40, 56, 69, 75, 90, 95, 100, 151], "accept": [6, 22, 64, 148, 166], "analysisresult": [6, 7, 40, 43, 56, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 148, 151], "its": [6, 110, 140, 148, 153, 166], "input": [6, 11, 24, 70, 76, 105, 124, 128, 129, 133, 143, 155, 156, 158], "result": [6, 7, 8, 10, 11, 12, 20, 21, 22, 27, 28, 31, 32, 33, 34, 35, 36, 52, 54, 56, 59, 65, 66, 67, 69, 71, 75, 76, 83, 84, 85, 90, 91, 95, 96, 100, 106, 114, 120, 122, 143, 148, 151, 153, 156, 162, 163, 166, 167], "onli": [6, 12, 23, 70, 76, 140, 153, 157, 158, 160, 166], "pass": [6, 12, 105, 133, 139, 151, 156, 161], "through": [6, 12, 45, 166], "iqmbackend": [6, 75, 100, 125, 126, 163], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 27, 29, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 52, 56, 69, 72, 75, 90, 95, 100, 107, 109, 123, 147, 148, 151, 153, 154, 156, 157, 158, 159, 162, 163], "overridden": 6, "an": [6, 16, 17, 19, 20, 21, 22, 31, 34, 35, 37, 40, 41, 43, 44, 56, 69, 95, 96, 124, 128, 132, 133, 148, 150, 151, 153, 157, 158, 166, 167], "xarrai": [6, 7, 11, 13, 21, 27, 29, 33, 35, 37, 40, 44, 56, 69, 75, 90, 95, 100, 147, 148, 151], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 24, 27, 28, 29, 31, 32, 33, 35, 37, 40, 42, 43, 44, 45, 52, 100, 102, 125, 126, 140, 148, 153, 158, 162, 163, 164, 166, 167], "inform": [6, 10, 51, 53, 166], "necessari": [6, 153, 157, 167], "analys": 6, "calibration_set_id": [6, 163], "uuid": 6, "calibrationsetid": 6, "latest": [6, 145, 157, 165], "set": [6, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 37, 40, 70, 76, 102, 103, 105, 111, 123, 136, 143, 145, 150, 153, 157, 159, 164, 165, 167], "runresult": [6, 7, 10, 40, 43, 56, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 148, 151], "analyz": [6, 10, 40, 43, 135, 151, 153, 154, 155, 156, 157, 158, 161, 162, 163, 167], "run_index": [6, 156, 162, 163], "1": [6, 22, 33, 57, 61, 82, 99, 103, 104, 115, 118, 124, 139, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167], "intern": [6, 17], "perform": [6, 21, 33, 57, 70, 76, 116, 127, 139, 153, 158, 164, 166, 167], "make": [6, 75, 145, 149, 153, 165, 166, 167], "shallow": 6, "copi": [6, 150, 166], "produc": [6, 20, 24, 31, 33, 51, 76, 167], "therefor": [6, 63, 83], "chang": [6, 22, 148, 163, 165, 166], "data": [6, 7, 11, 20, 21, 22, 26, 27, 33, 40, 41, 42, 44, 51, 72, 84, 108, 111, 116, 122, 131, 151, 155, 156, 157, 158, 162, 163], "just": [6, 153], "structur": [6, 153], "arrai": [6, 20, 27, 29, 31, 33, 37, 69, 89, 94, 99, 123, 124, 129, 133, 158], "index": [6, 40, 42, 49, 50, 51, 69, 75, 103, 162, 163, 165], "construct": [6, 19, 41, 46], "updat": [6, 21, 34, 69, 70, 148, 153, 155, 156, 167], "core": 7, "circuit_contain": 7, "plot": [7, 20, 21, 22, 34, 40, 43, 52, 84, 123, 148, 151, 153, 154, 156, 157, 159, 167], "matplotlib": [7, 28, 151, 158], "figur": [7, 14, 28, 31, 32, 33, 52, 64, 72, 84, 123, 151, 156, 158], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 34, 35, 40, 43, 52, 72, 123, 148, 153, 154, 156, 157, 159, 161, 162, 163], "list": [7, 9, 11, 13, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 44, 45, 49, 50, 51, 52, 56, 58, 59, 60, 62, 64, 66, 69, 70, 75, 77, 78, 79, 80, 81, 83, 84, 99, 100, 101, 102, 103, 104, 105, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 157, 158, 162, 163, 166, 167], "dataclass": [7, 8, 10], "store": [7, 8, 10, 21, 34, 52, 148, 167], "consist": [7, 19, 157, 166], "kei": [7, 59, 66, 69, 75, 80, 99, 102, 136, 138, 144, 150, 158, 162, 163], "valu": [7, 8, 22, 36, 40, 41, 45, 49, 59, 60, 66, 69, 70, 99, 102, 115, 136, 138, 139, 144, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "pair": [7, 36, 42, 51, 69, 129, 153], "plot_nam": 7, "plot_al": [7, 151, 153, 155, 156, 157, 158, 161, 162, 163], "from_run_result": 7, "creat": [7, 21, 23, 27, 32, 40, 41, 49, 56, 60, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 149, 151, 163, 167], "identifi": [8, 9, 11, 27, 35, 75, 100, 116, 123, 125, 126, 128, 141, 147, 153, 154, 156, 157, 158, 159, 161, 162, 163, 166], "uncertainti": [8, 22, 36, 45, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "singl": [8, 10, 13, 16, 18, 22, 36, 41, 52, 57, 58, 69, 70, 75, 76, 102, 109, 148, 153, 158, 167], "string": [8, 9, 11, 17, 18, 27, 30, 36, 141, 167], "qubit_indic": [9, 16, 154, 156, 159, 161, 162, 163], "eas": 9, "indic": [9, 75, 80, 138, 144, 166], "wa": [9, 25, 32, 63, 83, 127, 153, 166], "properti": [9, 16, 17], "string_identifi": [9, 153, 156, 157, 158], "version": [9, 107, 150, 153, 166, 167], "enough": [10, 157], "those": [10, 75, 80, 143, 153, 158, 166], "count": [11, 22, 27, 29, 32, 33, 35, 37, 40, 41, 43, 59, 60, 66, 75, 77, 101, 114, 120, 127, 132, 133, 136, 141, 142, 147, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163], "add": [11, 17, 21, 40, 50, 56, 69, 75, 90, 95, 100, 102, 146, 148, 150, 166, 167], "job": [11, 69, 73, 75, 100, 125, 126, 141, 151, 154, 155, 156, 159, 160, 162, 163], "If": [11, 22, 27, 33, 41, 99, 153, 158, 160, 166], "same": [11, 17, 42, 51, 99, 153, 155, 156, 157, 166], "alreadi": [11, 154, 161], "present": 11, "old": 11, "both": [11, 21, 76, 153, 159, 167], "ad": [11, 148, 154, 156, 157, 159, 160, 162, 163], "togeth": [11, 167], "bitstr": [11, 59, 60, 61, 66, 82, 127, 138], "current": [11, 27, 29, 30, 32, 33, 35, 37, 41, 69, 131, 157, 158, 167], "instanc": [11, 16, 17, 21, 34, 44, 45, 64, 148, 158], "xr": [11, 13, 32, 40, 44, 45, 52, 56, 69, 72, 75, 90, 95, 100, 123, 147, 151], "merg": [11, 13], "where": [11, 16, 17, 22, 24, 25, 27, 37, 41, 104, 148, 153, 157, 158, 166], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 41, 49, 50, 122, 157], "size": [13, 22, 28, 41, 49, 54, 56, 64, 66, 151, 153, 156, 161], "dateset": 13, "fig": [14, 52, 151], "show": [14, 151, 153, 156, 157], "close": [14, 22, 151], "easili": [15, 148, 167], "interact": [15, 148], "quantum": [15, 21, 22, 23, 24, 40, 41, 44, 46, 47, 48, 49, 56, 67, 69, 70, 74, 75, 76, 77, 80, 83, 85, 102, 103, 114, 118, 119, 120, 131, 132, 135, 136, 139, 140, 145, 148, 157, 158, 164, 165, 167], "circuitgroup": [15, 16, 40, 148], "benchmarkcircuit": [15, 18, 148], "circuit_group": 16, "group": [16, 17, 90, 149, 153, 165], "purpos": [16, 17, 166], "typic": [16, 17, 153], "repres": [16, 17, 23, 28, 72, 84, 138, 166], "exampl": [16, 107, 148, 149, 151, 152, 157, 158, 165, 166, 167], "insid": [16, 148], "get_circuit_group_by_nam": 16, "get": [16, 20, 22, 110, 137, 156, 160], "desir": [16, 17, 21], "doe": [16, 41, 166], "exist": [16, 18, 148, 153, 167], "group_nam": 16, "integ": [16, 17, 22, 24, 41, 75, 80, 103], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 23, 24, 27, 31, 32, 33, 36, 37, 41, 42, 45, 49, 59, 60, 64, 66, 69, 70, 72, 75, 80, 84, 100, 116, 117, 118, 119, 121, 123, 125, 132, 139, 144, 145], "qubit_layout": [16, 17, 22, 23, 24, 25, 27, 29, 31, 32, 33, 35, 40, 42, 44, 45, 49, 50, 51, 52, 153, 156, 157, 158], "qiskit_iqm": [17, 41, 148, 151, 153, 156, 157, 163], "iqm_circuit": 17, "iqmcircuit": [17, 23, 24, 40, 46, 47, 48, 49, 69, 75, 80, 100, 102, 103, 104, 113, 117, 118, 119, 121, 125, 126, 128, 132, 135, 136, 139, 140, 144, 145, 148], "It": [17, 150, 153, 157, 167], "common": [17, 112, 166], "activ": [17, 140, 167], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 166, 167], "found": [17, 42, 153, 167], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 166], "compress": [19, 20, 21, 22, 26, 34, 148, 164, 165, 167], "gst": [19, 21, 22, 27, 28, 29, 32, 33, 34, 35, 148, 164, 165], "self": [19, 21, 119, 151], "character": [19, 21, 153, 165], "process": [19, 20, 27, 76, 153, 154, 156, 159, 160, 162, 163], "matric": [19, 31, 158], "well": [19, 21, 33, 34], "parametr": [19, 27, 60, 67, 69, 70, 153, 155, 156, 158], "state": [19, 22, 27, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 114, 120, 148, 151, 158, 164, 165, 166, 167], "povm": [19, 27, 31, 37, 158], "low": [19, 158], "rank": [19, 22, 31, 33, 148, 158], "matrix": [19, 20, 31, 105, 150, 153], "reduc": [19, 22, 41, 140], "post": [19, 76, 154, 156, 159, 160, 162, 163], "overhead": 19, "tomographi": [20, 26, 164, 165, 167], "follow": [20, 153, 157, 158, 166, 167], "step": 20, "said": 20, "convers": [20, 166], "ideal": [20, 77, 101, 153], "numpi": [20, 29, 31, 33, 150, 153, 156, 158, 159], "mgst": [20, 22, 29, 36, 37, 148, 158, 166, 167], "first": [20, 22, 27, 37, 50, 56, 69, 99, 157, 158, 160, 162, 163, 164], "estim": [20, 22, 27, 31, 33, 37, 40, 41, 44, 45, 54, 56, 70, 75, 90, 95, 100, 101, 127, 148, 153, 155, 156, 157, 159], "gaug": [20, 31, 33, 158], "optim": [20, 22, 31, 33, 41, 69, 70, 76, 99, 139, 153, 155, 156, 157, 158, 161, 162, 163, 167], "target": [20, 22, 27, 33, 37, 139, 158], "pygsti": [20, 27], "rerun": [20, 157], "bootstrap": [20, 22, 27, 32, 33, 158], "error": [20, 22, 25, 27, 31, 32, 33, 35, 36, 41, 44, 75, 76, 81, 123, 133, 148, 153, 156, 157, 158], "bar": [20, 27, 32, 33, 123, 151, 158], "tabl": [20, 22, 28, 31, 32, 33, 153, 158], "reconstruct": [20, 22, 27, 37, 158], "compressivegst": [20, 22, 158], "benchmark_definit": [20, 22, 39, 41, 55, 57, 68, 70, 74, 76, 88, 89, 93, 94, 98, 99, 151], "gstconfigur": [20, 21, 24, 158], "spam": [21, 27, 32, 35, 153], "robust": [21, 153], "generate_meas_circuit": 21, "random": [21, 22, 40, 41, 57, 69, 86, 88, 93, 94, 98, 99, 102, 104, 112, 118, 119, 148, 150, 155, 157, 158, 161, 164, 165, 167], "distribut": [21, 81, 82, 138, 150, 153, 166], "among": [21, 153, 167], "differ": [21, 24, 27, 40, 72, 99, 153, 157, 158, 162, 163, 164, 166, 167], "depth": [21, 22, 41, 46, 47, 48, 49, 75, 84, 99, 100, 103, 104, 115, 118, 122, 125, 127, 153, 154, 155, 156, 157, 159, 160], "rang": [21, 147, 148, 150, 151, 153, 154, 156, 158, 159, 160, 167], "l_min": 21, "l_max": 21, "seq_len_list": [21, 22], "No": 21, "than": [21, 41, 153, 157, 160], "need": [21, 22, 28, 40, 69, 133, 153, 158, 167], "axactli": 21, "describ": [21, 166], "meaning": [21, 54, 56, 67, 75, 76], "float": [21, 22, 28, 36, 42, 51, 56, 58, 59, 61, 62, 63, 64, 66, 69, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 94, 99, 101, 102, 103, 104, 114, 115, 116, 120, 123, 127, 128, 131, 133, 136, 138], "time": [21, 22, 27, 69, 72, 73, 75, 100, 125, 126, 146, 153, 155, 156, 158], "took": 21, "circuit_gen_transp_tim": 21, "add_configuration_to_dataset": [21, 40], "sourc": [21, 158, 165, 166], "further": [21, 40, 148], "storag": [21, 40, 148], "routin": [21, 28, 40, 41, 57, 76, 116], "1024": [22, 41], "gate_set": [22, 23, 24, 158], "num_circuit": [22, 27, 37, 70, 76, 153, 155, 156, 158, 162, 163, 167], "gate_label": [22, 158], "14": [22, 150, 154, 155, 156, 159, 160, 165, 167], "from_init": 22, "bool": [22, 27, 41, 57, 63, 64, 66, 69, 70, 75, 76, 83, 84, 89, 94, 123, 131, 139], "max_init": 22, "20": [22, 148, 150, 151, 154, 155, 156, 159], "opt_method": 22, "auto": 22, "max_iter": 22, "convergence_criteria": 22, "4": [22, 69, 124, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167], "0": [22, 40, 42, 49, 50, 51, 56, 63, 76, 99, 102, 103, 104, 124, 139, 143, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167], "0001": [22, 151], "batch_siz": 22, "bootstrap_sampl": [22, 158], "test": [22, 153, 167], "ghzbenchmark": [22, 39, 41, 153, 156, 157], "sequenc": [22, 29, 41, 57, 70, 75, 76, 89, 94, 99, 100, 101, 114, 117, 118, 119, 120, 139, 143, 153, 154, 156, 158, 159], "e": [22, 23, 24, 27, 37, 41, 94, 99, 124, 147, 153, 155, 156, 157, 158, 162, 163], "g": [22, 41, 94, 99, 124, 147, 150, 155, 156, 157, 158, 162, 163], "specifi": [22, 23, 24, 27, 37, 41, 70, 75, 76, 94, 100, 102, 103, 125, 126, 129, 136, 138, 143, 145, 153, 160, 167], "label": [22, 23, 24, 28, 30, 41, 70, 84, 94, 103, 113, 119, 123, 139, 143, 148, 150, 151, 153, 157], "meant": [22, 24, 41], "either": [22, 116, 133, 136, 150, 157, 158, 166, 167], "cirucuit": 22, "one": [22, 70, 124, 145, 151, 153, 157, 158, 160, 166, 167], "predefin": [22, 23, 158], "1qxyi": [22, 158], "2qxycz": [22, 158], "2qxycz_extend": [22, 158], "3qxycz": [22, 158], "tomograph": 22, "complet": 22, "mean": [22, 63, 136, 150, 153, 155, 158, 166], "vacuum": 22, "abl": 22, "prepar": [22, 37, 40, 151, 153, 157, 158, 166], "form": [22, 102, 166], "frame": [22, 158], "space": 22, "practic": [22, 167], "suffici": [22, 157], "condit": [22, 63, 83, 157, 166], "combin": [22, 30, 153, 166], "local": [22, 157], "pauli": [22, 30, 33, 99, 101, 103, 104, 105, 150, 158], "eigenst": 22, "quantumcircuit": [22, 23, 24, 40, 49, 56, 69, 75, 80, 100, 102, 113, 117, 118, 119, 125, 126, 132, 135, 139, 140, 144, 145, 148, 150, 151, 158], "how": [22, 40, 149, 152, 158, 164, 165, 166, 167], "mani": [22, 40, 69, 148, 157], "guidelin": 22, "choos": [22, 30, 41, 56, 157, 166], "At": 22, "least": [22, 76, 153, 158, 166], "50": [22, 151, 153, 156, 158, 159, 160, 161, 163, 166], "3": [22, 41, 57, 70, 76, 83, 124, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167], "400": [22, 150, 154, 156], "two": [22, 99, 102, 150, 151, 153, 157, 158], "6": [22, 31, 150, 154, 155, 156, 157, 159, 160, 163, 166, 167], "2000": [22, 158], "three": [22, 153], "9": [22, 150, 151, 153, 154, 155, 156, 157, 159, 160, 166, 167], "expect": [22, 59, 60, 66, 99, 102, 104, 148, 153], "grow": 22, "linearli": [22, 41], "exponenti": [22, 115, 153], "krau": [22, 27, 31, 33, 37, 158], "coher": [22, 40, 41, 44, 153, 156, 157], "dim": 22, "control": [22, 28, 157, 166], "maxim": [22, 153], "middl": 22, "cutoff": 22, "below": [22, 153, 157, 158, 166, 167], "possibl": [22, 41, 157, 162, 163, 166], "algorithm": [22, 37, 41, 50, 102, 153, 157], "point": [22, 123, 157], "tri": 22, "limit": [22, 150, 166], "amount": [22, 146, 147], "retri": 22, "gd": 22, "sfn": 22, "gradient": 22, "descent": 22, "saddl": 22, "free": [22, 166], "newton": 22, "respect": [22, 41, 99, 101, 153], "automat": [22, 32, 167], "iter": [22, 133, 138], "while": [22, 131, 157, 158, 166], "second": [22, 27, 37, 67, 69, 164, 165], "determin": [22, 41, 166], "when": [22, 76, 148, 153, 157, 167], "termin": [22, 166, 167], "multipli": [22, 61], "cost": [22, 153], "threshold": [22, 63, 64, 76, 83, 84, 153], "nois": [22, 153], "consid": [22, 70, 76, 143], "success": [22, 63, 83, 153], "10": [22, 70, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167], "usual": [22, 33, 157], "sensibl": 22, "rel": 22, "between": [22, 50, 104, 131, 153, 157], "consecut": [22, 41], "1e": [22, 158], "hyperparamt": 22, "converg": [22, 158], "behaviour": 22, "smaller": [22, 40, 41, 49, 153], "runtim": 22, "lead": [22, 148, 157, 158], "errat": 22, "jump": 22, "lack": 22, "repeat": [22, 153], "fake": 22, "via": [22, 40, 41, 153, 158], "num_qubit": [23, 24, 45, 46, 47, 48, 56, 75, 101, 114, 120, 155], "assign": [23, 69, 70, 99, 153, 155, 156], "transipil": 23, "so": [23, 32, 148, 153, 158], "stage": [23, 148], "mai": [23, 150, 153, 166], "actual": [23, 153], "gate_labels_dict": [23, 24], "rx": [23, 24, 158], "pi": [23, 24, 150, 156, 159], "rotat": [23, 24, 33, 150, 151], "around": [23, 24, 153], "x": [23, 24, 27, 37, 61, 109, 111, 123, 148, 150, 151, 158, 160, 162, 163], "axi": [23, 24, 27, 37, 123, 148], "num_gat": [23, 24], "handl": [24, 167], "variabl": [24, 56, 69, 75, 90, 95, 100, 116, 151, 158, 167], "correct": [25, 84, 101, 131, 132, 153, 158], "properli": [25, 31, 33, 35, 153], "rais": [25, 102, 105, 129, 131, 139, 143], "code": [26, 153, 158, 165, 166, 167], "y": [27, 29, 37, 150], "ndarrai": [27, 29, 31, 33, 37, 69, 115, 116, 122], "k": [27, 37, 150, 153, 155, 160, 162, 163], "rho": [27, 37, 158], "target_mdl": 27, "resampl": 27, "outcom": [27, 29, 37, 132, 153, 158], "each": [27, 29, 37, 42, 50, 52, 64, 78, 79, 80, 84, 94, 99, 101, 104, 108, 127, 132, 136, 154, 155, 156, 157, 158, 159, 160, 166, 167], "repetit": 27, "newli": 27, "sampl": [27, 40, 60, 66, 76, 82, 94, 99, 101, 102, 103, 104, 105, 117, 118, 119, 158], "non": [27, 32, 35, 115, 153, 166], "corresp": 27, "probabl": [27, 29, 37, 78, 79, 81, 82, 99, 102, 114, 120, 127, 138, 153, 160, 167], "save": [27, 28, 32, 158], "num_povm": [27, 37], "subarrai": [27, 37], "along": [27, 37, 166], "oper": [27, 33, 37, 67, 86, 128, 136, 148, 150, 157, 158, 164, 165], "enumer": [27, 37, 157, 158], "3d": [27, 31, 33, 158], "cpt": [27, 37], "superoper": [27, 37, 158], "standard": [27, 28, 30, 31, 33, 37, 64, 76, 79, 88, 123, 136, 158, 167], "basi": [27, 30, 33, 37, 128, 139, 150, 153, 158, 166], "stack": [27, 37], "els": [27, 150], "x_arrai": 27, "tensor": 27, "e_arrai": 27, "rho_arrai": 27, "df_g_arrai": 27, "qualiti": [27, 32, 35, 40, 153], "df_o_arrai": 27, "df": 28, "datafram": [28, 31, 32, 33, 35], "row_label": 28, "col_width": 28, "fontsiz": 28, "12": [28, 150, 154, 155, 156, 158, 159, 160, 162, 163], "turn": [28, 29, 31, 32, 33, 153, 157], "panda": [28, 31, 32, 33, 35], "file": [28, 166, 167], "row": 28, "cell": [28, 153, 157], "width": 28, "font": 28, "text": [28, 153, 158, 166], "obtain": [29, 150, 153, 166, 167], "format": [29, 31, 32, 33, 35, 36, 153, 166], "2d": [29, 31], "j": [29, 150, 153, 157, 158], "column": 29, "pdim": 30, "dimens": [30, 151, 158], "like": [30, 35, 133, 150, 153, 167], "ii": [30, 150, 151, 166], "ix": 30, "xx": 30, "df_g": [31, 33, 35], "x_opt": [31, 33], "e_opt": 31, "rho_opt": 31, "max_ev": 31, "arbitrari": 31, "them": [31, 33, 50, 151, 167], "after": [31, 33, 118, 167], "conta": 31, "element": [31, 56], "densiti": [31, 99, 102, 104, 123, 153], "optmiz": 31, "eigenvalu": 31, "choi": 31, "df_g_evals_fin": 31, "fig_g": [31, 33], "fidel": [31, 33, 40, 41, 42, 43, 44, 45, 50, 51, 52, 70, 86, 87, 90, 92, 95, 97, 100, 101, 116, 123, 148, 158, 164, 165, 167], "etc": [31, 33], "fig_choi": 31, "df_g_final": [31, 33], "df_o": [32, 35], "also": [32, 33, 133, 148, 158, 162, 163, 166, 167], "metric": [32, 33, 70, 153, 158, 159], "fit": [32, 35, 94, 107, 108, 109, 111, 115, 116, 122, 123, 148, 158, 166], "df_o_fin": 32, "k_target": [33, 37], "includ": [33, 64, 72, 148, 153, 157, 166], "hamiltonian": [33, 148, 158], "diamond": [33, 158], "distanc": [33, 41, 50, 158], "4d": 33, "df_g_rotat": 33, "fig_rot": 33, "convert": [35, 36, 105, 150], "high": [35, 41, 153, 157], "level": [35, 41, 57, 70, 76, 99, 153, 155, 156, 157, 162, 163], "simpl": [35, 151, 153, 167], "observation_list": 35, "result_str": 36, "err": 36, "interv": 36, "floar": 36, "wrapper": [37, 40], "alg": 37, "x_target": 37, "e_target": 37, "rho_target": 37, "ghz": [38, 148, 164, 165, 167], "verifi": [38, 128, 150], "greenberg": [38, 40, 153, 164, 165], "horn": [38, 40, 153, 164, 165], "zeiling": [38, 40, 153, 164, 165], "ghzconfigur": [39, 40, 153, 156, 157], "generate_native_ghz": 40, "qubit_count": [40, 41], "nativ": [40, 51, 118, 119, 121, 128, 136, 148, 153], "topologi": [40, 139, 143, 153], "subset": [40, 42, 44, 45, 49, 50, 51], "system": [40, 41, 42, 44, 45, 49, 50, 51, 131, 153, 158, 166, 167], "protocol": [40, 42, 44, 45, 49, 50, 51, 153, 164], "equal": [40, 49, 75, 148, 153], "generate_coherence_meas_circuit": 40, "take": [40, 41, 139, 146, 148, 153, 158, 167], "output": [40, 53, 77, 78, 79, 80, 81, 82, 83, 131, 148, 150, 153, 158, 162, 163, 167], "mult": 40, "q": [40, 54, 56, 57, 63, 156, 158, 164, 165, 167], "qc_list_transpil": 40, "append_rm": 40, "num_rm": [40, 41, 157], "append": [40, 69, 150, 151, 158], "1q": [40, 121, 148, 153], "clifford": [40, 87, 88, 89, 90, 91, 93, 94, 95, 102, 113, 117, 118, 119, 121, 128, 129, 148, 149, 159, 164, 165, 167], "uniformli": [40, 153], "param": [40, 46, 47, 48, 69, 78, 90, 95, 105, 109, 111, 113, 114, 125, 126, 127, 129, 138, 141, 142], "origin": [40, 75, 80, 139, 140, 166], "generate_readout_circuit": 40, "creation": [40, 157], "all_circuits_list": 40, "state_generation_routin": [41, 153, 156, 157], "tree": [41, 49, 50, 153, 156, 157], "custom_qubits_arrai": [41, 56, 57, 76, 153, 156, 157, 161, 162, 163, 167], "qiskit_optim_level": [41, 57, 70, 76, 99, 103, 104, 139, 153, 155, 156, 160, 162, 163, 167], "optimize_sqg": [41, 57, 69, 70, 76, 139, 153, 155, 156, 162, 163, 167], "fidelity_routin": [41, 153, 156, 157], "100": [41, 70, 76, 153, 155, 156, 158, 161, 167], "rem": [41, 44, 76, 84, 132, 153, 156, 157, 162, 163, 167], "mit_shot": [41, 75, 76, 132, 153, 156, 157, 162, 163, 167], "1000": [41, 76, 132, 151, 153, 156, 157, 158, 162, 163], "cal_url": [41, 42], "log": [41, 47, 48, 49, 50], "coupl": [41, 42, 49, 51, 70, 76, 139, 143, 153, 157], "cz": [41, 42, 50, 51, 118, 136, 139, 150, 153, 155, 157], "account": [41, 139, 158, 167], "span": [41, 49, 50], "largest": [41, 153, 157], "weight": [41, 50, 51, 82], "parallel": [41, 50, 67, 89, 94, 118, 125, 127, 135, 153, 155, 156, 157, 159], "applic": [41, 50, 102, 150, 157, 166], "cx": [41, 46, 50, 69], "scale": [41, 153], "logarithm": [41, 157], "connect": [41, 50, 129, 157], "naiv": [41, 57, 157], "appli": [41, 46, 50, 69, 76, 148, 156, 157, 160, 166], "textbook": [41, 157], "assum": [41, 52, 124, 166], "NOT": 41, "support": [41, 51, 166], "denot": 41, "provid": [41, 62, 149, 151, 152, 153, 156, 166], "here": [41, 101, 151, 153, 158], "ha": [41, 153, 154, 158, 160, 163, 166, 167], "small": [41, 148], "architectur": 41, "iqm_transpil": 41, "optimize_single_qubit_g": 41, "multipl": [41, 44, 107, 148, 153, 157], "moonei": [41, 44, 153, 157], "2021": [41, 44, 153, 157, 167], "randomized_measur": [41, 157], "outlin": 41, "http": [41, 45, 47, 48, 107, 150, 151, 156, 157, 158, 166, 167], "arxiv": [41, 45, 47, 48, 70, 102, 150, 157, 167], "org": [41, 45, 47, 48, 150, 157, 158, 166], "ab": [41, 45, 47, 48, 150, 157], "1812": [41, 45], "02624": [41, 45], "chosen": [41, 153, 157, 158], "boolean": [41, 157], "flag": 41, "readout": [41, 44, 75, 76, 81, 130, 131, 133, 156, 157], "mitig": [41, 44, 75, 76, 81, 130, 131, 132, 133, 156, 157], "total": [41, 111, 150, 153, 157], "url": [41, 42, 153, 167], "retriev": [41, 69, 73, 141, 142, 147, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163], "priorit": 41, "under": [42, 148, 150, 153, 158, 166], "list_fid": 42, "wai": [42, 51, 148, 153], "list_coupl": 42, "ideal_prob": 45, "cross": [45, 153, 166], "correl": [45, 157], "rm": 45, "eq": [45, 150], "34": [45, 151, 154, 155, 156, 162], "hadamard": [46, 150], "seri": 46, "linear": 46, "fashion": 46, "symmetr": 46, "halv": 46, "n": [46, 47, 48, 49, 90, 100, 150, 153, 157], "1807": [47, 157], "05572": [47, 157], "2101": [48, 157], "08946": [48, 157], "graph": [49, 50, 51, 56, 58, 59, 60, 61, 63, 64, 66, 153, 157], "n_state": [49, 153], "networkx": [49, 50, 51, 56, 58, 59, 60, 61], "participating_qubit": 49, "qc": [49, 69, 150, 151, 167], "calcul": [50, 58, 64, 80, 111, 135, 146, 148, 153], "cx_map": 50, "particip": 50, "2qb": 50, "subgraph": 50, "edg": [50, 51, 59, 60, 61, 102, 153], "Then": [50, 167], "find": [50, 153, 157], "most": [50, 158], "central": 50, "posit": 50, "next": 50, "start": [50, 56, 124, 153, 155, 156, 157, 158, 167], "smallest": 50, "layer": [50, 58, 62, 66, 67, 69, 70, 75, 99, 100, 102, 103, 104, 125, 135, 156, 164, 165, 167], "coupling_map": [51, 139, 153, 157], "couplingmap": [51, 143], "edges_c": 51, "fidelities_c": 51, "have": [51, 118, 153, 166, 167], "v": [52, 64, 69, 71, 153, 156, 159], "user": [52, 163, 167], "identif": [52, 166], "logger": [53, 146], "everi": 53, "warn": [53, 150, 153, 163], "score": [54, 56, 57, 63, 156, 164, 165, 167], "combinatori": [54, 56, 153], "problem": [54, 56, 58, 59, 60, 61, 63, 64, 153, 167], "qscorebenchmark": [55, 57, 153, 156, 161], "qscoreconfigur": [55, 56, 153, 156, 161], "backend_arg": [56, 69, 75, 90, 95, 100, 102, 103, 104, 117, 118, 119, 125, 126, 128, 129, 132, 136], "generate_maxcut_ansatz": 56, "theta": 56, "ansatz": [56, 58, 60, 62, 66], "qaoa": [56, 58, 62, 66], "maxcut": [56, 58, 59, 60, 61, 62, 66, 153, 156, 161], "end": [56, 69, 75, 150, 166], "variat": [56, 153], "gamma": [56, 58], "beta": [56, 58, 63, 64, 153, 156, 161], "add_all_meta_to_dataset": [56, 69, 75, 95, 100], "choose_qubits_na": 56, "sequenti": [56, 126, 154, 156], "choose_qubits_custom": 56, "match": 56, "num_inst": [57, 64, 153, 156, 161], "num_qaoa_lay": [57, 153, 156, 161], "min_num_nod": [57, 153, 156, 161], "max_num_nod": [57, 153, 156, 161], "use_virtual_nod": [57, 64, 153, 156, 161], "use_classically_optimized_angl": [57, 64, 153, 156, 161], "choose_qubits_routin": [57, 76, 153, 156, 161, 162, 163, 167], "min_num_qubit": 57, "seed": [57, 153, 156, 161], "upon": [57, 70, 76], "angl": [58, 62, 64, 66], "qubit_to_nod": [59, 60], "virtual_nod": [59, 60, 66], "val": 59, "node": [59, 60, 64, 66, 153], "virtual": [59, 60, 64, 66, 139], "cut": [59, 60, 61, 66, 153], "avg": [59, 156, 158, 161], "callabl": [60, 116, 122], "minu": 61, "sign": 61, "solut": [61, 153], "obj": 61, "num_lay": 62, "approximation_ratio": [63, 153, 156, 161], "approxim": [63, 64, 153, 156, 161], "ratio": [63, 64, 153, 156, 161], "abov": [63, 83, 153, 158, 166], "being": [63, 69, 75, 80, 83, 84, 101, 102, 114, 120, 136, 138, 153], "beta_ratio": 64, "beta_std": 64, "backend_nam": [64, 84, 140, 154, 155, 160, 162, 163], "timestamp": [64, 84, 154, 160], "deviat": [64, 76, 79, 123, 136], "classic": [64, 66, 75], "graph_phys": 66, "qubit_nod": 66, "use_classical_angl": 66, "qaoa_lay": 66, "solv": [66, 153], "averag": [66, 78, 83, 84, 90, 95, 101, 116, 148, 153, 158], "presenc": 66, "volum": [67, 74, 75, 76, 85, 148, 164, 165, 167], "reflect": [67, 69, 75, 86, 87, 92, 97], "deepest": [67, 75], "clop": [67, 148, 164, 165, 167], "speed": [67, 69, 153], "clops_v": [67, 153, 155], "qv": [67, 69, 70, 75, 76, 78, 79, 83, 84, 148, 153, 155, 156, 164, 165], "clops_h": [67, 70, 155], "squar": [67, 153, 158], "clopsbenchmark": [68, 70, 153, 155, 156], "clopsconfigur": [68, 69, 153, 155, 156], "h": [69, 71], "append_parameterized_unitari": 69, "q0": 69, "q1": 69, "decompos": [69, 153], "su": 69, "involv": [69, 153], "belong": 69, "generate_single_circuit": [69, 75], "generate_circuit_list": [69, 75], "generate_random_paramet": 69, "templat": [69, 153, 155, 156], "np": [69, 115, 122, 150, 153, 156, 157, 158, 159], "float64": 69, "assign_random_parameters_to_al": 69, "dict_parametrized_circ": 69, "clops_cycl": 69, "sorted_transpiled_qc_list": [69, 75, 145], "cycl": 69, "elaps": [69, 72, 73, 146, 155, 156], "submiss": [69, 75, 100, 125, 126, 153, 166], "generate_transpiled_clops_templ": 69, "num_upd": [70, 153, 155, 156], "num_shot": [70, 153, 155, 156], "clops_h_bool": [70, 155, 156], "establish": [70, 155, 156], "By": [70, 155, 156], "definit": [70, 153, 155, 156, 166], "2110": [70, 167], "14108": [70, 167], "quant": [70, 102, 167], "ph": [70, 102, 167], "rigor": [70, 158], "loos": 70, "www": [70, 150, 166], "ibm": [70, 131], "com": 70, "blog": 70, "restrict": [70, 76, 143, 156, 162, 163], "clops_data": 72, "job_meta": 73, "quantumvolumebenchmark": [74, 76, 153, 156, 162, 163], "quantumvolumeconfigur": [74, 75, 153, 156, 162, 163, 167], "add_all_circuits_to_dataset": [75, 90, 95], "classical_permut": 75, "permut": 75, "avoid": 75, "swap": [75, 150], "get_rem_quasidistro": 75, "sorted_qc_list_indic": [75, 80], "execution_result": [75, 77], "quasicollect": [75, 81, 132], "quasiprob": [75, 81, 132, 133], "qubii": 75, "untranspil": [75, 80, 117, 139, 148], "submit_single_qv_job": 75, "submit": [75, 100, 125, 126, 145, 154, 155, 156, 157, 158, 159, 160, 162, 163, 166], "vanilla": [75, 84, 100, 125, 126], "dd": [75, 84, 100, 125, 126], "num_sigma": [76, 83, 84, 153, 156, 162, 163, 167], "criteria": 76, "consensu": 76, "unmitig": 76, "1_000": [76, 153, 156, 162, 163, 167], "ideal_heavy_output": [77, 81], "hop": [77, 78, 79, 83, 84, 148], "heavi": [77, 78, 79, 80, 81, 82, 83, 153], "cumul": [78, 79], "individu": [78, 79, 123, 148, 153, 157, 158, 166, 167], "trial": [78, 79], "qc_list": [80, 139], "bitrstr": 80, "all_rem_quasidistro": 81, "noiseless": [81, 156, 162, 163], "project": [82, 167], "onto": 82, "associ": [82, 155, 156, 166], "heavy_output_prob": [83, 162, 163], "over": [83, 131, 138, 153], "within": [83, 166, 167], "sigma": [83, 84], "qv_result": [84, 153, 162, 163], "qv_results_typ": [84, 162, 163], "in_volumetr": 84, "plot_rem": 84, "come": [84, 101, 133], "context": 84, "volumetr": 84, "rb": [87, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 114, 115, 116, 118, 120, 122, 123, 126, 127, 129, 148, 150, 153, 156, 159, 164, 165], "cliffordrandomizedbenchmark": [88, 89, 153, 154, 156], "cliffordrbconfigur": [88, 90, 153, 154, 156], "qubits_arrai": [89, 94, 99, 118, 123, 125, 127, 129, 153, 154, 156, 159, 160, 167], "sequence_length": [89, 94, 117, 118, 153, 154, 156, 159, 167], "num_circuit_sampl": [89, 94, 99, 117, 153, 154, 156, 159, 160, 167], "parallel_execut": [89, 94, 153, 154, 156, 159, 167], "length": [89, 94, 101, 105, 117, 118, 119, 150, 153, 154, 156, 159], "add_all_metadata_to_dataset": 90, "interleav": [92, 93, 94, 95, 96, 99, 104, 115, 116, 117, 118, 119, 123, 148, 154, 164, 165, 167], "interleavedrandomizedbenchmark": [93, 94, 153, 156, 159], "interleavedrbconfigur": [93, 95, 153, 156, 159, 167], "interleaved_g": [94, 117, 118, 119, 123, 153, 156, 159, 167], "interleaved_gate_param": [94, 153, 156, 159, 167], "simultaneous_fit": [94, 153, 156, 159, 167], "amplitud": [94, 115, 153, 156, 159, 167], "offset": [94, 115, 153, 156, 159, 167], "irb": [94, 116, 148, 164, 165], "ygate": 94, "czgate": [94, 99, 150, 153, 156, 158, 159, 160, 167], "enter": [94, 116, 118], "simultan": [94, 116], "specif": [95, 139, 150, 152, 153, 156, 158, 162, 163, 164, 166], "mirror": [97, 98, 99, 100, 104, 148, 164, 165, 167], "mirrorrandomizedbenchmark": [98, 99, 156, 160, 167], "mirrorrbconfigur": [98, 100, 156, 160, 167], "depths_arrai": [99, 156, 160, 167], "num_pauli_sampl": [99, 101, 105, 156, 160, 167], "two_qubit_gate_ensembl": [99, 102, 103, 104, 156, 160, 167], "density_2q_g": [99, 102, 103, 104, 156, 160, 167], "25": [99, 102, 103, 104, 153, 154, 155, 156, 157, 159, 160, 162, 163, 167], "mrb": [99, 100, 103, 106, 116, 123, 125, 126, 148, 156, 164, 165], "len": [99, 150, 153, 158], "ensembl": [99, 100, 102, 123], "cxgate": 99, "submit_single_mrb_job": 100, "sorted_transpiled_circuit_dict": [100, 125], "canon": [100, 103, 104, 125], "noisy_count": 101, "ideal_count": 101, "num_circ_sampl": [101, 105, 119], "polar": [101, 116], "noisi": 101, "rescal": 101, "few": [101, 153], "effect": [101, 153], "real": [101, 167], "simul": [101, 131, 148, 155, 156, 160, 162, 163], "qubit_set": [102, 116], "n_layer": 102, "grab": [102, 131], "see": [102, 150, 153, 157, 158, 166], "2204": 102, "07568": 102, "2q": [102, 104, 121, 123, 153, 155, 156], "subsequ": [102, 166], "valueerror": [102, 105, 129, 139, 143], "do": [102, 131, 159, 166], "up": [102, 153, 167], "uniti": 102, "circ_sampl": 103, "pauli_samples_per_circ": [103, 104], "dress": [103, 104, 105], "input_list": 105, "flat": 105, "shape": 105, "lmfit": [107, 108, 116], "extend": 107, "shown": [107, 153, 157, 158], "document": [107, 153, 166, 167], "github": [107, 167], "io": 107, "py": [107, 163, 167], "example_fit_multi_dataset": 107, "html": [107, 167], "sphx": 107, "glr": 107, "multi": [107, 153], "func": [108, 109, 110, 111, 116, 122], "initial_guess": 108, "constraint": [108, 167], "simultaneously_fit_var": 108, "line": 108, "evalu": [109, 153], "signatur": 110, "residu": 111, "sever": [111, 148, 153], "techniqu": 112, "qc_inv": 113, "clifford_dictionari": 113, "invers": [113, 153], "invert": 113, "de": [113, 119], "stabil": [113, 119, 148], "ground": [114, 120, 151], "depolarization_prob": 115, "depolar": 115, "p": [115, 153], "decai": [115, 123, 148, 153], "rb_identifi": 116, "simultaneous_fit_var": 116, "interleaved_gate_str": 116, "0th": 116, "ap": [116, 158], "m": [116, 153, 154, 156, 159, 160, 163, 167], "b": [116, 150, 153, 166], "stdrb": 116, "clifford_dict": [117, 119], "fir": 117, "cliffords_1q": 118, "cliffords_2q": 118, "num_sampl": [118, 119], "befor": [118, 153], "term": [118, 150, 158, 166], "r": [118, 136, 139, 150, 155, 158, 163], "seq_length": 119, "import": [121, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167], "fit_paramet": 122, "fit_data": 122, "minimizerresult": 122, "violin": 123, "scatter": 123, "shade_stdev": 123, "shade_meanerror": 123, "logscal": 123, "mrb_2q_densiti": 123, "mrb_2q_ensembl": 123, "shade": 123, "titl": [123, 166], "arr": 124, "helper": 124, "relabel": 124, "increasingli": 124, "zero": [124, 148, 153], "5": [124, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167], "7": [124, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 166, 167], "note": [124, 133, 148, 157, 158, 167], "sort": [124, 144, 160, 162, 163], "increas": [124, 158], "transpiled_circuit": [126, 132, 163], "margin": [127, 131, 138], "surviv": [127, 153], "gate_id": 128, "gate_param": 128, "m3": [130, 131, 132], "modif": [130, 166], "qpu": [130, 153], "m3iqm": [130, 133], "mthree": [130, 133], "m3mitig": [130, 131], "iter_threshold": 131, "4096": 131, "modifi": [131, 148, 153, 166], "work": [131, 133, 153, 166, 167], "devic": [131, 148, 153, 165, 167], "cals_from_system": 131, "initial_reset": 131, "rep_delai": [131, 163], "cals_fil": 131, "async_c": 131, "cal_id": 131, "array_lik": 131, "min": [131, 153], "1e4": 131, "max_shot": 131, "balanc": 131, "hardwar": [131, 165], "independ": [131, 153], "reset": 131, "begin": [131, 150], "delai": 131, "path": 131, "json": [131, 158], "async": 131, "separ": [131, 148, 162, 163, 166], "thread": 131, "m3error": 131, "call": [131, 148], "progress": 131, "against": [132, 166], "mit": [133, 166], "processor": [133, 153], "argument": [133, 148, 167], "util": [133, 157], "final_measurement_map": 133, "qubit_name_to_index": 133, "quasiprobabilti": 133, "we": [133, 151, 153, 158, 166], "could": 133, "would": 133, "out": [133, 157, 166], "box": 133, "u": 133, "sinc": [133, 153, 158], "circuit_list": 135, "transpiled_qc_list": 136, "barrier": [136, 150, 151, 155], "outermost": 136, "backend_label": 137, "prob_dist": 138, "bit": 138, "basis_g": 139, "drop_final_rz": 139, "optimization_level": [139, 151, 153], "sqg": [139, 155, 156, 157, 162, 163], "z": 139, "drop": 139, "rz": 139, "emploi": 139, "star": [139, 143, 153], "iqm_job": [141, 142], "iqmjob": [141, 142, 145], "relev": 142, "transpiled_circuit_list": 144, "sorted_indic": 144, "sorted_circuit": 144, "sent": [145, 166], "manag": [145, 166, 167], "f": [146, 150, 151, 153, 156, 157, 158, 163], "decor": 146, "statement": [146, 166], "counts_rang": 147, "extract": [147, 153, 167], "were": [147, 148], "folder": [148, 166, 167], "doc": [148, 167], "notebook": [148, 151, 153, 158, 164, 165], "benchmark": [148, 149, 150, 152, 158, 161, 162, 163, 164], "iqm": [148, 149, 150, 151, 152, 157, 158, 159, 164, 166], "spark": [148, 152, 165], "move": [148, 163], "30": [148, 153, 154, 156, 159, 167], "compat": 148, "deneb": [148, 154, 155, 156, 159, 160, 161, 162, 164, 165], "adapt": [148, 167], "behavior": 148, "report": [148, 153], "displai": [148, 150, 153, 154, 156, 158, 159, 163, 166], "publish": 148, "ci": 148, "secur": [148, 167], "scan": [148, 167], "lockfil": [148, 167], "bug": 148, "depend": [148, 157, 158, 165], "relat": [148, 153], "modulenotfounderror": 148, "qscore": [148, 153], "enabl": 148, "pyrit": [148, 161], "wrong": 148, "incorrect": 148, "improv": [148, 166], "compil": [148, 153, 158, 166], "revert": 148, "ones": [148, 153, 167], "now": [148, 154, 155, 156, 157, 158, 159], "instead": [148, 167], "port": 148, "subclass": 148, "usag": 148, "place": [148, 166], "miscellan": 148, "relax": 148, "api": [148, 165, 167], "build": [148, 167], "overwrit": 148, "tutori": 148, "remov": 148, "explicit": 148, "minor": 148, "longer": [148, 153], "renam": 148, "rebas": 148, "randomizedbenchmark": 148, "quantumvolum": 148, "serial": 148, "some": [148, 153], "available_benchmark": 148, "__init__": 148, "public": 148, "hint": 148, "docstr": 148, "messag": 148, "prevent": 148, "exclus": [148, 166], "jupyt": 148, "section": [149, 152, 164, 166], "guidanc": [149, 152], "packag": [149, 153, 157, 163, 164, 167], "your": [149, 153, 165, 166, 167], "own": [149, 165, 166, 167], "decomposit": [149, 165], "1402": 150, "4848": 150, "copyright": [150, 166], "2024": [150, 154, 155, 163, 166], "develop": [150, 165], "licens": [150, 165], "apach": [150, 166], "you": [150, 153, 159, 163, 166, 167], "except": [150, 151, 166], "complianc": [150, 166], "unless": [150, 166], "law": [150, 166], "agre": [150, 166], "softwar": [150, 166], "AS": [150, 166], "without": [150, 153, 157, 166], "warranti": [150, 166], "OR": [150, 166], "OF": [150, 166], "kind": [150, 166], "express": [150, 166], "impli": [150, 166], "languag": [150, 166], "govern": [150, 166], "permiss": [150, 166], "quantum_info": 150, "qi": 150, "c0": 150, "c": [150, 153, 163, 166], "_": [150, 153, 158], "24": [150, 154, 155, 156, 157, 159], "half": 150, "x2": 150, "to_gat": 150, "y2": 150, "x2m": 150, "y2m": 150, "compos": 150, "inplac": 150, "2pi": 150, "11": [150, 151, 153, 154, 156, 157, 159, 160, 161, 163, 167], "13": [150, 154, 156, 157, 159, 160, 163, 167], "15": [150, 153, 154, 155, 156, 159, 160, 163], "16": [150, 154, 155, 156, 157, 159, 160, 162], "17": [150, 154, 155, 156, 157, 159, 160, 162, 167], "18": [150, 154, 155, 156, 157, 159, 160, 167], "19": [150, 155, 156, 157, 158, 159, 160], "21": [150, 155, 156, 159], "22": [150, 155, 156, 158, 159, 160], "23": [150, 154, 155, 156, 157, 159, 160, 162, 163], "clifford_sqg": 150, "s1": 150, "s1x2": 150, "s1y2": 150, "displaystyl": 150, "sum_": [150, 158], "prime": 150, "left": 150, "mathrm": [150, 153], "tr": [150, 158], "u_": 150, "dagger": [150, 153, 158], "u_k": 150, "right": [150, 166], "s2": 150, "satisfi": [150, 158], "c_kei": 150, "aux": 150, "total_triangl": 150, "c1": 150, "adjoint": 150, "c2": 150, "c3": 150, "to_matrix": 150, "trace": [150, 158], "print": [150, 153, 155, 156, 157, 158, 160, 162, 163, 166], "0f": 150, "diagon": [150, 153], "nsum": 150, "sum": 150, "clifford_2qg": 150, "product": [150, 166], "c2q_0": 150, "c2q": 150, "counter": 150, "to_label": 150, "mode": [150, 167], "sqg_class_": 150, "cnot": [150, 157], "sy2": 150, "cnot_class_": 150, "iswap": 150, "sy1": 150, "sx2": 150, "i_swap_class_": 150, "swap_class_": 150, "clifford_1qg": 150, "open": 150, "clifford_1q": 150, "pkl": 150, "wb": 150, "clifford_2q": 150, "loaded_dict": 150, "def": [150, 151], "count_rcz": 150, "c_list": 150, "no_cz": 150, "no_r": 150, "count_op": 150, "num_2qcz": 150, "num_2qr": 150, "num_1qcz": 150, "num_1qr": 150, "875": [150, 153, 156, 159, 162], "200": [150, 153, 156, 157], "randint": [150, 156, 161], "11520": 150, "draw": [150, 157, 163], "mpl": 150, "style": 150, "iqp": 150, "fold": 150, "ninvers": 150, "qc_aux": 150, "qcinv": 150, "op_seq": 150, "ncomposit": 150, "ident": 150, "modulo": 150, "phase": 150, "equiv": 150, "latex": 150, "composit": 150, "bmatrix": 150, "520": [150, 156], "132": [150, 156, 159], "710": 150, "suffic": 150, "triangular": 150, "part": [150, 166], "howev": [150, 166, 167], "still": [150, 158], "op": 150, "adj": 150, "prod": 150, "100000": 150, "ndone": 150, "done": 150, "defit": 151, "anoth": 151, "excit": 151, "add_counts_to_dataset": 151, "pyplot": [151, 158], "plt": [151, 158], "generate_readout_test_circuit": 151, "n_qubit": 151, "qb_to_measur": 151, "qc_transpil": 151, "plot_histogram": [151, 153], "try": 151, "state_": 151, "counts_": 151, "break": 151, "xtick": 151, "90": 151, "legend": 151, "readout_analysi": 151, "histogram": [151, 153], "readouttest": 151, "default_opt": 151, "n_shot": 151, "2048": 151, "staticmethod": 151, "readout_test": 151, "iqmprovid": [151, 153, 156, 167], "iqm_server_url": 151, "station": [151, 167], "fi": [151, 167], "coco": [151, 167], "get_backend": [151, 153, 156, 167], "480b": 151, "state_0": 151, "state_1": 151, "coordin": 151, "u4": 151, "144b": 151, "0000": 151, "0010": 151, "1010": 151, "1100": 151, "176b": 151, "0011": 151, "0101": 151, "0110": 151, "1101": 151, "1110": 151, "1111": 151, "counts_0": 151, "int64": 151, "72b": 151, "1924": 151, "26": [151, 156, 157, 159], "39": [151, 156, 158, 159], "counts_1": 151, "88b": 151, "72": 151, "48": [151, 156, 159], "78": 151, "36": [151, 156], "1801": 151, "sure": [153, 167], "instal": [153, 158, 165], "pip": [153, 167], "ipykernel": 153, "o": [153, 154, 155, 156, 159, 160, 161, 162, 163, 167], "environ": [153, 154, 155, 156, 159, 160, 161, 162, 163, 167], "iqm_tokens_fil": 153, "token": [153, 159, 167], "iqm_url": [153, 156], "access": [153, 167], "everyth": 153, "rustworkx": [153, 157], "visual": [153, 157], "mpl_draw": [153, 157], "spring_layout": [153, 157], "to_undirect": 153, "multigraph": 153, "arrow": [153, 157], "with_label": [153, 157], "node_color": [153, 157], "32a8a4": [153, 157], "po": [153, 157], "num_it": [153, 157], "ignor": 153, "critic": 153, "filterwarn": 153, "action": 153, "entangl": [153, 156, 157, 167], "more": [153, 166, 167], "superposit": 153, "rangl": 153, "frac": [153, 158], "sqrt": 153, "otim": 153, "act": [153, 166], "wit": 153, "genuin": [153, 157], "cannot": [153, 166], "explain": 153, "great": 153, "rho_": 153, "langl": 153, "pure": 153, "case": 153, "entri": [153, 158], "written": [153, 166], "00": [153, 156, 158, 160, 162], "corner": 153, "simplifi": 153, "four": 153, "compon": 153, "formula": 153, "nullifi": 153, "To": [153, 154, 157, 158, 161, 166, 167], "off": 153, "want": [153, 167], "pleas": 153, "refer": [153, 158, 165, 167], "generate_ghz_spanning_tre": 153, "get_edg": 153, "ghz_circuit": 153, "qc_transp": 153, "re": [153, 159], "10000": 153, "get_count": 153, "benchmark_ghz": [153, 156, 157], "run_ghz": [153, 156, 157], "result_ghz": 153, "introduc": 153, "2019": [153, 157, 167], "unitari": [153, 158, 163], "successfulli": [153, 154, 156, 159, 160, 162, 163], "occcur": 153, "greater": 153, "median": 153, "ask": 153, "confid": 153, "higher": 153, "97": 153, "85": [153, 167], "asymptot": 153, "log_2": 153, "v_q": 153, "underset": 153, "argmax": 153, "d": [153, 157, 166], "leq": 153, "achiev": 153, "quantum_volum": [153, 155, 156, 162, 163, 167], "due": 153, "must": [153, 166, 167], "topmost": 153, "500": [153, 156, 160, 162, 163, 167], "60_000": [153, 156, 162, 163, 167], "minut": [153, 158], "benchmark_qv": [153, 156, 162, 163], "run_qv": 153, "result_qv": 153, "That": 153, "wack": 153, "taken": 153, "constitut": [153, 166], "_time": 153, "notic": [153, 166], "plot_tim": 153, "benchmark_clop": [153, 155, 156], "run_clop": [153, 155, 156], "result_clop": [153, 155, 156], "fig_clop": 153, "idea": 153, "behind": 153, "crb": 153, "certain": 153, "langle0": 153, "c_": 153, "inv": 153, "c_m": 153, "cdot": 153, "_2c_1": 153, "sim": 153, "c_1": 153, "c_2": 153, "ldot": 153, "c_1c_2": 153, "_m": 153, "leq1": 153, "constant": 153, "isol": 153, "magesan": 153, "2012": [153, 167], "infer": 153, "assumpt": 153, "markovian": 153, "stationari": 153, "theori": [153, 166], "fact": 153, "design": [153, 166, 167], "fulli": [153, 158], "ensur": 153, "our": 153, "overlin": 153, "intend": 153, "becaus": 153, "eventu": 153, "mention": 153, "barend": 153, "2014": 153, "approx": 153, "alwai": [153, 157], "slightli": 153, "care": 153, "compar": 153, "spec": 153, "randomized_benchmark": [153, 154, 156, 159, 160, 167], "clifford_rb": [153, 154, 156], "benchmark_clifford_rb": [153, 154, 156], "run_clifford_rb": [153, 154, 156], "result_clifford_rb": [153, 154, 156], "previou": 153, "aim": [153, 157], "interest": 153, "sole": [153, 166], "made": [153, 166], "rate": 153, "wish": [153, 163], "interleaved_rb": [153, 156, 159, 167], "irb_cz": 153, "nb": [153, 154, 155, 156], "benchmark_irb_cz": 153, "run_irb_cz": 153, "result_irb_cz": 153, "martiel": 153, "erd\u0151": 153, "r\u00e9nyi": 153, "geq": [153, 158], "benchmark_qscor": [153, 156, 161], "run_qscor": [153, 156], "result_qscor": [153, 156], "summar": 153, "obs_ghz": 153, "round": 153, "obs_qv": 153, "max": 153, "obs_clop": 153, "item": 153, "obs_crb": 153, "f_crb": 153, "obs_irb": 153, "f_irb": 153, "avg_gate_fidelity_interleav": [153, 156, 159], "obs_q": 153, "argmin": 153, "3000": 153, "999": [153, 154, 155], "98": 153, "num": 153, "load_ext": [154, 155, 156, 158, 159, 160, 161, 162, 163], "autoreload": [154, 155, 156, 158, 159, 160, 161, 162, 163], "extens": [154, 161], "load": [154, 161], "reload": [154, 161], "reload_ext": [154, 161], "fakeadoni": [154, 155, 156, 159, 160, 161, 162], "fakeapollo": [154, 155, 156, 157, 159, 160, 161, 162], "garnet": [154, 155, 156, 158, 159, 160, 161, 162, 167], "iqm_token": [154, 155, 156, 159, 160, 161, 162, 163, 167], "example_crb": [154, 156], "56": [154, 156], "750": 154, "logging_config": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "info": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "Will": [154, 155, 156, 158, 159, 160, 162, 163], "31": [154, 155, 156, 157, 159, 160, 165], "63": [154, 156, 159], "831": [154, 159], "992": [154, 155], "341": 154, "040": [154, 156, 159], "469": [154, 156], "291": 154, "292": [154, 156, 159], "349": 154, "541": [154, 160], "600": [154, 156], "756": [154, 156], "837": [154, 159, 162], "025": 154, "171": [154, 156], "905": 154, "544": [154, 156], "899": [154, 156], "32": [154, 155, 156, 157, 158, 160], "624": [154, 156], "004": [154, 156, 159], "43": [154, 156, 158, 159], "319": 154, "569": [154, 160], "777": [154, 156], "840": 154, "44": [154, 156, 158, 159], "048": [154, 159], "098": [154, 155, 156], "qubits_": [154, 156, 160], "_depth_1": [154, 156, 159], "323": 154, "45": [154, 156, 159, 160], "186": [154, 159], "_depth_3": [154, 156, 159], "225": [154, 156], "_depth_7": [154, 156, 159], "267": [154, 156], "_depth_15": [154, 156, 159], "314": [154, 156], "_depth_31": [154, 156, 159], "315": [154, 156], "364": [154, 156, 160], "_depth_63": [154, 156, 159], "416": 154, "417": [154, 163], "476": 154, "542": [154, 156, 160], "615": [154, 156], "616": [154, 156], "697": 154, "789": [154, 156, 159], "890": [154, 156, 159], "conclud": [154, 156, 159, 160, 162, 163], "931": [154, 156], "938": 154, "945": [154, 156, 157, 160], "952": [154, 159], "959": [154, 156], "966": [154, 156], "972": [154, 156], "979": [154, 156], "986": [154, 156], "993": [154, 156, 160], "46": [154, 156, 158, 163], "006": [154, 156], "013": 154, "946844466999168": 154, "9429197366921651": 154, "attr": [154, 155, 158, 160, 162, 163], "session_timestamp": [154, 155, 160, 162, 163], "20241217": 154, "115553": 154, "execution_timestamp": [154, 155, 160, 162, 163], "backend_configuration_nam": [154, 155, 160, 162, 163], "iqmfakeapollobackend": [154, 155, 157, 158, 162], "depth_1": 154, "time_circuit_gener": [154, 155, 160, 162, 163], "541001081466675": 154, "time_submit": [154, 160, 162, 163], "0006990432739257812": 154, "time_retriev": [154, 160, 162, 163], "22491073608398438": 154, "all_job_metadata": [154, 160, 162, 163], "batch_job_1": [154, 160], "job_id": [154, 160], "8f305755": 154, "e038": 154, "4596": 154, "8617": 154, "d96ba3f42ca9": 154, "aer_simul": [154, 160], "statu": [154, 160], "circuits_in_batch": [154, 160], "depth_3": 154, "05647683143615723": 154, "0005230903625488281": 154, "2fe0b406": 154, "8977": 154, "4567": 154, "bba0": 154, "d4168f0883ed": 154, "depth_7": 154, "19257187843322754": 154, "0004839897155761719": 154, "8299918c": 154, "be26": 154, "40d5": 154, "8778": 154, "9ea4468a1df2": 154, "depth_15": 154, "05831408500671387": 154, "0004811286926269531": 154, "174640c4": 154, "9ff3": 154, "4ca3": 154, "9ffc": 154, "d6aa5be304f3": 154, "depth_31": 154, "1564040184020996": 154, "0006189346313476562": 154, "7bb739f2": 154, "31bc": 154, "40af": 154, "8dbf": 154, "1d60a9310391": 154, "depth_63": 154, "08135986328125": 154, "0004200935363769531": 154, "f414a2c1": 154, "75c8": 154, "4d5a": 154, "9e4b": 154, "ccce29903f5f": 154, "147684812545776": 154, "0005502700805664062": 154, "00039887428283691406": 154, "8832576a": 154, "6d6e": 154, "4abe": 154, "8cfa": 154, "5001e6bb98e": 154, "08015298843383789": 154, "00039315223693847656": 154, "ecc1bcea": 154, "ef4c": 154, "4f35": 154, "9284": 154, "ab49af0c5b9f": 154, "16936397552490234": 154, "0003960132598876953": 154, "5582c842": 154, "0f07": 154, "46b6": 154, "96be": 154, "2fb3925b19d9": 154, "20774221420288086": 154, "0004191398620605469": 154, "6423b02b": 154, "8417": 154, "4300": 154, "b7ac": 154, "84d59f87a51f": 154, "0635080337524414": 154, "0004169940948486328": 154, "0b324804": 154, "44fe": 154, "4c16": 154, "83eb": 154, "08e5cd67aa79": 154, "20784401893615723": 154, "0004961490631103516": 154, "6c633640": 154, "d4b4": 154, "47de": 154, "a46d": 154, "d3ae4c84d212": 154, "avg_gate_fidel": [154, 160], "0012220693932290373": 154, "001545469960991071": 154, "xxxxxx": 155, "example_clop": [155, 156], "06": [155, 156, 160], "07": [155, 156, 159, 160], "198": [155, 156], "199": 155, "828": [155, 159], "829": [155, 156, 159], "383": [155, 159], "401": [155, 156], "458": [155, 156], "010": 155, "428": [155, 160], "429": [155, 156], "497": [155, 156], "029": [155, 156], "482": [155, 156], "483": [155, 156], "502": [155, 156], "113": 155, "843": 155, "844": 155, "906": [155, 159], "527": 155, "987": [155, 156], "988": [155, 156], "050": [155, 156, 160, 162], "636": [155, 156, 159], "099": [155, 156], "166": [155, 159], "712": 155, "27": [155, 156, 157, 159], "328": [155, 156], "329": [155, 156], "404": [155, 156], "766": [155, 156, 160], "29": [155, 156, 159, 162], "386": [155, 156], "387": [155, 156, 159, 160], "406": [155, 156], "418": [155, 156, 163], "487": [155, 156], "037": 155, "33": [155, 156, 160], "488": [155, 156], "556": [155, 156], "240": [155, 156], "916": [155, 159], "There": [155, 156], "all_times_parameter_assign": 155, "all_times_retriev": 155, "all_times_submit": 155, "assign_parameters_tot": 155, "clops_tim": 155, "counts_per_upd": 155, "job_meta_per_upd": 155, "num_paramet": 155, "operation_count": [155, 162, 163], "parallel_2q_lay": 155, "parameters_per_upd": 155, "time_count_lay": 155, "time_sort_batch": 155, "time_transpil": [155, 162, 163], "u_per_lay": 155, "user_retrieve_tot": 155, "user_submit_tot": 155, "9603960396039604": 155, "std": 155, "3960396039603959": 155, "285": [155, 156, 159], "970297029703": 155, "28": [155, 156, 159, 162], "718661075530303": 155, "40594059405941": 155, "915387814641763": 155, "9900990099009901": 155, "09900990099009897": 155, "18796": 155, "nan": [155, 158], "56388": 155, "iqm_provid": [156, 163], "2025": [156, 157, 158, 159, 160, 161, 162, 165], "01": [156, 157, 158, 159, 160, 161, 162, 165], "58": [156, 159], "410": 156, "411": 156, "127": [156, 159], "639": [156, 157], "949": 156, "35": 156, "841": 156, "251": 156, "53": [156, 159, 161], "648": 156, "690": 156, "785": [156, 159], "953": 156, "815": 156, "59": [156, 159, 160], "821": [156, 159], "808": 156, "834": 156, "860": [156, 159], "02": [156, 158, 160], "350": 156, "351": [156, 157], "424": 156, "466": 156, "510": 156, "511": 156, "558": 156, "_depth_127": [156, 159], "559": 156, "611": 156, "643": 156, "647": 156, "651": [156, 160, 163], "655": 156, "659": 156, "663": 156, "667": 156, "9487496885745926": 156, "example_irb_1q": [156, 159], "rgate": [156, 158, 159], "benchmark_irb_1q": [156, 159], "run_irb_1q": [156, 159], "734": [156, 159], "958": 156, "wxecut": 156, "255": [156, 159], "000": [156, 159], "041": 156, "122": 156, "925": 156, "229": 156, "054": 156, "37": [156, 163], "672": 156, "694": 156, "753": 156, "849": [156, 160], "38": [156, 159], "039": [156, 159], "402": 156, "108": 156, "40": 156, "570": 156, "277": 156, "331": [156, 160], "399": 156, "495": 156, "650": [156, 159], "929": 156, "51": [156, 158, 159, 161, 163], "439": 156, "52": [156, 158, 159, 160, 161, 163], "352": 156, "432": [156, 159], "475": [156, 159], "666": 156, "812": 156, "881": [156, 159], "761": 156, "804": 156, "894": [156, 157], "907": 156, "03": [156, 159, 160], "020": 156, "188": [156, 159], "270": 156, "426": 156, "718": 156, "04": [156, 159, 160], "307": [156, 160], "05": [156, 159, 160], "836": [156, 159], "904": 156, "003": [156, 158, 159], "196": [156, 159, 162], "557": [156, 160], "719": 156, "653": [156, 160], "149": [156, 160], "754": 156, "231": 156, "163": [156, 159], "261": 156, "446": 156, "524": 156, "635": [156, 159], "112": 156, "693": 156, "811": 156, "826": 156, "920": 156, "091": [156, 157], "173": [156, 159], "338": [156, 159], "640": [156, 159], "230": 156, "545": [156, 160], "54": [156, 159, 163], "939": [156, 159], "961": 156, "55": [156, 160], "011": [156, 158], "105": 156, "299": [156, 163], "384": 156, "57": [156, 159], "824": 156, "662": 156, "717": [156, 159], "790": [156, 158, 159, 160], "889": [156, 160], "301": [156, 160], "799": [156, 163], "083": 156, "152": [156, 160], "254": 156, "420": 156, "758": [156, 158, 159, 160], "634": 156, "947": [156, 160], "994": [156, 158], "548": 156, "159": 156, "724": 156, "746": 156, "791": [156, 160], "884": [156, 160], "074": [156, 159], "128": [156, 160], "561": 156, "477": 156, "550": 156, "623": [156, 158, 159], "726": 156, "880": 156, "47": [156, 158, 159], "508": 156, "606": [156, 160], "838": 156, "944": [156, 160], "49": [156, 158, 159], "427": 156, "963": 156, "970": [156, 160], "008": [156, 159], "071": 156, "305": 156, "391": [156, 158], "555": 156, "444": 156, "649": [156, 157, 163], "063": 156, "119": [156, 160], "212": [156, 157], "397": 156, "467": 156, "678": [156, 160], "688": [156, 159, 162], "741": 156, "810": 156, "908": 156, "805": 156, "682": [156, 159], "730": 156, "816": 156, "094": [156, 159], "259": [156, 157], "547": 156, "066": 156, "138": 156, "clifford_qubits_": [156, 159], "176": [156, 160], "354": 156, "355": [156, 159], "390": 156, "459": 156, "591": 156, "592": 156, "644": 156, "_depth_255": [156, 159], "703": [156, 159], "767": [156, 160], "768": 156, "839": 156, "918": 156, "919": [156, 157], "007": [156, 159], "104": 156, "211": 156, "728": 156, "971": 156, "232": 156, "509": [156, 159], "151": 156, "498": 156, "862": 156, "248": 156, "249": 156, "654": 156, "142": 156, "143": 156, "085": 156, "626": [156, 160], "180": [156, 160], "732": 156, "733": 156, "923": 156, "interleaved_qubits_": [156, 159], "924": 156, "560": 156, "237": 156, "940": [156, 160], "447": [156, 163], "41": [156, 159, 160], "075": [156, 158], "076": 156, "42": [156, 159], "845": [156, 157, 159], "846": 156, "783": [156, 162], "784": [156, 159], "782": 156, "813": 156, "814": 156, "201": [156, 160], "202": 156, "378": 156, "379": 156, "909": 156, "910": 156, "284": 156, "658": 156, "111": [156, 162], "571": [156, 158], "572": [156, 157], "062": [156, 157], "021": [156, 162], "022": [156, 159], "735": 156, "736": 156, "546": [156, 159, 160], "09": [156, 157, 158, 159, 162], "361": 156, "362": 156, "330": [156, 160], "304": 156, "269": [156, 163], "471": 156, "596": [156, 159, 160], "842": [156, 159, 160], "086": 156, "642": [156, 157], "983": [156, 160], "460": 156, "result_irb_1q": [156, 159], "855": 156, "901": 156, "943": 156, "033": [156, 159, 162], "116": [156, 160], "161": 156, "206": [156, 159], "300": [156, 158], "344": 156, "433": 156, "519": 156, "603": 156, "686": 156, "727": 156, "769": 156, "853": 156, "936": 156, "978": 156, "019": 156, "106": 156, "191": [156, 158], "274": 156, "316": 156, "357": [156, 160], "440": [156, 159], "565": 156, "607": [156, 159], "774": 156, "858": 156, "941": 156, "030": 156, "072": 156, "114": 156, "156": 156, "197": [156, 159], "239": 156, "280": 156, "322": 156, "405": 156, "489": 156, "531": 156, "614": 156, "656": 156, "698": 156, "747": 156, "794": 156, "948": [156, 160], "061": 156, "110": 156, "157": [156, 159], "9987487631380596": 156, "9976446981909068": 156, "9966759568052321": 156, "993530034195362": 156, "9990404653517758": 156, "9981264795208118": 156, "9993022807449614": 156, "9986351324410088": 156, "9973448276409616": 156, "9955188886796882": 156, "252344351282814e": 156, "avg_gate_fidelity_clifford": [156, 159], "427765436266417e": 156, "311072136492597e": 156, "508513064336435e": 156, "00011479325016746003": 156, "00013605231315518148": 156, "126965739294625e": 156, "500976481016944e": 156, "726101631810375e": 156, "232463034652631e": 156, "example_irb_2q": [156, 159], "benchmark_irb_2q": [156, 159], "run_irb_2q": [156, 159], "921": 156, "001": [156, 158], "164": 156, "481": 156, "08": [156, 158, 159, 160], "367": 156, "937": 156, "095": [156, 159], "396": [156, 159], "026": 156, "620": 156, "765": [156, 159], "930": 156, "216": [156, 159], "738": 156, "729": 156, "674": 156, "965": 156, "264": [156, 160], "470": 156, "463": 156, "078": 156, "370": 156, "771": 156, "968": [156, 159], "140": 156, "441": [156, 159], "192": 156, "743": 156, "268": 156, "298": 156, "625": [156, 162], "461": 156, "009": 156, "991": [156, 159], "014": 156, "807": 156, "165": 156, "817": 156, "295": [156, 157], "464": 156, "721": 156, "398": 156, "581": 156, "714": 156, "689": 156, "801": 156, "912": [156, 163], "891": 156, "435": 156, "484": 156, "181": [156, 160], "194": 156, "451": 156, "290": [156, 159, 162], "955": 156, "359": 156, "096": [156, 160], "445": 156, "521": 156, "681": [156, 159], "628": 156, "214": [156, 160], "385": 156, "309": 156, "579": 156, "652": [156, 159, 160], "131": [156, 159], "168": [156, 159], "169": 156, "207": [156, 159], "208": [156, 159], "252": [156, 157, 162], "253": 156, "345": 156, "346": [156, 159], "457": 156, "523": [156, 160], "595": [156, 159], "676": [156, 160], "764": [156, 159], "863": 156, "969": 156, "088": [156, 162], "089": 156, "218": [156, 157], "360": [156, 163], "514": 156, "283": [156, 162], "034": [156, 159], "035": 156, "313": 156, "612": 156, "272": [156, 160], "637": [156, 163], "036": 156, "876": [156, 159], "877": [156, 159], "861": [156, 159], "365": [156, 160], "366": 156, "897": 156, "468": 156, "051": 156, "661": 156, "028": 156, "739": [156, 159], "740": [156, 159], "241": 156, "042": 156, "673": 156, "641": 156, "757": [156, 162], "866": 156, "005": [156, 157, 158, 159], "177": [156, 160], "178": 156, "431": 156, "result_irb_2q": [156, 159], "704": [156, 159], "795": 156, "888": 156, "070": 156, "101": 156, "223": [156, 159], "374": 156, "465": 156, "526": 156, "586": 156, "677": 156, "707": 156, "798": 156, "859": 156, "950": [156, 159], "981": [156, 159], "162": 156, "9742310809885095": 156, "9459834045099638": 156, "9702389918426017": 156, "9373183372682623": 156, "9829862612568532": 156, "9651704260970525": 156, "9600628980342876": 156, "9331175707494691": 156, "example_irb_iswap": [156, 159], "iswapg": [156, 159, 160, 167], "benchmark_irb_iswap": [156, 159], "run_irb_iswap": [156, 159], "567": 156, "751": [156, 159], "573": 156, "742": 156, "879": 156, "079": [156, 160], "954": [156, 159], "145": 156, "781": [156, 159, 162], "496": [156, 159], "725": 156, "408": [156, 158], "895": 156, "788": [156, 159], "513": 156, "517": 156, "087": 156, "773": [156, 159], "684": 156, "638": 156, "691": [156, 159], "204": [156, 159, 162], "339": [156, 159], "580": 156, "608": 156, "609": [156, 160], "336": [156, 157], "708": 156, "833": 156, "990": 156, "084": 156, "187": 156, "303": 156, "576": 156, "097": [156, 160], "530": [156, 159], "776": 156, "044": 156, "045": 156, "332": 156, "333": [156, 159], "984": 156, "985": 156, "result_irb_iswap": [156, 159], "796": 156, "902": 156, "073": 156, "115": 156, "136": 156, "179": 156, "221": 156, "296": [156, 160], "325": 156, "388": 156, "9296485294294863": 156, "9468865104887559": 156, "9168663709049512": 156, "9389212110918619": 156, "mirror_rb": [156, 160, 167], "example_mrb": [156, 160, 167], "benchmark_mrb": [156, 160], "run_mrb": [156, 160], "10x5": [156, 160], "64": [156, 160], "512": [156, 160], "090": [156, 159], "109": [156, 167], "775": 156, "802": 156, "779": [156, 158, 159], "533": 156, "246": [156, 161], "442": [156, 159], "369": 156, "491": [156, 159], "092": 156, "613": 156, "631": [156, 159], "692": [156, 159], "375": [156, 160], "723": 156, "878": 156, "266": 156, "123": 156, "_depth_2": [156, 160], "_depth_4": [156, 160], "_depth_8": [156, 160], "_depth_16": [156, 160], "_depth_32": [156, 160], "822": 156, "_depth_64": [156, 160], "_depth_128": [156, 160], "174": [156, 159], "_depth_256": [156, 160], "175": 156, "_depth_512": [156, 160], "515": 156, "720": 156, "219": 156, "857": 156, "242": 156, "243": [156, 163], "670": 156, "671": [156, 159], "147": [156, 160], "result_mrb": [156, 160], "706": [156, 159], "882": [156, 159], "962": 156, "067": [156, 159], "260": 156, "356": 156, "1600x1200": 156, "ax": 156, "all_qubit_layout": [156, 160], "key_mrb_plot": [156, 160], "example_qv": [156, 162, 163, 167], "run0_qv": [156, 162, 163], "iqmfakeadonisbackend": 156, "234": 156, "subbatch": [156, 162, 163], "562": 156, "588": 156, "093": 156, "023": 156, "434": 156, "587": 156, "result0_qv": [156, 162, 163], "413": [156, 160], "run1_qv": [156, 162, 163], "result1_qv": [156, 162, 163], "865": [156, 163], "213": 156, "800": [156, 158], "321": 156, "887": [156, 157, 160], "024": [156, 163], "155": 156, "516": 156, "247": 156, "278": 156, "347": 156, "265": 156, "358": 156, "453": [156, 162], "454": 156, "554": 156, "552": 156, "minimal_ghz": [156, 157], "745": [156, 159], "792": 156, "900": 156, "049": [156, 159], "238": 156, "306": 156, "423": 156, "8309361141069083": 156, "fidelity_rem": 156, "8897643257271268": 156, "example_qscor": [156, 161], "20_000": [156, 161], "999999": [156, 161], "4767": 156, "4900": 156, "6739": 156, "3733": 156, "6246": 156, "3894": 156, "4881": 156, "4714": 156, "4767012007999197": 156, "09979310484432205": 156, "is_succes": [156, 161, 162, 163], "qscore_result": [156, 161], "6738975057778192": 156, "07204344830310698": 156, "6246025280898877": 156, "04717318377784287": 156, "4881333882446109": 156, "04133470512287928": 156, "multipartit": 157, "One": [157, 162, 163], "larger": [157, 158], "leibfri": 157, "et": 157, "al": 157, "six": 157, "atom": 157, "schr\u00f6dinger": 157, "cat": 157, "natur": 157, "438": 157, "2005": 157, "offer": [157, 166], "verif": [157, 165, 167], "superconduct": 157, "phy": [157, 167], "commun": [157, 166], "095004": 157, "elben": 157, "statist": 157, "toolbox": 157, "probe": 157, "bodi": 157, "rev": [157, 167], "99": 157, "052323": 157, "ciruit": 157, "hadamrd": 157, "addit": [157, 158, 166, 167], "log_depth": 157, "cruz": 157, "yield": 157, "lower": [157, 158], "hous": 157, "reli": 157, "dai": 157, "thu": 157, "comparison": 157, "best": 157, "gme": 157, "prefer": [157, 166], "whenev": 157, "mitgat": 157, "arang": 157, "For": [157, 158, 166, 167], "think": 157, "help": 157, "iqmfakeapollo": [157, 158], "scrambl": 157, "readabl": [157, 166], "fake_backend": 157, "fake_apollo": 157, "209": 157, "759": 157, "760": 157, "823": 157, "233": 157, "597": [157, 160], "016": 157, "236": 157, "594": 157, "917": 157, "279": 157, "fidelitii": 157, "filter": 157, "descript": [157, 166], "l0": 157, "l1": 157, "introduct": 158, "what": [158, 159], "background": 158, "journal": 158, "prxquantum": 158, "1103": 158, "010325": [158, 167], "compressive_gst": 158, "iqmfakeadoni": 158, "k_i": 158, "trigger": 158, "benefit": 158, "less": [158, 160], "captur": 158, "domin": 158, "trustworthi": 158, "veri": 158, "consum": 158, "minimal_1q_gst": 158, "minimal_2q_gst": 158, "Be": 158, "extra": 158, "871": 158, "20it": 158, "621": 158, "criterion": 158, "53e": 158, "uncertaintit": 158, "restult": 158, "idl": 158, "qb1": 158, "99693": 158, "00703": 158, "unitar": 158, "98781": 158, "99918": 158, "0013": 158, "99674": 158, "ry": 158, "99509": 158, "01332": 158, "98074": 158, "tvd": 158, "00698": 158, "03296": 158, "dist": 158, "00601": 158, "04366": 158, "results_layout_": 158, "dict_kei": 158, "raw_kraus_oper": 158, "raw_gat": 158, "raw_povm": 158, "raw_stat": 158, "gauge_opt_g": 158, "gauge_opt_gates_pauli_basi": 158, "gauge_opt_povm": 158, "gauge_opt_st": 158, "main_mgst_tim": 158, "gauge_optimization_tim": 158, "choi_ev": 158, "full_metr": 158, "raw": 158, "raw_result": 158, "array_str": 158, "precis": 158, "suppress_smal": 158, "995": 158, "002": [158, 159], "002j": 158, "003j": 158, "004j": 158, "998": 158, "These": 158, "diplai": 158, "disc": 158, "represent": 158, "sinlg": 158, "g_": 158, "ij": 158, "p_i": 158, "p_j": 158, "layout_": 158, "_gate_metr": 158, "_choi_eigenvalu": 158, "_other_metr": 158, "_process_matrix_0": 158, "_process_matrix_1": 158, "_process_matrix_2": 158, "_spam_matrices_r": 158, "_spam_matrices_imag": 158, "altern": 158, "ourselv": 158, "xyi": 158, "instruct": 158, "gate_list": 158, "indentif": 158, "\u03c0": [158, 163], "custom_1q_gst": 158, "verbos": 158, "806": [158, 162], "61": 158, "803": 158, "42e": 158, "008j": 158, "989": [158, 159], "001j": 158, "reson": [159, 167], "553": 159, "324": 159, "964": 159, "064": 159, "065": 159, "294": 159, "664": 159, "107": 159, "982": [159, 160], "058": 159, "538": 159, "120": 159, "121": 159, "146": 159, "522": [159, 160], "103": 159, "744": 159, "780": [159, 160, 162], "818": 159, "819": [159, 160], "133": [159, 160], "286": 159, "287": 159, "376": 159, "583": 159, "9975073376613797": 159, "9957157328789242": 159, "9976959612386156": 159, "9957310522299055": 159, "752861001879659e": 159, "028839025109517e": 159, "64196778583225e": 159, "243656712565855e": 159, "know": 159, "679": [159, 160], "118": 159, "820": 159, "915": 159, "577": 159, "148": 159, "874": 159, "951": 159, "205": 159, "380": 159, "381": 159, "485": 159, "685": 159, "9798030906041997": 159, "9431232937255942": 159, "9840858225184934": 159, "945382422883015": 159, "593": 159, "885": 159, "490": 159, "883": [159, 160], "038": 159, "215": [159, 160], "282": 159, "348": 159, "394": 159, "395": 159, "492": [159, 161], "675": [159, 161], "752": 159, "932": 159, "933": 159, "158": 159, "289": 159, "436": 159, "566": 159, "9344679810705316": 159, "9463377694591251": 159, "9267928870925659": 159, "943379008472002": 159, "892": 160, "125": 160, "589": 160, "646": 160, "702": 160, "244": 160, "996": 160, "598": 160, "867": 160, "117": 160, "271": 160, "448": 160, "449": 160, "150": 160, "450": 160, "605": 160, "184": 160, "342": 160, "343": 160, "422": 160, "134": 160, "456": 160, "529": 160, "attr_kei": [160, 162, 163], "depth_2": 160, "14302134513855": 160, "007565975189208984": 160, "06883907318115234": 160, "f8d9d789": 160, "0e9a": 160, "4086": 160, "ab36": 160, "685064a7b66": 160, "depth_4": 160, "0004930496215820312": 160, "0007040500640869141": 160, "87e367b7": 160, "c3ae": 160, "4457": 160, "8a2d": 160, "7b169c528033": 160, "depth_8": 160, "0004889965057373047": 160, "0005979537963867188": 160, "d84330c9": 160, "101f": 160, "40ff": 160, "bea8": 160, "f5e4c0b41527": 160, "depth_16": 160, "0004627704620361328": 160, "0006148815155029297": 160, "1f58b4a0": 160, "fb16": 160, "4d12": 160, "a9e8": 160, "c9263da52418": 160, "depth_32": 160, "00047278404235839844": 160, "0005419254302978516": 160, "4e43834b": 160, "5694": 160, "4c6d": 160, "8a83": 160, "796913d67e40": 160, "depth_64": 160, "000469207763671875": 160, "0005609989166259766": 160, "036e1dd": 160, "ca95": 160, "42a1": 160, "ab68": 160, "30a243f6b4ba": 160, "depth_128": 160, "0004668235778808594": 160, "0005328655242919922": 160, "13a59ca8": 160, "2ab0": 160, "4de8": 160, "a643": 160, "5b3f318f03d4": 160, "depth_256": 160, "0004749298095703125": 160, "e673defd": 160, "039c": 160, "4c37": 160, "9ef3": 160, "d4734436f39a": 160, "depth_512": 160, "0005099773406982422": 160, "0005548000335693359": 160, "d83ac439": 160, "2929": 160, "4d78": 160, "b52b": 160, "f297873c3e44": 160, "9710221314803044": 160, "001462493086363885": 160, "9473471466489307": 160, "00285118172031131": 160, "xxxxxxxxxxxxxx": 161, "run0_qscor": 161, "result0_qscor": 161, "6753": 161, "5900": 161, "7632": 161, "4559": 161, "302": 161, "7302": 161, "5398": 161, "5397": 161, "5741": 161, "6753267011332195": 161, "09818278368319852": 161, "7632430005250532": 161, "06217576573542597": 161, "7302089185393258": 161, "03519230997204089": 161, "5397277675240996": 161, "034709059407279114": 161, "210": 162, "217": 162, "032": 162, "082": 162, "rem_quasidistribut": [162, 163], "time_batch": [162, 163], "cumulative_average_heavy_output_prob": [162, 163], "cumulative_stddev_heavy_output_prob": [162, 163], "rem_cumulative_average_heavy_output_prob": [162, 163], "rem_cumulative_stddev_heavy_output_prob": [162, 163], "rem_heavy_output_prob": [162, 163], "60546875": 162, "71875": 162, "578125": 162, "74609375": 162, "6328125": 162, "546875": 162, "56640625": 162, "76953125": 162, "75390625": 162, "67578125": 162, "6171875": 162, "55078125": 162, "64453125": 162, "6875": 162, "7109375": 162, "82421875": 162, "76171875": 162, "6484375": 162, "6015625": 162, "73828125": 162, "63671875": 162, "69140625": 162, "61328125": 162, "734375": 162, "57421875": 162, "6953125": 162, "55859375": 162, "69921875": 162, "609375": 162, "671875": 162, "77734375": 162, "6796875": 162, "62890625": 162, "6640625": 162, "66796875": 162, "62109375": 162, "703125": 162, "68359375": 162, "58984375": 162, "71484375": 162, "59375": 162, "79296875": 162, "66015625": 162, "65234375": 162, "59765625": 162, "65625": 162, "84765625": 162, "5859375": 162, "5625": 162, "72265625": 162, "640625": 162, "58203125": 162, "54296875": 162, "8203125": 162, "78515625": 162, "7265625": 162, "53515625": 162, "5703125": 162, "5546875": 162, "5390625": 162, "828125": 162, "80859375": 162, "765625": 162, "81640625": 162, "5234375": 162, "75": 162, "73046875": 162, "87890625": 162, "7890625": 162, "7734375": 162, "7421875": 162, "70703125": 162, "50390625": 162, "7578125": 162, "52734375": 162, "78125": 162, "8125": 162, "average_heavy_output_prob": [162, 163], "649203125": 162, "021341903733745705": 162, "672703125": 162, "020984452845629994": 162, "rem_average_heavy_output_prob": [162, 163], "67954478782619": 162, "020869291754367154": 162, "rem_is_succes": [162, 163], "rem_qv_result": [162, 163], "710149650958595": 162, "020289757228807877": 162, "vanilla_4_qubits_": [162, 163], "vanilla_rem_4_qubits_": 162, "Or": [162, 163], "onc": [162, 163, 167], "668": 163, "pedrofigueroaromero": 163, "anaconda3": 163, "env": 163, "lib": 163, "site": 163, "170": 163, "userwarn": 163, "unknown": 163, "unknown_opt": 163, "190": 163, "server": 163, "e48420cb": 163, "30dc": 163, "4274": 163, "9d7d": 163, "e5fffa68f73a": 163, "7404ae11": 163, "823a": 163, "4e66": 163, "b2c4": 163, "41361cf10c69": 163, "untranspiled_circuit": 163, "q_0": 163, "q_1": 163, "q_2": 163, "mea": 163, "48526": 163, "79781": 163, "58665": 163, "3705": 163, "1471": 163, "1775": 163, "1521": 163, "q_3": 163, "q_4": 163, "73475": 163, "1344": 163, "q_5": 163, "q_6": 163, "30103": 163, "7711": 163, "273": 163, "3108": 163, "6909": 163, "6665": 163, "65249": 163, "8837": 163, "24328": 163, "3169": 163, "6809": 163, "71478125": 163, "020192524094250205": 163, "7261292473074281": 163, "019943197512544274": 163, "vanilla_3_qubits_": 163, "vanilla_rem_3_qubits_": 163, "collect": 164, "demonstr": 164, "variou": 164, "rest": 164, "summari": [164, 165], "releas": 165, "date": [165, 166], "finland": 165, "tool": [165, 167], "changelog": 165, "search": 165, "page": [165, 166], "januari": 166, "2004": 166, "AND": 166, "FOR": 166, "reproduct": 166, "shall": 166, "licensor": 166, "owner": 166, "entiti": 166, "author": 166, "grant": 166, "legal": 166, "power": 166, "direct": 166, "indirect": 166, "caus": 166, "contract": 166, "ownership": 166, "fifti": 166, "percent": 166, "outstand": 166, "iii": 166, "benefici": 166, "exercis": 166, "mechan": 166, "transform": 166, "translat": 166, "media": 166, "authorship": 166, "attach": 166, "appendix": 166, "editori": 166, "revis": 166, "elabor": 166, "whole": 166, "remain": 166, "mere": 166, "link": 166, "bind": 166, "interfac": 166, "thereof": 166, "contribut": 166, "intention": 166, "inclus": 166, "behalf": 166, "electron": 166, "verbal": 166, "mail": 166, "issu": 166, "track": 166, "discuss": 166, "exclud": 166, "conspicu": 166, "mark": 166, "Not": 166, "contributor": 166, "whom": 166, "been": 166, "receiv": 166, "incorpor": 166, "subject": 166, "herebi": 166, "perpetu": 166, "worldwid": 166, "charg": 166, "royalti": 166, "irrevoc": 166, "reproduc": 166, "publicli": 166, "sublicens": 166, "patent": 166, "sell": 166, "transfer": 166, "claim": 166, "necessarili": 166, "infring": 166, "alon": 166, "institut": 166, "litig": 166, "counterclaim": 166, "lawsuit": 166, "alleg": 166, "contributori": 166, "redistribut": 166, "medium": 166, "meet": 166, "recipi": 166, "carri": 166, "promin": 166, "retain": 166, "trademark": 166, "pertain": 166, "wherev": 166, "third": 166, "parti": 166, "normal": 166, "appear": 166, "content": 166, "alongsid": 166, "addendum": 166, "constru": 166, "compli": 166, "explicitli": 166, "notwithstand": 166, "noth": 166, "herein": 166, "supersed": 166, "agreement": 166, "regard": 166, "trade": 166, "servic": [166, 167], "reason": 166, "customari": 166, "disclaim": 166, "merchant": 166, "particular": 166, "respons": 166, "appropri": 166, "risk": 166, "liabil": 166, "event": 166, "tort": 166, "neglig": 166, "deliber": [166, 167], "grossli": 166, "liabl": 166, "damag": 166, "special": 166, "incident": 166, "consequenti": 166, "charact": 166, "aris": 166, "inabl": 166, "loss": 166, "goodwil": 166, "stoppag": 166, "failur": 166, "malfunct": 166, "commerci": 166, "even": 166, "advis": 166, "fee": 166, "indemn": 166, "oblig": 166, "indemnifi": 166, "defend": 166, "hold": 166, "harmless": 166, "incur": 166, "assert": 166, "boilerpl": 166, "enclos": 166, "bracket": 166, "don": 166, "t": 166, "comment": 166, "syntax": 166, "easier": 166, "archiv": 166, "repositori": [166, 167], "licenc": 166, "src": 166, "raphael": 166, "brieger": 166, "ingo": 166, "roth": 166, "martin": 166, "kliesch": 166, "comprehens": 167, "modular": 167, "easi": 167, "command": 167, "042311": 167, "lett": 167, "080505": 167, "prx": 167, "2023": 167, "129": 167, "150502": 167, "2022": 167, "holist": 167, "032328": 167, "0712": 167, "0921": 167, "2007": 167, "ieee": 167, "tran": 167, "eng": 167, "split": 167, "legaci": 167, "wrap": 167, "benchmarkexperi": 167, "uv": 167, "highli": 167, "With": 167, "machin": 167, "venv": 167, "read": 167, "prompt": 167, "suppli": 167, "txt": 167, "lock": 167, "directli": 167, "repo": 167, "pypi": 167, "lint": 167, "cicd": 167, "clone": 167, "directori": 167, "docbuild": 167, "pyproject": 167, "toml": 167, "commit": 167, "upgrad": 167, "transit": 167, "cloud": 167, "prem": 167, "platform": 167, "authent": 167, "your_token": 167, "example_irb": 167, "example_experi": 167, "setup": 167, "weekli": 167, "daili": 167, "gitlab": 167, "scheduled_experi": 167}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "compressive_gst"], [38, 0, 0, "-", "entanglement"], [53, 0, 0, "-", "logging_config"], [54, 0, 0, "-", "optimization"], [67, 0, 0, "-", "quantum_volume"], [86, 0, 0, "-", "randomized_benchmarking"], [130, 0, 0, "-", "readout_mitigation"], [134, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[20, 0, 0, "-", "compressive_gst"], [26, 0, 0, "-", "gst_analysis"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[21, 1, 1, "", "CompressiveGST"], [22, 1, 1, "", "GSTConfiguration"], [23, 5, 1, "", "create_predefined_gate_set"], [24, 5, 1, "", "parse_gate_set"], [25, 5, 1, "", "parse_layouts"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_meas_circuits"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, 3, 1, "", "batch_size"], [22, 3, 1, "", "benchmark"], [22, 3, 1, "", "bootstrap_samples"], [22, 3, 1, "", "convergence_criteria"], [22, 3, 1, "", "from_init"], [22, 3, 1, "", "gate_labels"], [22, 3, 1, "", "gate_set"], [22, 3, 1, "", "max_inits"], [22, 3, 1, "", "max_iterations"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_circuits"], [22, 3, 1, "", "opt_method"], [22, 3, 1, "", "qubit_layouts"], [22, 3, 1, "", "rank"], [22, 3, 1, "", "seq_len_list"], [22, 3, 1, "", "shots"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[27, 5, 1, "", "bootstrap_errors"], [28, 5, 1, "", "dataframe_to_figure"], [29, 5, 1, "", "dataset_counts_to_mgst_format"], [30, 5, 1, "", "generate_basis_labels"], [31, 5, 1, "", "generate_gate_results"], [32, 5, 1, "", "generate_non_gate_results"], [33, 5, 1, "", "generate_unit_rank_gate_results"], [34, 5, 1, "", "mgst_analysis"], [35, 5, 1, "", "pandas_results_to_observations"], [36, 5, 1, "", "result_str_to_floats"], [37, 5, 1, "", "run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[39, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[40, 1, 1, "", "GHZBenchmark"], [41, 1, 1, "", "GHZConfiguration"], [42, 5, 1, "", "extract_fidelities"], [43, 5, 1, "", "fidelity_analysis"], [44, 5, 1, "", "fidelity_ghz_coherences"], [45, 5, 1, "", "fidelity_ghz_randomized_measurements"], [46, 5, 1, "", "generate_ghz_linear"], [47, 5, 1, "", "generate_ghz_log_cruz"], [48, 5, 1, "", "generate_ghz_log_mooney"], [49, 5, 1, "", "generate_ghz_spanning_tree"], [50, 5, 1, "", "get_cx_map"], [51, 5, 1, "", "get_edges"], [52, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, 2, 1, "", "add_configuration_to_dataset"], [40, 2, 1, "", "analysis_function"], [40, 2, 1, "", "append_rms"], [40, 2, 1, "", "execute"], [40, 2, 1, "", "generate_coherence_meas_circuits"], [40, 2, 1, "", "generate_native_ghz"], [40, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, 3, 1, "", "benchmark"], [41, 3, 1, "", "cal_url"], [41, 3, 1, "", "custom_qubits_array"], [41, 3, 1, "", "fidelity_routine"], [41, 3, 1, "", "mit_shots"], [41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "num_RMs"], [41, 3, 1, "", "optimize_sqg"], [41, 3, 1, "", "qiskit_optim_level"], [41, 3, 1, "", "qubit_counts"], [41, 3, 1, "", "rem"], [41, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[41, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[55, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[56, 1, 1, "", "QScoreBenchmark"], [57, 1, 1, "", "QScoreConfiguration"], [58, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [59, 5, 1, "", "compute_expectation_value"], [60, 5, 1, "", "create_objective_function"], [61, 5, 1, "", "cut_cost_function"], [62, 5, 1, "", "get_optimal_angles"], [63, 5, 1, "", "is_successful"], [64, 5, 1, "", "plot_approximation_ratios"], [65, 5, 1, "", "qscore_analysis"], [66, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[56, 2, 1, "", "add_all_meta_to_dataset"], [56, 2, 1, "", "analysis_function"], [56, 2, 1, "", "choose_qubits_custom"], [56, 2, 1, "", "choose_qubits_naive"], [56, 2, 1, "", "execute"], [56, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[57, 3, 1, "", "benchmark"], [57, 3, 1, "", "choose_qubits_routine"], [57, 3, 1, "", "custom_qubits_array"], [57, 3, 1, "", "max_num_nodes"], [57, 3, 1, "", "min_num_nodes"], [57, 3, 1, "", "min_num_qubits"], [57, 3, 1, "", "model_computed_fields"], [57, 3, 1, "", "model_config"], [57, 3, 1, "", "model_fields"], [57, 3, 1, "", "num_instances"], [57, 3, 1, "", "num_qaoa_layers"], [57, 3, 1, "", "optimize_sqg"], [57, 3, 1, "", "qiskit_optim_level"], [57, 3, 1, "", "seed"], [57, 3, 1, "", "use_classically_optimized_angles"], [57, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[68, 0, 0, "-", "clops"], [74, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[69, 1, 1, "", "CLOPSBenchmark"], [70, 1, 1, "", "CLOPSConfiguration"], [71, 5, 1, "", "clops_analysis"], [72, 5, 1, "", "plot_times"], [73, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[69, 2, 1, "", "add_all_meta_to_dataset"], [69, 2, 1, "", "analysis_function"], [69, 2, 1, "", "append_parameterized_unitary"], [69, 2, 1, "", "assign_random_parameters_to_all"], [69, 2, 1, "", "clops_cycle"], [69, 2, 1, "", "execute"], [69, 2, 1, "", "generate_circuit_list"], [69, 2, 1, "", "generate_random_parameters"], [69, 2, 1, "", "generate_single_circuit"], [69, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[70, 3, 1, "", "benchmark"], [70, 3, 1, "", "clops_h_bool"], [70, 3, 1, "", "model_computed_fields"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "model_fields"], [70, 3, 1, "", "num_circuits"], [70, 3, 1, "", "num_shots"], [70, 3, 1, "", "num_updates"], [70, 3, 1, "", "optimize_sqg"], [70, 3, 1, "", "physical_layout"], [70, 3, 1, "", "qiskit_optim_level"], [70, 3, 1, "", "qubits"], [70, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[75, 1, 1, "", "QuantumVolumeBenchmark"], [76, 1, 1, "", "QuantumVolumeConfiguration"], [77, 5, 1, "", "compute_heavy_output_probabilities"], [78, 5, 1, "", "cumulative_hop"], [79, 5, 1, "", "cumulative_std"], [80, 5, 1, "", "get_ideal_heavy_outputs"], [81, 5, 1, "", "get_rem_hops"], [82, 5, 1, "", "heavy_projector"], [83, 5, 1, "", "is_successful"], [84, 5, 1, "", "plot_hop_threshold"], [85, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[75, 2, 1, "", "add_all_circuits_to_dataset"], [75, 2, 1, "", "add_all_meta_to_dataset"], [75, 2, 1, "", "analysis_function"], [75, 2, 1, "", "execute"], [75, 2, 1, "", "generate_circuit_list"], [75, 2, 1, "", "generate_single_circuit"], [75, 2, 1, "", "get_rem_quasidistro"], [75, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[76, 3, 1, "", "benchmark"], [76, 3, 1, "", "choose_qubits_routine"], [76, 3, 1, "", "custom_qubits_array"], [76, 3, 1, "", "mit_shots"], [76, 3, 1, "", "model_computed_fields"], [76, 3, 1, "", "model_config"], [76, 3, 1, "", "model_fields"], [76, 3, 1, "", "num_circuits"], [76, 3, 1, "", "num_sigmas"], [76, 3, 1, "", "optimize_sqg"], [76, 3, 1, "", "physical_layout"], [76, 3, 1, "", "qiskit_optim_level"], [76, 3, 1, "", "rem"], [76, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[87, 0, 0, "-", "clifford_rb"], [92, 0, 0, "-", "interleaved_rb"], [97, 0, 0, "-", "mirror_rb"], [107, 0, 0, "-", "multi_lmfit"], [112, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[88, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[89, 1, 1, "", "CliffordRBConfiguration"], [90, 1, 1, "", "CliffordRandomizedBenchmarking"], [91, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[89, 3, 1, "", "benchmark"], [89, 3, 1, "", "model_computed_fields"], [89, 3, 1, "", "model_config"], [89, 3, 1, "", "model_fields"], [89, 3, 1, "", "num_circuit_samples"], [89, 3, 1, "", "parallel_execution"], [89, 3, 1, "", "qubits_array"], [89, 3, 1, "", "sequence_lengths"], [89, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[90, 2, 1, "", "add_all_circuits_to_dataset"], [90, 2, 1, "", "add_all_metadata_to_dataset"], [90, 2, 1, "", "analysis_function"], [90, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[93, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[94, 1, 1, "", "InterleavedRBConfiguration"], [95, 1, 1, "", "InterleavedRandomizedBenchmarking"], [96, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[94, 3, 1, "", "interleaved_gate"], [94, 3, 1, "", "interleaved_gate_params"], [94, 3, 1, "", "model_computed_fields"], [94, 3, 1, "", "model_config"], [94, 3, 1, "", "model_fields"], [94, 3, 1, "", "num_circuit_samples"], [94, 3, 1, "", "parallel_execution"], [94, 3, 1, "", "qubits_array"], [94, 3, 1, "", "sequence_lengths"], [94, 3, 1, "", "shots"], [94, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[95, 2, 1, "", "add_all_circuits_to_dataset"], [95, 2, 1, "", "add_all_meta_to_dataset"], [95, 2, 1, "", "analysis_function"], [95, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[98, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[99, 1, 1, "", "MirrorRBConfiguration"], [100, 1, 1, "", "MirrorRandomizedBenchmarking"], [101, 5, 1, "", "compute_polarizations"], [102, 5, 1, "", "edge_grab"], [103, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [104, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [105, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [106, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[99, 3, 1, "", "benchmark"], [99, 3, 1, "", "density_2q_gates"], [99, 3, 1, "", "depths_array"], [99, 3, 1, "", "model_computed_fields"], [99, 3, 1, "", "model_config"], [99, 3, 1, "", "model_fields"], [99, 3, 1, "", "num_circuit_samples"], [99, 3, 1, "", "num_pauli_samples"], [99, 3, 1, "", "qiskit_optim_level"], [99, 3, 1, "", "qubits_array"], [99, 3, 1, "", "routing_method"], [99, 3, 1, "", "shots"], [99, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[100, 2, 1, "", "add_all_meta_to_dataset"], [100, 2, 1, "", "analysis_function"], [100, 2, 1, "", "execute"], [100, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[108, 5, 1, "", "create_multi_dataset_params"], [109, 5, 1, "", "eval_func_single_dataset"], [110, 5, 1, "", "get_param_names_from_func_signature"], [111, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[113, 5, 1, "", "compute_inverse_clifford"], [114, 5, 1, "", "estimate_survival_probabilities"], [115, 5, 1, "", "exponential_rb"], [116, 5, 1, "", "fit_decay_lmfit"], [117, 5, 1, "", "generate_all_rb_circuits"], [118, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [119, 5, 1, "", "generate_random_clifford_seq_circuits"], [120, 5, 1, "", "get_survival_probabilities"], [121, 5, 1, "", "import_native_gate_cliffords"], [122, 5, 1, "", "lmfit_minimizer"], [123, 5, 1, "", "plot_rb_decay"], [124, 5, 1, "", "relabel_qubits_array_from_zero"], [125, 5, 1, "", "submit_parallel_rb_job"], [126, 5, 1, "", "submit_sequential_rb_jobs"], [127, 5, 1, "", "survival_probabilities_parallel"], [128, 5, 1, "", "validate_irb_gate"], [129, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[131, 1, 1, "", "M3IQM"], [132, 5, 1, "", "apply_readout_error_mitigation"], [133, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[131, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[135, 5, 1, "", "count_2q_layers"], [136, 5, 1, "", "count_native_gates"], [137, 5, 1, "", "get_iqm_backend"], [138, 5, 1, "", "marginal_distribution"], [139, 5, 1, "", "perform_backend_transpilation"], [140, 5, 1, "", "reduce_to_active_qubits"], [141, 5, 1, "", "retrieve_all_counts"], [142, 5, 1, "", "retrieve_all_job_metadata"], [143, 5, 1, "", "set_coupling_map"], [144, 5, 1, "", "sort_batches_by_final_layout"], [145, 5, 1, "", "submit_execute"], [146, 5, 1, "", "timeit"], [147, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 160, 161, 162, 163, 165, 167], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 153, 154, 155, 156, 157, 159, 160, 165, 167], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 153, 155, 163], "compressive_gst": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "compressivegst": 21, "gstconfigur": 22, "create_predefined_gate_set": 23, "parse_gate_set": 24, "parse_layout": 25, "gst_analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "bootstrap_error": 27, "dataframe_to_figur": 28, "dataset_counts_to_mgst_format": 29, "generate_basis_label": 30, "generate_gate_result": 31, "generate_non_gate_result": 32, "generate_unit_rank_gate_result": 33, "mgst_analysi": 34, "pandas_results_to_observ": 35, "result_str_to_float": 36, "run_mgst_wrapp": 37, "entangl": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "ghz": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 153, 156, 157], "ghzbenchmark": 40, "ghzconfigur": 41, "extract_fidel": 42, "fidelity_analysi": 43, "fidelity_ghz_coher": 44, "fidelity_ghz_randomized_measur": 45, "generate_ghz_linear": 46, "generate_ghz_log_cruz": 47, "generate_ghz_log_moonei": 48, "generate_ghz_spanning_tre": 49, "get_cx_map": 50, "get_edg": 51, "plot_fidel": 52, "logging_config": 53, "optim": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "qscore": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 156, 161], "qscorebenchmark": 56, "qscoreconfigur": 57, "calculate_optimal_angles_for_qaoa_p1": 58, "compute_expectation_valu": 59, "create_objective_funct": 60, "cut_cost_funct": 61, "get_optimal_angl": 62, "is_success": [63, 83], "plot_approximation_ratio": 64, "qscore_analysi": 65, "run_qaoa": 66, "quantum_volum": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "clop": [68, 69, 70, 71, 72, 73, 153, 155, 156], "clopsbenchmark": 69, "clopsconfigur": 70, "clops_analysi": 71, "plot_tim": 72, "retrieve_clops_elapsed_tim": 73, "quantumvolumebenchmark": 75, "quantumvolumeconfigur": 76, "compute_heavy_output_prob": 77, "cumulative_hop": 78, "cumulative_std": 79, "get_ideal_heavy_output": 80, "get_rem_hop": 81, "heavy_projector": 82, "plot_hop_threshold": 84, "qv_analysi": 85, "randomized_benchmark": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "clifford_rb": [87, 88, 89, 90, 91], "cliffordrbconfigur": 89, "cliffordrandomizedbenchmark": 90, "clifford_rb_analysi": 91, "interleaved_rb": [92, 93, 94, 95, 96], "interleavedrbconfigur": 94, "interleavedrandomizedbenchmark": 95, "interleaved_rb_analysi": 96, "mirror_rb": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "mirrorrbconfigur": 99, "mirrorrandomizedbenchmark": 100, "compute_polar": 101, "edge_grab": 102, "generate_fixed_depth_mrb_circuit": 103, "generate_pauli_dressed_mrb_circuit": 104, "list_to_numcircuit_times_numpauli_matrix": 105, "mrb_analysi": 106, "multi_lmfit": [107, 108, 109, 110, 111], "create_multi_dataset_param": 108, "eval_func_single_dataset": 109, "get_param_names_from_func_signatur": 110, "multi_dataset_residu": 111, "randomized_benchmarking_common": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "compute_inverse_clifford": 113, "estimate_survival_prob": 114, "exponential_rb": 115, "fit_decay_lmfit": 116, "generate_all_rb_circuit": 117, "generate_fixed_depth_parallel_rb_circuit": 118, "generate_random_clifford_seq_circuit": 119, "get_survival_prob": 120, "import_native_gate_clifford": 121, "lmfit_minim": 122, "plot_rb_decai": 123, "relabel_qubits_array_from_zero": 124, "submit_parallel_rb_job": 125, "submit_sequential_rb_job": 126, "survival_probabilities_parallel": 127, "validate_irb_g": 128, "validate_rb_qubit": 129, "readout_mitig": [130, 131, 132, 133], "m3iqm": 131, "apply_readout_error_mitig": 132, "readout_error_m3": 133, "util": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "count_2q_lay": 135, "count_native_g": 136, "get_iqm_backend": 137, "marginal_distribut": 138, "perform_backend_transpil": 139, "reduce_to_active_qubit": 140, "retrieve_all_count": 141, "retrieve_all_job_metadata": 142, "set_coupling_map": 143, "sort_batches_by_final_layout": 144, "submit_execut": 145, "timeit": 146, "xrvariable_to_count": 147, "changelog": 148, "version": 148, "2": [148, 150], "14": 148, "13": 148, "12": 148, "11": 148, "10": 148, "9": 148, "8": 148, "7": 148, "6": 148, "5": 148, "4": 148, "3": 148, "1": 148, "0": 148, "develop": [149, 167], "qubit": 150, "clifford": [150, 153, 154, 156], "group": 150, "decomposit": 150, "gener": [150, 155, 160, 162, 163], "1q": [150, 159], "2q": [150, 159], "dump": 150, "pickl": 150, "file": 150, "load": 150, "count": 150, "element": 150, "A": 150, "wai": 150, "work": 150, "out": [150, 158], "invers": 150, "sequenc": 150, "design": 150, "condit": 150, "how": 151, "make": 151, "your": 151, "own": 151, "devic": 152, "spark": 153, "connect": 153, "backend": [153, 154, 155, 156, 158, 159, 160, 161, 162, 163], "state": [153, 156, 157], "fidel": [153, 156, 157], "quantum": [153, 156, 162, 163], "volum": [153, 156, 162, 163], "layer": [153, 155], "oper": [153, 155], "per": [153, 155], "second": [153, 155], "random": [153, 154, 156, 159, 160], "interleav": [153, 156, 159], "irb": [153, 159], "q": [153, 161], "score": [153, 161], "summari": [153, 156], "rb": [154, 160], "choos": [154, 155, 156, 158, 159, 160, 161, 162, 163], "defin": [154, 155, 156, 158, 159, 160, 161, 162], "set": [154, 155, 156, 158, 160, 161, 162, 163], "token": [154, 155, 156, 160, 161, 162, 163], "us": [154, 155, 156, 160, 161, 162, 163, 167], "reson": [154, 155, 156, 160, 161, 162, 163], "configur": [154, 155, 157, 158, 159, 160, 161, 162, 163], "run": [154, 155, 157, 159, 160, 161, 162, 163], "experi": [154, 155, 158, 159, 160, 161, 162, 163], "perform": [154, 155, 161, 162, 163], "analysi": [154, 155, 161, 162, 163], "list": [155, 160], "all": [155, 158, 160], "kei": [155, 160], "attribut": [155, 160], "dataset": [155, 160], "The": [155, 160], "observ": [155, 158, 160], "object": [155, 160], "contain": [155, 160], "result": [155, 157, 158, 159, 160], "plot": [155, 158, 160, 162, 163], "notebook": [156, 167], "mirror": [156, 160], "greenberg": 157, "horn": 157, "zeiling": 157, "definit": 157, "access": [157, 158], "compress": 158, "gate": [158, 159], "tomographi": 158, "gst": 158, "minim": 158, "execut": 158, "": 158, "examin": 158, "high": 158, "level": 158, "store": 158, "final": 158, "estim": 158, "further": 158, "process": 158, "creat": 158, "custom": 158, "check": 158, "matrix": 158, "correspond": 158, "pi": 158, "rotat": 158, "around": 158, "y": 158, "axi": 158, "analyz": [159, 160], "non": 159, "nativ": 159, "mrb": 160, "qv": [162, 163], "deneb": 163, "inspect": 163, "exampl": 164, "content": 165, "indic": 165, "tabl": 165, "licens": 166, "instal": 167, "latest": 167, "releas": 167, "option": 167, "depend": 167, "chang": 167, "character": 167, "physic": 167, "hardwar": 167, "jupyt": 167, "python": 167, "script": 167, "schedul": 167, "ci": 167, "cd": 167, "pipelin": 167}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, "iqm-benchmarks-compressive-gst-compressive-gst-compressivegst"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, "iqm-benchmarks-compressive-gst-compressive-gst-gstconfiguration"]], "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set": [[23, "iqm-benchmarks-compressive-gst-compressive-gst-create-predefined-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set": [[24, "iqm-benchmarks-compressive-gst-compressive-gst-parse-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts": [[25, "iqm-benchmarks-compressive-gst-compressive-gst-parse-layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors": [[27, "iqm-benchmarks-compressive-gst-gst-analysis-bootstrap-errors"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure": [[28, "iqm-benchmarks-compressive-gst-gst-analysis-dataframe-to-figure"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format": [[29, "iqm-benchmarks-compressive-gst-gst-analysis-dataset-counts-to-mgst-format"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels": [[30, "iqm-benchmarks-compressive-gst-gst-analysis-generate-basis-labels"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results": [[31, "iqm-benchmarks-compressive-gst-gst-analysis-generate-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results": [[32, "iqm-benchmarks-compressive-gst-gst-analysis-generate-non-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results": [[33, "iqm-benchmarks-compressive-gst-gst-analysis-generate-unit-rank-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis": [[34, "iqm-benchmarks-compressive-gst-gst-analysis-mgst-analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations": [[35, "iqm-benchmarks-compressive-gst-gst-analysis-pandas-results-to-observations"]], "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats": [[36, "iqm-benchmarks-compressive-gst-gst-analysis-result-str-to-floats"]], "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper": [[37, "iqm-benchmarks-compressive-gst-gst-analysis-run-mgst-wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[42, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[43, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[44, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[45, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[46, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[47, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[48, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[49, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[50, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[51, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[52, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[53, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[54, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[55, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[56, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[57, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[58, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[59, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[60, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[61, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[62, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[63, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[64, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[65, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[66, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[67, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[68, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[69, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[70, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[71, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[72, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[73, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[74, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[75, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[76, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[77, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[78, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[79, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[80, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[81, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[82, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[83, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[84, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[85, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[86, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[87, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[89, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[90, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[91, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[92, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[94, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[95, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[96, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[97, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[99, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[100, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[101, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[102, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[103, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[104, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[105, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[106, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[107, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[108, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[109, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[110, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[111, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[112, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[113, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[114, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[115, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[116, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[117, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[118, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[119, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[120, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[121, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[122, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[123, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[124, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[125, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[126, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[127, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[128, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[129, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[130, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[131, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[132, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[133, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[134, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.count_2q_layers": [[135, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[136, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[137, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[138, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[139, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[140, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[141, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[142, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[143, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[144, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[145, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[146, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[147, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[148, "changelog"]], "Version 2.14": [[148, "version-2-14"]], "Version 2.13": [[148, "version-2-13"]], "Version 2.12": [[148, "version-2-12"]], "Version 2.11": [[148, "version-2-11"]], "Version 2.10": [[148, "version-2-10"]], "Version 2.9": [[148, "version-2-9"]], "Version 2.8": [[148, "version-2-8"]], "Version 2.7": [[148, "version-2-7"]], "Version 2.6": [[148, "version-2-6"]], "Version 2.5": [[148, "version-2-5"]], "Version 2.4": [[148, "version-2-4"]], "Version 2.3": [[148, "version-2-3"]], "Version 2.2": [[148, "version-2-2"]], "Version 2.1": [[148, "version-2-1"]], "Version 2.0": [[148, "version-2-0"]], "Version 1.12": [[148, "version-1-12"]], "Version 1.11": [[148, "version-1-11"]], "Version 1.10": [[148, "version-1-10"]], "Version 1.9": [[148, "version-1-9"]], "Version 1.8": [[148, "version-1-8"]], "Version 1.7": [[148, "version-1-7"]], "Version 1.6": [[148, "version-1-6"]], "Version 1.5": [[148, "version-1-5"]], "Version 1.4": [[148, "version-1-4"]], "Version 1.3": [[148, "version-1-3"]], "Version 1.2": [[148, "version-1-2"]], "Version 1.1": [[148, "version-1-1"]], "Version 1.0": [[148, "version-1-0"]], "Development": [[149, "development"]], "2-Qubit Clifford Group Decomposition": [[150, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[150, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[150, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[150, "dump-on-a-pickle-file"]], "Load": [[150, "load"]], "Count elements": [[150, "count-elements"]], "2Q": [[150, "q"]], "1Q": [[150, "id1"]], "A way to work out the inverse of sequences": [[150, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[150, "design-condition"]], "How to make your own benchmark?": [[151, "how-to-make-your-own-benchmark"]], "Devices": [[152, "devices"]], "Benchmarking IQM Spark": [[153, "benchmarking-iqm-spark"]], "Connect to the backend": [[153, "connect-to-the-backend"]], "GHZ state fidelity": [[153, "ghz-state-fidelity"], [156, "ghz-state-fidelity"]], "Quantum Volume": [[153, "quantum-volume"], [156, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[153, "circuit-layer-operations-per-second-clops"], [155, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[153, "clifford-randomized-benchmarking"], [156, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[153, "interleaved-randomized-benchmarking-irb"], [159, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[153, "q-score"], [161, "q-score"]], "Summary": [[153, "summary"]], "Clifford Randomized Benchmarking (RB)": [[154, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[154, "choose-or-define-a-backend"], [155, "choose-or-define-a-backend"], [156, "choose-or-define-a-backend"], [158, "choose-or-define-a-backend"], [159, "choose-or-define-a-backend"], [160, "choose-or-define-a-backend"], [161, "choose-or-define-a-backend"], [162, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[154, "set-iqm-token-if-using-resonance"], [156, "set-iqm-token-if-using-resonance"], [160, "set-iqm-token-if-using-resonance"], [161, "set-iqm-token-if-using-resonance"], [162, "set-iqm-token-if-using-resonance"], [163, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[154, "randomized-benchmarking-configuration"]], "Run the experiment": [[154, "run-the-experiment"], [155, "run-the-experiment"], [160, "run-the-experiment"], [161, "run-the-experiment"], [162, "run-the-experiment"], [163, "run-the-experiment"]], "Perform the analysis": [[154, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[155, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[155, "clops-configuration"]], "Perform Analysis": [[155, "perform-analysis"], [161, "perform-analysis"], [162, "perform-analysis"], [163, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[155, "list-all-the-keys-in-the-attributes-of-the-dataset"], [160, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[155, "the-observation-object-contains-the-benchmark-results"], [160, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[155, "generate-plots"], [160, "generate-plots"], [162, "generate-plots"], [163, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[156, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[156, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[156, "mirror-randomized-benchmarking"]], "CLOPS": [[156, "clops"]], "QScore": [[156, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[157, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[157, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[157, "running-the-benchmark"]], "Accessing the results": [[157, "accessing-the-results"]], "Compressive Gate Set Tomography (GST)": [[158, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[158, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[158, "execute-gst-experiment-s"]], "Examine the results": [[158, "examine-the-results"]], "High level results stored at result.observations": [[158, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[158, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[158, "plots"]], "Creating a custom gate set": [[158, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[158, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[158, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[159, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[159, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[159, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[159, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[159, "id1"]], "Run the experiment - 2Q gate IRB": [[159, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[159, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[159, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[160, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[160, "mirror-rb-configuration"]], "Analyze the results": [[160, "analyze-the-results"]], "Qscore Configuration": [[161, "qscore-configuration"]], "Quantum Volume (QV)": [[162, "quantum-volume-qv"]], "Quantum Volume Configuration": [[162, "quantum-volume-configuration"], [163, "quantum-volume-configuration"]], "QV on Deneb": [[163, "qv-on-deneb"]], "Choose Deneb as a backend": [[163, "choose-deneb-as-a-backend"]], "Inspect the circuits": [[163, "inspect-the-circuits"]], "Examples": [[164, "examples"]], "IQM Benchmarks": [[165, "iqm-benchmarks"], [167, "iqm-benchmarks"]], "Contents": [[165, "contents"]], "Indices and tables": [[165, "indices-and-tables"]], "License": [[166, "license"]], "Installation (latest release)": [[167, "installation-latest-release"]], "Optional dependencies": [[167, "optional-dependencies"]], "Development installation (latest changes)": [[167, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[167, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[167, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[167, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.compressive_gst"], [20, "module-iqm.benchmarks.compressive_gst.compressive_gst"], [26, "module-iqm.benchmarks.compressive_gst.gst_analysis"], [38, "module-iqm.benchmarks.entanglement"], [39, "module-iqm.benchmarks.entanglement.ghz"], [53, "module-iqm.benchmarks.logging_config"], [54, "module-iqm.benchmarks.optimization"], [55, "module-iqm.benchmarks.optimization.qscore"], [67, "module-iqm.benchmarks.quantum_volume"], [68, "module-iqm.benchmarks.quantum_volume.clops"], [74, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [86, "module-iqm.benchmarks.randomized_benchmarking"], [87, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [92, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [97, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [107, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [112, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [130, "module-iqm.benchmarks.readout_mitigation"], [134, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "compressivegst (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST"]], "add_configuration_to_dataset() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst static method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.analysis_function"]], "execute() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.execute"]], "generate_meas_circuits() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.generate_meas_circuits"]], "gstconfiguration (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration"]], "batch_size (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.batch_size"]], "benchmark (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.benchmark"]], "bootstrap_samples (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.bootstrap_samples"]], "convergence_criteria (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.convergence_criteria"]], "from_init (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.from_init"]], "gate_labels (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_labels"]], "gate_set (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_set"]], "max_inits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_inits"]], "max_iterations (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_iterations"]], "model_computed_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_config"]], "model_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.num_circuits"]], "opt_method (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.opt_method"]], "qubit_layouts (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.qubit_layouts"]], "rank (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rank"]], "seq_len_list (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.seq_len_list"]], "shots (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.shots"]], "create_predefined_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[23, "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set"]], "parse_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[24, "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set"]], "parse_layouts() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[25, "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "bootstrap_errors() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[27, "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors"]], "dataframe_to_figure() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[28, "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure"]], "dataset_counts_to_mgst_format() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[29, "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format"]], "generate_basis_labels() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[30, "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels"]], "generate_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[31, "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results"]], "generate_non_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[32, "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results"]], "generate_unit_rank_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[33, "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results"]], "mgst_analysis() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[34, "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis"]], "pandas_results_to_observations() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[35, "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations"]], "result_str_to_floats() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[36, "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats"]], "run_mgst_wrapper() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[37, "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[42, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[43, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[44, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[45, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[46, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[47, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[48, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[49, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[50, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[51, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[52, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[53, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[54, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[55, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[58, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[59, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[60, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[61, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[62, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[63, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[64, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[65, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[66, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[67, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[68, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[71, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[72, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[73, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[74, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[78, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[79, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[80, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[81, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[82, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[83, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[84, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[85, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[86, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[87, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[92, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[97, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[102, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[103, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[104, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[105, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[107, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[108, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[109, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[110, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[111, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[112, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[113, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[114, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[115, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[116, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[117, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[118, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[119, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[120, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[121, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[122, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[123, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[124, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[125, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[126, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[127, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[128, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[129, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[130, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[131, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[131, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[132, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[133, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[134, "module-iqm.benchmarks.utils"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[135, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[136, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[137, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[138, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[139, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[140, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[141, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[142, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[143, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[144, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[145, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[146, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[147, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})