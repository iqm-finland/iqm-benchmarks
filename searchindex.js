Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.append_rms", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "example_clifford_rb", "examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.append_rms.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "example_clifford_rb.ipynb", "examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.append_rms", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Clifford Randomized Benchmarking (RB) Example", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 51, 96, 102, 110, 112, 121, 134, 135], "python": 1, "librari": [1, 76, 81, 110], "suit": [1, 135], "qcvv": [1, 133, 135], "subpackag": [1, 19, 36, 49, 68, 69, 74, 79], "modul": [1, 5, 15, 19, 35, 36, 49, 68, 69, 74, 79, 133], "gener": [2, 3, 18, 19, 21, 22, 28, 29, 30, 31, 32, 38, 46, 51, 54, 57, 66, 72, 76, 77, 81, 84, 85, 86, 89, 90, 99, 100, 101, 116, 130, 131, 134], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 37, 38, 39, 50, 51, 52, 56, 57, 58, 70, 71, 72, 75, 76, 77, 80, 81, 82, 99, 112, 113, 130, 134, 135], "inherit": [2, 3, 5, 15, 20, 37, 50, 56, 70, 75, 80, 112], "benchmarkbas": [2, 4, 135], "abc": [2, 3, 5, 6, 20, 37, 50, 56, 70, 75, 80], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 37, 39, 50, 52, 56, 58, 70, 71, 75, 76, 80, 81, 135], "pydant": [2, 4, 20, 22, 37, 39, 50, 52, 56, 58, 70, 71, 75, 76, 80, 81], "main": [2, 7, 8, 20, 37, 50, 56, 70, 75, 80], "basemodel": [2, 4, 20, 37, 50, 56, 70, 75, 80], "backend": [3, 6, 21, 22, 23, 24, 31, 38, 46, 51, 52, 57, 58, 66, 72, 77, 82, 84, 85, 86, 99, 100, 107, 108, 110, 111, 113, 114, 115, 118, 119, 121, 122, 125, 126, 127, 130, 135], "iqmbackendbas": [3, 6, 21, 23, 38, 51, 57, 72, 77, 82, 84, 85, 86, 99, 100, 101, 107, 108, 110, 111, 114, 118, 119, 121, 125, 127], "configur": [3, 4, 6, 21, 22, 38, 39, 51, 52, 57, 58, 65, 71, 72, 76, 77, 81, 82, 130, 134, 135], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 26, 32, 38, 39, 41, 51, 52, 57, 58, 71, 72, 76, 77, 81, 82, 94, 113, 130, 134], "The": [3, 6, 7, 12, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 38, 39, 42, 48, 51, 52, 54, 57, 58, 60, 61, 63, 64, 71, 72, 76, 77, 81, 82, 83, 84, 85, 95, 105, 109, 115, 118, 119, 121, 122, 123, 124, 128, 131, 134, 135], "implement": [3, 5, 6, 21, 22, 27], "all": [3, 4, 6, 7, 16, 17, 18, 22, 23, 32, 34, 38, 45, 51, 55, 57, 59, 60, 61, 64, 65, 71, 72, 76, 77, 82, 99, 105, 107, 108, 113, 123, 124, 130, 131, 134, 135], "from": [3, 4, 6, 7, 11, 21, 22, 24, 31, 32, 33, 39, 42, 48, 52, 54, 55, 57, 58, 59, 64, 66, 71, 76, 81, 83, 92, 105, 106, 109, 113, 115, 119, 123, 124, 125, 129, 130, 131, 134, 135], "which": [3, 6, 7, 8, 21, 22, 24, 31, 33, 38, 47, 49, 51, 52, 53, 57, 67, 71, 72, 73, 76, 77, 78, 81, 82, 88, 99, 105, 109, 113, 122, 134, 135], "thei": [3, 17], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 26, 38, 39, 51, 52, 57, 58, 71, 72, 76, 77, 81, 82, 113, 121, 130], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "abstract": [3, 6], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 34, 39, 46, 52, 54, 58, 66, 71, 76, 81, 92, 99, 115, 119, 122, 130, 131, 134], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 77, 78, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 21, 32, 36, 38, 46, 49, 51, 52, 57, 58, 59, 66, 71, 72, 76, 77, 81, 82, 83, 96, 102, 107, 108, 109, 121, 127, 128, 129, 130, 131, 134, 135], "full": [3, 52, 58, 135], "given": [3, 6, 7, 11, 21, 22, 23, 31, 32, 33, 34, 36, 38, 44, 49, 51, 57, 64, 65, 74, 83, 100, 101, 126, 135], "static": [3, 6, 21, 38, 51, 57, 72, 77, 82], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 21, 22, 24, 26, 27, 39, 41, 42, 43, 46, 48, 51, 52, 54, 55, 57, 58, 59, 62, 63, 64, 66, 71, 72, 76, 77, 81, 82, 83, 84, 85, 86, 96, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 127, 129], "check": [3, 45, 65], "whether": [3, 4, 22, 23, 39, 45, 46, 48, 51, 52, 57, 58, 65, 66, 71, 76, 100, 105, 121, 134], "requir": [3, 4, 22, 39, 52, 58, 71, 76, 81, 134, 135], "ar": [3, 4, 7, 11, 16, 17, 18, 22, 23, 32, 33, 57, 58, 86, 105, 111, 120, 122, 130, 134, 135], "met": 3, "valid": [3, 110, 111, 133, 135], "dictionari": [3, 4, 7, 11, 22, 39, 42, 51, 52, 55, 57, 58, 59, 62, 63, 64, 71, 76, 81, 82, 84, 85, 95, 99, 100, 101, 103, 107, 108, 114, 115, 118, 120, 126, 129, 131], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 134, 135], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 31, 33, 39, 46, 51, 52, 57, 58, 71, 76, 81, 84, 85, 86, 90, 95, 98, 99, 100, 101, 105, 107, 108, 110, 113, 121, 122, 123, 127, 131, 135], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 38, 39, 51, 52, 57, 58, 71, 72, 76, 77, 81, 82, 128, 134], "shot": [4, 22, 39, 52, 57, 58, 71, 76, 81, 107, 108, 113, 114, 127, 131, 135], "int": [4, 9, 11, 16, 17, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 46, 48, 51, 52, 54, 57, 58, 59, 62, 65, 66, 71, 76, 81, 82, 83, 84, 85, 86, 87, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 113, 114, 117, 120, 121, 123, 125, 126, 127, 129], "256": [4, 39, 52, 58, 71, 76, 81, 131], "max_gates_per_batch": [4, 22, 39, 52, 58, 71, 76, 81, 107, 108, 127, 131, 135], "calset_id": [4, 22, 39, 52, 58, 71, 76, 81, 107, 108, 127, 131, 135], "routing_method": [4, 22, 39, 52, 58, 71, 76, 81, 85, 86, 121, 131, 135], "liter": [4, 22, 39, 52, 58, 71, 76, 81, 125], "basic": [4, 22, 39, 52, 58, 71, 76, 81, 85, 86], "lookahead": [4, 22, 39, 52, 58, 71, 76, 81], "stochast": [4, 22, 39, 52, 58, 71, 76, 81], "sabr": [4, 22, 39, 52, 58, 71, 76, 81, 121, 131, 135], "physical_layout": [4, 22, 39, 52, 58, 71, 76, 81, 125, 131, 135], "fix": [4, 22, 39, 52, 58, 71, 76, 81, 82, 85, 100, 107, 109, 125, 130, 131, 135], "batch": [4, 17, 22, 39, 52, 58, 71, 76, 81, 107, 108, 125, 126, 127, 131], "number": [4, 21, 22, 27, 28, 29, 30, 31, 32, 34, 36, 38, 41, 43, 44, 46, 48, 49, 52, 57, 58, 65, 66, 68, 71, 76, 81, 82, 83, 84, 85, 86, 87, 96, 99, 100, 101, 102, 107, 108, 113, 114, 117, 118, 127], "us": [4, 6, 9, 16, 21, 22, 24, 26, 27, 31, 32, 33, 34, 35, 46, 48, 51, 52, 58, 81, 83, 98, 105, 113, 115, 127, 130, 134], "circuit": [4, 7, 10, 15, 16, 17, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 38, 42, 49, 51, 52, 57, 58, 59, 62, 65, 66, 71, 72, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 95, 96, 99, 100, 101, 102, 107, 108, 110, 113, 114, 117, 118, 121, 122, 126, 127, 129, 130, 131], "default": [4, 6, 12, 22, 39, 52, 57, 58, 66, 71, 76, 81, 101, 105, 113, 125, 131], "i": [4, 6, 7, 22, 24, 28, 31, 32, 34, 38, 39, 45, 47, 48, 51, 52, 53, 57, 58, 65, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 87, 88, 91, 106, 110, 113, 121, 125, 131, 134, 135], "2": [4, 33, 39, 45, 58, 65, 81, 100, 106, 117, 131, 133, 134, 135], "8": [4, 106, 131, 133, 134, 135], "maximum": [4, 48, 107, 108, 127], "gate": [4, 21, 22, 23, 28, 32, 33, 39, 49, 51, 52, 58, 68, 69, 72, 74, 76, 77, 81, 84, 86, 95, 99, 100, 101, 103, 105, 107, 108, 110, 117, 118, 121, 127, 135], "per": [4, 49, 52, 58, 71, 81, 83, 85, 86, 87, 107, 108, 113, 114, 127], "option": [4, 22, 23, 33, 39, 46, 57, 58, 76, 85, 86, 95, 98, 100, 101, 105, 107, 108, 110, 121, 122, 123, 127, 130, 133], "calibr": [4, 6, 22, 24, 33, 57, 58, 107, 108, 113, 114, 127], "id": [4, 127], "last": 4, "avail": [4, 134, 135], "qiskit": [4, 6, 39, 52, 58, 76, 81, 110, 121, 130], "rout": [4, 52, 58, 81, 121], "transpil": [4, 16, 21, 22, 26, 27, 39, 51, 52, 58, 81, 99, 100, 110, 114, 118, 121, 126, 130], "physic": [4, 22, 39, 51, 52, 57, 58, 62, 76, 81, 85, 125, 133], "layout": [4, 8, 11, 16, 17, 22, 34, 39, 51, 52, 57, 58, 81, 82, 107, 108, 115, 125, 130], "constrain": [4, 125], "dure": [4, 13, 57, 72, 77], "select": [4, 22, 39, 58, 64], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 48, 49, 51, 52, 57, 58, 62, 66, 68, 71, 72, 76, 81, 82, 83, 84, 85, 86, 96, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 117, 121, 122, 125, 126, 130, 131], "initi": [4, 6, 22, 35, 115], "allow": [4, 130, 135], "ani": [4, 8, 26, 27, 55, 57, 76, 82, 87, 105, 107, 108, 114, 122, 124, 134], "other": [4, 22, 130, 134, 135], "accord": [4, 21, 29, 30, 38, 84, 125, 126], "final": [4, 6, 33, 52, 57, 58, 62, 81, 121, 125, 126], "measur": [4, 21, 22, 26, 38, 41, 51, 52, 57, 58, 62, 71, 76, 81, 109, 114, 118, 125, 126], "model_computed_field": [4, 22, 39, 52, 58, 71, 76, 81], "classvar": [4, 22, 39, 52, 58, 71, 76, 81], "dict": [4, 7, 11, 22, 26, 27, 39, 41, 42, 48, 51, 52, 54, 55, 57, 58, 59, 62, 63, 64, 71, 76, 81, 82, 83, 84, 85, 86, 95, 96, 99, 100, 101, 102, 103, 105, 107, 108, 109, 114, 115, 118, 120, 123, 124, 126, 127, 129], "computedfieldinfo": [4, 22, 39, 52, 58, 71, 76, 81], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 38, 39, 47, 51, 52, 53, 55, 57, 58, 63, 64, 67, 71, 72, 73, 76, 81, 82, 84, 85, 88, 95, 98, 100, 101, 107, 108, 120, 121, 122, 125, 129, 134, 135], "comput": [4, 21, 22, 25, 31, 39, 41, 42, 52, 57, 58, 59, 60, 61, 63, 71, 76, 81, 95, 96, 102, 120, 133, 134, 135], "field": [4, 6, 22, 39, 52, 58, 71, 76, 81, 134], "correspond": [4, 22, 38, 39, 47, 49, 51, 52, 53, 57, 58, 62, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 88, 105, 109, 114, 126, 131], "object": [4, 7, 8, 9, 10, 16, 17, 18, 21, 22, 25, 34, 39, 52, 57, 58, 71, 76, 81, 82, 90, 107, 108, 119, 123, 124, 127, 134], "model_config": [4, 22, 39, 52, 58, 71, 76, 81], "configdict": [4, 22, 39, 52, 58, 71, 76, 81], "model": [4, 22, 39, 52, 58, 71, 76, 81, 98, 104, 105], "should": [4, 6, 8, 10, 21, 22, 31, 35, 39, 52, 58, 71, 76, 81, 100, 130, 134], "conform": [4, 22, 39, 52, 58, 71, 76, 81], "config": [4, 22, 39, 52, 58, 71, 76, 81], "model_field": [4, 22, 39, 52, 58, 71, 76, 81], "fieldinfo": [4, 22, 39, 52, 58, 71, 76, 81], "annot": [4, 22, 39, 52, 58, 71, 76, 81, 115, 134], "true": [4, 22, 26, 39, 52, 57, 58, 71, 76, 81, 105, 121, 135], "union": [4, 22, 39, 52, 58, 71, 76, 81, 115, 134], "nonetyp": [4, 22, 39, 52, 58, 71, 76, 81], "fals": [4, 22, 39, 52, 58, 66, 71, 76, 81, 105, 113, 121, 131], "metadata": [4, 21, 22, 34, 38, 39, 51, 52, 55, 57, 58, 71, 72, 76, 77, 81, 82, 124], "about": [4, 22, 39, 52, 58, 71, 76, 81, 130], "defin": [4, 5, 6, 7, 22, 31, 32, 39, 52, 58, 71, 76, 81, 99, 122, 134, 135], "map": [4, 7, 22, 31, 33, 39, 41, 42, 52, 58, 71, 76, 81, 121, 125, 126, 130], "thi": [4, 5, 6, 15, 16, 21, 22, 31, 34, 39, 45, 52, 58, 65, 71, 76, 81, 106, 115, 134, 135], "replac": [4, 22, 39, 52, 58, 71, 76, 81, 134], "__fields__": [4, 22, 39, 52, 58, 71, 76, 81], "v1": [4, 22, 39, 52, 58, 71, 76, 81], "function": [5, 6, 20, 37, 38, 42, 47, 50, 51, 53, 56, 57, 67, 70, 72, 73, 75, 77, 78, 80, 82, 88, 89, 91, 92, 94, 95, 97, 98, 104, 106, 112, 116, 128, 130], "benchmarkobservationidentifi": [5, 8, 130, 131], "benchmarkobserv": [5, 7, 34, 130, 131], "benchmarkrunresult": [5, 6, 7, 12, 21, 25, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 130], "benchmarkanalysisresult": [5, 6, 12, 21, 25, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 130], "kwarg": 6, "run": [6, 7, 8, 10, 21, 22, 25, 38, 42, 47, 51, 52, 53, 57, 67, 72, 73, 77, 78, 82, 88, 135], "cortex": [6, 11], "experi": [6, 34, 38, 46, 47, 51, 53, 54, 57, 58, 60, 61, 67, 72, 73, 77, 78, 82, 88, 97, 104, 105, 109, 111], "In": [6, 134, 135], "order": [6, 24, 33, 34, 98, 106, 135], "write": [6, 113, 134], "new": [6, 7, 11, 122, 130, 135], "recommend": [6, 133, 134], "deriv": [6, 134], "baseclass": 6, "addition": 6, "custom": [6, 39, 58, 135], "analysi": [6, 7, 12, 38, 47, 51, 53, 54, 57, 67, 72, 73, 77, 78, 82, 88, 130], "can": [6, 10, 16, 22, 24, 36, 38, 49, 57, 115, 130, 135], "give": [6, 42, 130, 134], "pointer": 6, "analysis_funct": [6, 21, 38, 51, 57, 72, 77, 82], "accept": [6, 46, 130, 134], "analysisresult": [6, 7, 21, 25, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 130], "its": [6, 92, 122, 130, 134], "input": [6, 11, 52, 58, 87, 106, 110, 111, 115, 125], "result": [6, 7, 8, 10, 11, 12, 34, 36, 38, 41, 47, 48, 49, 51, 53, 57, 58, 65, 66, 67, 72, 73, 77, 78, 82, 88, 96, 102, 104, 125, 130, 134, 135], "onli": [6, 12, 52, 58, 122, 134], "pass": [6, 12, 87, 115, 121], "through": [6, 12, 27, 134], "iqmbackend": [6, 57, 82, 107, 108], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 25, 26, 27, 34, 38, 51, 54, 57, 72, 77, 82, 89, 91, 105, 129, 130, 131], "overridden": 6, "an": [6, 16, 17, 21, 22, 25, 26, 38, 51, 77, 78, 106, 110, 114, 115, 130, 134, 135], "xarrai": [6, 7, 11, 13, 21, 26, 38, 51, 57, 72, 77, 82, 129, 130], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 21, 24, 25, 26, 27, 34, 82, 84, 107, 108, 122, 130, 134], "inform": [6, 10, 33, 35, 134], "necessari": 6, "analys": 6, "calibration_set_id": 6, "uuid": 6, "calibrationsetid": 6, "latest": [6, 127, 133], "set": [6, 16, 17, 21, 52, 58, 84, 85, 87, 93, 105, 118, 125, 127, 135], "runresult": [6, 7, 10, 21, 25, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 130], "analyz": [6, 10, 21, 25, 117, 131, 135], "run_index": 6, "1": [6, 39, 43, 64, 81, 85, 86, 97, 100, 106, 121, 131, 134, 135], "intern": [6, 17], "perform": [6, 39, 52, 58, 98, 109, 121, 134, 135], "make": [6, 57, 127, 134, 135], "shallow": 6, "copi": [6, 134], "produc": [6, 33, 58, 135], "therefor": [6, 45, 65], "chang": [6, 130, 133, 134], "data": [6, 7, 11, 21, 22, 24, 26, 33, 54, 66, 90, 93, 98, 104, 113], "just": 6, "structur": 6, "arrai": [6, 51, 71, 76, 81, 105, 106, 111, 115], "index": [6, 21, 24, 31, 32, 33, 51, 57, 85, 133], "construct": [6, 22, 28], "updat": [6, 51, 52, 130], "core": 7, "circuit_contain": 7, "plot": [7, 21, 25, 34, 66, 105, 130, 131, 135], "matplotlib": 7, "figur": [7, 14, 34, 46, 54, 66, 105], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 25, 34, 54, 105, 130, 131], "list": [7, 9, 11, 13, 16, 17, 18, 21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 38, 40, 41, 42, 44, 46, 48, 51, 52, 57, 59, 60, 61, 62, 63, 65, 66, 81, 82, 83, 84, 85, 86, 87, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 120, 121, 123, 124, 125, 126, 127, 129, 130, 134, 135], "dataclass": [7, 8, 10], "store": [7, 8, 10, 34, 130, 135], "consist": [7, 134], "kei": [7, 41, 48, 51, 57, 62, 81, 84, 118, 120, 126], "valu": [7, 8, 21, 22, 27, 31, 41, 42, 48, 51, 52, 81, 84, 97, 118, 120, 121, 126, 131], "pair": [7, 24, 33, 51, 111], "plot_nam": 7, "plot_al": 7, "from_run_result": 7, "creat": [7, 21, 22, 31, 38, 42, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 135], "identifi": [8, 9, 11, 57, 82, 98, 105, 107, 108, 110, 123, 129, 131, 134], "uncertainti": [8, 27, 131], "singl": [8, 10, 13, 16, 18, 22, 34, 39, 40, 51, 52, 57, 58, 84, 91, 135], "string": [8, 9, 11, 17, 18, 123, 135], "qubit_indic": [9, 16, 131], "eas": 9, "indic": [9, 57, 62, 120, 126, 134], "wa": [9, 45, 65, 109, 134], "properti": [9, 16, 17], "string_identifi": 9, "version": [9, 89, 134], "enough": 10, "those": [10, 57, 62, 125, 134], "count": [11, 21, 22, 25, 41, 42, 48, 57, 59, 83, 96, 102, 109, 114, 115, 118, 123, 124, 129, 131], "add": [11, 17, 21, 32, 38, 51, 57, 72, 77, 82, 84, 128, 130, 134, 135], "job": [11, 51, 55, 57, 82, 107, 108, 123, 131], "If": [11, 22, 81, 134, 135], "same": [11, 17, 24, 33, 81, 134], "alreadi": [11, 131, 135], "present": 11, "old": 11, "both": [11, 58, 135], "ad": [11, 130, 131], "togeth": [11, 135], "bitstr": [11, 41, 42, 43, 48, 64, 109, 120], "current": [11, 22, 51, 113, 135], "instanc": [11, 16, 17, 26, 27, 46, 130], "xr": [11, 13, 21, 26, 27, 34, 38, 51, 54, 57, 72, 77, 82, 105, 129], "merg": [11, 13], "where": [11, 16, 17, 22, 86, 130, 134], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 31, 32, 104], "size": [13, 22, 31, 36, 38, 46, 48], "dateset": 13, "fig": [14, 34], "show": 14, "close": 14, "easili": [15, 130, 135], "interact": [15, 130], "quantum": [15, 21, 22, 26, 28, 29, 30, 31, 38, 49, 51, 52, 56, 57, 58, 59, 62, 65, 67, 84, 85, 96, 100, 101, 102, 113, 114, 117, 118, 121, 122, 127, 130, 133, 135], "circuitgroup": [15, 16, 21, 130], "benchmarkcircuit": [15, 18, 130], "circuit_group": 16, "group": [16, 17, 72], "purpos": [16, 17, 134], "typic": [16, 17], "repres": [16, 17, 54, 66, 120, 134], "exampl": [16, 89, 130, 133, 134, 135], "insid": [16, 130], "get_circuit_group_by_nam": 16, "get": [16, 92, 119, 135], "desir": [16, 17], "doe": [16, 22, 134], "exist": [16, 18, 130, 135], "group_nam": 16, "integ": [16, 17, 22, 57, 62, 85], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 24, 27, 31, 41, 42, 46, 48, 51, 52, 54, 57, 62, 66, 82, 98, 99, 100, 101, 103, 105, 107, 114, 121, 126, 127], "qubit_layout": [16, 17, 21, 24, 26, 27, 31, 32, 33, 34], "qiskit_iqm": [17, 22, 130], "iqm_circuit": 17, "iqmcircuit": [17, 21, 23, 28, 29, 30, 31, 51, 57, 62, 82, 84, 85, 86, 95, 99, 100, 101, 103, 107, 108, 110, 114, 117, 118, 121, 122, 126, 127, 130], "It": [17, 135], "common": [17, 94, 134], "activ": [17, 122, 135], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 134, 135], "found": [17, 24, 135], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 134], "ghz": [19, 130, 135], "verifi": [19, 110], "greenberg": [19, 21], "horn": [19, 21], "zeiling": [19, 21], "state": [19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 96, 102, 130, 134, 135], "ghzbenchmark": [20, 22], "benchmark_definit": [20, 22, 37, 39, 50, 52, 56, 58, 70, 71, 75, 76, 80, 81], "ghzconfigur": [20, 21], "estim": [21, 22, 26, 27, 36, 38, 52, 57, 72, 77, 82, 83, 109], "qualiti": 21, "fidel": [21, 22, 24, 25, 26, 27, 32, 33, 34, 52, 68, 69, 72, 74, 77, 79, 82, 83, 98, 105, 130, 135], "generate_native_ghz": 21, "qubit_count": [21, 22], "routin": [21, 22, 39, 58, 98], "prepar": [21, 134], "nativ": [21, 33, 100, 101, 103, 110, 118], "topologi": 21, "subset": [21, 24, 26, 27, 31, 32, 33], "system": [21, 22, 24, 26, 27, 31, 32, 33, 113, 134, 135], "protocol": [21, 24, 26, 27, 31, 32, 33], "0": [21, 24, 31, 32, 33, 38, 45, 58, 81, 84, 85, 86, 106, 131, 134, 135], "smaller": [21, 22, 31], "equal": [21, 31, 57, 130], "quantumcircuit": [21, 23, 31, 38, 51, 57, 62, 82, 84, 95, 99, 100, 101, 107, 108, 114, 117, 121, 122, 126, 127, 130], "generate_coherence_meas_circuit": 21, "take": [21, 22, 121, 128, 130, 135], "output": [21, 35, 59, 60, 61, 62, 63, 64, 65, 113, 130], "need": [21, 51, 115, 135], "via": [21, 22], "mult": 21, "q": [21, 36, 38, 39, 45, 135], "coher": [21, 22, 26], "qc_list_transpil": 21, "generate_readout_circuit": 21, "wrapper": 21, "creation": 21, "differ": [21, 54, 81, 134, 135], "all_circuits_list": 21, "add_configuration_to_dataset": 21, "further": [21, 130], "storag": [21, 130], "1024": 22, "state_generation_routin": 22, "tree": [22, 31, 32], "custom_qubits_arrai": [22, 38, 39, 58, 135], "sequenc": [22, 39, 52, 57, 58, 71, 76, 81, 82, 83, 96, 99, 100, 101, 102, 121, 125, 131], "qiskit_optim_level": [22, 39, 52, 58, 81, 85, 86, 121, 135], "3": [22, 39, 52, 58, 65, 106, 131, 134, 135], "optimize_sqg": [22, 39, 51, 52, 58, 121, 135], "bool": [22, 39, 45, 46, 48, 51, 52, 57, 58, 65, 66, 71, 76, 105, 113, 121], "fidelity_routin": 22, "num_rm": [22, 23], "100": [22, 52, 58, 135], "rem": [22, 26, 58, 66, 114, 135], "mit_shot": [22, 57, 58, 114, 135], "1000": [22, 58, 114], "cal_url": [22, 24], "possibl": [22, 134], "optim": [22, 51, 52, 58, 81, 121, 135], "log": [22, 29, 30, 31, 32], "depth": [22, 28, 29, 30, 31, 57, 66, 81, 82, 85, 86, 97, 100, 104, 107, 109, 131], "coupl": [22, 24, 31, 33, 52, 58, 121, 125], "cz": [22, 24, 32, 33, 100, 118, 121], "account": [22, 121, 135], "algorithm": [22, 32, 84], "span": [22, 31, 32], "choos": [22, 38, 134], "largest": 22, "weight": [22, 32, 33, 64], "distanc": [22, 32], "parallel": [22, 32, 49, 71, 76, 100, 107, 109, 117], "applic": [22, 32, 84, 134], "cx": [22, 28, 32, 51], "scale": 22, "logarithm": 22, "connect": [22, 32, 111], "naiv": [22, 39], "appli": [22, 28, 32, 51, 58, 130, 134], "textbook": 22, "linearli": 22, "specifi": [22, 52, 57, 58, 76, 82, 84, 85, 107, 108, 111, 118, 120, 125, 127, 135], "assum": [22, 34, 106, 134], "e": [22, 76, 81, 106, 129, 135], "g": [22, 76, 81, 106, 129, 135], "label": [22, 52, 66, 76, 85, 95, 101, 105, 130], "meant": 22, "NOT": 22, "support": [22, 33, 134], "denot": 22, "provid": [22, 44, 134], "here": [22, 83], "ha": [22, 131, 134], "than": 22, "small": [22, 130], "level": [22, 39, 52, 58, 81], "architectur": 22, "consecut": 22, "reduc": [22, 122], "iqm_transpil": 22, "optimize_single_qubit_g": 22, "multipl": [22, 26, 89, 130], "moonei": [22, 26], "2021": [22, 26, 135], "randomized_measur": 22, "random": [22, 23, 39, 51, 68, 70, 75, 76, 80, 81, 84, 86, 94, 100, 101, 130, 132, 133, 135], "outlin": 22, "http": [22, 27, 29, 30, 89, 134, 135], "arxiv": [22, 27, 29, 30, 52, 84, 135], "org": [22, 27, 29, 30, 134], "ab": [22, 27, 29, 30], "1812": [22, 27], "02624": [22, 27], "respect": [22, 81, 83], "chosen": 22, "boolean": 22, "flag": [22, 135], "determin": [22, 134], "readout": [22, 26, 57, 58, 63, 112, 113, 115], "error": [22, 26, 57, 58, 63, 105, 115, 130], "mitig": [22, 26, 57, 58, 63, 112, 113, 114, 115], "total": [22, 93], "url": [22, 24, 135], "retriev": [22, 51, 55, 123, 124, 129, 131], "priorit": 22, "high": 22, "append": [23, 51], "1q": [23, 103], "clifford": [23, 69, 70, 71, 72, 73, 75, 76, 77, 84, 95, 99, 100, 101, 103, 110, 111, 130, 132, 133, 135], "sampl": [23, 42, 48, 58, 64, 76, 81, 83, 84, 85, 86, 87, 99, 100, 101], "uniformli": 23, "param": [23, 28, 29, 30, 51, 60, 72, 77, 87, 91, 93, 95, 96, 107, 108, 109, 111, 120, 123, 124], "decompos": [23, 51], "origin": [23, 57, 62, 121, 122, 134], "float": [24, 33, 38, 40, 41, 43, 44, 45, 46, 48, 51, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 76, 81, 83, 84, 85, 86, 96, 97, 98, 102, 105, 109, 110, 113, 115, 118, 120], "under": [24, 130, 134], "each": [24, 32, 34, 46, 60, 61, 62, 66, 76, 81, 83, 86, 90, 109, 114, 118, 131, 134, 135], "list_fid": 24, "wai": [24, 33, 130, 135], "list_coupl": 24, "ideal_prob": 27, "num_qubit": [27, 28, 29, 30, 38, 57, 83, 96, 102], "cross": [27, 134], "correl": 27, "rm": 27, "eq": 27, "34": [27, 131], "hadamard": 28, "seri": 28, "linear": 28, "fashion": 28, "symmetr": 28, "halv": 28, "n": [28, 29, 30, 31, 72, 82, 135], "1807": 29, "05572": 29, "2101": 30, "08946": 30, "graph": [31, 32, 33, 38, 40, 41, 42, 43, 45, 46, 48], "n_state": 31, "networkx": [31, 32, 33, 38, 40, 41, 42, 43], "participating_qubit": 31, "qc": [31, 51, 135], "calcul": [32, 40, 46, 62, 93, 117, 128, 130], "cx_map": 32, "particip": 32, "2qb": 32, "between": [32, 86, 113], "them": [32, 135], "subgraph": 32, "edg": [32, 33, 41, 42, 43, 84], "Then": [32, 135], "find": 32, "most": 32, "central": 32, "posit": 32, "next": 32, "start": [32, 38, 106, 135], "smallest": 32, "layer": [32, 40, 44, 48, 49, 51, 52, 57, 81, 82, 84, 85, 86, 107, 117, 135], "first": [32, 38, 51, 81], "coupling_map": [33, 121], "couplingmap": [33, 125], "edges_c": 33, "fidelities_c": 33, "have": [33, 100, 134, 135], "v": [34, 46, 51, 53], "user": [34, 135], "identif": [34, 134], "logger": [35, 128], "everi": 35, "warn": 35, "score": [36, 38, 39, 45, 135], "combinatori": [36, 38], "problem": [36, 38, 40, 41, 42, 43, 45, 46], "meaning": [36, 38, 49, 57, 58], "qscorebenchmark": [37, 39], "qscoreconfigur": [37, 38], "backend_arg": [38, 51, 57, 72, 77, 82, 84, 85, 86, 99, 100, 101, 107, 108, 110, 111, 114, 118], "generate_maxcut_ansatz": 38, "theta": 38, "ansatz": [38, 40, 42, 44, 48], "qaoa": [38, 40, 44, 48], "maxcut": [38, 40, 41, 42, 43, 44, 48], "end": [38, 51, 57, 134], "variat": 38, "gamma": [38, 40], "beta": [38, 40, 45, 46], "add_all_meta_to_dataset": [38, 51, 57, 77, 82], "variabl": [38, 51, 57, 72, 77, 82, 98, 135], "choose_qubits_na": 38, "sequenti": [38, 108, 131], "choose_qubits_custom": 38, "element": 38, "match": 38, "num_inst": [39, 46], "num_qaoa_lay": 39, "min_num_nod": 39, "max_num_nod": 39, "use_virtual_nod": [39, 46], "use_classically_optimized_angl": [39, 46], "choose_qubits_routin": [39, 58, 135], "min_num_qubit": 39, "seed": 39, "upon": [39, 52, 58], "angl": [40, 44, 46, 48], "qubit_to_nod": [41, 42], "virtual_nod": [41, 42, 48], "expect": [41, 42, 48, 81, 84, 86, 130], "val": 41, "node": [41, 42, 46, 48], "virtual": [41, 42, 46, 48, 121], "cut": [41, 42, 43, 48], "avg": 41, "callabl": [42, 98, 104], "parametr": [42, 49, 51, 52], "x": [43, 91, 93, 105, 130], "minu": 43, "sign": 43, "solut": 43, "multipli": 43, "obj": 43, "num_lay": 44, "approximation_ratio": 45, "approxim": [45, 46], "ratio": [45, 46], "abov": [45, 65, 134], "being": [45, 51, 57, 62, 65, 66, 83, 84, 96, 102, 118, 120], "success": [45, 65], "condit": [45, 65, 134], "mean": [45, 118, 134], "threshold": [45, 46, 58, 65, 66], "beta_ratio": 46, "beta_std": 46, "backend_nam": [46, 66, 122, 131], "timestamp": [46, 66, 131], "includ": [46, 54, 130, 134], "standard": [46, 58, 61, 70, 105, 118, 135], "deviat": [46, 58, 61, 105, 118], "classic": [46, 48, 57], "graph_phys": 48, "qubit_nod": 48, "use_classical_angl": 48, "qaoa_lay": 48, "solv": 48, "averag": [48, 60, 65, 66, 72, 77, 83, 98], "presenc": 48, "volum": [49, 56, 57, 58, 67, 130, 135], "reflect": [49, 51, 57, 68, 69, 74, 79], "deepest": [49, 57], "oper": [49, 68, 110, 118, 130], "second": [49, 51], "clop": [49, 130, 135], "speed": [49, 51], "clops_v": 49, "qv": [49, 51, 52, 57, 58, 60, 61, 65, 66, 130], "clops_h": [49, 52], "squar": 49, "clopsbenchmark": [50, 52], "clopsconfigur": [50, 51], "h": [51, 53], "append_parameterized_unitari": 51, "q0": 51, "q1": 51, "su": 51, "4": [51, 106, 131, 134, 135], "involv": 51, "belong": 51, "generate_single_circuit": [51, 57], "generate_circuit_list": [51, 57], "generate_random_paramet": 51, "ndarrai": [51, 97, 98, 104], "mani": [51, 130], "templat": 51, "np": [51, 97, 104], "float64": 51, "assign_random_parameters_to_al": 51, "dict_parametrized_circ": 51, "clops_cycl": 51, "sorted_transpiled_qc_list": [51, 57, 127], "cycl": 51, "assign": [51, 52, 81], "elaps": [51, 54, 55, 128], "time": [51, 54, 55, 57, 82, 107, 108, 128], "submiss": [51, 57, 82, 107, 108, 134], "generate_transpiled_clops_templ": 51, "num_circuit": [52, 58, 135], "num_upd": 52, "10": [52, 131, 133, 135], "num_shot": 52, "clops_h_bool": 52, "one": [52, 106, 127, 134, 135], "establish": 52, "By": 52, "definit": [52, 134], "2110": [52, 135], "14108": [52, 135], "quant": [52, 84, 135], "ph": [52, 84, 135], "rigor": 52, "loos": 52, "www": [52, 134], "ibm": [52, 113], "com": 52, "blog": 52, "metric": 52, "restrict": [52, 58, 125], "consid": [52, 58, 125], "clops_data": 54, "job_meta": 55, "quantumvolumebenchmark": [56, 58], "quantumvolumeconfigur": [56, 57, 135], "add_all_circuits_to_dataset": [57, 72, 77], "classical_permut": 57, "permut": 57, "avoid": 57, "swap": 57, "get_rem_quasidistro": 57, "sorted_qc_list_indic": [57, 62], "execution_result": [57, 59], "quasicollect": [57, 63, 114], "quasiprob": [57, 63, 114, 115], "qubii": 57, "untranspil": [57, 62, 99, 121, 130], "submit_single_qv_job": 57, "submit": [57, 82, 107, 108, 127, 131, 134], "vanilla": [57, 66, 82, 107, 108], "dd": [57, 66, 82, 107, 108], "num_sigma": [58, 65, 66, 135], "least": [58, 134], "criteria": 58, "consensu": 58, "post": [58, 131], "process": [58, 131], "when": [58, 130], "unmitig": 58, "1_000": [58, 135], "ideal_heavy_output": [59, 63], "hop": [59, 60, 61, 65, 66, 130], "ideal": [59, 83], "heavi": [59, 60, 61, 62, 63, 64, 65], "cumul": [60, 61], "probabl": [60, 61, 63, 64, 81, 84, 96, 102, 109, 120, 135], "individu": [60, 61, 105, 130, 134, 135], "trial": [60, 61], "qc_list": [62, 121], "bitrstr": 62, "all_rem_quasidistro": 63, "distribut": [63, 64, 120, 134], "noiseless": 63, "project": [64, 135], "onto": 64, "associ": [64, 134], "heavy_output_prob": 65, "over": [65, 113, 120], "within": [65, 134], "sigma": [65, 66], "qv_result": 66, "qv_results_typ": 66, "in_volumetr": 66, "plot_rem": 66, "come": [66, 83, 115], "context": 66, "volumetr": 66, "correct": [66, 83, 113, 114], "rb": [69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 96, 97, 98, 100, 102, 104, 105, 108, 109, 111, 130, 132, 133], "cliffordrandomizedbenchmark": [70, 71, 131], "cliffordrbconfigur": [70, 72, 131], "qubits_arrai": [71, 76, 81, 100, 105, 107, 109, 111, 131, 135], "sequence_length": [71, 76, 99, 100, 131, 135], "num_circuit_sampl": [71, 76, 81, 99, 131, 135], "parallel_execut": [71, 76, 131, 135], "length": [71, 76, 83, 87, 99, 100, 101, 131], "add_all_metadata_to_dataset": 72, "interleav": [74, 75, 76, 77, 78, 81, 86, 97, 99, 100, 101, 105, 130, 131, 135], "interleavedrandomizedbenchmark": [75, 76], "interleavedrbconfigur": [75, 77, 135], "interleaved_g": [76, 99, 100, 101, 105, 135], "interleaved_gate_param": [76, 135], "simultaneous_fit": [76, 135], "amplitud": [76, 97, 135], "offset": [76, 97, 135], "irb": [76, 98], "ygate": 76, "czgate": [76, 81, 135], "enter": [76, 98, 100], "fit": [76, 89, 90, 91, 93, 97, 98, 104, 105, 130, 134], "simultan": [76, 98], "specif": [77, 121, 134], "mirror": [79, 80, 81, 82, 86, 130, 135], "mirrorrandomizedbenchmark": [80, 81, 135], "mirrorrbconfigur": [80, 82, 135], "depths_arrai": [81, 135], "num_pauli_sampl": [81, 83, 87, 135], "two_qubit_gate_ensembl": [81, 84, 85, 86, 135], "density_2q_g": [81, 84, 85, 86, 135], "25": [81, 84, 85, 86, 131, 135], "mrb": [81, 82, 85, 88, 98, 105, 107, 108, 130], "len": 81, "pauli": [81, 83, 85, 86, 87], "two": [81, 84], "ensembl": [81, 82, 84, 105], "cxgate": 81, "densiti": [81, 84, 86, 105], "submit_single_mrb_job": 82, "sorted_transpiled_circuit_dict": [82, 107], "canon": [82, 85, 86, 107], "noisy_count": 83, "ideal_count": 83, "num_circ_sampl": [83, 87, 101], "polar": [83, 98], "noisi": 83, "rescal": 83, "few": 83, "effect": 83, "real": [83, 135], "simul": [83, 113, 130], "qubit_set": [84, 98], "n_layer": 84, "grab": [84, 113], "see": [84, 134], "2204": 84, "07568": 84, "2q": [84, 86, 103, 105], "form": [84, 134], "subsequ": [84, 134], "rais": [84, 87, 111, 113], "valueerror": [84, 87, 111], "do": [84, 113, 134], "up": [84, 135], "uniti": 84, "circ_sampl": 85, "pauli_samples_per_circ": [85, 86], "dress": [85, 86, 87], "input_list": 87, "convert": 87, "flat": 87, "matrix": 87, "shape": 87, "lmfit": [89, 90, 98], "extend": 89, "shown": 89, "document": [89, 134, 135], "github": [89, 135], "io": 89, "py": 89, "example_fit_multi_dataset": 89, "html": [89, 135], "sphx": 89, "glr": 89, "multi": 89, "func": [90, 91, 92, 93, 98, 104], "initial_guess": 90, "constraint": 90, "simultaneously_fit_var": 90, "line": 90, "evalu": 91, "signatur": 92, "residu": 93, "sever": 93, "techniqu": 94, "qc_inv": 95, "clifford_dictionari": 95, "invers": 95, "invert": 95, "de": [95, 101], "stabil": [95, 101, 130], "ground": [96, 102], "depolarization_prob": 97, "non": [97, 134], "depolar": 97, "p": 97, "decai": [97, 105, 130], "exponenti": 97, "rb_identifi": 98, "simultaneous_fit_var": 98, "0th": 98, "ap": 98, "m": [98, 131, 135], "b": [98, 134], "either": [98, 115, 118, 134], "stdrb": 98, "clifford_dict": [99, 101], "fir": 99, "cliffords_1q": 100, "cliffords_2q": 100, "num_sampl": [100, 101], "befor": 100, "after": 100, "term": [100, 134], "r": [100, 118, 121], "seq_length": 101, "self": 101, "import": [103, 130, 131, 134, 135], "fit_paramet": 104, "fit_data": 104, "minimizerresult": 104, "violin": 105, "scatter": 105, "bar": 105, "shade_stdev": 105, "shade_meanerror": 105, "logscal": 105, "mrb_2q_densiti": 105, "mrb_2q_ensembl": 105, "point": 105, "shade": 105, "axi": [105, 130], "titl": [105, 134], "arr": 106, "helper": 106, "relabel": 106, "increasingli": 106, "zero": [106, 130], "5": [106, 131, 134, 135], "7": [106, 131, 134, 135], "note": [106, 115, 130], "sort": [106, 126], "increas": 106, "transpiled_circuit": [108, 114], "margin": [109, 113, 120], "surviv": 109, "gate_id": 110, "gate_param": 110, "basi": [110, 121, 134], "m3": [112, 113, 114], "modif": [112, 134], "qpu": 112, "m3iqm": [112, 115], "mthree": [112, 115], "m3mitig": [112, 113], "iter_threshold": 113, "4096": 113, "modifi": [113, 130, 134], "work": [113, 115, 134, 135], "devic": [113, 135], "cals_from_system": 113, "initial_reset": 113, "rep_delai": 113, "cals_fil": 113, "async_c": 113, "cal_id": 113, "array_lik": 113, "min": 113, "1e4": 113, "max_shot": 113, "balanc": 113, "hardwar": [113, 133], "independ": 113, "reset": 113, "begin": 113, "delai": 113, "path": 113, "json": 113, "async": 113, "separ": [113, 130, 134], "thread": 113, "m3error": 113, "call": [113, 130], "while": [113, 134], "progress": 113, "against": [114, 134], "outcom": 114, "mit": [115, 134], "iter": [115, 120], "processor": 115, "argument": [115, 130, 135], "util": 115, "final_measurement_map": 115, "like": [115, 135], "qubit_name_to_index": 115, "quasiprobabilti": 115, "we": [115, 134], "could": 115, "also": [115, 130, 134, 135], "would": 115, "out": [115, 134], "box": 115, "u": 115, "sinc": 115, "circuit_list": 117, "transpiled_qc_list": 118, "barrier": 118, "outermost": 118, "backend_label": 119, "prob_dist": 120, "bit": 120, "basis_g": 121, "drop_final_rz": 121, "target": 121, "optimization_level": 121, "sqg": 121, "z": 121, "drop": 121, "rz": 121, "emploi": 121, "iqm_job": [123, 124], "iqmjob": [123, 124, 127], "relev": 124, "transpiled_circuit_list": 126, "sorted_indic": 126, "sorted_circuit": 126, "sent": [127, 134], "manag": [127, 134], "f": 128, "amount": [128, 129], "decor": 128, "statement": [128, 134], "counts_rang": 129, "extract": 129, "rang": [129, 130, 131, 135], "were": [129, 130], "bug": 130, "depend": [130, 133], "relat": 130, "gst": 130, "benchmark": [130, 132], "lead": 130, "modulenotfounderror": 130, "qscore": 130, "enabl": 130, "pyrit": 130, "wrong": 130, "incorrect": 130, "mgst": [130, 134, 135], "improv": [130, 134], "displai": [130, 131, 134], "hamiltonian": 130, "rank": 130, "compress": [130, 135], "compil": [130, 134], "stage": 130, "revert": 130, "ones": [130, 135], "notebook": 130, "doc": [130, 135], "20": [130, 131], "now": [130, 131], "instead": [130, 135], "port": 130, "subclass": 130, "usag": 130, "iqm": [130, 134], "place": [130, 134], "miscellan": 130, "relax": 130, "api": [130, 133, 135], "build": [130, 135], "publish": 130, "overwrit": 130, "tutori": 130, "remov": 130, "explicit": 130, "minor": 130, "compat": 130, "longer": 130, "move": 130, "renam": 130, "so": 130, "rebas": 130, "randomizedbenchmark": 130, "quantumvolum": 130, "serial": 130, "some": 130, "available_benchmark": 130, "__init__": 130, "public": 130, "hint": 130, "docstr": 130, "messag": 130, "prevent": 130, "exclus": [130, 134], "jupyt": 130, "load_ext": 131, "autoreload": 131, "extens": 131, "load": 131, "To": [131, 134, 135], "reload": 131, "reload_ext": 131, "fakeadoni": 131, "fakeapollo": 131, "garnet": [131, 135], "deneb": 131, "o": [131, 135], "environ": [131, 135], "iqm_token": [131, 135], "nb": 131, "randomized_benchmark": [131, 135], "clifford_rb": 131, "example_crb": 131, "9": [131, 134, 135], "13": [131, 135], "14": [131, 135], "17": [131, 135], "18": [131, 135], "6": [131, 134, 135], "11": [131, 135], "15": 131, "16": 131, "benchmark_clifford_rb": 131, "run_clifford_rb": 131, "2024": [131, 134], "12": 131, "56": 131, "750": 131, "logging_config": 131, "info": 131, "successfulli": 131, "Will": 131, "31": 131, "63": 131, "831": 131, "992": 131, "341": 131, "040": 131, "469": 131, "23": 131, "291": 131, "292": 131, "349": 131, "541": 131, "600": 131, "756": 131, "837": 131, "24": 131, "025": 131, "30": [131, 135], "171": 131, "905": 131, "544": 131, "899": 131, "32": 131, "624": 131, "004": 131, "43": 131, "319": 131, "400": 131, "569": 131, "777": 131, "840": 131, "44": 131, "048": 131, "098": 131, "qubits_": 131, "_depth_1": 131, "323": 131, "45": 131, "186": 131, "_depth_3": 131, "225": 131, "_depth_7": 131, "267": 131, "_depth_15": 131, "314": 131, "_depth_31": 131, "315": 131, "364": 131, "_depth_63": 131, "416": 131, "417": 131, "476": 131, "542": 131, "615": 131, "616": 131, "697": 131, "789": 131, "890": 131, "conclud": 131, "result_clifford_rb": 131, "931": 131, "938": 131, "945": 131, "952": 131, "959": 131, "966": 131, "972": 131, "979": 131, "986": 131, "993": 131, "999": 131, "46": 131, "006": 131, "013": 131, "946844466999168": 131, "9429197366921651": 131, "attr": 131, "session_timestamp": 131, "20241217": 131, "115553": 131, "execution_timestamp": 131, "backend_configuration_nam": 131, "iqmfakeapollobackend": 131, "depth_1": 131, "time_circuit_gener": 131, "541001081466675": 131, "time_submit": 131, "0006990432739257812": 131, "time_retriev": 131, "22491073608398438": 131, "all_job_metadata": 131, "batch_job_1": 131, "job_id": 131, "8f305755": 131, "e038": 131, "4596": 131, "8617": 131, "d96ba3f42ca9": 131, "aer_simul": 131, "statu": 131, "circuits_in_batch": 131, "depth_3": 131, "05647683143615723": 131, "0005230903625488281": 131, "2fe0b406": 131, "8977": 131, "4567": 131, "bba0": 131, "d4168f0883ed": 131, "depth_7": 131, "19257187843322754": 131, "0004839897155761719": 131, "8299918c": 131, "be26": 131, "40d5": 131, "8778": 131, "9ea4468a1df2": 131, "depth_15": 131, "05831408500671387": 131, "0004811286926269531": 131, "174640c4": 131, "9ff3": 131, "4ca3": 131, "9ffc": 131, "d6aa5be304f3": 131, "depth_31": 131, "1564040184020996": 131, "0006189346313476562": 131, "7bb739f2": 131, "31bc": 131, "40af": 131, "8dbf": 131, "1d60a9310391": 131, "depth_63": 131, "08135986328125": 131, "0004200935363769531": 131, "f414a2c1": 131, "75c8": 131, "4d5a": 131, "9e4b": 131, "ccce29903f5f": 131, "147684812545776": 131, "0005502700805664062": 131, "00039887428283691406": 131, "8832576a": 131, "6d6e": 131, "4abe": 131, "8cfa": 131, "5001e6bb98e": 131, "08015298843383789": 131, "00039315223693847656": 131, "ecc1bcea": 131, "ef4c": 131, "4f35": 131, "9284": 131, "ab49af0c5b9f": 131, "16936397552490234": 131, "0003960132598876953": 131, "5582c842": 131, "0f07": 131, "46b6": 131, "96be": 131, "2fb3925b19d9": 131, "20774221420288086": 131, "0004191398620605469": 131, "6423b02b": 131, "8417": 131, "4300": 131, "b7ac": 131, "84d59f87a51f": 131, "0635080337524414": 131, "0004169940948486328": 131, "0b324804": 131, "44fe": 131, "4c16": 131, "83eb": 131, "08e5cd67aa79": 131, "20784401893615723": 131, "0004961490631103516": 131, "6c633640": 131, "d4b4": 131, "47de": 131, "a46d": 131, "d3ae4c84d212": 131, "avg_gate_fidel": 131, "0012220693932290373": 131, "001545469960991071": 131, "releas": 133, "date": [133, 134], "2025": 133, "01": 133, "sourc": [133, 134], "code": [133, 134, 135], "finland": 133, "character": 133, "verif": [133, 135], "tool": [133, 135], "develop": 133, "instal": 133, "mode": 133, "refer": [133, 135], "licens": 133, "changelog": 133, "search": 133, "page": [133, 134], "apach": 134, "januari": 134, "2004": 134, "AND": 134, "FOR": 134, "reproduct": 134, "shall": 134, "section": 134, "licensor": 134, "copyright": 134, "owner": 134, "entiti": 134, "author": 134, "grant": 134, "legal": 134, "act": 134, "control": 134, "For": [134, 135], "power": 134, "direct": 134, "indirect": 134, "caus": 134, "contract": 134, "ii": 134, "ownership": 134, "fifti": 134, "percent": 134, "50": 134, "more": [134, 135], "outstand": 134, "iii": 134, "benefici": 134, "you": [134, 135], "your": [134, 135], "exercis": 134, "permiss": 134, "prefer": 134, "limit": 134, "softwar": 134, "file": 134, "mechan": 134, "transform": 134, "translat": 134, "convers": 134, "media": 134, "authorship": 134, "made": 134, "notic": 134, "attach": 134, "appendix": 134, "below": [134, 135], "editori": 134, "revis": 134, "elabor": 134, "whole": 134, "remain": 134, "mere": 134, "link": 134, "bind": 134, "interfac": 134, "thereof": 134, "contribut": 134, "addit": 134, "intention": 134, "inclus": 134, "behalf": 134, "electron": 134, "verbal": 134, "written": 134, "commun": 134, "mail": 134, "issu": 134, "track": 134, "discuss": 134, "exclud": 134, "conspicu": 134, "mark": 134, "design": [134, 135], "Not": 134, "contributor": 134, "whom": 134, "been": 134, "receiv": 134, "incorpor": 134, "subject": 134, "herebi": 134, "perpetu": 134, "worldwid": 134, "charg": 134, "royalti": 134, "free": 134, "irrevoc": 134, "reproduc": 134, "publicli": 134, "sublicens": 134, "patent": 134, "except": 134, "offer": 134, "sell": 134, "transfer": 134, "claim": 134, "necessarili": 134, "infring": 134, "alon": 134, "combin": 134, "institut": 134, "litig": 134, "counterclaim": 134, "lawsuit": 134, "alleg": 134, "constitut": 134, "contributori": 134, "termin": [134, 135], "redistribut": 134, "mai": 134, "medium": 134, "without": [134, 135], "meet": 134, "follow": [134, 135], "must": [134, 135], "recipi": 134, "carri": 134, "promin": 134, "c": 134, "retain": 134, "trademark": 134, "pertain": 134, "part": 134, "d": 134, "text": 134, "readabl": 134, "along": 134, "wherev": 134, "third": 134, "parti": 134, "normal": 134, "appear": 134, "content": 134, "own": [134, 135], "alongsid": 134, "addendum": 134, "cannot": 134, "constru": 134, "compli": 134, "unless": 134, "explicitli": 134, "notwithstand": 134, "noth": 134, "herein": 134, "supersed": 134, "agreement": 134, "regard": 134, "trade": 134, "servic": [134, 135], "product": 134, "reason": 134, "customari": 134, "describ": 134, "disclaim": 134, "warranti": 134, "law": 134, "agre": 134, "AS": 134, "OR": 134, "OF": 134, "kind": 134, "express": 134, "impli": 134, "merchant": 134, "particular": 134, "sole": 134, "respons": 134, "appropri": 134, "risk": 134, "liabil": 134, "event": 134, "theori": 134, "tort": 134, "neglig": 134, "deliber": 134, "grossli": 134, "liabl": 134, "damag": 134, "special": 134, "incident": 134, "consequenti": 134, "charact": 134, "aris": 134, "inabl": 134, "loss": 134, "goodwil": 134, "stoppag": 134, "failur": 134, "malfunct": 134, "commerci": 134, "even": 134, "advis": 134, "fee": 134, "indemn": 134, "oblig": 134, "right": 134, "howev": 134, "indemnifi": 134, "defend": 134, "hold": 134, "harmless": 134, "incur": 134, "assert": 134, "how": [134, 135], "boilerpl": 134, "enclos": 134, "bracket": 134, "don": 134, "t": 134, "comment": 134, "syntax": 134, "format": 134, "descript": 134, "print": 134, "easier": 134, "archiv": 134, "complianc": 134, "obtain": [134, 135], "languag": 134, "govern": 134, "repositori": [134, 135], "licenc": 134, "src": 134, "raphael": 134, "brieger": 134, "ingo": 134, "roth": 134, "martin": 134, "kliesch": 134, "folder": [134, 135], "comprehens": 135, "modular": 135, "easi": 135, "simpl": 135, "command": 135, "phy": 135, "rev": 135, "85": 135, "042311": 135, "2012": 135, "lett": 135, "109": 135, "080505": 135, "tomographi": 135, "prx": 135, "010325": 135, "2023": 135, "129": 135, "150502": 135, "2022": 135, "holist": 135, "032328": 135, "2019": 135, "entangl": 135, "0712": 135, "0921": 135, "2007": 135, "ieee": 135, "tran": 135, "eng": 135, "split": 135, "legaci": 135, "onc": 135, "wrap": 135, "benchmarkexperi": 135, "handl": 135, "among": 135, "usual": 135, "sens": 135, "conda": 135, "isol": 135, "setup": 135, "global": 135, "That": 135, "plai": 135, "around": 135, "mess": 135, "rest": 135, "machin": 135, "pip": 135, "want": 135, "upgrad": 135, "test": 135, "lint": 135, "clone": 135, "directori": 135, "strategi": 135, "eager": 135, "tox": 135, "access": 135, "reson": 135, "cloud": 135, "prem": 135, "adapt": 135, "platform": 135, "token": 135, "automat": 135, "authent": 135, "your_token": 135, "interleaved_rb": 135, "mirror_rb": 135, "quantum_volum": 135, "example_irb": 135, "iswapg": 135, "example_mrb": 135, "example_qv": 135, "500": 135, "60_000": 135, "iqmprovid": 135, "station": 135, "fi": 135, "coco": 135, "get_backend": 135, "example_experi": 135, "weekli": 135, "daili": 135, "gitlab": 135, "scheduled_experi": 135}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "entanglement"], [35, 0, 0, "-", "logging_config"], [36, 0, 0, "-", "optimization"], [49, 0, 0, "-", "quantum_volume"], [68, 0, 0, "-", "randomized_benchmarking"], [112, 0, 0, "-", "readout_mitigation"], [116, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[20, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[21, 1, 1, "", "GHZBenchmark"], [22, 1, 1, "", "GHZConfiguration"], [23, 5, 1, "", "append_rms"], [24, 5, 1, "", "extract_fidelities"], [25, 5, 1, "", "fidelity_analysis"], [26, 5, 1, "", "fidelity_ghz_coherences"], [27, 5, 1, "", "fidelity_ghz_randomized_measurements"], [28, 5, 1, "", "generate_ghz_linear"], [29, 5, 1, "", "generate_ghz_log_cruz"], [30, 5, 1, "", "generate_ghz_log_mooney"], [31, 5, 1, "", "generate_ghz_spanning_tree"], [32, 5, 1, "", "get_cx_map"], [33, 5, 1, "", "get_edges"], [34, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_coherence_meas_circuits"], [21, 2, 1, "", "generate_native_ghz"], [21, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, 3, 1, "", "benchmark"], [22, 3, 1, "", "cal_url"], [22, 3, 1, "", "custom_qubits_array"], [22, 3, 1, "", "fidelity_routine"], [22, 3, 1, "", "mit_shots"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_RMs"], [22, 3, 1, "", "optimize_sqg"], [22, 3, 1, "", "qiskit_optim_level"], [22, 3, 1, "", "qubit_counts"], [22, 3, 1, "", "rem"], [22, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[22, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[37, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[38, 1, 1, "", "QScoreBenchmark"], [39, 1, 1, "", "QScoreConfiguration"], [40, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [41, 5, 1, "", "compute_expectation_value"], [42, 5, 1, "", "create_objective_function"], [43, 5, 1, "", "cut_cost_function"], [44, 5, 1, "", "get_optimal_angles"], [45, 5, 1, "", "is_successful"], [46, 5, 1, "", "plot_approximation_ratios"], [47, 5, 1, "", "qscore_analysis"], [48, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[38, 2, 1, "", "add_all_meta_to_dataset"], [38, 2, 1, "", "analysis_function"], [38, 2, 1, "", "choose_qubits_custom"], [38, 2, 1, "", "choose_qubits_naive"], [38, 2, 1, "", "execute"], [38, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[39, 3, 1, "", "benchmark"], [39, 3, 1, "", "choose_qubits_routine"], [39, 3, 1, "", "custom_qubits_array"], [39, 3, 1, "", "max_num_nodes"], [39, 3, 1, "", "min_num_nodes"], [39, 3, 1, "", "min_num_qubits"], [39, 3, 1, "", "model_computed_fields"], [39, 3, 1, "", "model_config"], [39, 3, 1, "", "model_fields"], [39, 3, 1, "", "num_instances"], [39, 3, 1, "", "num_qaoa_layers"], [39, 3, 1, "", "optimize_sqg"], [39, 3, 1, "", "qiskit_optim_level"], [39, 3, 1, "", "seed"], [39, 3, 1, "", "use_classically_optimized_angles"], [39, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[50, 0, 0, "-", "clops"], [56, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[51, 1, 1, "", "CLOPSBenchmark"], [52, 1, 1, "", "CLOPSConfiguration"], [53, 5, 1, "", "clops_analysis"], [54, 5, 1, "", "plot_times"], [55, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[51, 2, 1, "", "add_all_meta_to_dataset"], [51, 2, 1, "", "analysis_function"], [51, 2, 1, "", "append_parameterized_unitary"], [51, 2, 1, "", "assign_random_parameters_to_all"], [51, 2, 1, "", "clops_cycle"], [51, 2, 1, "", "execute"], [51, 2, 1, "", "generate_circuit_list"], [51, 2, 1, "", "generate_random_parameters"], [51, 2, 1, "", "generate_single_circuit"], [51, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[52, 3, 1, "", "benchmark"], [52, 3, 1, "", "clops_h_bool"], [52, 3, 1, "", "model_computed_fields"], [52, 3, 1, "", "model_config"], [52, 3, 1, "", "model_fields"], [52, 3, 1, "", "num_circuits"], [52, 3, 1, "", "num_shots"], [52, 3, 1, "", "num_updates"], [52, 3, 1, "", "optimize_sqg"], [52, 3, 1, "", "physical_layout"], [52, 3, 1, "", "qiskit_optim_level"], [52, 3, 1, "", "qubits"], [52, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[57, 1, 1, "", "QuantumVolumeBenchmark"], [58, 1, 1, "", "QuantumVolumeConfiguration"], [59, 5, 1, "", "compute_heavy_output_probabilities"], [60, 5, 1, "", "cumulative_hop"], [61, 5, 1, "", "cumulative_std"], [62, 5, 1, "", "get_ideal_heavy_outputs"], [63, 5, 1, "", "get_rem_hops"], [64, 5, 1, "", "heavy_projector"], [65, 5, 1, "", "is_successful"], [66, 5, 1, "", "plot_hop_threshold"], [67, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[57, 2, 1, "", "add_all_circuits_to_dataset"], [57, 2, 1, "", "add_all_meta_to_dataset"], [57, 2, 1, "", "analysis_function"], [57, 2, 1, "", "execute"], [57, 2, 1, "", "generate_circuit_list"], [57, 2, 1, "", "generate_single_circuit"], [57, 2, 1, "", "get_rem_quasidistro"], [57, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[58, 3, 1, "", "benchmark"], [58, 3, 1, "", "choose_qubits_routine"], [58, 3, 1, "", "custom_qubits_array"], [58, 3, 1, "", "mit_shots"], [58, 3, 1, "", "model_computed_fields"], [58, 3, 1, "", "model_config"], [58, 3, 1, "", "model_fields"], [58, 3, 1, "", "num_circuits"], [58, 3, 1, "", "num_sigmas"], [58, 3, 1, "", "optimize_sqg"], [58, 3, 1, "", "physical_layout"], [58, 3, 1, "", "qiskit_optim_level"], [58, 3, 1, "", "rem"], [58, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[69, 0, 0, "-", "clifford_rb"], [74, 0, 0, "-", "interleaved_rb"], [79, 0, 0, "-", "mirror_rb"], [89, 0, 0, "-", "multi_lmfit"], [94, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[70, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[71, 1, 1, "", "CliffordRBConfiguration"], [72, 1, 1, "", "CliffordRandomizedBenchmarking"], [73, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[71, 3, 1, "", "benchmark"], [71, 3, 1, "", "model_computed_fields"], [71, 3, 1, "", "model_config"], [71, 3, 1, "", "model_fields"], [71, 3, 1, "", "num_circuit_samples"], [71, 3, 1, "", "parallel_execution"], [71, 3, 1, "", "qubits_array"], [71, 3, 1, "", "sequence_lengths"], [71, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[72, 2, 1, "", "add_all_circuits_to_dataset"], [72, 2, 1, "", "add_all_metadata_to_dataset"], [72, 2, 1, "", "analysis_function"], [72, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[75, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[76, 1, 1, "", "InterleavedRBConfiguration"], [77, 1, 1, "", "InterleavedRandomizedBenchmarking"], [78, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[76, 3, 1, "", "interleaved_gate"], [76, 3, 1, "", "interleaved_gate_params"], [76, 3, 1, "", "model_computed_fields"], [76, 3, 1, "", "model_config"], [76, 3, 1, "", "model_fields"], [76, 3, 1, "", "num_circuit_samples"], [76, 3, 1, "", "parallel_execution"], [76, 3, 1, "", "qubits_array"], [76, 3, 1, "", "sequence_lengths"], [76, 3, 1, "", "shots"], [76, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[77, 2, 1, "", "add_all_circuits_to_dataset"], [77, 2, 1, "", "add_all_meta_to_dataset"], [77, 2, 1, "", "analysis_function"], [77, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[80, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[81, 1, 1, "", "MirrorRBConfiguration"], [82, 1, 1, "", "MirrorRandomizedBenchmarking"], [83, 5, 1, "", "compute_polarizations"], [84, 5, 1, "", "edge_grab"], [85, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [86, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [87, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [88, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[81, 3, 1, "", "benchmark"], [81, 3, 1, "", "density_2q_gates"], [81, 3, 1, "", "depths_array"], [81, 3, 1, "", "model_computed_fields"], [81, 3, 1, "", "model_config"], [81, 3, 1, "", "model_fields"], [81, 3, 1, "", "num_circuit_samples"], [81, 3, 1, "", "num_pauli_samples"], [81, 3, 1, "", "qiskit_optim_level"], [81, 3, 1, "", "qubits_array"], [81, 3, 1, "", "routing_method"], [81, 3, 1, "", "shots"], [81, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[82, 2, 1, "", "add_all_meta_to_dataset"], [82, 2, 1, "", "analysis_function"], [82, 2, 1, "", "execute"], [82, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[90, 5, 1, "", "create_multi_dataset_params"], [91, 5, 1, "", "eval_func_single_dataset"], [92, 5, 1, "", "get_param_names_from_func_signature"], [93, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[95, 5, 1, "", "compute_inverse_clifford"], [96, 5, 1, "", "estimate_survival_probabilities"], [97, 5, 1, "", "exponential_rb"], [98, 5, 1, "", "fit_decay_lmfit"], [99, 5, 1, "", "generate_all_rb_circuits"], [100, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [101, 5, 1, "", "generate_random_clifford_seq_circuits"], [102, 5, 1, "", "get_survival_probabilities"], [103, 5, 1, "", "import_native_gate_cliffords"], [104, 5, 1, "", "lmfit_minimizer"], [105, 5, 1, "", "plot_rb_decay"], [106, 5, 1, "", "relabel_qubits_array_from_zero"], [107, 5, 1, "", "submit_parallel_rb_job"], [108, 5, 1, "", "submit_sequential_rb_jobs"], [109, 5, 1, "", "survival_probabilities_parallel"], [110, 5, 1, "", "validate_irb_gate"], [111, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[113, 1, 1, "", "M3IQM"], [114, 5, 1, "", "apply_readout_error_mitigation"], [115, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[113, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[117, 5, 1, "", "count_2q_layers"], [118, 5, 1, "", "count_native_gates"], [119, 5, 1, "", "get_iqm_backend"], [120, 5, 1, "", "marginal_distribution"], [121, 5, 1, "", "perform_backend_transpilation"], [122, 5, 1, "", "reduce_to_active_qubits"], [123, 5, 1, "", "retrieve_all_counts"], [124, 5, 1, "", "retrieve_all_job_metadata"], [125, 5, 1, "", "set_coupling_map"], [126, 5, 1, "", "sort_batches_by_final_layout"], [127, 5, 1, "", "submit_execute"], [128, 5, 1, "", "timeit"], [129, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 135], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 135], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": 18, "entangl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "ghz": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "ghzbenchmark": 21, "ghzconfigur": 22, "append_rm": 23, "extract_fidel": 24, "fidelity_analysi": 25, "fidelity_ghz_coher": 26, "fidelity_ghz_randomized_measur": 27, "generate_ghz_linear": 28, "generate_ghz_log_cruz": 29, "generate_ghz_log_moonei": 30, "generate_ghz_spanning_tre": 31, "get_cx_map": 32, "get_edg": 33, "plot_fidel": 34, "logging_config": 35, "optim": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "qscore": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "qscorebenchmark": 38, "qscoreconfigur": 39, "calculate_optimal_angles_for_qaoa_p1": 40, "compute_expectation_valu": 41, "create_objective_funct": 42, "cut_cost_funct": 43, "get_optimal_angl": 44, "is_success": [45, 65], "plot_approximation_ratio": 46, "qscore_analysi": 47, "run_qaoa": 48, "quantum_volum": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "clop": [50, 51, 52, 53, 54, 55], "clopsbenchmark": 51, "clopsconfigur": 52, "clops_analysi": 53, "plot_tim": 54, "retrieve_clops_elapsed_tim": 55, "quantumvolumebenchmark": 57, "quantumvolumeconfigur": 58, "compute_heavy_output_prob": 59, "cumulative_hop": 60, "cumulative_std": 61, "get_ideal_heavy_output": 62, "get_rem_hop": 63, "heavy_projector": 64, "plot_hop_threshold": 66, "qv_analysi": 67, "randomized_benchmark": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "clifford_rb": [69, 70, 71, 72, 73], "cliffordrbconfigur": 71, "cliffordrandomizedbenchmark": 72, "clifford_rb_analysi": 73, "interleaved_rb": [74, 75, 76, 77, 78], "interleavedrbconfigur": 76, "interleavedrandomizedbenchmark": 77, "interleaved_rb_analysi": 78, "mirror_rb": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "mirrorrbconfigur": 81, "mirrorrandomizedbenchmark": 82, "compute_polar": 83, "edge_grab": 84, "generate_fixed_depth_mrb_circuit": 85, "generate_pauli_dressed_mrb_circuit": 86, "list_to_numcircuit_times_numpauli_matrix": 87, "mrb_analysi": 88, "multi_lmfit": [89, 90, 91, 92, 93], "create_multi_dataset_param": 90, "eval_func_single_dataset": 91, "get_param_names_from_func_signatur": 92, "multi_dataset_residu": 93, "randomized_benchmarking_common": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "compute_inverse_clifford": 95, "estimate_survival_prob": 96, "exponential_rb": 97, "fit_decay_lmfit": 98, "generate_all_rb_circuit": 99, "generate_fixed_depth_parallel_rb_circuit": 100, "generate_random_clifford_seq_circuit": 101, "get_survival_prob": 102, "import_native_gate_clifford": 103, "lmfit_minim": 104, "plot_rb_decai": 105, "relabel_qubits_array_from_zero": 106, "submit_parallel_rb_job": 107, "submit_sequential_rb_job": 108, "survival_probabilities_parallel": 109, "validate_irb_g": 110, "validate_rb_qubit": 111, "readout_mitig": [112, 113, 114, 115], "m3iqm": 113, "apply_readout_error_mitig": 114, "readout_error_m3": 115, "util": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "count_2q_lay": 117, "count_native_g": 118, "get_iqm_backend": 119, "marginal_distribut": 120, "perform_backend_transpil": 121, "reduce_to_active_qubit": 122, "retrieve_all_count": 123, "retrieve_all_job_metadata": 124, "set_coupling_map": 125, "sort_batches_by_final_layout": 126, "submit_execut": 127, "timeit": 128, "xrvariable_to_count": 129, "changelog": 130, "version": 130, "2": 130, "8": 130, "7": 130, "6": 130, "5": 130, "4": 130, "3": 130, "1": 130, "0": 130, "12": 130, "11": 130, "10": 130, "9": 130, "clifford": 131, "random": 131, "rb": 131, "exampl": [131, 132], "choos": 131, "defin": 131, "backend": 131, "set": 131, "token": 131, "us": [131, 135], "reson": 131, "configur": 131, "run": 131, "experi": 131, "perform": 131, "analysi": 131, "content": 133, "indic": 133, "tabl": 133, "licens": 134, "instal": 135, "latest": 135, "releas": 135, "option": 135, "depend": 135, "develop": 135, "mode": 135, "chang": 135, "recommend": 135, "character": 135, "physic": 135, "hardwar": 135, "jupyt": 135, "notebook": 135, "python": 135, "script": 135, "schedul": 135, "ci": 135, "cd": 135, "pipelin": 135}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.append_rms": [[23, "iqm-benchmarks-entanglement-ghz-append-rms"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[24, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[25, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[26, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[27, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[28, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[29, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[30, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[31, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[32, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[33, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[34, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[35, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[36, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[37, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[38, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[39, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[40, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[41, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[42, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[43, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[44, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[45, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[46, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[47, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[48, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[49, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[50, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[51, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[52, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[53, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[54, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[55, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[56, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[57, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[58, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[59, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[60, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[61, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[62, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[63, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[64, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[65, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[66, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[67, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[68, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[70, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[71, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[72, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[73, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[75, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[76, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[77, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[78, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[80, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[81, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[82, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[83, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[84, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[85, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[86, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[87, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[88, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[89, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[90, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[91, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[92, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[93, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[94, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[95, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[96, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[97, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[98, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[99, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[100, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[101, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[102, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[103, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[104, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[105, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[106, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[107, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[108, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[109, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[110, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[111, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[112, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[113, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[114, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[115, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[116, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.count_2q_layers": [[117, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[118, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[119, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[120, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[121, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[122, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[123, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[124, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[125, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[126, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[127, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[128, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[129, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[130, "changelog"]], "Version 2.8": [[130, "version-2-8"]], "Version 2.7": [[130, "version-2-7"]], "Version 2.6": [[130, "version-2-6"]], "Version 2.5": [[130, "version-2-5"]], "Version 2.4": [[130, "version-2-4"]], "Version 2.3": [[130, "version-2-3"]], "Version 2.2": [[130, "version-2-2"]], "Version 2.1": [[130, "version-2-1"]], "Version 2.0": [[130, "version-2-0"]], "Version 1.12": [[130, "version-1-12"]], "Version 1.11": [[130, "version-1-11"]], "Version 1.10": [[130, "version-1-10"]], "Version 1.9": [[130, "version-1-9"]], "Version 1.8": [[130, "version-1-8"]], "Version 1.7": [[130, "version-1-7"]], "Version 1.6": [[130, "version-1-6"]], "Version 1.5": [[130, "version-1-5"]], "Version 1.4": [[130, "version-1-4"]], "Version 1.3": [[130, "version-1-3"]], "Version 1.2": [[130, "version-1-2"]], "Version 1.1": [[130, "version-1-1"]], "Version 1.0": [[130, "version-1-0"]], "Clifford Randomized Benchmarking (RB) Example": [[131, "clifford-randomized-benchmarking-rb-example"]], "Choose (or define) a backend": [[131, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[131, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[131, "randomized-benchmarking-configuration"]], "Run the experiment": [[131, "run-the-experiment"]], "Perform the analysis": [[131, "perform-the-analysis"]], "Examples": [[132, "examples"]], "IQM Benchmarks": [[133, "iqm-benchmarks"], [135, "iqm-benchmarks"]], "Contents": [[133, "contents"]], "Indices and tables": [[133, "indices-and-tables"]], "License": [[134, "license"]], "Installation (latest release)": [[135, "installation-latest-release"]], "Optional dependencies": [[135, "optional-dependencies"]], "Development mode (latest changes: recommended)": [[135, "development-mode-latest-changes-recommended"]], "Characterize Physical Hardware": [[135, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[135, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[135, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.entanglement"], [20, "module-iqm.benchmarks.entanglement.ghz"], [35, "module-iqm.benchmarks.logging_config"], [36, "module-iqm.benchmarks.optimization"], [37, "module-iqm.benchmarks.optimization.qscore"], [49, "module-iqm.benchmarks.quantum_volume"], [50, "module-iqm.benchmarks.quantum_volume.clops"], [56, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [68, "module-iqm.benchmarks.randomized_benchmarking"], [69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [70, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [75, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [80, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [89, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [94, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [112, "module-iqm.benchmarks.readout_mitigation"], [116, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "append_rms() (in module iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.append_rms"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[33, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[34, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[35, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[36, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[37, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[40, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[41, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[42, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[43, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[44, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[45, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[46, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[47, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[48, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[49, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[50, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[53, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[54, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[55, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[56, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[59, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[60, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[61, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[62, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[63, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[64, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[65, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[66, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[67, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[68, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[70, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[73, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[75, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[78, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[80, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[83, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[84, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[85, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[86, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[87, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[88, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[89, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[90, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[91, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[92, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[93, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[94, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[95, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[96, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[97, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[98, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[99, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[100, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[101, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[102, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[103, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[104, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[105, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[106, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[107, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[108, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[109, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[110, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[111, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[112, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[113, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[113, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[114, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[115, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[116, "module-iqm.benchmarks.utils"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[117, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[118, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[119, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[120, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[121, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[122, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[123, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[124, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[125, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[126, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[127, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[128, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[129, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})