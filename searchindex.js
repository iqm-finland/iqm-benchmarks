Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "api/iqm.benchmarks.compressive_gst.gst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_ghz_deneb", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/example_quantum_volume_deneb", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_ghz_deneb.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/example_quantum_volume_deneb.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "iqm.benchmarks.compressive_gst.gst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "QV on Deneb", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 20, 70, 115, 121, 129, 131, 140, 154, 155, 160, 166, 169, 170], "python": 1, "librari": [1, 95, 100, 129, 151, 161], "suit": [1, 170], "qcvv": [1, 28, 152, 168, 170], "subpackag": [1, 19, 38, 55, 68, 87, 88, 93, 98], "modul": [1, 5, 15, 19, 38, 54, 55, 68, 87, 88, 93, 98, 168], "gener": [2, 3, 18, 20, 21, 22, 30, 33, 38, 40, 41, 46, 47, 48, 49, 50, 51, 57, 65, 70, 73, 76, 85, 91, 95, 96, 100, 103, 104, 105, 108, 109, 118, 119, 120, 135, 149, 154, 155, 156, 158, 159, 160, 161, 162, 169], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 24, 39, 40, 41, 56, 57, 58, 69, 70, 71, 75, 76, 77, 89, 90, 91, 94, 95, 96, 99, 100, 101, 118, 131, 132, 149, 151, 152, 169, 170], "inherit": [2, 3, 5, 15, 20, 39, 56, 69, 75, 89, 94, 99, 131], "benchmarkbas": [2, 4, 170], "abc": [2, 3, 5, 6, 20, 39, 56, 69, 75, 89, 94, 99], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 24, 39, 41, 56, 58, 69, 71, 75, 77, 89, 90, 94, 95, 99, 100, 170], "pydant": [2, 4, 20, 22, 39, 41, 56, 58, 69, 71, 75, 77, 89, 90, 94, 95, 99, 100], "main": [2, 7, 8, 20, 21, 39, 56, 69, 75, 89, 94, 99, 154], "basemodel": [2, 4, 20, 39, 56, 69, 75, 89, 94, 99], "backend": [3, 6, 20, 21, 23, 25, 29, 40, 41, 42, 49, 57, 65, 70, 71, 76, 77, 85, 91, 96, 101, 103, 104, 105, 118, 119, 126, 127, 129, 130, 132, 133, 134, 137, 138, 140, 141, 144, 145, 146, 149, 152, 159, 160, 170], "iqmbackendbas": [3, 6, 21, 40, 57, 70, 76, 91, 96, 101, 103, 104, 105, 118, 119, 120, 126, 127, 129, 130, 133, 137, 138, 140, 144, 146], "configur": [3, 4, 6, 21, 22, 24, 25, 27, 29, 32, 33, 35, 37, 40, 41, 57, 58, 70, 71, 76, 77, 84, 90, 91, 95, 96, 100, 101, 149, 169, 170], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 44, 51, 57, 58, 60, 70, 71, 76, 77, 90, 91, 95, 96, 100, 101, 113, 132, 149, 150, 154, 155, 169], "The": [3, 6, 7, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 57, 58, 61, 67, 70, 71, 73, 76, 77, 79, 80, 82, 83, 90, 91, 95, 96, 100, 101, 102, 103, 104, 114, 124, 128, 134, 137, 138, 140, 141, 142, 143, 147, 154, 155, 156, 159, 160, 161, 165, 166, 167, 169, 170], "implement": [3, 5, 6, 40, 41, 45, 159, 160], "all": [3, 4, 6, 7, 16, 17, 18, 22, 27, 30, 31, 33, 40, 41, 51, 53, 57, 64, 70, 74, 76, 78, 79, 80, 83, 84, 90, 91, 95, 96, 101, 118, 124, 126, 127, 132, 142, 143, 149, 152, 154, 155, 156, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170], "from": [3, 4, 6, 7, 11, 21, 22, 27, 29, 32, 33, 35, 36, 37, 40, 41, 42, 49, 51, 52, 58, 61, 67, 71, 73, 74, 76, 77, 78, 83, 85, 90, 95, 100, 102, 111, 124, 125, 128, 132, 134, 138, 142, 143, 144, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170], "which": [3, 6, 7, 8, 19, 22, 24, 29, 30, 31, 37, 40, 41, 42, 49, 52, 57, 58, 66, 68, 70, 71, 72, 76, 86, 90, 91, 92, 95, 96, 97, 100, 101, 107, 118, 124, 128, 132, 141, 154, 155, 159, 160, 161, 169, 170], "thei": [3, 17, 32, 161], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 19, 21, 22, 40, 41, 44, 57, 58, 70, 71, 76, 77, 90, 91, 95, 96, 100, 101, 132, 140, 149, 154, 155, 157, 158, 159, 160, 161, 165, 166], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 157, 158, 159, 160, 161], "abstract": [3, 6, 161], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 23, 24, 41, 53, 58, 65, 71, 73, 77, 85, 90, 95, 100, 111, 117, 118, 134, 138, 141, 149, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 169], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 20, 21, 37, 40, 51, 55, 57, 65, 68, 70, 71, 76, 77, 78, 85, 90, 91, 95, 96, 100, 101, 102, 115, 121, 126, 127, 128, 140, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 169, 170], "full": [3, 19, 20, 22, 71, 77, 161, 170], "given": [3, 6, 7, 11, 22, 30, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 63, 68, 70, 76, 83, 84, 93, 102, 119, 120, 145, 154, 155, 159, 160, 161, 170], "static": [3, 6, 21, 40, 57, 70, 76, 91, 96, 101], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 22, 23, 24, 27, 28, 30, 36, 40, 41, 42, 44, 45, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 85, 90, 91, 95, 96, 100, 101, 102, 103, 104, 105, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 146, 148, 151, 152, 154, 158, 159, 160, 161, 163, 165, 166], "check": [3, 25, 64, 84, 151, 154, 155], "whether": [3, 4, 22, 41, 58, 64, 65, 67, 70, 71, 76, 77, 84, 85, 90, 95, 119, 124, 140, 159, 160, 162, 169], "requir": [3, 4, 22, 41, 58, 71, 77, 90, 95, 100, 151, 159, 161, 169, 170], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 23, 25, 27, 31, 32, 37, 40, 41, 51, 52, 76, 77, 105, 124, 130, 139, 141, 149, 151, 154, 155, 159, 160, 161, 167, 169, 170], "met": 3, "valid": [3, 24, 129, 130, 168, 170], "dictionari": [3, 4, 7, 11, 22, 29, 35, 41, 58, 61, 70, 71, 74, 76, 77, 78, 81, 82, 83, 90, 95, 100, 101, 103, 104, 114, 118, 119, 120, 122, 126, 127, 133, 134, 137, 139, 145, 148, 156, 158, 161, 162], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 154, 161, 169], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 21, 22, 28, 30, 41, 49, 52, 58, 65, 70, 71, 76, 77, 90, 95, 100, 103, 104, 105, 109, 114, 117, 118, 119, 120, 124, 126, 127, 129, 132, 140, 141, 142, 146, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 170], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 57, 58, 70, 71, 76, 77, 90, 91, 95, 96, 100, 101, 147, 161, 165, 166, 169], "shot": [4, 22, 41, 58, 71, 76, 77, 90, 95, 100, 126, 127, 132, 133, 146, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170], "int": [4, 9, 11, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 76, 77, 78, 81, 84, 85, 90, 95, 100, 101, 102, 103, 104, 105, 106, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 133, 136, 139, 140, 142, 144, 145, 146, 148, 159, 160, 161], "256": [4, 58, 71, 77, 90, 95, 100, 156, 158, 163, 164], "max_gates_per_batch": [4, 22, 41, 58, 71, 77, 90, 95, 100, 126, 127, 146, 154, 155, 156, 157, 158, 163, 165, 166, 170], "calset_id": [4, 22, 41, 58, 71, 77, 90, 95, 100, 126, 127, 146, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 170], "routing_method": [4, 22, 41, 58, 71, 77, 90, 95, 100, 104, 105, 140, 154, 155, 156, 157, 158, 163, 165, 166, 170], "liter": [4, 22, 41, 58, 71, 77, 90, 95, 100, 144], "basic": [4, 22, 41, 58, 71, 77, 90, 95, 100, 104, 105], "lookahead": [4, 22, 41, 58, 71, 77, 90, 95, 100], "stochast": [4, 22, 41, 58, 71, 77, 90, 95, 100], "sabr": [4, 22, 41, 58, 71, 77, 90, 95, 100, 140, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 170], "physical_layout": [4, 22, 41, 58, 71, 77, 90, 95, 100, 144, 154, 155, 156, 157, 158, 163, 165, 166, 170], "fix": [4, 22, 29, 41, 58, 71, 77, 90, 95, 100, 101, 104, 119, 126, 128, 144, 149, 154, 155, 156, 157, 158, 161, 165, 166, 170], "batch": [4, 17, 22, 41, 58, 71, 77, 90, 95, 100, 126, 127, 144, 145, 146, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "number": [4, 22, 23, 24, 27, 28, 31, 40, 41, 45, 46, 47, 48, 49, 50, 51, 53, 55, 57, 58, 60, 62, 63, 65, 67, 68, 71, 76, 77, 84, 85, 87, 90, 95, 100, 101, 102, 103, 104, 105, 106, 115, 118, 119, 120, 121, 126, 127, 132, 133, 136, 137, 146, 154, 155, 157, 158, 159, 160, 161], "us": [4, 6, 9, 16, 19, 20, 21, 22, 27, 28, 29, 32, 33, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 58, 65, 67, 70, 71, 77, 100, 102, 117, 124, 132, 134, 146, 149, 151, 152, 154, 155, 159, 161, 162, 167, 169], "circuit": [4, 7, 10, 15, 16, 17, 20, 21, 22, 23, 24, 27, 37, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 61, 68, 70, 71, 76, 77, 78, 81, 84, 85, 90, 91, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 114, 115, 118, 119, 120, 121, 126, 127, 129, 132, 133, 136, 137, 140, 141, 145, 146, 148, 149, 151, 152, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168], "default": [4, 6, 12, 22, 27, 30, 41, 58, 71, 76, 77, 85, 90, 95, 100, 120, 124, 132, 144, 154, 156, 158, 161, 162, 164, 166], "i": [4, 6, 7, 19, 21, 22, 23, 24, 27, 28, 29, 30, 33, 41, 42, 46, 49, 51, 53, 57, 58, 64, 66, 67, 70, 71, 72, 76, 77, 84, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 106, 107, 110, 125, 129, 132, 140, 144, 151, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170], "2": [4, 22, 23, 24, 28, 52, 58, 64, 77, 84, 100, 119, 125, 136, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170], "8": [4, 22, 125, 151, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170], "maximum": [4, 31, 67, 126, 127, 146, 154, 155, 161], "gate": [4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 35, 37, 40, 41, 46, 50, 51, 52, 58, 68, 70, 71, 77, 87, 88, 91, 93, 95, 96, 100, 103, 105, 114, 117, 118, 119, 120, 122, 124, 126, 127, 129, 136, 137, 140, 146, 149, 154, 159, 160, 163, 167, 168, 170], "per": [4, 22, 68, 71, 77, 90, 100, 102, 104, 105, 106, 126, 127, 132, 133, 146, 161, 167, 168], "option": [4, 20, 41, 52, 58, 65, 76, 77, 95, 104, 105, 114, 117, 119, 120, 124, 126, 127, 129, 140, 141, 142, 146, 149, 152, 157, 158, 160, 161, 166, 168], "calibr": [4, 6, 41, 42, 52, 76, 77, 126, 127, 132, 133, 146, 149, 158, 159, 160, 162, 164, 166], "id": [4, 146, 157, 158, 162, 164], "last": [4, 22], "avail": [4, 33, 169, 170], "qiskit": [4, 6, 22, 29, 58, 71, 77, 95, 100, 129, 140, 149, 151, 152, 154, 161], "rout": [4, 71, 77, 100, 140, 157, 158, 159, 160, 161, 165, 166], "transpil": [4, 16, 21, 40, 41, 44, 45, 58, 70, 71, 77, 100, 118, 119, 129, 133, 137, 140, 145, 149, 152, 154, 157, 158, 159, 160, 161, 165, 166], "physic": [4, 22, 24, 30, 41, 58, 70, 71, 76, 77, 81, 95, 100, 104, 144, 157, 158, 161, 165, 166, 168], "layout": [4, 8, 11, 16, 17, 22, 24, 41, 53, 58, 70, 71, 76, 77, 100, 101, 126, 127, 134, 140, 144, 149, 154, 157, 158, 159, 160, 161, 163, 165, 166], "constrain": [4, 144, 170], "dure": [4, 13, 23, 76, 91, 96], "select": [4, 22, 41, 58, 77, 83, 161], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 24, 27, 29, 32, 33, 35, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 61, 67, 68, 70, 71, 76, 77, 81, 85, 87, 90, 91, 95, 100, 101, 102, 103, 104, 105, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 132, 134, 136, 140, 141, 144, 145, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168], "initi": [4, 6, 19, 20, 22, 27, 37, 41, 54, 134, 154, 161], "allow": [4, 149, 154, 155, 159, 160, 170], "ani": [4, 8, 22, 23, 27, 44, 45, 74, 76, 95, 101, 106, 124, 126, 127, 133, 141, 143, 151, 155, 169, 170], "other": [4, 21, 27, 41, 149, 154, 155, 169, 170], "accord": [4, 27, 40, 47, 48, 57, 103, 144, 145, 151, 157, 158, 161, 165, 166], "final": [4, 6, 32, 52, 71, 76, 77, 81, 100, 140, 144, 145, 154], "measur": [4, 19, 20, 22, 27, 29, 33, 35, 40, 41, 44, 57, 60, 70, 71, 76, 77, 81, 90, 95, 100, 128, 133, 137, 144, 145, 152, 154, 155, 157, 159, 160, 161], "model_computed_field": [4, 22, 41, 58, 71, 77, 90, 95, 100], "classvar": [4, 22, 41, 58, 71, 77, 90, 95, 100], "dict": [4, 7, 11, 22, 23, 24, 41, 44, 45, 58, 60, 61, 67, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 90, 95, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 120, 121, 122, 124, 126, 127, 128, 133, 134, 137, 139, 142, 143, 145, 146, 148, 152], "computedfieldinfo": [4, 22, 41, 58, 71, 77, 90, 95, 100], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 66, 70, 71, 72, 74, 76, 77, 82, 83, 86, 90, 91, 92, 95, 100, 101, 103, 104, 107, 114, 117, 119, 120, 126, 127, 139, 140, 141, 144, 148, 154, 159, 160, 161, 169, 170], "comput": [4, 22, 27, 33, 40, 41, 43, 49, 58, 60, 61, 71, 76, 77, 78, 79, 80, 82, 90, 95, 100, 114, 115, 121, 139, 151, 154, 155, 159, 161, 168, 169, 170], "field": [4, 6, 22, 41, 58, 71, 77, 90, 95, 100, 169], "correspond": [4, 22, 23, 30, 41, 57, 58, 66, 68, 70, 71, 72, 76, 77, 81, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 107, 124, 128, 133, 145, 149, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166], "object": [4, 7, 8, 9, 10, 16, 17, 18, 22, 24, 27, 28, 35, 40, 41, 43, 53, 58, 71, 76, 77, 90, 95, 100, 101, 109, 126, 127, 138, 142, 143, 146, 161, 165, 166, 169], "model_config": [4, 22, 41, 58, 71, 77, 90, 95, 100], "configdict": [4, 22, 41, 58, 71, 77, 90, 95, 100], "model": [4, 22, 27, 41, 58, 71, 77, 90, 95, 100, 117, 123, 124, 154], "should": [4, 6, 8, 10, 22, 40, 41, 49, 54, 58, 71, 77, 90, 95, 100, 119, 149, 157, 158, 159, 160, 161, 169], "conform": [4, 22, 28, 41, 58, 71, 77, 90, 95, 100], "config": [4, 22, 41, 58, 71, 77, 90, 95, 100], "model_field": [4, 22, 41, 58, 71, 77, 90, 95, 100], "fieldinfo": [4, 22, 41, 58, 71, 77, 90, 95, 100], "annot": [4, 22, 41, 58, 71, 77, 90, 95, 100, 134, 169], "true": [4, 22, 27, 41, 44, 58, 71, 76, 77, 90, 95, 100, 124, 140, 151, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 170], "union": [4, 22, 41, 58, 71, 77, 90, 95, 100, 134, 161, 169], "nonetyp": [4, 22, 41, 58, 71, 77, 90, 95, 100], "fals": [4, 22, 27, 41, 58, 71, 77, 85, 90, 95, 100, 124, 132, 140, 154, 156, 158, 165], "metadata": [4, 21, 22, 40, 41, 53, 57, 58, 70, 71, 74, 76, 77, 90, 91, 95, 96, 100, 101, 143], "about": [4, 22, 41, 58, 71, 77, 90, 95, 100, 149, 159], "defin": [4, 5, 6, 7, 22, 24, 25, 41, 49, 51, 58, 71, 77, 90, 95, 100, 118, 141, 152, 154, 159, 160, 169, 170], "map": [4, 7, 21, 22, 41, 49, 52, 58, 60, 61, 71, 77, 90, 95, 100, 140, 144, 145, 149, 159, 160], "thi": [4, 5, 6, 15, 16, 22, 23, 28, 33, 40, 41, 49, 53, 58, 64, 71, 77, 84, 90, 95, 100, 125, 134, 150, 151, 152, 153, 154, 155, 159, 160, 161, 167, 169, 170], "replac": [4, 22, 41, 58, 71, 77, 90, 95, 100, 169], "__fields__": [4, 22, 41, 58, 71, 77, 90, 95, 100], "v1": [4, 22, 41, 58, 71, 77, 90, 95, 100], "function": [5, 6, 20, 21, 22, 26, 34, 37, 39, 56, 57, 61, 66, 69, 70, 72, 75, 76, 86, 89, 91, 92, 94, 96, 97, 99, 101, 107, 108, 110, 111, 113, 114, 116, 117, 123, 125, 131, 135, 147, 149, 161], "benchmarkobservationidentifi": [5, 8, 35, 149, 156, 158, 162, 164, 165, 166], "benchmarkobserv": [5, 7, 35, 53, 149, 156, 158, 162, 164, 165, 166], "benchmarkrunresult": [5, 6, 7, 12, 21, 34, 40, 43, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 149], "benchmarkanalysisresult": [5, 6, 12, 21, 34, 40, 43, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 149], "kwarg": 6, "run": [6, 7, 8, 10, 20, 21, 22, 24, 27, 34, 35, 40, 41, 43, 57, 61, 66, 70, 71, 72, 76, 86, 91, 92, 96, 97, 101, 107, 152, 154, 155, 158, 161, 167, 170], "cortex": [6, 11], "experi": [6, 27, 29, 32, 33, 35, 37, 53, 57, 65, 66, 70, 72, 73, 76, 77, 79, 80, 86, 91, 92, 96, 97, 101, 107, 116, 123, 124, 128, 130, 158, 167], "In": [6, 154, 155, 161, 169, 170], "order": [6, 22, 27, 42, 52, 53, 117, 125, 159, 160, 170], "write": [6, 132, 151, 152, 169], "new": [6, 7, 11, 141, 149, 152, 154, 155, 161, 166, 170], "recommend": [6, 161, 169, 170], "deriv": [6, 169], "baseclass": 6, "addition": [6, 159, 160], "custom": [6, 58, 77, 154, 155, 158, 164, 165, 166, 170], "analysi": [6, 7, 12, 21, 22, 26, 34, 57, 66, 70, 72, 73, 76, 86, 91, 92, 96, 97, 101, 107, 149, 154], "can": [6, 10, 16, 22, 30, 32, 41, 42, 55, 57, 68, 76, 134, 149, 154, 159, 160, 161, 165, 166, 170], "give": [6, 21, 61, 149, 154, 159, 160, 161, 169], "pointer": 6, "analysis_funct": [6, 21, 40, 57, 70, 76, 91, 96, 101, 152], "accept": [6, 22, 65, 149, 169], "analysisresult": [6, 7, 40, 43, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 149, 152], "its": [6, 111, 141, 149, 154, 155, 169], "input": [6, 11, 24, 71, 77, 106, 125, 129, 130, 134, 144, 157, 158, 161], "result": [6, 7, 8, 10, 11, 12, 20, 21, 22, 27, 28, 31, 32, 33, 34, 35, 36, 53, 55, 57, 60, 66, 67, 68, 70, 72, 76, 77, 84, 85, 86, 91, 92, 96, 97, 101, 107, 115, 121, 123, 144, 149, 152, 154, 155, 158, 165, 166, 169, 170], "onli": [6, 12, 23, 71, 77, 141, 154, 155, 159, 160, 161, 163, 169], "pass": [6, 12, 106, 134, 140, 152, 158, 164], "through": [6, 12, 45, 169], "iqmbackend": [6, 76, 101, 126, 127, 166], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 27, 29, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 53, 57, 70, 73, 76, 91, 96, 101, 108, 110, 124, 148, 149, 152, 154, 155, 156, 158, 159, 161, 162, 165, 166], "overridden": 6, "an": [6, 16, 17, 19, 20, 21, 22, 31, 34, 35, 37, 40, 41, 43, 44, 57, 70, 96, 97, 125, 129, 133, 134, 149, 151, 152, 154, 155, 159, 160, 161, 169, 170], "xarrai": [6, 7, 11, 13, 21, 27, 29, 33, 35, 37, 40, 44, 57, 70, 76, 91, 96, 101, 148, 149, 152], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 24, 27, 28, 29, 31, 32, 33, 35, 37, 40, 42, 43, 44, 45, 53, 101, 103, 126, 127, 141, 149, 154, 155, 161, 165, 166, 167, 169, 170], "inform": [6, 10, 52, 54, 169], "necessari": [6, 154, 159, 160, 170], "analys": 6, "calibration_set_id": [6, 160, 166], "uuid": 6, "calibrationsetid": 6, "latest": [6, 146, 159, 160, 168], "set": [6, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 37, 40, 58, 71, 77, 103, 104, 106, 112, 124, 137, 144, 146, 151, 154, 155, 159, 162, 167, 168, 170], "runresult": [6, 7, 10, 40, 43, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 149, 152], "analyz": [6, 10, 40, 43, 136, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 170], "run_index": [6, 158, 165, 166], "1": [6, 22, 33, 58, 62, 83, 100, 104, 105, 116, 119, 125, 140, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170], "intern": [6, 17], "perform": [6, 21, 33, 58, 71, 77, 117, 128, 140, 154, 161, 167, 169, 170], "make": [6, 76, 146, 150, 154, 168, 169, 170], "shallow": 6, "copi": [6, 151, 169], "produc": [6, 20, 24, 31, 33, 52, 77, 170], "therefor": [6, 64, 84], "chang": [6, 22, 149, 166, 168, 169], "data": [6, 7, 11, 20, 21, 22, 26, 27, 33, 40, 41, 42, 44, 52, 73, 85, 109, 112, 117, 123, 132, 152, 157, 158, 159, 160, 161, 165, 166], "just": [6, 154], "structur": [6, 154, 155], "arrai": [6, 20, 27, 29, 31, 33, 37, 70, 90, 95, 100, 124, 125, 130, 134, 161], "index": [6, 40, 42, 49, 51, 52, 70, 76, 104, 155, 165, 166, 168], "construct": [6, 19, 41, 46], "updat": [6, 21, 34, 70, 71, 149, 154, 155, 157, 158, 170], "core": 7, "circuit_contain": 7, "plot": [7, 20, 21, 22, 34, 40, 43, 53, 85, 124, 149, 152, 154, 155, 156, 158, 159, 160, 162, 170], "matplotlib": [7, 28, 152, 154, 155, 161], "figur": [7, 14, 28, 31, 32, 33, 53, 65, 73, 85, 124, 152, 158, 161], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 34, 35, 40, 43, 53, 73, 124, 149, 154, 155, 156, 158, 159, 160, 162, 164, 165, 166], "list": [7, 9, 11, 13, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 44, 45, 49, 51, 52, 53, 57, 59, 60, 61, 63, 65, 67, 70, 71, 76, 78, 79, 80, 81, 82, 84, 85, 100, 101, 102, 103, 104, 105, 106, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 139, 140, 142, 143, 144, 145, 146, 148, 149, 151, 155, 159, 160, 161, 165, 166, 169, 170], "dataclass": [7, 8, 10], "store": [7, 8, 10, 21, 34, 53, 149, 170], "consist": [7, 19, 159, 160, 169], "kei": [7, 60, 67, 70, 76, 81, 100, 103, 137, 139, 145, 151, 161, 165, 166], "valu": [7, 8, 22, 36, 40, 41, 45, 49, 60, 61, 67, 70, 71, 100, 103, 116, 137, 139, 140, 145, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "pair": [7, 36, 42, 50, 52, 70, 130, 154], "plot_nam": 7, "plot_al": [7, 152, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166], "from_run_result": 7, "creat": [7, 21, 23, 27, 32, 40, 41, 49, 50, 57, 61, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 150, 152, 160, 166, 170], "identifi": [8, 9, 11, 27, 35, 76, 101, 117, 124, 126, 127, 129, 142, 148, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 169], "uncertainti": [8, 22, 36, 45, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "singl": [8, 10, 13, 16, 18, 22, 36, 41, 53, 58, 59, 70, 71, 76, 77, 103, 110, 149, 154, 155, 161, 170], "string": [8, 9, 11, 17, 18, 27, 30, 36, 142, 170], "qubit_indic": [9, 16, 156, 158, 162, 164, 165, 166], "eas": 9, "indic": [9, 76, 81, 139, 145, 169], "wa": [9, 25, 32, 64, 84, 128, 154, 155, 169], "properti": [9, 16, 17], "string_identifi": [9, 154, 158, 159, 160, 161], "version": [9, 108, 151, 154, 155, 169, 170], "enough": [10, 159, 160], "those": [10, 76, 81, 144, 154, 155, 161, 169], "count": [11, 22, 27, 29, 32, 33, 35, 37, 40, 41, 43, 60, 61, 67, 76, 78, 102, 115, 121, 128, 133, 134, 137, 142, 143, 148, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "add": [11, 17, 21, 40, 51, 57, 70, 76, 91, 96, 101, 103, 147, 149, 151, 169, 170], "job": [11, 70, 74, 76, 101, 126, 127, 142, 152, 156, 157, 158, 162, 163, 165, 166], "If": [11, 22, 27, 33, 41, 58, 100, 154, 155, 161, 163, 169], "same": [11, 17, 42, 52, 100, 154, 155, 157, 158, 159, 160, 169], "alreadi": [11, 156], "present": 11, "old": 11, "both": [11, 21, 77, 154, 162, 170], "ad": [11, 149, 156, 158, 159, 162, 163, 165, 166], "togeth": [11, 170], "bitstr": [11, 60, 61, 62, 67, 83, 128, 139], "current": [11, 27, 29, 30, 32, 33, 35, 37, 41, 70, 132, 159, 160, 161, 170], "instanc": [11, 16, 17, 21, 34, 44, 45, 65, 149, 161], "xr": [11, 13, 32, 40, 44, 45, 53, 57, 70, 73, 76, 91, 96, 101, 124, 148, 152], "merg": [11, 13], "where": [11, 16, 17, 22, 24, 25, 27, 37, 41, 105, 149, 154, 155, 159, 160, 161, 169], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 41, 49, 51, 123, 159, 160], "size": [13, 22, 28, 41, 49, 55, 57, 65, 67, 152, 154, 158, 164], "dateset": 13, "fig": [14, 53, 152], "show": [14, 152, 154, 155, 158, 159, 160], "close": [14, 22, 152], "easili": [15, 149, 170], "interact": [15, 149], "quantum": [15, 21, 22, 23, 24, 40, 41, 44, 46, 47, 48, 49, 50, 57, 68, 70, 71, 75, 76, 77, 78, 81, 84, 86, 103, 104, 115, 119, 120, 121, 132, 133, 136, 137, 140, 141, 146, 149, 159, 160, 161, 167, 168, 170], "circuitgroup": [15, 16, 40, 149], "benchmarkcircuit": [15, 18, 149], "circuit_group": 16, "group": [16, 17, 91, 150, 154, 168], "purpos": [16, 17, 169], "typic": [16, 17, 154, 155], "repres": [16, 17, 23, 28, 73, 85, 139, 169], "exampl": [16, 108, 149, 150, 152, 153, 159, 161, 168, 169, 170], "insid": [16, 149], "get_circuit_group_by_nam": 16, "get": [16, 20, 22, 111, 138, 158, 163], "desir": [16, 17, 21], "doe": [16, 41, 169], "exist": [16, 18, 149, 154, 155, 170], "group_nam": 16, "integ": [16, 17, 22, 24, 41, 76, 81, 104], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 23, 24, 27, 31, 32, 33, 36, 37, 41, 42, 45, 49, 60, 61, 65, 67, 70, 71, 73, 76, 81, 85, 101, 117, 118, 119, 120, 122, 124, 126, 133, 140, 145, 146], "qubit_layout": [16, 17, 22, 23, 24, 25, 27, 29, 31, 32, 33, 35, 40, 42, 44, 45, 49, 51, 52, 53, 154, 158, 159, 160, 161], "qiskit_iqm": [17, 41, 149, 152, 154, 155, 158, 159, 160, 166], "iqm_circuit": 17, "iqmcircuit": [17, 23, 24, 40, 46, 47, 48, 49, 50, 70, 76, 81, 101, 103, 104, 105, 114, 118, 119, 120, 122, 126, 127, 129, 133, 136, 137, 140, 141, 145, 146, 149], "It": [17, 151, 154, 155, 159, 170], "common": [17, 113, 169], "activ": [17, 141, 170], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 169, 170], "found": [17, 42, 154, 155, 170], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 169], "compress": [19, 20, 21, 22, 26, 34, 149, 167, 168, 170], "gst": [19, 21, 22, 27, 28, 29, 32, 33, 34, 35, 149, 167, 168], "self": [19, 21, 120, 152], "character": [19, 21, 154, 168], "process": [19, 20, 27, 77, 154, 155, 156, 158, 162, 163, 165, 166], "matric": [19, 31, 161], "well": [19, 21, 33, 34], "parametr": [19, 27, 61, 68, 70, 71, 154, 155, 157, 158, 161], "state": [19, 22, 27, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 115, 121, 149, 152, 161, 167, 168, 169, 170], "povm": [19, 27, 31, 37, 161], "low": [19, 161], "rank": [19, 22, 31, 33, 149, 161], "matrix": [19, 20, 31, 106, 151, 154, 155], "reduc": [19, 22, 41, 141], "post": [19, 77, 156, 158, 162, 163, 165, 166], "overhead": 19, "tomographi": [20, 26, 167, 168, 170], "follow": [20, 154, 155, 159, 160, 161, 169, 170], "step": 20, "said": 20, "convers": [20, 169], "ideal": [20, 78, 102, 154, 155], "numpi": [20, 29, 31, 33, 151, 154, 155, 158, 161, 162], "mgst": [20, 22, 29, 36, 37, 149, 161, 169, 170], "first": [20, 22, 27, 37, 51, 57, 70, 100, 159, 160, 161, 163, 165, 166, 167], "estim": [20, 22, 27, 31, 33, 37, 40, 41, 44, 45, 55, 57, 71, 76, 91, 96, 101, 102, 128, 149, 154, 155, 157, 158, 159, 160, 162], "gaug": [20, 31, 33, 161], "optim": [20, 22, 31, 33, 41, 70, 71, 77, 100, 140, 149, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166, 170], "target": [20, 22, 27, 33, 37, 140, 161], "pygsti": [20, 27], "rerun": [20, 159], "bootstrap": [20, 22, 27, 32, 33, 161], "error": [20, 22, 25, 27, 31, 32, 33, 35, 36, 41, 44, 58, 76, 77, 82, 124, 134, 149, 154, 158, 159, 160, 161], "bar": [20, 27, 32, 33, 124, 152, 161], "tabl": [20, 22, 28, 31, 32, 33, 154, 161], "reconstruct": [20, 22, 27, 37, 161], "compressivegst": [20, 22, 161], "benchmark_definit": [20, 22, 39, 41, 56, 58, 69, 71, 75, 77, 89, 90, 94, 95, 99, 100, 152], "gstconfigur": [20, 21, 24, 161], "spam": [21, 27, 32, 35, 154], "robust": [21, 154], "generate_meas_circuit": 21, "random": [21, 22, 40, 41, 58, 70, 87, 89, 94, 95, 99, 100, 103, 105, 113, 119, 120, 149, 151, 155, 157, 159, 160, 161, 164, 167, 168, 170], "distribut": [21, 82, 83, 139, 151, 154, 155, 169], "among": [21, 154, 170], "differ": [21, 24, 27, 40, 73, 100, 154, 159, 160, 161, 165, 166, 167, 169, 170], "depth": [21, 22, 41, 46, 47, 48, 49, 58, 76, 85, 100, 101, 104, 105, 116, 119, 123, 126, 128, 154, 155, 156, 157, 158, 159, 160, 162, 163], "rang": [21, 148, 149, 151, 152, 154, 155, 156, 158, 160, 161, 162, 163, 170], "l_min": 21, "l_max": 21, "seq_len_list": [21, 22], "No": 21, "than": [21, 41, 154, 155, 159, 160, 163], "need": [21, 22, 28, 40, 70, 134, 154, 155, 161, 170], "axactli": 21, "describ": [21, 169], "meaning": [21, 55, 57, 68, 76, 77], "float": [21, 22, 28, 36, 42, 52, 57, 59, 60, 62, 63, 64, 65, 67, 70, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 95, 100, 102, 103, 104, 105, 115, 116, 117, 121, 124, 128, 129, 132, 134, 137, 139], "time": [21, 22, 27, 70, 73, 74, 76, 101, 126, 127, 147, 154, 155, 157, 158, 160, 161], "took": 21, "circuit_gen_transp_tim": 21, "add_configuration_to_dataset": [21, 40], "sourc": [21, 161, 168, 169], "further": [21, 40, 149], "storag": [21, 40, 149], "routin": [21, 28, 40, 41, 58, 77, 117], "1024": [22, 41], "gate_set": [22, 23, 24, 161], "num_circuit": [22, 27, 37, 71, 77, 154, 155, 157, 158, 161, 165, 166, 170], "gate_label": [22, 161], "14": [22, 151, 156, 157, 158, 160, 162, 163, 170], "from_init": 22, "bool": [22, 27, 41, 58, 64, 65, 67, 70, 71, 76, 77, 84, 85, 90, 95, 124, 132, 140], "max_init": 22, "20": [22, 151, 152, 156, 157, 158, 160, 162, 168], "opt_method": 22, "auto": 22, "max_iter": 22, "convergence_criteria": 22, "4": [22, 70, 125, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170], "0": [22, 40, 42, 49, 51, 52, 57, 64, 77, 100, 103, 104, 105, 125, 140, 144, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170], "0001": [22, 152], "batch_siz": 22, "bootstrap_sampl": [22, 161], "test": [22, 149, 154, 155, 170], "ghzbenchmark": [22, 39, 41, 154, 155, 158, 159, 160], "sequenc": [22, 29, 41, 58, 71, 76, 77, 90, 95, 100, 101, 102, 115, 118, 119, 120, 121, 140, 144, 154, 156, 158, 161, 162], "e": [22, 23, 24, 27, 37, 41, 95, 100, 125, 148, 154, 155, 157, 158, 159, 160, 161, 165, 166], "g": [22, 41, 95, 100, 125, 148, 151, 154, 155, 157, 158, 159, 160, 161, 165, 166], "specifi": [22, 23, 24, 27, 37, 41, 71, 76, 77, 95, 101, 103, 104, 126, 127, 130, 137, 139, 144, 146, 154, 155, 163, 170], "label": [22, 23, 24, 28, 30, 41, 71, 85, 95, 104, 114, 120, 124, 140, 144, 149, 151, 152, 154, 159, 160], "meant": [22, 24, 41], "either": [22, 58, 117, 134, 137, 151, 159, 160, 161, 169, 170], "cirucuit": 22, "one": [22, 71, 125, 146, 152, 154, 159, 160, 161, 163, 169, 170], "predefin": [22, 23, 161], "1qxyi": [22, 161], "2qxycz": [22, 161], "2qxycz_extend": [22, 161], "3qxycz": [22, 161], "tomograph": 22, "complet": 22, "mean": [22, 64, 137, 151, 154, 155, 157, 161, 169], "vacuum": 22, "abl": 22, "prepar": [22, 37, 40, 152, 154, 159, 160, 161, 169], "form": [22, 103, 169], "frame": [22, 161], "space": 22, "practic": [22, 170], "suffici": [22, 159, 160], "condit": [22, 64, 84, 159, 160, 169], "combin": [22, 30, 154, 155, 169], "local": [22, 159], "pauli": [22, 30, 33, 100, 102, 104, 105, 106, 151, 161], "eigenst": 22, "quantumcircuit": [22, 23, 24, 40, 46, 47, 48, 49, 50, 57, 70, 76, 81, 101, 103, 114, 118, 119, 120, 126, 127, 133, 136, 140, 141, 145, 146, 149, 151, 152, 161], "how": [22, 40, 150, 153, 161, 167, 168, 169, 170], "mani": [22, 40, 70, 149, 159], "guidelin": 22, "choos": [22, 30, 41, 57, 155, 159, 160, 169], "At": 22, "least": [22, 77, 154, 155, 161, 169], "50": [22, 152, 154, 155, 158, 161, 162, 163, 164, 166, 169], "3": [22, 41, 58, 71, 77, 84, 125, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170], "400": [22, 151, 156, 158, 164], "two": [22, 100, 103, 151, 152, 154, 159, 160, 161], "6": [22, 31, 151, 156, 157, 158, 159, 160, 162, 163, 164, 166, 169, 170], "2000": [22, 155, 161], "three": [22, 154, 155], "9": [22, 151, 152, 154, 156, 157, 158, 159, 160, 162, 163, 169, 170], "expect": [22, 60, 61, 67, 100, 103, 105, 149, 154], "grow": 22, "linearli": [22, 41], "exponenti": [22, 116, 154], "krau": [22, 27, 31, 33, 37, 161], "coher": [22, 40, 41, 44, 154, 155, 158, 159, 160], "dim": 22, "control": [22, 28, 159, 160, 169], "maxim": [22, 50, 154, 155], "middl": 22, "cutoff": 22, "below": [22, 154, 155, 159, 160, 161, 169, 170], "possibl": [22, 41, 159, 160, 165, 166, 169], "algorithm": [22, 37, 41, 51, 103, 154, 155, 159, 160], "point": [22, 124, 159, 160], "tri": 22, "limit": [22, 151, 169], "amount": [22, 147, 148], "retri": 22, "gd": 22, "sfn": 22, "gradient": 22, "descent": 22, "saddl": 22, "free": [22, 169], "newton": 22, "respect": [22, 41, 100, 102, 154, 160], "automat": [22, 32, 170], "iter": [22, 134, 139], "while": [22, 132, 159, 160, 161, 169], "second": [22, 27, 37, 68, 70, 167, 168], "determin": [22, 41, 169], "when": [22, 77, 149, 154, 159, 160, 170], "termin": [22, 169, 170], "multipli": [22, 62], "cost": [22, 154, 155], "threshold": [22, 64, 65, 77, 84, 85, 154, 155], "nois": [22, 154], "consid": [22, 71, 77, 144], "success": [22, 64, 84, 154, 155], "10": [22, 71, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170], "usual": [22, 33, 159], "sensibl": 22, "rel": 22, "between": [22, 50, 51, 105, 132, 154, 155, 159], "consecut": [22, 41], "1e": [22, 161], "hyperparamt": 22, "converg": [22, 161], "behaviour": 22, "smaller": [22, 40, 41, 49, 154], "runtim": 22, "lead": [22, 149, 159, 160, 161], "errat": 22, "jump": 22, "lack": 22, "repeat": [22, 154, 155], "fake": [22, 149], "via": [22, 40, 41, 154, 155, 161], "num_qubit": [23, 24, 45, 46, 47, 48, 50, 57, 58, 76, 102, 115, 121, 155, 157, 160], "assign": [23, 70, 71, 100, 154, 155, 157, 158], "transipil": 23, "so": [23, 32, 149, 154, 161], "stage": [23, 149], "mai": [23, 151, 154, 155, 169], "actual": [23, 154, 155], "gate_labels_dict": [23, 24], "rx": [23, 24, 161], "pi": [23, 24, 151, 158, 162], "rotat": [23, 24, 33, 151, 152], "around": [23, 24, 154, 155], "x": [23, 24, 27, 37, 62, 110, 112, 124, 149, 151, 152, 160, 161, 163, 165, 166], "axi": [23, 24, 27, 37, 124, 149], "num_gat": [23, 24], "handl": [24, 170], "variabl": [24, 57, 70, 76, 91, 96, 101, 117, 152, 161, 170], "correct": [25, 85, 102, 132, 133, 154, 155, 161], "properli": [25, 31, 33, 35, 154, 155], "rais": [25, 103, 106, 130, 132, 140, 144], "code": [26, 154, 155, 161, 168, 169, 170], "y": [27, 29, 37, 151], "ndarrai": [27, 29, 31, 33, 37, 70, 116, 117, 123], "k": [27, 37, 151, 154, 155, 157, 163, 165, 166], "rho": [27, 37, 161], "target_mdl": 27, "resampl": 27, "outcom": [27, 29, 37, 133, 154, 155, 161], "each": [27, 29, 37, 42, 51, 53, 65, 79, 80, 81, 85, 95, 100, 102, 105, 109, 128, 133, 137, 156, 157, 158, 159, 160, 161, 162, 163, 169, 170], "repetit": 27, "newli": 27, "sampl": [27, 40, 61, 67, 77, 83, 95, 100, 102, 103, 104, 105, 106, 118, 119, 120, 161], "non": [27, 32, 35, 116, 154, 155, 169], "corresp": 27, "probabl": [27, 29, 37, 79, 80, 82, 83, 100, 103, 115, 121, 128, 139, 154, 155, 163, 170], "save": [27, 28, 32, 161], "num_povm": [27, 37], "subarrai": [27, 37], "along": [27, 37, 169], "oper": [27, 33, 37, 68, 87, 129, 137, 149, 151, 159, 160, 161, 167, 168], "enumer": [27, 37, 159, 160, 161], "3d": [27, 31, 33, 161], "cpt": [27, 37], "superoper": [27, 37, 161], "standard": [27, 28, 30, 31, 33, 37, 65, 77, 80, 89, 124, 137, 149, 161, 170], "basi": [27, 30, 33, 37, 129, 140, 151, 154, 155, 161, 169], "stack": [27, 37], "els": [27, 151], "x_arrai": 27, "tensor": 27, "e_arrai": 27, "rho_arrai": 27, "df_g_arrai": 27, "qualiti": [27, 32, 35, 40, 154, 155], "df_o_arrai": 27, "df": 28, "datafram": [28, 31, 32, 33, 35], "row_label": 28, "col_width": 28, "fontsiz": 28, "12": [28, 151, 156, 157, 158, 161, 162, 163, 165, 166], "turn": [28, 29, 31, 32, 33, 154, 159], "panda": [28, 31, 32, 33, 35], "file": [28, 169, 170], "row": 28, "cell": [28, 154, 155, 159], "width": [28, 154, 155], "font": 28, "text": [28, 154, 155, 161, 169], "obtain": [29, 151, 154, 155, 169, 170], "format": [29, 31, 32, 33, 35, 36, 154, 169], "2d": [29, 31], "j": [29, 151, 154, 155, 159, 160, 161], "column": 29, "pdim": 30, "dimens": [30, 152, 161], "like": [30, 35, 134, 151, 154, 155, 170], "ii": [30, 151, 152, 169], "ix": 30, "xx": 30, "df_g": [31, 33, 35], "x_opt": [31, 33], "e_opt": 31, "rho_opt": 31, "max_ev": 31, "arbitrari": 31, "them": [31, 33, 51, 152, 170], "after": [31, 33, 119, 170], "conta": 31, "element": [31, 57], "densiti": [31, 100, 103, 105, 124, 154, 155], "optmiz": 31, "eigenvalu": 31, "choi": 31, "df_g_evals_fin": 31, "fig_g": [31, 33], "fidel": [31, 33, 40, 41, 42, 43, 44, 45, 51, 52, 53, 71, 87, 88, 91, 93, 96, 98, 101, 102, 117, 124, 149, 161, 167, 168, 170], "etc": [31, 33], "fig_choi": 31, "df_g_final": [31, 33], "df_o": [32, 35], "also": [32, 33, 134, 149, 161, 165, 166, 169, 170], "metric": [32, 33, 71, 154, 155, 161, 162], "fit": [32, 35, 95, 108, 109, 110, 112, 116, 117, 123, 124, 149, 161, 169], "df_o_fin": 32, "k_target": [33, 37], "includ": [33, 65, 73, 149, 154, 155, 159, 160, 169], "hamiltonian": [33, 149, 161], "diamond": [33, 161], "distanc": [33, 41, 51, 161], "4d": 33, "df_g_rotat": 33, "fig_rot": 33, "convert": [35, 36, 106, 151], "high": [35, 41, 154, 155, 159, 160], "level": [35, 41, 58, 71, 77, 100, 154, 155, 157, 158, 159, 160, 165, 166], "simpl": [35, 152, 154, 170], "observation_list": 35, "result_str": 36, "err": 36, "interv": 36, "floar": 36, "wrapper": [37, 40], "alg": 37, "x_target": 37, "e_target": 37, "rho_target": 37, "ghz": [38, 149, 167, 168, 170], "verifi": [38, 129, 151], "greenberg": [38, 40, 154, 155, 167, 168], "horn": [38, 40, 154, 155, 167, 168], "zeiling": [38, 40, 154, 155, 167, 168], "ghzconfigur": [39, 40, 154, 155, 158, 159, 160], "generate_native_ghz": 40, "qubit_count": [40, 41], "nativ": [40, 52, 119, 120, 122, 129, 137, 149, 154], "topologi": [40, 58, 140, 144, 149, 154, 155, 160], "subset": [40, 42, 44, 45, 49, 51, 52], "system": [40, 41, 42, 44, 45, 49, 51, 52, 132, 154, 155, 161, 169, 170], "protocol": [40, 42, 44, 45, 49, 51, 52, 154, 155, 167], "equal": [40, 49, 76, 149, 154, 155], "generate_coherence_meas_circuit": 40, "take": [40, 41, 140, 147, 149, 154, 155, 161, 170], "output": [40, 54, 78, 79, 80, 81, 82, 83, 84, 132, 149, 151, 154, 155, 161, 165, 166, 170], "mult": 40, "q": [40, 55, 57, 58, 64, 158, 161, 167, 168, 170], "qc_list_transpil": 40, "append_rm": 40, "num_rm": [40, 41, 159, 160], "append": [40, 70, 151, 152, 161], "1q": [40, 122, 149, 154], "clifford": [40, 88, 89, 90, 91, 92, 94, 95, 96, 103, 114, 118, 119, 120, 122, 129, 130, 149, 150, 162, 167, 168, 170], "uniformli": [40, 154], "param": [40, 46, 47, 48, 50, 70, 79, 91, 96, 106, 110, 112, 114, 115, 126, 127, 128, 130, 139, 142, 143], "origin": [40, 76, 81, 140, 141, 169], "generate_readout_circuit": 40, "creation": [40, 159], "all_circuits_list": 40, "state_generation_routin": [41, 154, 155, 158, 159, 160], "tree": [41, 49, 51, 154, 158, 159, 160], "custom_qubits_arrai": [41, 57, 58, 77, 154, 155, 158, 159, 160, 164, 165, 166, 170], "qiskit_optim_level": [41, 58, 71, 77, 100, 104, 105, 140, 154, 155, 157, 158, 163, 165, 166, 170], "optimize_sqg": [41, 58, 70, 71, 77, 140, 154, 155, 157, 158, 165, 166, 170], "fidelity_routin": [41, 154, 155, 158, 159, 160], "100": [41, 71, 77, 154, 155, 157, 158, 161, 164, 170], "rem": [41, 44, 58, 77, 85, 133, 149, 154, 155, 158, 159, 160, 164, 165, 166, 170], "mit_shot": [41, 58, 76, 77, 133, 154, 155, 158, 159, 160, 164, 165, 166, 170], "1000": [41, 58, 77, 133, 152, 154, 155, 158, 159, 160, 161, 164, 165, 166], "cal_url": [41, 42], "log": [41, 47, 48, 49, 51], "coupl": [41, 42, 49, 52, 71, 77, 140, 144, 154, 159, 160], "cz": [41, 42, 50, 51, 52, 119, 137, 140, 151, 154, 157, 159, 160], "account": [41, 58, 140, 161, 170], "span": [41, 49, 51], "largest": [41, 154, 155, 159, 160], "weight": [41, 51, 52, 83], "parallel": [41, 51, 68, 90, 95, 119, 126, 128, 136, 154, 155, 157, 158, 159, 160, 162], "applic": [41, 51, 103, 151, 159, 160, 169], "cx": [41, 46, 51, 70], "scale": [41, 154, 155], "logarithm": [41, 159, 160], "connect": [41, 51, 130, 149, 159, 160], "naiv": [41, 58, 159, 160], "appli": [41, 46, 51, 70, 77, 149, 158, 159, 160, 163, 169], "textbook": [41, 159, 160], "assum": [41, 53, 125, 169], "NOT": 41, "support": [41, 52, 169], "denot": 41, "provid": [41, 63, 150, 152, 153, 154, 155, 158, 169], "here": [41, 102, 152, 154, 155, 161], "ha": [41, 58, 154, 155, 156, 161, 163, 166, 169, 170], "small": [41, 149], "architectur": 41, "iqm_transpil": 41, "optimize_single_qubit_g": 41, "multipl": [41, 44, 108, 149, 154, 155, 159, 160], "moonei": [41, 44, 154, 155, 159, 160], "2021": [41, 44, 154, 155, 159, 160, 170], "randomized_measur": [41, 159, 160], "outlin": 41, "http": [41, 45, 47, 48, 108, 151, 152, 155, 158, 159, 161, 169, 170], "arxiv": [41, 45, 47, 48, 71, 103, 151, 159, 160, 170], "org": [41, 45, 47, 48, 151, 159, 161, 169], "ab": [41, 45, 47, 48, 151, 159], "1812": [41, 45], "02624": [41, 45], "chosen": [41, 58, 154, 155, 159, 160, 161], "boolean": [41, 159, 160], "flag": 41, "readout": [41, 44, 58, 76, 77, 82, 131, 132, 134, 149, 158, 159, 160], "mitig": [41, 44, 58, 76, 77, 82, 131, 132, 133, 134, 149, 158, 159, 160], "total": [41, 112, 151, 154, 155, 159, 160], "url": [41, 42, 154, 170], "retriev": [41, 70, 74, 142, 143, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "priorit": 41, "under": [42, 149, 151, 154, 161, 169], "list_fid": 42, "wai": [42, 52, 149, 154, 155], "list_coupl": 42, "ideal_prob": 45, "cross": [45, 154, 155, 169], "correl": [45, 159], "rm": 45, "eq": [45, 151], "34": [45, 152, 156, 157, 158, 160, 164, 165], "hadamard": [46, 151, 160], "seri": 46, "linear": [46, 160], "fashion": 46, "symmetr": 46, "halv": 46, "1807": [47, 159, 160], "05572": [47, 159, 160], "2101": [48, 159, 160], "08946": [48, 159, 160], "graph": [49, 51, 52, 57, 58, 59, 60, 61, 62, 64, 65, 67, 154, 155, 159, 160], "n_state": [49, 154], "networkx": [49, 51, 52, 57, 59, 60, 61, 62, 154, 155], "n": [49, 58, 91, 101, 151, 154, 155, 159, 160], "participating_qubit": 49, "qc": [49, 70, 151, 152, 170], "move": [50, 149, 166], "calcul": [51, 59, 65, 81, 112, 136, 147, 149, 154, 155], "cx_map": 51, "particip": 51, "2qb": 51, "subgraph": 51, "edg": [51, 52, 60, 61, 62, 103, 154, 155], "Then": [51, 170], "find": [51, 154, 155, 159, 160], "most": [51, 161], "central": 51, "posit": 51, "next": 51, "start": [51, 57, 125, 154, 157, 158, 159, 160, 161, 170], "smallest": 51, "layer": [51, 59, 63, 67, 68, 70, 71, 76, 100, 101, 103, 104, 105, 126, 136, 158, 167, 168, 170], "coupling_map": [52, 140, 154, 155, 159], "couplingmap": [52, 144], "edges_c": 52, "fidelities_c": 52, "have": [52, 119, 154, 155, 169, 170], "v": [53, 65, 70, 72, 154, 155, 158, 162], "user": [53, 166, 170], "identif": [53, 169], "logger": [54, 147], "everi": 54, "warn": [54, 151, 154, 155, 160, 166], "score": [55, 57, 58, 64, 158, 167, 168, 170], "combinatori": [55, 57, 154, 155], "problem": [55, 57, 59, 60, 61, 62, 64, 65, 154, 155, 170], "qscorebenchmark": [56, 58, 154, 155, 158, 164], "qscoreconfigur": [56, 57, 154, 155, 158, 164], "backend_arg": [57, 70, 76, 91, 96, 101, 103, 104, 105, 118, 119, 120, 126, 127, 129, 130, 133, 137], "generate_maxcut_ansatz": 57, "theta": 57, "ansatz": [57, 59, 61, 63, 67], "qaoa": [57, 58, 59, 63, 67], "maxcut": [57, 59, 60, 61, 62, 63, 67, 154, 155, 158, 164], "end": [57, 70, 76, 151, 169], "variat": [57, 154, 155], "gamma": [57, 59], "beta": [57, 59, 64, 65, 154, 155, 158, 164], "add_all_meta_to_dataset": [57, 70, 76, 96, 101], "choose_qubits_na": 57, "sequenti": [57, 127, 156, 158], "choose_qubits_custom": 57, "match": 57, "num_inst": [58, 65, 154, 155, 158, 164], "num_qaoa_lay": [58, 154, 155, 158, 164], "min_num_nod": [58, 154, 155, 158, 164], "max_num_nod": [58, 154, 155, 158, 164], "use_virtual_nod": [58, 65, 154, 155, 158, 164], "use_classically_optimized_angl": [58, 65, 154, 155, 158, 164], "choose_qubits_routin": [58, 77, 154, 155, 158, 164, 165, 166, 170], "min_num_qubit": 58, "seed": [58, 154, 155, 158, 164], "qpu_topologi": [58, 154, 155, 164], "crystal": [58, 154, 164], "min": [58, 132, 154, 155], "node": [58, 60, 61, 65, 67, 154, 155, 164], "taken": [58, 154, 155], "max": [58, 154, 155], "increas": [58, 125, 161], "potenti": 58, "pre": 58, "optimis": 58, "tune": 58, "minumum": 58, "virtual_nod": [58, 60, 61, 67], "upon": [58, 71, 77], "qpu": [58, 131, 149, 154, 155, 160], "star": [58, 140, 144, 149, 153, 154, 160, 168], "angl": [59, 63, 65, 67], "qubit_to_nod": [60, 61], "val": 60, "virtual": [60, 61, 65, 67, 140], "cut": [60, 61, 62, 67, 154, 155], "avg": [60, 158, 161, 164], "callabl": [61, 117, 123], "minu": 62, "sign": 62, "solut": [62, 154, 155], "obj": 62, "num_lay": 63, "approximation_ratio": [64, 158], "approxim": [64, 65, 154, 155, 158, 164], "ratio": [64, 65, 154, 155, 158, 164], "abov": [64, 84, 154, 155, 161, 169], "being": [64, 70, 76, 81, 84, 85, 102, 103, 115, 121, 137, 139, 154, 155], "beta_ratio": 65, "beta_std": 65, "backend_nam": [65, 85, 141, 156, 157, 163, 165, 166], "timestamp": [65, 85, 156, 163], "deviat": [65, 77, 80, 124, 137], "classic": [65, 67, 76], "graph_phys": 67, "qubit_nod": 67, "use_classical_angl": 67, "qaoa_lay": 67, "solv": [67, 154, 155], "averag": [67, 79, 84, 85, 91, 96, 102, 117, 149, 154, 155, 160, 161], "presenc": 67, "volum": [68, 75, 76, 77, 86, 149, 167, 168, 170], "reflect": [68, 70, 76, 87, 88, 93, 98], "deepest": [68, 76], "clop": [68, 149, 167, 168, 170], "speed": [68, 70, 154, 155], "clops_v": [68, 154, 155, 157], "qv": [68, 70, 71, 76, 77, 79, 80, 84, 85, 149, 154, 155, 157, 158, 167, 168], "clops_h": [68, 71, 157], "squar": [68, 154, 155, 161], "clopsbenchmark": [69, 71, 154, 155, 157, 158], "clopsconfigur": [69, 70, 154, 155, 157, 158], "h": [70, 72], "append_parameterized_unitari": 70, "q0": 70, "q1": 70, "decompos": [70, 154], "su": 70, "involv": [70, 154, 155], "belong": 70, "generate_single_circuit": [70, 76], "generate_circuit_list": [70, 76], "generate_random_paramet": 70, "templat": [70, 154, 155, 157, 158], "np": [70, 116, 123, 151, 154, 155, 158, 159, 161, 162], "float64": 70, "assign_random_parameters_to_al": 70, "dict_parametrized_circ": 70, "clops_cycl": 70, "sorted_transpiled_qc_list": [70, 76, 146], "cycl": 70, "elaps": [70, 73, 74, 147, 157, 158], "submiss": [70, 76, 101, 126, 127, 154, 155, 169], "generate_transpiled_clops_templ": 70, "num_upd": [71, 154, 155, 157, 158], "num_shot": [71, 154, 155, 157, 158], "clops_h_bool": [71, 157, 158], "establish": [71, 157, 158], "By": [71, 157, 158], "definit": [71, 154, 155, 157, 158, 169], "2110": [71, 170], "14108": [71, 170], "quant": [71, 103, 170], "ph": [71, 103, 170], "rigor": [71, 161], "loos": 71, "www": [71, 151, 169], "ibm": [71, 132], "com": [71, 155], "blog": 71, "restrict": [71, 77, 144, 158, 165, 166], "clops_data": 73, "job_meta": 74, "quantumvolumebenchmark": [75, 77, 154, 155, 158, 165, 166], "quantumvolumeconfigur": [75, 76, 154, 155, 158, 165, 166, 170], "add_all_circuits_to_dataset": [76, 91, 96], "classical_permut": 76, "permut": 76, "avoid": 76, "swap": [76, 151], "get_rem_quasidistro": 76, "sorted_qc_list_indic": [76, 81], "execution_result": [76, 78], "quasicollect": [76, 82, 133], "quasiprob": [76, 82, 133, 134], "qubii": 76, "untranspil": [76, 81, 118, 140, 149], "submit_single_qv_job": 76, "submit": [76, 101, 126, 127, 146, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 169], "vanilla": [76, 85, 101, 126, 127], "dd": [76, 85, 101, 126, 127], "num_sigma": [77, 84, 85, 154, 155, 158, 165, 166, 170], "criteria": 77, "consensu": 77, "unmitig": 77, "1_000": [77, 154, 155, 158, 165, 166, 170], "ideal_heavy_output": [78, 82], "hop": [78, 79, 80, 84, 85, 149], "heavi": [78, 79, 80, 81, 82, 83, 84, 154, 155], "cumul": [79, 80], "individu": [79, 80, 124, 149, 154, 159, 160, 161, 169, 170], "trial": [79, 80], "qc_list": [81, 140], "bitrstr": 81, "all_rem_quasidistro": 82, "noiseless": [82, 158, 165, 166], "project": [83, 170], "onto": 83, "associ": [83, 157, 158, 169], "heavy_output_prob": [84, 165, 166], "over": [84, 132, 139, 154], "within": [84, 169, 170], "sigma": [84, 85], "qv_result": [85, 154, 155, 165, 166], "qv_results_typ": [85, 165, 166], "in_volumetr": 85, "plot_rem": 85, "come": [85, 102, 134], "context": 85, "volumetr": 85, "rb": [88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 115, 116, 117, 119, 121, 123, 124, 127, 128, 130, 149, 151, 154, 158, 162, 167, 168], "cliffordrandomizedbenchmark": [89, 90, 154, 156, 158], "cliffordrbconfigur": [89, 91, 154, 156, 158], "qubits_arrai": [90, 95, 100, 119, 124, 126, 128, 130, 154, 156, 158, 162, 163, 170], "sequence_length": [90, 95, 118, 119, 154, 156, 158, 162, 170], "num_circuit_sampl": [90, 95, 100, 118, 154, 156, 158, 162, 163, 170], "parallel_execut": [90, 95, 154, 156, 158, 162, 170], "length": [90, 95, 102, 106, 118, 119, 120, 151, 154, 156, 158, 162], "add_all_metadata_to_dataset": 91, "interleav": [93, 94, 95, 96, 97, 100, 105, 116, 117, 118, 119, 120, 124, 149, 156, 167, 168, 170], "interleavedrandomizedbenchmark": [94, 95, 154, 158, 162], "interleavedrbconfigur": [94, 96, 154, 158, 162, 170], "interleaved_g": [95, 118, 119, 120, 124, 154, 158, 162, 170], "interleaved_gate_param": [95, 154, 158, 162, 170], "simultaneous_fit": [95, 154, 158, 162, 170], "amplitud": [95, 116, 154, 158, 162, 170], "offset": [95, 116, 154, 158, 162, 170], "irb": [95, 117, 149, 167, 168], "ygate": 95, "czgate": [95, 100, 151, 154, 158, 161, 162, 163, 170], "enter": [95, 117, 119], "simultan": [95, 117], "specif": [96, 140, 151, 153, 154, 155, 158, 161, 165, 166, 167, 169], "mirror": [98, 99, 100, 101, 105, 149, 167, 168, 170], "mirrorrandomizedbenchmark": [99, 100, 158, 163, 170], "mirrorrbconfigur": [99, 101, 158, 163, 170], "depths_arrai": [100, 158, 163, 170], "num_pauli_sampl": [100, 102, 106, 158, 163, 170], "two_qubit_gate_ensembl": [100, 103, 104, 105, 158, 163, 170], "density_2q_g": [100, 103, 104, 105, 158, 163, 170], "25": [100, 103, 104, 105, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 170], "mrb": [100, 101, 104, 107, 117, 124, 126, 127, 149, 158, 167, 168], "len": [100, 151, 154, 155, 161], "ensembl": [100, 101, 103, 124], "cxgate": 100, "submit_single_mrb_job": 101, "sorted_transpiled_circuit_dict": [101, 126], "canon": [101, 104, 105, 126], "noisy_count": 102, "ideal_count": 102, "num_circ_sampl": [102, 106, 120], "polar": [102, 117], "noisi": 102, "rescal": 102, "few": [102, 154, 155], "effect": [102, 154, 155, 160], "real": [102, 170], "simul": [102, 132, 149, 157, 158, 163, 165, 166], "qubit_set": [103, 117], "n_layer": 103, "grab": [103, 132], "see": [103, 151, 154, 159, 160, 161, 169], "2204": 103, "07568": 103, "2q": [103, 105, 122, 124, 154, 157, 158], "subsequ": [103, 169], "valueerror": [103, 106, 130, 140, 144], "do": [103, 132, 162, 169], "up": [103, 154, 170], "uniti": 103, "circ_sampl": 104, "pauli_samples_per_circ": [104, 105], "dress": [104, 105, 106], "input_list": 106, "flat": 106, "shape": 106, "lmfit": [108, 109, 117], "extend": [108, 149], "shown": [108, 154, 155, 159, 160, 161], "document": [108, 154, 155, 169, 170], "github": [108, 170], "io": 108, "py": [108, 160, 166, 170], "example_fit_multi_dataset": 108, "html": [108, 170], "sphx": 108, "glr": 108, "multi": [108, 154, 155], "func": [109, 110, 111, 112, 117, 123], "initial_guess": 109, "constraint": [109, 170], "simultaneously_fit_var": 109, "line": 109, "evalu": [110, 154, 155], "signatur": 111, "residu": 112, "sever": [112, 149, 154, 155], "techniqu": 113, "qc_inv": 114, "clifford_dictionari": 114, "invers": [114, 154], "invert": 114, "de": [114, 120], "stabil": [114, 120, 149], "ground": [115, 121, 152], "depolarization_prob": 116, "depolar": 116, "p": [116, 154], "decai": [116, 124, 149, 154], "rb_identifi": 117, "simultaneous_fit_var": 117, "interleaved_gate_str": 117, "0th": 117, "ap": [117, 161], "m": [117, 154, 155, 156, 158, 162, 163, 166, 170], "b": [117, 151, 154, 169], "stdrb": 117, "clifford_dict": [118, 120], "fir": 118, "cliffords_1q": 119, "cliffords_2q": 119, "num_sampl": [119, 120], "befor": [119, 154], "term": [119, 151, 161, 169], "r": [119, 137, 140, 151, 157, 161, 166], "seq_length": 120, "import": [122, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170], "fit_paramet": 123, "fit_data": 123, "minimizerresult": 123, "violin": 124, "scatter": 124, "shade_stdev": 124, "shade_meanerror": 124, "logscal": 124, "mrb_2q_densiti": 124, "mrb_2q_ensembl": 124, "shade": 124, "titl": [124, 169], "arr": 125, "helper": 125, "relabel": 125, "increasingli": 125, "zero": [125, 149, 154, 155], "5": [125, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170], "7": [125, 151, 154, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 170], "note": [125, 134, 149, 159, 160, 161, 170], "sort": [125, 145, 163, 165, 166], "transpiled_circuit": [127, 133, 166], "margin": [128, 132, 139], "surviv": [128, 154], "gate_id": 129, "gate_param": 129, "m3": [131, 132, 133], "modif": [131, 169], "m3iqm": [131, 134], "mthree": [131, 134], "m3mitig": [131, 132], "iter_threshold": 132, "4096": 132, "modifi": [132, 149, 154, 155, 169], "work": [132, 134, 154, 155, 169, 170], "devic": [132, 149, 154, 155, 168, 170], "cals_from_system": 132, "initial_reset": 132, "rep_delai": [132, 160, 166], "cals_fil": 132, "async_c": 132, "cal_id": 132, "array_lik": 132, "1e4": 132, "max_shot": 132, "balanc": 132, "hardwar": [132, 168], "independ": [132, 154], "reset": 132, "begin": [132, 151], "delai": 132, "path": 132, "json": [132, 161], "async": 132, "separ": [132, 149, 165, 166, 169], "thread": 132, "m3error": 132, "call": [132, 149], "progress": 132, "against": [133, 169], "mit": [134, 169], "processor": [134, 154, 155], "argument": [134, 149, 170], "util": [134, 159, 160], "final_measurement_map": 134, "qubit_name_to_index": 134, "quasiprobabilti": 134, "we": [134, 152, 154, 155, 161, 169], "could": 134, "would": 134, "out": [134, 159, 169], "box": 134, "u": 134, "sinc": [134, 154, 155, 161], "circuit_list": 136, "transpiled_qc_list": 137, "barrier": [137, 151, 152, 157], "outermost": 137, "backend_label": 138, "prob_dist": 139, "bit": 139, "basis_g": 140, "drop_final_rz": 140, "optimization_level": [140, 152, 154], "sqg": [140, 157, 158, 159, 160, 165, 166], "z": 140, "drop": 140, "rz": 140, "emploi": 140, "iqm_job": [142, 143], "iqmjob": [142, 143, 146], "relev": 143, "transpiled_circuit_list": 145, "sorted_indic": 145, "sorted_circuit": 145, "sent": [146, 169], "manag": [146, 169, 170], "f": [147, 151, 152, 154, 155, 158, 159, 160, 161, 166], "decor": 147, "statement": [147, 169], "counts_rang": 148, "extract": [148, 154, 170], "were": [148, 149], "deneb": [149, 155, 156, 157, 158, 160, 162, 163, 164, 165, 167, 168], "notebook": [149, 152, 154, 155, 161, 167, 168], "benchmark": [149, 150, 151, 153, 161, 164, 165, 166, 167], "iqm": [149, 150, 151, 152, 153, 159, 161, 162, 167, 169], "bug": 149, "done": [149, 151], "qscore": [149, 154, 155], "instal": [149, 154, 161, 168], "command": [149, 170], "develop": [149, 151, 160, 168], "mode": [149, 151, 170], "41": [149, 158, 162, 163, 164], "folder": [149, 169, 170], "doc": [149, 170], "spark": [149, 153, 168], "30": [149, 154, 156, 158, 162, 164, 170], "compat": 149, "adapt": [149, 170], "behavior": 149, "report": [149, 154], "displai": [149, 151, 154, 155, 156, 158, 161, 162, 166, 169], "publish": 149, "ci": 149, "secur": [149, 170], "scan": [149, 170], "lockfil": [149, 170], "depend": [149, 159, 160, 161, 168], "relat": [149, 154], "modulenotfounderror": 149, "enabl": 149, "pyrit": [149, 164], "wrong": 149, "incorrect": 149, "improv": [149, 169], "compil": [149, 154, 161, 169], "revert": 149, "ones": [149, 154, 155, 170], "now": [149, 156, 157, 158, 159, 160, 161, 162], "instead": [149, 170], "port": 149, "subclass": 149, "usag": 149, "place": [149, 169], "miscellan": 149, "relax": 149, "api": [149, 168, 170], "build": [149, 170], "overwrit": 149, "tutori": 149, "remov": 149, "explicit": 149, "minor": 149, "longer": [149, 154], "renam": 149, "rebas": 149, "randomizedbenchmark": 149, "quantumvolum": 149, "serial": 149, "some": [149, 154, 155], "available_benchmark": 149, "__init__": 149, "public": 149, "hint": 149, "docstr": 149, "messag": 149, "prevent": 149, "exclus": [149, 169], "jupyt": 149, "section": [150, 153, 167, 169], "guidanc": [150, 153], "packag": [150, 154, 159, 160, 166, 167, 170], "your": [150, 154, 168, 169, 170], "own": [150, 168, 169, 170], "decomposit": [150, 168], "1402": 151, "4848": 151, "copyright": [151, 169], "2024": [151, 156, 157, 166, 169], "licens": [151, 168], "apach": [151, 169], "you": [151, 154, 155, 162, 166, 169, 170], "except": [151, 152, 169], "complianc": [151, 169], "unless": [151, 169], "law": [151, 169], "agre": [151, 169], "softwar": [151, 169], "AS": [151, 169], "without": [151, 154, 155, 159, 160, 169], "warranti": [151, 169], "OR": [151, 169], "OF": [151, 169], "kind": [151, 169], "express": [151, 169], "impli": [151, 169], "languag": [151, 169], "govern": [151, 169], "permiss": [151, 169], "quantum_info": 151, "qi": 151, "c0": 151, "c": [151, 154, 166, 169], "_": [151, 154, 161], "24": [151, 156, 157, 158, 159, 162, 164], "half": 151, "x2": 151, "to_gat": 151, "y2": 151, "x2m": 151, "y2m": 151, "compos": 151, "inplac": 151, "2pi": 151, "11": [151, 152, 154, 155, 156, 158, 159, 160, 162, 163, 166, 170], "13": [151, 156, 158, 159, 160, 162, 163, 166, 170], "15": [151, 154, 156, 157, 158, 160, 162, 163, 166], "16": [151, 156, 157, 158, 159, 162, 163, 165], "17": [151, 156, 157, 158, 159, 162, 163, 165, 170], "18": [151, 156, 157, 158, 159, 162, 163, 170], "19": [151, 157, 158, 159, 161, 162, 163], "21": [151, 157, 158, 162], "22": [151, 157, 158, 161, 162, 163], "23": [151, 156, 157, 158, 159, 162, 163, 165, 166], "clifford_sqg": 151, "s1": 151, "s1x2": 151, "s1y2": 151, "displaystyl": 151, "sum_": [151, 161], "prime": 151, "left": 151, "mathrm": [151, 154, 155], "tr": [151, 161], "u_": 151, "dagger": [151, 154, 161], "u_k": 151, "right": [151, 169], "s2": 151, "satisfi": [151, 161], "c_kei": 151, "aux": 151, "total_triangl": 151, "c1": 151, "adjoint": 151, "c2": 151, "c3": 151, "to_matrix": 151, "trace": [151, 161], "print": [151, 154, 157, 158, 159, 160, 161, 163, 165, 166, 169], "0f": 151, "diagon": [151, 154, 155], "nsum": 151, "sum": 151, "clifford_2qg": 151, "product": [151, 169], "c2q_0": 151, "c2q": 151, "counter": 151, "to_label": 151, "sqg_class_": 151, "cnot": [151, 159, 160], "sy2": 151, "cnot_class_": 151, "iswap": 151, "sy1": 151, "sx2": 151, "i_swap_class_": 151, "swap_class_": 151, "clifford_1qg": 151, "open": 151, "clifford_1q": 151, "pkl": 151, "wb": 151, "clifford_2q": 151, "loaded_dict": 151, "def": [151, 152], "count_rcz": 151, "c_list": 151, "no_cz": 151, "no_r": 151, "count_op": 151, "num_2qcz": 151, "num_2qr": 151, "num_1qcz": 151, "num_1qr": 151, "875": [151, 154, 158, 162, 165], "200": [151, 158, 159, 164], "randint": [151, 154, 155, 158, 164], "11520": 151, "draw": [151, 154, 155, 159, 166], "mpl": 151, "style": 151, "iqp": 151, "fold": 151, "ninvers": 151, "qc_aux": 151, "qcinv": 151, "op_seq": 151, "ncomposit": 151, "ident": 151, "modulo": 151, "phase": 151, "equiv": 151, "latex": 151, "composit": 151, "bmatrix": 151, "520": [151, 158, 164], "132": [151, 158, 162], "710": [151, 164], "suffic": 151, "triangular": 151, "part": [151, 169], "howev": [151, 169, 170], "still": [151, 161], "op": 151, "adj": 151, "prod": 151, "100000": 151, "ndone": 151, "defit": 152, "anoth": 152, "excit": 152, "add_counts_to_dataset": 152, "pyplot": [152, 154, 155, 161], "plt": [152, 154, 155, 161], "generate_readout_test_circuit": 152, "n_qubit": 152, "qb_to_measur": 152, "qc_transpil": 152, "plot_histogram": [152, 154], "try": 152, "state_": 152, "counts_": 152, "break": 152, "xtick": 152, "90": 152, "legend": 152, "readout_analysi": 152, "histogram": [152, 154], "readouttest": 152, "default_opt": 152, "n_shot": 152, "2048": 152, "staticmethod": 152, "readout_test": 152, "iqmprovid": [152, 154, 155, 158, 170], "iqm_server_url": 152, "station": [152, 170], "fi": [152, 170], "coco": [152, 155, 170], "get_backend": [152, 154, 155, 158, 170], "480b": 152, "state_0": 152, "state_1": 152, "coordin": 152, "u4": 152, "144b": 152, "0000": 152, "0010": 152, "1010": 152, "1100": 152, "176b": 152, "0011": 152, "0101": 152, "0110": 152, "1101": 152, "1110": 152, "1111": 152, "counts_0": 152, "int64": 152, "72b": 152, "1924": 152, "26": [152, 158, 159, 162, 164], "39": [152, 158, 161, 162, 164], "counts_1": 152, "88b": 152, "72": 152, "48": [152, 158, 162, 164], "78": 152, "36": [152, 158, 164], "1801": 152, "sure": [154, 170], "pip": [154, 170], "ipykernel": 154, "o": [154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 170], "environ": [154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 170], "iqm_tokens_fil": 154, "token": [154, 155, 162, 170], "iqm_url": [154, 155, 158], "access": [154, 155, 170], "everyth": [154, 155], "nx": [154, 155], "add_edges_from": [154, 155], "po": [154, 155, 159], "spring_layout": [154, 155, 159], "42": [154, 155, 158, 162, 164], "with_label": [154, 155, 159], "node_color": [154, 155, 159], "lightblu": [154, 155], "edge_color": [154, 155], "grai": [154, 155], "node_s": [154, 155], "font_siz": [154, 155], "linewidth": [154, 155], "ignor": [154, 155], "critic": [154, 155], "filterwarn": [154, 155], "action": [154, 155], "entangl": [154, 155, 158, 159, 160, 170], "more": [154, 155, 169, 170], "superposit": [154, 155], "rangl": [154, 155], "frac": [154, 155, 161], "sqrt": [154, 155], "otim": [154, 155], "act": [154, 155, 169], "wit": [154, 155], "genuin": [154, 155, 159, 160], "cannot": [154, 155, 169], "explain": [154, 155], "great": [154, 155], "rho_": [154, 155], "langl": [154, 155], "pure": [154, 155], "case": [154, 155], "entri": [154, 155, 161], "written": [154, 155, 169], "00": [154, 155, 158, 161, 163, 165], "corner": [154, 155], "simplifi": [154, 155], "four": [154, 155], "compon": [154, 155], "formula": [154, 155], "nullifi": [154, 155], "To": [154, 155, 156, 159, 160, 161, 169, 170], "off": [154, 155], "want": [154, 155, 170], "pleas": [154, 155], "refer": [154, 155, 161, 168, 170], "visual": [154, 159], "generate_ghz_spanning_tre": 154, "get_edg": 154, "ghz_circuit": 154, "qc_transp": 154, "re": [154, 162], "10000": [154, 155, 164], "get_count": 154, "benchmark_ghz": [154, 155, 158, 159, 160], "run_ghz": [154, 155, 158, 159, 160], "result_ghz": [154, 155], "introduc": [154, 155], "2019": [154, 155, 159, 160, 170], "unitari": [154, 155, 161, 166], "successfulli": [154, 155, 156, 158, 162, 163, 165, 166], "occcur": [154, 155], "greater": [154, 155], "median": [154, 155], "ask": [154, 155], "confid": [154, 155], "higher": [154, 155], "97": [154, 155], "85": [154, 155, 170], "asymptot": [154, 155], "log_2": [154, 155], "v_q": [154, 155], "underset": [154, 155], "argmax": [154, 155], "d": [154, 155, 159, 160, 169], "leq": [154, 155], "achiev": [154, 155], "quantum_volum": [154, 155, 157, 158, 165, 166, 170], "due": [154, 155], "must": [154, 155, 169, 170], "topmost": 154, "500": [154, 155, 158, 163, 165, 166, 170], "60_000": [154, 158, 165, 166, 170], "minut": [154, 155, 161], "benchmark_qv": [154, 155, 158, 165, 166], "run_qv": [154, 155], "result_qv": [154, 155], "That": [154, 155], "wack": [154, 155], "constitut": [154, 155, 169], "_time": [154, 155], "notic": [154, 155, 169], "plot_tim": [154, 155], "benchmark_clop": [154, 155, 157, 158], "run_clop": [154, 155, 157, 158], "result_clop": [154, 155, 157, 158], "fig_clop": [154, 155], "idea": 154, "behind": 154, "crb": 154, "certain": [154, 155], "langle0": 154, "c_": 154, "inv": 154, "c_m": 154, "cdot": 154, "_2c_1": 154, "sim": 154, "c_1": 154, "c_2": 154, "ldot": 154, "c_1c_2": 154, "_m": 154, "leq1": 154, "constant": 154, "isol": 154, "magesan": 154, "2012": [154, 170], "infer": 154, "assumpt": 154, "markovian": 154, "stationari": 154, "theori": [154, 169], "fact": 154, "design": [154, 169, 170], "fulli": [154, 161], "ensur": 154, "our": 154, "overlin": 154, "intend": 154, "becaus": 154, "eventu": 154, "mention": 154, "barend": 154, "2014": 154, "approx": 154, "alwai": [154, 159, 160], "slightli": 154, "care": 154, "compar": 154, "spec": 154, "randomized_benchmark": [154, 156, 158, 162, 163, 170], "clifford_rb": [154, 156, 158], "benchmark_clifford_rb": [154, 156, 158], "run_clifford_rb": [154, 156, 158], "result_clifford_rb": [154, 156, 158], "previou": 154, "aim": [154, 159, 160], "interest": 154, "sole": [154, 169], "made": [154, 169], "rate": 154, "wish": [154, 166], "interleaved_rb": [154, 158, 162, 170], "irb_cz": 154, "nb": [154, 156, 157, 158], "benchmark_irb_cz": 154, "run_irb_cz": 154, "result_irb_cz": 154, "martiel": [154, 155], "erd\u0151": [154, 155], "r\u00e9nyi": [154, 155], "geq": [154, 155, 161], "999999": [154, 155, 158, 164], "benchmark_qscor": [154, 155, 158, 164], "run_qscor": [154, 155, 158], "result_qscor": [154, 155, 158], "summar": 154, "obs_ghz": [154, 155], "round": [154, 155], "obs_qv": [154, 155], "obs_clop": [154, 155], "item": [154, 155], "obs_crb": 154, "f_crb": 154, "obs_irb": 154, "f_irb": 154, "avg_gate_fidelity_interleav": [154, 158, 162], "obs_q": [154, 155], "argmin": [154, 155], "mean_approximation_ratio": [154, 155, 164], "3000": 154, "999": [154, 156, 157], "98": 154, "num": 154, "iqm_token": [155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 170], "reson": [155, 162, 170], "meetiqm": 155, "chosen_layout": 155, "10_000": 155, "load_ext": [156, 157, 158, 161, 162, 163, 164, 165, 166], "autoreload": [156, 157, 158, 161, 162, 163, 164, 165, 166], "extens": 156, "load": 156, "reload": 156, "reload_ext": 156, "fakeadoni": [156, 157, 158, 162, 163, 164, 165], "fakeapollo": [156, 157, 158, 159, 162, 163, 164, 165], "garnet": [156, 157, 158, 161, 162, 163, 164, 165, 170], "example_crb": [156, 158], "56": [156, 158, 164], "750": [156, 164], "logging_config": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "info": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "Will": [156, 157, 158, 161, 162, 163, 165, 166], "31": [156, 157, 158, 159, 160, 162, 163, 164], "63": [156, 158, 162], "831": [156, 162, 164], "992": [156, 157, 164], "341": [156, 164], "040": [156, 158, 162], "469": [156, 158], "291": 156, "292": [156, 158, 162], "349": 156, "541": [156, 163], "600": [156, 158], "756": [156, 158], "837": [156, 162, 164, 165], "025": [156, 164], "171": [156, 158], "905": [156, 164], "544": [156, 158, 164], "899": [156, 158], "32": [156, 157, 158, 159, 160, 161, 163, 164], "624": [156, 158], "004": [156, 158, 162, 164], "43": [156, 158, 161, 162, 164], "319": 156, "569": [156, 163, 164], "777": [156, 158], "840": 156, "44": [156, 158, 161, 162, 164], "048": [156, 162], "098": [156, 157, 158, 164], "qubits_": [156, 158, 163], "_depth_1": [156, 158, 162], "323": 156, "45": [156, 158, 162, 163, 164], "186": [156, 162], "_depth_3": [156, 158, 162], "225": [156, 158], "_depth_7": [156, 158, 162], "267": [156, 158, 164], "_depth_15": [156, 158, 162], "314": [156, 158], "_depth_31": [156, 158, 162], "315": [156, 158, 164], "364": [156, 158, 163], "_depth_63": [156, 158, 162], "416": [156, 164], "417": [156, 164, 166], "476": 156, "542": [156, 158, 163], "615": [156, 158], "616": [156, 158, 164], "697": [156, 164], "789": [156, 158, 162, 164], "890": [156, 158, 162], "conclud": [156, 158, 162, 163, 165, 166], "931": [156, 158, 164], "938": 156, "945": [156, 158, 159, 163], "952": [156, 162], "959": [156, 158], "966": [156, 158, 164], "972": [156, 158, 164], "979": [156, 158, 164], "986": [156, 158], "993": [156, 158, 163], "46": [156, 158, 161, 164, 166], "006": [156, 158, 164], "013": 156, "946844466999168": 156, "9429197366921651": 156, "attr": [156, 157, 161, 163, 165, 166], "session_timestamp": [156, 157, 163, 165, 166], "20241217": 156, "115553": 156, "execution_timestamp": [156, 157, 163, 165, 166], "backend_configuration_nam": [156, 157, 163, 165, 166], "iqmfakeapollobackend": [156, 157, 159, 161, 165], "depth_1": 156, "time_circuit_gener": [156, 157, 163, 165, 166], "541001081466675": 156, "time_submit": [156, 163, 165, 166], "0006990432739257812": 156, "time_retriev": [156, 163, 165, 166], "22491073608398438": 156, "all_job_metadata": [156, 163, 165, 166], "batch_job_1": [156, 163], "job_id": [156, 163], "8f305755": 156, "e038": 156, "4596": 156, "8617": 156, "d96ba3f42ca9": 156, "aer_simul": [156, 163], "statu": [156, 163], "circuits_in_batch": [156, 163], "depth_3": 156, "05647683143615723": 156, "0005230903625488281": 156, "2fe0b406": 156, "8977": 156, "4567": 156, "bba0": 156, "d4168f0883ed": 156, "depth_7": 156, "19257187843322754": 156, "0004839897155761719": 156, "8299918c": 156, "be26": 156, "40d5": 156, "8778": 156, "9ea4468a1df2": 156, "depth_15": 156, "05831408500671387": 156, "0004811286926269531": 156, "174640c4": 156, "9ff3": 156, "4ca3": 156, "9ffc": 156, "d6aa5be304f3": 156, "depth_31": 156, "1564040184020996": 156, "0006189346313476562": 156, "7bb739f2": 156, "31bc": 156, "40af": 156, "8dbf": 156, "1d60a9310391": 156, "depth_63": 156, "08135986328125": 156, "0004200935363769531": 156, "f414a2c1": 156, "75c8": 156, "4d5a": 156, "9e4b": 156, "ccce29903f5f": 156, "147684812545776": 156, "0005502700805664062": 156, "00039887428283691406": 156, "8832576a": 156, "6d6e": 156, "4abe": 156, "8cfa": 156, "5001e6bb98e": 156, "08015298843383789": 156, "00039315223693847656": 156, "ecc1bcea": 156, "ef4c": 156, "4f35": 156, "9284": 156, "ab49af0c5b9f": 156, "16936397552490234": 156, "0003960132598876953": 156, "5582c842": 156, "0f07": 156, "46b6": 156, "96be": 156, "2fb3925b19d9": 156, "20774221420288086": 156, "0004191398620605469": 156, "6423b02b": 156, "8417": 156, "4300": 156, "b7ac": 156, "84d59f87a51f": 156, "0635080337524414": 156, "0004169940948486328": 156, "0b324804": 156, "44fe": 156, "4c16": 156, "83eb": 156, "08e5cd67aa79": 156, "20784401893615723": 156, "0004961490631103516": 156, "6c633640": 156, "d4b4": 156, "47de": 156, "a46d": 156, "d3ae4c84d212": 156, "avg_gate_fidel": [156, 163], "0012220693932290373": 156, "001545469960991071": 156, "xxxxxx": 157, "example_clop": [157, 158], "06": [157, 158, 163], "07": [157, 158, 162, 163], "198": [157, 158, 164], "199": 157, "828": [157, 162], "829": [157, 158, 162, 164], "383": [157, 162], "401": [157, 158, 164], "458": [157, 158], "010": [157, 164], "428": [157, 163, 164], "429": [157, 158], "497": [157, 158], "029": [157, 158], "482": [157, 158, 164], "483": [157, 158], "502": [157, 158, 164], "113": 157, "843": 157, "844": [157, 164], "906": [157, 162, 164], "527": [157, 164], "987": [157, 158, 164], "988": [157, 158], "050": [157, 158, 163, 164, 165], "636": [157, 158, 162, 164], "099": [157, 158], "166": [157, 162, 164], "712": [157, 164], "27": [157, 158, 159, 162, 164], "328": [157, 158], "329": [157, 158], "404": [157, 158, 164], "766": [157, 158, 163, 164], "29": [157, 158, 162, 164, 165], "386": [157, 158], "387": [157, 158, 162, 163], "406": [157, 158, 164], "418": [157, 158, 166], "487": [157, 158, 164], "037": 157, "33": [157, 158, 160, 163, 164], "488": [157, 158], "556": [157, 158, 164], "240": [157, 158, 164], "916": [157, 162], "There": [157, 158], "all_times_parameter_assign": 157, "all_times_retriev": 157, "all_times_submit": 157, "assign_parameters_tot": 157, "clops_tim": 157, "counts_per_upd": 157, "job_meta_per_upd": 157, "num_paramet": 157, "operation_count": [157, 165, 166], "parallel_2q_lay": 157, "parameters_per_upd": 157, "time_count_lay": 157, "time_sort_batch": 157, "time_transpil": [157, 165, 166], "u_per_lay": 157, "user_retrieve_tot": 157, "user_submit_tot": 157, "9603960396039604": 157, "std": 157, "3960396039603959": 157, "285": [157, 158, 162], "970297029703": 157, "28": [157, 158, 162, 164, 165], "718661075530303": 157, "40594059405941": 157, "915387814641763": 157, "9900990099009901": 157, "09900990099009897": 157, "18796": 157, "nan": [157, 161], "56388": 157, "iqm_provid": [158, 160, 166], "2025": [158, 159, 160, 161, 162, 163, 164, 165, 168], "01": [158, 159, 161, 162, 163, 164, 165], "58": [158, 160, 162, 164], "410": [158, 164], "411": [158, 164], "127": [158, 162], "639": [158, 159, 160], "949": [158, 164], "35": [158, 164], "841": 158, "251": [158, 164], "53": [158, 162, 164], "648": [158, 164], "690": 158, "785": [158, 162], "953": [158, 164], "815": [158, 164], "59": [158, 162, 163, 164], "821": [158, 162, 164], "808": [158, 164], "834": 158, "860": [158, 162], "02": [158, 160, 161, 163, 164, 168], "350": [158, 164], "351": [158, 159], "424": [158, 164], "466": 158, "510": [158, 164], "511": [158, 164], "558": 158, "_depth_127": [158, 162], "559": [158, 164], "611": [158, 164], "643": [158, 164], "647": 158, "651": [158, 163, 164, 166], "655": [158, 164], "659": 158, "663": 158, "667": [158, 164], "9487496885745926": 158, "example_irb_1q": [158, 162], "rgate": [158, 161, 162], "benchmark_irb_1q": [158, 162], "run_irb_1q": [158, 162], "734": [158, 162, 164], "958": 158, "wxecut": 158, "255": [158, 162], "000": [158, 162, 164], "041": [158, 164], "122": 158, "925": 158, "229": 158, "054": 158, "37": [158, 164, 166], "672": 158, "694": 158, "753": 158, "849": [158, 163, 164], "38": [158, 162, 164], "039": [158, 162, 164], "402": [158, 164], "108": [158, 164], "40": [158, 164], "570": [158, 164], "277": [158, 164], "331": [158, 163, 164], "399": [158, 164], "495": [158, 164], "650": [158, 162], "929": [158, 164], "51": [158, 161, 162, 164, 166], "439": 158, "52": [158, 160, 161, 162, 163, 164, 166], "352": [158, 160, 164], "432": [158, 162], "475": [158, 162], "666": [158, 164], "812": 158, "881": [158, 162, 164], "761": 158, "804": 158, "894": [158, 159], "907": [158, 164], "03": [158, 162, 163], "020": 158, "188": [158, 162, 164], "270": 158, "426": [158, 164], "718": 158, "04": [158, 160, 162, 163], "307": [158, 163, 164], "05": [158, 162, 163], "836": [158, 162, 164], "904": [158, 164], "003": [158, 161, 162], "196": [158, 162, 164, 165], "557": [158, 163], "719": 158, "653": [158, 163, 164], "149": [158, 163], "754": [158, 164], "231": 158, "163": [158, 162], "261": 158, "446": [158, 164], "524": 158, "635": [158, 162], "112": 158, "693": [158, 164], "811": 158, "826": [158, 164], "920": [158, 164], "091": [158, 159], "173": [158, 162], "338": [158, 162, 164], "640": [158, 162, 164], "230": 158, "545": [158, 163], "54": [158, 162, 164, 166], "939": [158, 162, 164], "961": 158, "55": [158, 163, 164], "011": [158, 161], "105": [158, 164], "299": [158, 166], "384": 158, "57": [158, 162, 164], "824": [158, 164], "662": 158, "717": [158, 162, 164], "790": [158, 161, 162, 163], "889": [158, 163], "301": [158, 163, 164], "799": [158, 166], "083": [158, 164], "152": [158, 163, 164], "254": 158, "420": [158, 164], "758": [158, 161, 162, 163], "634": [158, 164], "947": [158, 163], "994": [158, 161, 164], "548": [158, 160], "159": [158, 164], "724": [158, 160], "746": 158, "791": [158, 163, 164], "884": [158, 163], "074": [158, 162, 164], "128": [158, 163, 164], "561": 158, "477": 158, "550": [158, 164], "623": [158, 161, 162, 164], "726": 158, "880": [158, 164], "47": [158, 161, 162, 164], "508": 158, "606": [158, 163], "838": [158, 164], "944": [158, 163, 164], "49": [158, 161, 162, 164], "427": 158, "963": [158, 164], "970": [158, 163], "008": [158, 162, 164], "071": 158, "305": 158, "391": [158, 161, 164], "555": [158, 164], "444": 158, "649": [158, 159, 160, 164, 166], "063": [158, 164], "119": [158, 163], "212": [158, 159], "397": [158, 164], "467": [158, 164], "678": [158, 163, 164], "688": [158, 162, 165], "741": 158, "810": [158, 164], "908": 158, "805": [158, 160, 164], "682": [158, 162], "730": 158, "816": 158, "094": [158, 162, 164], "259": [158, 159], "547": 158, "066": [158, 164], "138": [158, 164], "clifford_qubits_": [158, 162], "176": [158, 163, 164], "354": 158, "355": [158, 162, 164], "390": 158, "459": 158, "591": [158, 164], "592": [158, 164], "644": 158, "_depth_255": [158, 162], "703": [158, 162], "767": [158, 163], "768": [158, 164], "839": 158, "918": 158, "919": [158, 159, 160], "007": [158, 162], "104": [158, 164], "211": 158, "728": 158, "971": 158, "232": [158, 164], "509": [158, 162], "151": [158, 164], "498": 158, "862": [158, 164], "248": 158, "249": 158, "654": [158, 164], "142": [158, 164], "143": 158, "085": 158, "626": [158, 163], "180": [158, 163], "732": 158, "733": [158, 164], "923": 158, "interleaved_qubits_": [158, 162], "924": [158, 164], "560": [158, 164], "237": 158, "940": [158, 163], "447": [158, 166], "075": [158, 161, 164], "076": [158, 164], "845": [158, 159, 162], "846": 158, "783": [158, 164, 165], "784": [158, 162, 164], "782": 158, "813": 158, "814": 158, "201": [158, 163, 164], "202": 158, "378": [158, 164], "379": 158, "909": 158, "910": [158, 164], "284": [158, 164], "658": 158, "111": [158, 164, 165], "571": [158, 161, 164], "572": [158, 159, 164], "062": [158, 159, 164], "021": [158, 165], "022": [158, 162], "735": 158, "736": [158, 164], "546": [158, 162, 163], "09": [158, 159, 161, 162, 165], "361": [158, 164], "362": 158, "330": [158, 163], "304": [158, 164], "269": [158, 166], "471": [158, 164], "596": [158, 162, 163, 164], "842": [158, 162, 163], "086": [158, 164], "642": [158, 159, 160], "983": [158, 163], "460": 158, "result_irb_1q": [158, 162], "855": 158, "901": 158, "943": 158, "033": [158, 162, 165], "116": [158, 163], "161": 158, "206": [158, 162, 164], "300": [158, 161, 164], "344": 158, "433": [158, 164], "519": 158, "603": [158, 164], "686": [158, 164], "727": [158, 164], "769": [158, 164], "853": 158, "936": [158, 164], "978": [158, 164], "019": 158, "106": [158, 164], "191": [158, 161], "274": [158, 164], "316": 158, "357": [158, 163, 164], "440": [158, 162], "565": 158, "607": [158, 162], "774": 158, "858": [158, 164], "941": 158, "030": [158, 164], "072": [158, 164], "114": 158, "156": [158, 164], "197": [158, 162], "239": 158, "280": 158, "322": 158, "405": 158, "489": 158, "531": 158, "614": 158, "656": [158, 164], "698": 158, "747": 158, "794": 158, "948": [158, 163], "061": [158, 164], "110": 158, "157": [158, 162], "9987487631380596": 158, "9976446981909068": 158, "9966759568052321": 158, "993530034195362": 158, "9990404653517758": 158, "9981264795208118": 158, "9993022807449614": 158, "9986351324410088": 158, "9973448276409616": 158, "9955188886796882": 158, "252344351282814e": 158, "avg_gate_fidelity_clifford": [158, 162], "427765436266417e": 158, "311072136492597e": 158, "508513064336435e": 158, "00011479325016746003": 158, "00013605231315518148": 158, "126965739294625e": 158, "500976481016944e": 158, "726101631810375e": 158, "232463034652631e": 158, "example_irb_2q": [158, 162], "benchmark_irb_2q": [158, 162], "run_irb_2q": [158, 162], "921": 158, "001": [158, 161, 164], "164": [158, 164], "481": 158, "08": [158, 161, 162, 163, 164], "367": [158, 164], "937": [158, 164], "095": [158, 162], "396": [158, 162, 164], "026": 158, "620": [158, 164], "765": [158, 162, 164], "930": [158, 164], "216": [158, 162], "738": 158, "729": 158, "674": [158, 164], "965": 158, "264": [158, 163, 164], "470": 158, "463": [158, 164], "078": [158, 160], "370": [158, 164], "771": 158, "968": [158, 162], "140": 158, "441": [158, 160, 162], "192": 158, "743": [158, 164], "268": 158, "298": 158, "625": [158, 164, 165], "461": 158, "009": 158, "991": [158, 162], "014": 158, "807": [158, 164], "165": 158, "817": 158, "295": [158, 159, 164], "464": [158, 164], "721": [158, 164], "398": 158, "581": 158, "714": 158, "689": [158, 164], "801": [158, 164], "912": [158, 160, 166], "891": 158, "435": 158, "484": 158, "181": [158, 163], "194": [158, 164], "451": 158, "290": [158, 162, 165], "955": 158, "359": 158, "096": [158, 163], "445": [158, 164], "521": 158, "681": [158, 162], "628": 158, "214": [158, 163], "385": 158, "309": 158, "579": 158, "652": [158, 162, 163], "131": [158, 162, 164], "168": [158, 162], "169": [158, 164], "207": [158, 162], "208": [158, 162], "252": [158, 159, 165], "253": [158, 164], "345": 158, "346": [158, 162, 164], "457": 158, "523": [158, 163], "595": [158, 160, 162, 164], "676": [158, 163], "764": [158, 162, 164], "863": 158, "969": 158, "088": [158, 165], "089": 158, "218": [158, 159], "360": [158, 164, 166], "514": 158, "283": [158, 165], "034": [158, 162], "035": 158, "313": 158, "612": 158, "272": [158, 163], "637": [158, 166], "036": [158, 164], "876": [158, 162, 164], "877": [158, 162], "861": [158, 162], "365": [158, 163, 164], "366": 158, "897": [158, 164], "468": [158, 164], "051": 158, "661": 158, "028": [158, 164], "739": [158, 162, 164], "740": [158, 160, 162], "241": [158, 164], "042": 158, "673": 158, "641": 158, "757": [158, 165], "866": 158, "005": [158, 159, 161, 162, 164], "177": [158, 163, 164], "178": 158, "431": 158, "result_irb_2q": [158, 162], "704": [158, 160, 162], "795": 158, "888": 158, "070": [158, 164], "101": 158, "223": [158, 162, 164], "374": [158, 164], "465": 158, "526": 158, "586": [158, 164], "677": [158, 164], "707": 158, "798": [158, 164], "859": 158, "950": [158, 162], "981": [158, 162], "162": [158, 164], "9742310809885095": 158, "9459834045099638": 158, "9702389918426017": 158, "9373183372682623": 158, "9829862612568532": 158, "9651704260970525": 158, "9600628980342876": 158, "9331175707494691": 158, "example_irb_iswap": [158, 162], "iswapg": [158, 162, 163, 170], "benchmark_irb_iswap": [158, 162], "run_irb_iswap": [158, 162], "567": 158, "751": [158, 162, 164], "573": [158, 164], "742": [158, 164], "879": 158, "079": [158, 163, 164], "954": [158, 162, 164], "145": 158, "781": [158, 162, 165], "496": [158, 162], "725": [158, 164], "408": [158, 161, 164], "895": 158, "788": [158, 162], "513": 158, "517": [158, 164], "087": [158, 164], "773": [158, 162], "684": [158, 164], "638": [158, 164], "691": [158, 162], "204": [158, 160, 162, 165], "339": [158, 160, 162], "580": 158, "608": 158, "609": [158, 163, 164], "336": [158, 159, 164], "708": 158, "833": [158, 164], "990": 158, "084": 158, "187": 158, "303": 158, "576": [158, 164], "097": [158, 163], "530": [158, 162, 164], "776": [158, 160], "044": 158, "045": 158, "332": [158, 164], "333": [158, 162, 164], "984": [158, 164], "985": 158, "result_irb_iswap": [158, 162], "796": 158, "902": [158, 164], "073": 158, "115": [158, 164], "136": 158, "179": [158, 164], "221": [158, 164], "296": [158, 163, 164], "325": [158, 164], "388": [158, 164], "9296485294294863": 158, "9468865104887559": 158, "9168663709049512": 158, "9389212110918619": 158, "mirror_rb": [158, 163, 170], "example_mrb": [158, 163, 170], "benchmark_mrb": [158, 163], "run_mrb": [158, 163], "10x5": [158, 163], "64": [158, 163], "512": [158, 163], "090": [158, 162, 164], "109": [158, 170], "775": 158, "802": [158, 164], "779": [158, 161, 162, 164], "533": 158, "246": 158, "442": [158, 162], "369": 158, "491": [158, 162], "092": [158, 164], "613": 158, "631": [158, 162], "692": [158, 162], "375": [158, 163, 164], "723": [158, 160, 164], "878": 158, "266": 158, "123": 158, "_depth_2": [158, 163], "_depth_4": [158, 163], "_depth_8": [158, 163], "_depth_16": [158, 163], "_depth_32": [158, 163], "822": 158, "_depth_64": [158, 163], "_depth_128": [158, 163], "174": [158, 162], "_depth_256": [158, 163], "175": 158, "_depth_512": [158, 163], "515": 158, "720": [158, 164], "219": [158, 160], "857": [158, 164], "242": 158, "243": [158, 164, 166], "670": 158, "671": [158, 162], "147": [158, 163], "result_mrb": [158, 163], "706": [158, 162], "882": [158, 162], "962": 158, "067": [158, 162], "260": 158, "356": [158, 160], "1600x1200": 158, "ax": 158, "all_qubit_layout": [158, 163], "key_mrb_plot": [158, 163], "example_qv": [158, 165, 166, 170], "run0_qv": [158, 165, 166], "iqmfakeadonisbackend": 158, "234": [158, 164], "subbatch": [158, 165, 166], "562": 158, "588": 158, "093": 158, "023": 158, "434": [158, 164], "587": 158, "result0_qv": [158, 165, 166], "413": [158, 163], "run1_qv": [158, 165, 166], "result1_qv": [158, 165, 166], "865": [158, 164, 166], "213": [158, 164], "800": [158, 161], "321": 158, "887": [158, 159, 163, 164], "024": [158, 166], "155": [158, 164], "516": [158, 164], "247": 158, "278": [158, 160, 164], "347": 158, "265": [158, 164], "358": 158, "453": [158, 164, 165], "454": 158, "554": 158, "552": 158, "minimal_ghz": [158, 159, 160], "745": [158, 162], "792": [158, 164], "900": 158, "049": [158, 162], "238": 158, "306": 158, "423": [158, 164], "8309361141069083": 158, "fidelity_rem": [158, 160], "8897643257271268": 158, "example_qscor": [158, 164], "20_000": 158, "4767": 158, "4900": 158, "6739": 158, "3733": 158, "6246": 158, "3894": 158, "4881": 158, "4714": 158, "4767012007999197": 158, "09979310484432205": 158, "is_succes": [158, 164, 165, 166], "qscore_result": [158, 164], "6738975057778192": 158, "07204344830310698": 158, "6246025280898877": 158, "04717318377784287": 158, "4881333882446109": 158, "04133470512287928": 158, "multipartit": [159, 160], "One": [159, 160, 165, 166], "larger": [159, 160, 161], "leibfri": [159, 160], "et": [159, 160], "al": [159, 160], "six": 159, "atom": 159, "schr\u00f6dinger": 159, "cat": 159, "natur": [159, 160], "438": [159, 160, 164], "2005": [159, 160], "offer": [159, 160, 169], "verif": [159, 168, 170], "superconduct": 159, "phy": [159, 160, 170], "commun": [159, 160, 169], "095004": [159, 160], "elben": [159, 160], "statist": 159, "toolbox": 159, "probe": 159, "bodi": 159, "rev": [159, 160, 170], "99": [159, 160], "052323": [159, 160], "ciruit": [159, 160], "hadamrd": 159, "addit": [159, 160, 161, 169, 170], "log_depth": [159, 160], "cruz": [159, 160], "yield": [159, 160], "lower": [159, 160, 161], "hous": 159, "reli": [159, 160], "dai": 159, "thu": [159, 160], "comparison": [159, 160], "best": [159, 160], "gme": [159, 160], "prefer": [159, 160, 169], "whenev": [159, 160], "mitgat": [159, 160], "arang": 159, "For": [159, 161, 169, 170], "think": 159, "help": 159, "rustworkx": 159, "iqmfakeapollo": [159, 161], "scrambl": 159, "readabl": [159, 169], "mpl_draw": 159, "fake_backend": 159, "fake_apollo": 159, "arrow": 159, "32a8a4": 159, "num_it": 159, "209": [159, 164], "759": [159, 164], "760": [159, 164], "823": [159, 164], "233": 159, "597": [159, 163, 164], "016": [159, 164], "236": [159, 164], "594": [159, 164], "917": [159, 164], "279": 159, "fidelitii": [159, 160], "filter": [159, 160], "descript": [159, 160, 169], "l0": [159, 160], "l1": [159, 160], "tailor": 160, "novel": 160, "opt": 160, "anaconda3": [160, 166], "env": [160, 166], "lib": [160, 166], "python3": 160, "site": [160, 166], "170": [160, 164, 166], "userwarn": [160, 166], "unknown": [160, 166], "unknown_opt": [160, 166], "205": [160, 162, 164], "276": 160, "308": 160, "543": 160, "081": [160, 164], "125": [160, 163, 164], "927": 160, "872": 160, "455": 160, "102": 160, "9430881954317198": 160, "9742741960417851": 160, "introduct": 161, "what": [161, 162], "background": 161, "journal": 161, "prxquantum": 161, "1103": 161, "010325": [161, 170], "compressive_gst": 161, "iqmfakeadoni": 161, "k_i": 161, "trigger": 161, "benefit": 161, "less": [161, 163], "captur": 161, "domin": 161, "trustworthi": 161, "veri": 161, "consum": 161, "minimal_1q_gst": 161, "minimal_2q_gst": 161, "Be": 161, "extra": 161, "871": [161, 164], "20it": 161, "621": 161, "criterion": 161, "53e": 161, "uncertaintit": 161, "restult": 161, "idl": 161, "qb1": 161, "99693": 161, "00703": 161, "unitar": 161, "98781": 161, "99918": 161, "0013": 161, "99674": 161, "ry": 161, "99509": 161, "01332": 161, "98074": 161, "tvd": 161, "00698": 161, "03296": 161, "dist": 161, "00601": 161, "04366": 161, "results_layout_": 161, "dict_kei": 161, "raw_kraus_oper": 161, "raw_gat": 161, "raw_povm": 161, "raw_stat": 161, "gauge_opt_g": 161, "gauge_opt_gates_pauli_basi": 161, "gauge_opt_povm": 161, "gauge_opt_st": 161, "main_mgst_tim": 161, "gauge_optimization_tim": 161, "choi_ev": 161, "full_metr": 161, "raw": 161, "raw_result": 161, "array_str": 161, "precis": 161, "suppress_smal": 161, "995": [161, 164], "002": [161, 162, 164], "002j": 161, "003j": 161, "004j": 161, "998": 161, "These": 161, "diplai": 161, "disc": 161, "represent": 161, "sinlg": 161, "g_": 161, "ij": 161, "p_i": 161, "p_j": 161, "layout_": 161, "_gate_metr": 161, "_choi_eigenvalu": 161, "_other_metr": 161, "_process_matrix_0": 161, "_process_matrix_1": 161, "_process_matrix_2": 161, "_spam_matrices_r": 161, "_spam_matrices_imag": 161, "altern": 161, "ourselv": 161, "xyi": 161, "instruct": 161, "gate_list": 161, "indentif": 161, "\u03c0": [161, 166], "custom_1q_gst": 161, "verbos": 161, "806": [161, 165], "61": 161, "803": 161, "42e": 161, "008j": 161, "989": [161, 162, 164], "001j": 161, "553": 162, "324": [162, 164], "964": 162, "064": 162, "065": 162, "294": 162, "664": 162, "107": 162, "982": [162, 163], "058": [162, 164], "538": [162, 164], "120": [162, 164], "121": [162, 164], "146": 162, "522": [162, 163], "103": [162, 164], "744": [162, 164], "780": [162, 163, 165], "818": 162, "819": [162, 163], "133": [162, 163], "286": 162, "287": 162, "376": [162, 164], "583": 162, "9975073376613797": 162, "9957157328789242": 162, "9976959612386156": 162, "9957310522299055": 162, "752861001879659e": 162, "028839025109517e": 162, "64196778583225e": 162, "243656712565855e": 162, "know": 162, "679": [162, 163, 164], "118": [162, 164], "820": [162, 164], "915": 162, "577": 162, "148": [162, 164], "874": [162, 164], "951": [162, 164], "380": 162, "381": 162, "485": 162, "685": [162, 164], "9798030906041997": 162, "9431232937255942": 162, "9840858225184934": 162, "945382422883015": 162, "593": [162, 164], "885": [162, 164], "490": [162, 164], "883": [162, 163, 164], "038": 162, "215": [162, 163], "282": 162, "348": 162, "394": 162, "395": [162, 164], "492": 162, "675": 162, "752": [162, 164], "932": 162, "933": 162, "158": [162, 164], "289": [162, 164], "436": [162, 164], "566": 162, "9344679810705316": 162, "9463377694591251": 162, "9267928870925659": 162, "943379008472002": 162, "892": 163, "589": 163, "646": 163, "702": 163, "244": 163, "996": 163, "598": [163, 164], "867": [163, 164], "117": 163, "271": [163, 164], "448": [163, 164], "449": [163, 164], "150": [163, 164], "450": [163, 164], "605": 163, "184": 163, "342": 163, "343": 163, "422": [163, 164], "134": 163, "456": 163, "529": [163, 164], "attr_kei": [163, 165, 166], "depth_2": 163, "14302134513855": 163, "007565975189208984": 163, "06883907318115234": 163, "f8d9d789": 163, "0e9a": 163, "4086": 163, "ab36": 163, "685064a7b66": 163, "depth_4": 163, "0004930496215820312": 163, "0007040500640869141": 163, "87e367b7": 163, "c3ae": 163, "4457": 163, "8a2d": 163, "7b169c528033": 163, "depth_8": 163, "0004889965057373047": 163, "0005979537963867188": 163, "d84330c9": 163, "101f": 163, "40ff": 163, "bea8": 163, "f5e4c0b41527": 163, "depth_16": 163, "0004627704620361328": 163, "0006148815155029297": 163, "1f58b4a0": 163, "fb16": 163, "4d12": 163, "a9e8": 163, "c9263da52418": 163, "depth_32": 163, "00047278404235839844": 163, "0005419254302978516": 163, "4e43834b": 163, "5694": 163, "4c6d": 163, "8a83": 163, "796913d67e40": 163, "depth_64": 163, "000469207763671875": 163, "0005609989166259766": 163, "036e1dd": 163, "ca95": 163, "42a1": 163, "ab68": 163, "30a243f6b4ba": 163, "depth_128": 163, "0004668235778808594": 163, "0005328655242919922": 163, "13a59ca8": 163, "2ab0": 163, "4de8": 163, "a643": 163, "5b3f318f03d4": 163, "depth_256": 163, "0004749298095703125": 163, "e673defd": 163, "039c": 163, "4c37": 163, "9ef3": 163, "d4734436f39a": 163, "depth_512": 163, "0005099773406982422": 163, "0005548000335693359": 163, "d83ac439": 163, "2929": 163, "4d78": 163, "b52b": 163, "f297873c3e44": 163, "9710221314803044": 163, "001462493086363885": 163, "9473471466489307": 163, "00285118172031131": 163, "xxxxxxxxxxxxxx": 164, "put": 164, "run0_qscor": 164, "549": 164, "680": 164, "622": 164, "772": 164, "869": 164, "898": 164, "462": 164, "563": 164, "027": 164, "235": 164, "602": 164, "928": 164, "193": 164, "353": 164, "494": 164, "539": 164, "568": 164, "645": 164, "696": 164, "167": 164, "293": 164, "472": 164, "505": 164, "632": 164, "778": 164, "851": 164, "210": [164, 165], "275": 164, "326": 164, "540": 164, "715": 164, "922": 164, "057": 164, "129": [164, 170], "302": 164, "506": 164, "683": 164, "141": 164, "478": 164, "056": 164, "135": 164, "493": 164, "528": 164, "599": 164, "687": 164, "047": 164, "228": 164, "317": 164, "452": 164, "809": 164, "957": 164, "913": 164, "183": 164, "430": 164, "480": 164, "716": 164, "926": 164, "974": 164, "052": 164, "762": 164, "793": 164, "847": 164, "419": 164, "850": 164, "903": 164, "474": 164, "507": 164, "564": 164, "711": 164, "189": 164, "273": [164, 166], "327": 164, "503": 164, "590": 164, "709": 164, "363": 164, "473": 164, "669": 164, "018": 164, "479": 164, "830": 164, "914": 164, "139": 164, "421": 164, "535": 164, "585": 164, "617": 164, "934": 164, "335": 164, "392": 164, "551": 164, "699": 164, "827": 164, "281": 164, "534": 164, "633": 164, "946": 164, "980": 164, "032": [164, 165], "340": 164, "337": 164, "310": 164, "203": 164, "258": 164, "318": 164, "124": 164, "226": 164, "601": 164, "956": 164, "017": 164, "053": 164, "137": 164, "result0_qscor": 164, "4370": 164, "4700": 164, "6695": 164, "3692": 164, "5902": 164, "3404": 164, "5068": 164, "5085": 164, "4374": 164, "8942": 164, "43697610073325965": 164, "09963324394097106": 164, "6694825328517715": 164, "07553199096996285": 164, "5901951757699432": 164, "04806723107119834": 164, "5067731707198324": 164, "03884606517763287": 164, "4373922810576933": 164, "034249084355823": 164, "217": 165, "082": 165, "rem_quasidistribut": [165, 166], "time_batch": [165, 166], "cumulative_average_heavy_output_prob": [165, 166], "cumulative_stddev_heavy_output_prob": [165, 166], "rem_cumulative_average_heavy_output_prob": [165, 166], "rem_cumulative_stddev_heavy_output_prob": [165, 166], "rem_heavy_output_prob": [165, 166], "60546875": 165, "71875": 165, "578125": 165, "74609375": 165, "6328125": 165, "546875": 165, "56640625": 165, "76953125": 165, "75390625": 165, "67578125": 165, "6171875": 165, "55078125": 165, "64453125": 165, "6875": 165, "7109375": 165, "82421875": 165, "76171875": 165, "6484375": 165, "6015625": 165, "73828125": 165, "63671875": 165, "69140625": 165, "61328125": 165, "734375": 165, "57421875": 165, "6953125": 165, "55859375": 165, "69921875": 165, "609375": 165, "671875": 165, "77734375": 165, "6796875": 165, "62890625": 165, "6640625": 165, "66796875": 165, "62109375": 165, "703125": 165, "68359375": 165, "58984375": 165, "71484375": 165, "59375": 165, "79296875": 165, "66015625": 165, "65234375": 165, "59765625": 165, "65625": 165, "84765625": 165, "5859375": 165, "5625": 165, "72265625": 165, "640625": 165, "58203125": 165, "54296875": 165, "8203125": 165, "78515625": 165, "7265625": 165, "53515625": 165, "5703125": 165, "5546875": 165, "5390625": 165, "828125": 165, "80859375": 165, "765625": 165, "81640625": 165, "5234375": 165, "75": 165, "73046875": 165, "87890625": 165, "7890625": 165, "7734375": 165, "7421875": 165, "70703125": 165, "50390625": 165, "7578125": 165, "52734375": 165, "78125": 165, "8125": 165, "average_heavy_output_prob": [165, 166], "649203125": 165, "021341903733745705": 165, "672703125": 165, "020984452845629994": 165, "rem_average_heavy_output_prob": [165, 166], "67954478782619": 165, "020869291754367154": 165, "rem_is_succes": [165, 166], "rem_qv_result": [165, 166], "710149650958595": 165, "020289757228807877": 165, "vanilla_4_qubits_": [165, 166], "vanilla_rem_4_qubits_": 165, "Or": [165, 166], "onc": [165, 166, 170], "668": 166, "pedrofigueroaromero": 166, "190": 166, "server": 166, "e48420cb": 166, "30dc": 166, "4274": 166, "9d7d": 166, "e5fffa68f73a": 166, "7404ae11": 166, "823a": 166, "4e66": 166, "b2c4": 166, "41361cf10c69": 166, "untranspiled_circuit": 166, "q_0": 166, "q_1": 166, "q_2": 166, "mea": 166, "48526": 166, "79781": 166, "58665": 166, "3705": 166, "1471": 166, "1775": 166, "1521": 166, "q_3": 166, "q_4": 166, "73475": 166, "1344": 166, "q_5": 166, "q_6": 166, "30103": 166, "7711": 166, "3108": 166, "6909": 166, "6665": 166, "65249": 166, "8837": 166, "24328": 166, "3169": 166, "6809": 166, "71478125": 166, "020192524094250205": 166, "7261292473074281": 166, "019943197512544274": 166, "vanilla_3_qubits_": 166, "vanilla_rem_3_qubits_": 166, "collect": 167, "demonstr": 167, "variou": 167, "rest": 167, "summari": [167, 168], "releas": 168, "date": [168, 169], "finland": 168, "tool": [168, 170], "changelog": 168, "search": 168, "page": [168, 169], "januari": 169, "2004": 169, "AND": 169, "FOR": 169, "reproduct": 169, "shall": 169, "licensor": 169, "owner": 169, "entiti": 169, "author": 169, "grant": 169, "legal": 169, "power": 169, "direct": 169, "indirect": 169, "caus": 169, "contract": 169, "ownership": 169, "fifti": 169, "percent": 169, "outstand": 169, "iii": 169, "benefici": 169, "exercis": 169, "mechan": 169, "transform": 169, "translat": 169, "media": 169, "authorship": 169, "attach": 169, "appendix": 169, "editori": 169, "revis": 169, "elabor": 169, "whole": 169, "remain": 169, "mere": 169, "link": 169, "bind": 169, "interfac": 169, "thereof": 169, "contribut": 169, "intention": 169, "inclus": 169, "behalf": 169, "electron": 169, "verbal": 169, "mail": 169, "issu": 169, "track": 169, "discuss": 169, "exclud": 169, "conspicu": 169, "mark": 169, "Not": 169, "contributor": 169, "whom": 169, "been": 169, "receiv": 169, "incorpor": 169, "subject": 169, "herebi": 169, "perpetu": 169, "worldwid": 169, "charg": 169, "royalti": 169, "irrevoc": 169, "reproduc": 169, "publicli": 169, "sublicens": 169, "patent": 169, "sell": 169, "transfer": 169, "claim": 169, "necessarili": 169, "infring": 169, "alon": 169, "institut": 169, "litig": 169, "counterclaim": 169, "lawsuit": 169, "alleg": 169, "contributori": 169, "redistribut": 169, "medium": 169, "meet": 169, "recipi": 169, "carri": 169, "promin": 169, "retain": 169, "trademark": 169, "pertain": 169, "wherev": 169, "third": 169, "parti": 169, "normal": 169, "appear": 169, "content": 169, "alongsid": 169, "addendum": 169, "constru": 169, "compli": 169, "explicitli": 169, "notwithstand": 169, "noth": 169, "herein": 169, "supersed": 169, "agreement": 169, "regard": 169, "trade": 169, "servic": [169, 170], "reason": 169, "customari": 169, "disclaim": 169, "merchant": 169, "particular": 169, "respons": 169, "appropri": 169, "risk": 169, "liabil": 169, "event": 169, "tort": 169, "neglig": 169, "deliber": [169, 170], "grossli": 169, "liabl": 169, "damag": 169, "special": 169, "incident": 169, "consequenti": 169, "charact": 169, "aris": 169, "inabl": 169, "loss": 169, "goodwil": 169, "stoppag": 169, "failur": 169, "malfunct": 169, "commerci": 169, "even": 169, "advis": 169, "fee": 169, "indemn": 169, "oblig": 169, "indemnifi": 169, "defend": 169, "hold": 169, "harmless": 169, "incur": 169, "assert": 169, "boilerpl": 169, "enclos": 169, "bracket": 169, "don": 169, "t": 169, "comment": 169, "syntax": 169, "easier": 169, "archiv": 169, "repositori": [169, 170], "licenc": 169, "src": 169, "raphael": 169, "brieger": 169, "ingo": 169, "roth": 169, "martin": 169, "kliesch": 169, "comprehens": 170, "modular": 170, "easi": 170, "042311": 170, "lett": 170, "080505": 170, "prx": 170, "2023": 170, "150502": 170, "2022": 170, "holist": 170, "032328": 170, "0712": 170, "0921": 170, "2007": 170, "ieee": 170, "tran": 170, "eng": 170, "split": 170, "legaci": 170, "wrap": 170, "benchmarkexperi": 170, "uv": 170, "highli": 170, "With": 170, "machin": 170, "venv": 170, "read": 170, "prompt": 170, "suppli": 170, "txt": 170, "lock": 170, "directli": 170, "repo": 170, "pypi": 170, "lint": 170, "cicd": 170, "clone": 170, "directori": 170, "edit": 170, "docbuild": 170, "pyproject": 170, "toml": 170, "commit": 170, "upgrad": 170, "transit": 170, "cloud": 170, "prem": 170, "platform": 170, "authent": 170, "your_token": 170, "example_irb": 170, "example_experi": 170, "setup": 170, "weekli": 170, "daili": 170, "gitlab": 170, "scheduled_experi": 170}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "compressive_gst"], [38, 0, 0, "-", "entanglement"], [54, 0, 0, "-", "logging_config"], [55, 0, 0, "-", "optimization"], [68, 0, 0, "-", "quantum_volume"], [87, 0, 0, "-", "randomized_benchmarking"], [131, 0, 0, "-", "readout_mitigation"], [135, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[20, 0, 0, "-", "compressive_gst"], [26, 0, 0, "-", "gst_analysis"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[21, 1, 1, "", "CompressiveGST"], [22, 1, 1, "", "GSTConfiguration"], [23, 5, 1, "", "create_predefined_gate_set"], [24, 5, 1, "", "parse_gate_set"], [25, 5, 1, "", "parse_layouts"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_meas_circuits"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, 3, 1, "", "batch_size"], [22, 3, 1, "", "benchmark"], [22, 3, 1, "", "bootstrap_samples"], [22, 3, 1, "", "convergence_criteria"], [22, 3, 1, "", "from_init"], [22, 3, 1, "", "gate_labels"], [22, 3, 1, "", "gate_set"], [22, 3, 1, "", "max_inits"], [22, 3, 1, "", "max_iterations"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_circuits"], [22, 3, 1, "", "opt_method"], [22, 3, 1, "", "qubit_layouts"], [22, 3, 1, "", "rank"], [22, 3, 1, "", "seq_len_list"], [22, 3, 1, "", "shots"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[27, 5, 1, "", "bootstrap_errors"], [28, 5, 1, "", "dataframe_to_figure"], [29, 5, 1, "", "dataset_counts_to_mgst_format"], [30, 5, 1, "", "generate_basis_labels"], [31, 5, 1, "", "generate_gate_results"], [32, 5, 1, "", "generate_non_gate_results"], [33, 5, 1, "", "generate_unit_rank_gate_results"], [34, 5, 1, "", "mgst_analysis"], [35, 5, 1, "", "pandas_results_to_observations"], [36, 5, 1, "", "result_str_to_floats"], [37, 5, 1, "", "run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[39, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[40, 1, 1, "", "GHZBenchmark"], [41, 1, 1, "", "GHZConfiguration"], [42, 5, 1, "", "extract_fidelities"], [43, 5, 1, "", "fidelity_analysis"], [44, 5, 1, "", "fidelity_ghz_coherences"], [45, 5, 1, "", "fidelity_ghz_randomized_measurements"], [46, 5, 1, "", "generate_ghz_linear"], [47, 5, 1, "", "generate_ghz_log_cruz"], [48, 5, 1, "", "generate_ghz_log_mooney"], [49, 5, 1, "", "generate_ghz_spanning_tree"], [50, 5, 1, "", "generate_ghz_star"], [51, 5, 1, "", "get_cx_map"], [52, 5, 1, "", "get_edges"], [53, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, 2, 1, "", "add_configuration_to_dataset"], [40, 2, 1, "", "analysis_function"], [40, 2, 1, "", "append_rms"], [40, 2, 1, "", "execute"], [40, 2, 1, "", "generate_coherence_meas_circuits"], [40, 2, 1, "", "generate_native_ghz"], [40, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, 3, 1, "", "benchmark"], [41, 3, 1, "", "cal_url"], [41, 3, 1, "", "custom_qubits_array"], [41, 3, 1, "", "fidelity_routine"], [41, 3, 1, "", "mit_shots"], [41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "num_RMs"], [41, 3, 1, "", "optimize_sqg"], [41, 3, 1, "", "qiskit_optim_level"], [41, 3, 1, "", "qubit_counts"], [41, 3, 1, "", "rem"], [41, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[41, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[56, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[57, 1, 1, "", "QScoreBenchmark"], [58, 1, 1, "", "QScoreConfiguration"], [59, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [60, 5, 1, "", "compute_expectation_value"], [61, 5, 1, "", "create_objective_function"], [62, 5, 1, "", "cut_cost_function"], [63, 5, 1, "", "get_optimal_angles"], [64, 5, 1, "", "is_successful"], [65, 5, 1, "", "plot_approximation_ratios"], [66, 5, 1, "", "qscore_analysis"], [67, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[57, 2, 1, "", "add_all_meta_to_dataset"], [57, 2, 1, "", "analysis_function"], [57, 2, 1, "", "choose_qubits_custom"], [57, 2, 1, "", "choose_qubits_naive"], [57, 2, 1, "", "execute"], [57, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[58, 3, 1, "", "REM"], [58, 3, 1, "", "benchmark"], [58, 3, 1, "", "choose_qubits_routine"], [58, 3, 1, "", "custom_qubits_array"], [58, 3, 1, "", "max_num_nodes"], [58, 3, 1, "", "min_num_nodes"], [58, 3, 1, "", "min_num_qubits"], [58, 3, 1, "", "mit_shots"], [58, 3, 1, "", "model_computed_fields"], [58, 3, 1, "", "model_config"], [58, 3, 1, "", "model_fields"], [58, 3, 1, "", "num_instances"], [58, 3, 1, "", "num_qaoa_layers"], [58, 3, 1, "", "optimize_sqg"], [58, 3, 1, "", "qiskit_optim_level"], [58, 3, 1, "", "qpu_topology"], [58, 3, 1, "", "seed"], [58, 3, 1, "", "use_classically_optimized_angles"], [58, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[69, 0, 0, "-", "clops"], [75, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[70, 1, 1, "", "CLOPSBenchmark"], [71, 1, 1, "", "CLOPSConfiguration"], [72, 5, 1, "", "clops_analysis"], [73, 5, 1, "", "plot_times"], [74, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[70, 2, 1, "", "add_all_meta_to_dataset"], [70, 2, 1, "", "analysis_function"], [70, 2, 1, "", "append_parameterized_unitary"], [70, 2, 1, "", "assign_random_parameters_to_all"], [70, 2, 1, "", "clops_cycle"], [70, 2, 1, "", "execute"], [70, 2, 1, "", "generate_circuit_list"], [70, 2, 1, "", "generate_random_parameters"], [70, 2, 1, "", "generate_single_circuit"], [70, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[71, 3, 1, "", "benchmark"], [71, 3, 1, "", "clops_h_bool"], [71, 3, 1, "", "model_computed_fields"], [71, 3, 1, "", "model_config"], [71, 3, 1, "", "model_fields"], [71, 3, 1, "", "num_circuits"], [71, 3, 1, "", "num_shots"], [71, 3, 1, "", "num_updates"], [71, 3, 1, "", "optimize_sqg"], [71, 3, 1, "", "physical_layout"], [71, 3, 1, "", "qiskit_optim_level"], [71, 3, 1, "", "qubits"], [71, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[76, 1, 1, "", "QuantumVolumeBenchmark"], [77, 1, 1, "", "QuantumVolumeConfiguration"], [78, 5, 1, "", "compute_heavy_output_probabilities"], [79, 5, 1, "", "cumulative_hop"], [80, 5, 1, "", "cumulative_std"], [81, 5, 1, "", "get_ideal_heavy_outputs"], [82, 5, 1, "", "get_rem_hops"], [83, 5, 1, "", "heavy_projector"], [84, 5, 1, "", "is_successful"], [85, 5, 1, "", "plot_hop_threshold"], [86, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[76, 2, 1, "", "add_all_circuits_to_dataset"], [76, 2, 1, "", "add_all_meta_to_dataset"], [76, 2, 1, "", "analysis_function"], [76, 2, 1, "", "execute"], [76, 2, 1, "", "generate_circuit_list"], [76, 2, 1, "", "generate_single_circuit"], [76, 2, 1, "", "get_rem_quasidistro"], [76, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[77, 3, 1, "", "benchmark"], [77, 3, 1, "", "choose_qubits_routine"], [77, 3, 1, "", "custom_qubits_array"], [77, 3, 1, "", "mit_shots"], [77, 3, 1, "", "model_computed_fields"], [77, 3, 1, "", "model_config"], [77, 3, 1, "", "model_fields"], [77, 3, 1, "", "num_circuits"], [77, 3, 1, "", "num_sigmas"], [77, 3, 1, "", "optimize_sqg"], [77, 3, 1, "", "physical_layout"], [77, 3, 1, "", "qiskit_optim_level"], [77, 3, 1, "", "rem"], [77, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[88, 0, 0, "-", "clifford_rb"], [93, 0, 0, "-", "interleaved_rb"], [98, 0, 0, "-", "mirror_rb"], [108, 0, 0, "-", "multi_lmfit"], [113, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[89, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[90, 1, 1, "", "CliffordRBConfiguration"], [91, 1, 1, "", "CliffordRandomizedBenchmarking"], [92, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[90, 3, 1, "", "benchmark"], [90, 3, 1, "", "model_computed_fields"], [90, 3, 1, "", "model_config"], [90, 3, 1, "", "model_fields"], [90, 3, 1, "", "num_circuit_samples"], [90, 3, 1, "", "parallel_execution"], [90, 3, 1, "", "qubits_array"], [90, 3, 1, "", "sequence_lengths"], [90, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[91, 2, 1, "", "add_all_circuits_to_dataset"], [91, 2, 1, "", "add_all_metadata_to_dataset"], [91, 2, 1, "", "analysis_function"], [91, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[94, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[95, 1, 1, "", "InterleavedRBConfiguration"], [96, 1, 1, "", "InterleavedRandomizedBenchmarking"], [97, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[95, 3, 1, "", "interleaved_gate"], [95, 3, 1, "", "interleaved_gate_params"], [95, 3, 1, "", "model_computed_fields"], [95, 3, 1, "", "model_config"], [95, 3, 1, "", "model_fields"], [95, 3, 1, "", "num_circuit_samples"], [95, 3, 1, "", "parallel_execution"], [95, 3, 1, "", "qubits_array"], [95, 3, 1, "", "sequence_lengths"], [95, 3, 1, "", "shots"], [95, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[96, 2, 1, "", "add_all_circuits_to_dataset"], [96, 2, 1, "", "add_all_meta_to_dataset"], [96, 2, 1, "", "analysis_function"], [96, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[99, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[100, 1, 1, "", "MirrorRBConfiguration"], [101, 1, 1, "", "MirrorRandomizedBenchmarking"], [102, 5, 1, "", "compute_polarizations"], [103, 5, 1, "", "edge_grab"], [104, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [105, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [106, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [107, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[100, 3, 1, "", "benchmark"], [100, 3, 1, "", "density_2q_gates"], [100, 3, 1, "", "depths_array"], [100, 3, 1, "", "model_computed_fields"], [100, 3, 1, "", "model_config"], [100, 3, 1, "", "model_fields"], [100, 3, 1, "", "num_circuit_samples"], [100, 3, 1, "", "num_pauli_samples"], [100, 3, 1, "", "qiskit_optim_level"], [100, 3, 1, "", "qubits_array"], [100, 3, 1, "", "routing_method"], [100, 3, 1, "", "shots"], [100, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[101, 2, 1, "", "add_all_meta_to_dataset"], [101, 2, 1, "", "analysis_function"], [101, 2, 1, "", "execute"], [101, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[109, 5, 1, "", "create_multi_dataset_params"], [110, 5, 1, "", "eval_func_single_dataset"], [111, 5, 1, "", "get_param_names_from_func_signature"], [112, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[114, 5, 1, "", "compute_inverse_clifford"], [115, 5, 1, "", "estimate_survival_probabilities"], [116, 5, 1, "", "exponential_rb"], [117, 5, 1, "", "fit_decay_lmfit"], [118, 5, 1, "", "generate_all_rb_circuits"], [119, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [120, 5, 1, "", "generate_random_clifford_seq_circuits"], [121, 5, 1, "", "get_survival_probabilities"], [122, 5, 1, "", "import_native_gate_cliffords"], [123, 5, 1, "", "lmfit_minimizer"], [124, 5, 1, "", "plot_rb_decay"], [125, 5, 1, "", "relabel_qubits_array_from_zero"], [126, 5, 1, "", "submit_parallel_rb_job"], [127, 5, 1, "", "submit_sequential_rb_jobs"], [128, 5, 1, "", "survival_probabilities_parallel"], [129, 5, 1, "", "validate_irb_gate"], [130, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[132, 1, 1, "", "M3IQM"], [133, 5, 1, "", "apply_readout_error_mitigation"], [134, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[132, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[136, 5, 1, "", "count_2q_layers"], [137, 5, 1, "", "count_native_gates"], [138, 5, 1, "", "get_iqm_backend"], [139, 5, 1, "", "marginal_distribution"], [140, 5, 1, "", "perform_backend_transpilation"], [141, 5, 1, "", "reduce_to_active_qubits"], [142, 5, 1, "", "retrieve_all_counts"], [143, 5, 1, "", "retrieve_all_job_metadata"], [144, 5, 1, "", "set_coupling_map"], [145, 5, 1, "", "sort_batches_by_final_layout"], [146, 5, 1, "", "submit_execute"], [147, 5, 1, "", "timeit"], [148, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 168, 170], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 168, 170], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 154, 155, 157, 166], "compressive_gst": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "compressivegst": 21, "gstconfigur": 22, "create_predefined_gate_set": 23, "parse_gate_set": 24, "parse_layout": 25, "gst_analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "bootstrap_error": 27, "dataframe_to_figur": 28, "dataset_counts_to_mgst_format": 29, "generate_basis_label": 30, "generate_gate_result": 31, "generate_non_gate_result": 32, "generate_unit_rank_gate_result": 33, "mgst_analysi": 34, "pandas_results_to_observ": 35, "result_str_to_float": 36, "run_mgst_wrapp": 37, "entangl": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "ghz": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 154, 155, 158, 159, 160], "ghzbenchmark": 40, "ghzconfigur": 41, "extract_fidel": 42, "fidelity_analysi": 43, "fidelity_ghz_coher": 44, "fidelity_ghz_randomized_measur": 45, "generate_ghz_linear": 46, "generate_ghz_log_cruz": 47, "generate_ghz_log_moonei": 48, "generate_ghz_spanning_tre": 49, "generate_ghz_star": 50, "get_cx_map": 51, "get_edg": 52, "plot_fidel": 53, "logging_config": 54, "optim": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "qscore": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 158, 164], "qscorebenchmark": 57, "qscoreconfigur": 58, "calculate_optimal_angles_for_qaoa_p1": 59, "compute_expectation_valu": 60, "create_objective_funct": 61, "cut_cost_funct": 62, "get_optimal_angl": 63, "is_success": [64, 84], "plot_approximation_ratio": 65, "qscore_analysi": 66, "run_qaoa": 67, "quantum_volum": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "clop": [69, 70, 71, 72, 73, 74, 154, 155, 157, 158], "clopsbenchmark": 70, "clopsconfigur": 71, "clops_analysi": 72, "plot_tim": 73, "retrieve_clops_elapsed_tim": 74, "quantumvolumebenchmark": 76, "quantumvolumeconfigur": 77, "compute_heavy_output_prob": 78, "cumulative_hop": 79, "cumulative_std": 80, "get_ideal_heavy_output": 81, "get_rem_hop": 82, "heavy_projector": 83, "plot_hop_threshold": 85, "qv_analysi": 86, "randomized_benchmark": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "clifford_rb": [88, 89, 90, 91, 92], "cliffordrbconfigur": 90, "cliffordrandomizedbenchmark": 91, "clifford_rb_analysi": 92, "interleaved_rb": [93, 94, 95, 96, 97], "interleavedrbconfigur": 95, "interleavedrandomizedbenchmark": 96, "interleaved_rb_analysi": 97, "mirror_rb": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "mirrorrbconfigur": 100, "mirrorrandomizedbenchmark": 101, "compute_polar": 102, "edge_grab": 103, "generate_fixed_depth_mrb_circuit": 104, "generate_pauli_dressed_mrb_circuit": 105, "list_to_numcircuit_times_numpauli_matrix": 106, "mrb_analysi": 107, "multi_lmfit": [108, 109, 110, 111, 112], "create_multi_dataset_param": 109, "eval_func_single_dataset": 110, "get_param_names_from_func_signatur": 111, "multi_dataset_residu": 112, "randomized_benchmarking_common": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "compute_inverse_clifford": 114, "estimate_survival_prob": 115, "exponential_rb": 116, "fit_decay_lmfit": 117, "generate_all_rb_circuit": 118, "generate_fixed_depth_parallel_rb_circuit": 119, "generate_random_clifford_seq_circuit": 120, "get_survival_prob": 121, "import_native_gate_clifford": 122, "lmfit_minim": 123, "plot_rb_decai": 124, "relabel_qubits_array_from_zero": 125, "submit_parallel_rb_job": 126, "submit_sequential_rb_job": 127, "survival_probabilities_parallel": 128, "validate_irb_g": 129, "validate_rb_qubit": 130, "readout_mitig": [131, 132, 133, 134], "m3iqm": 132, "apply_readout_error_mitig": 133, "readout_error_m3": 134, "util": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "count_2q_lay": 136, "count_native_g": 137, "get_iqm_backend": 138, "marginal_distribut": 139, "perform_backend_transpil": 140, "reduce_to_active_qubit": 141, "retrieve_all_count": 142, "retrieve_all_job_metadata": 143, "set_coupling_map": 144, "sort_batches_by_final_layout": 145, "submit_execut": 146, "timeit": 147, "xrvariable_to_count": 148, "changelog": 149, "version": 149, "2": [149, 151], "20": 149, "19": 149, "18": 149, "17": 149, "16": 149, "15": 149, "14": 149, "13": 149, "12": 149, "11": 149, "10": 149, "9": 149, "8": 149, "7": 149, "6": 149, "5": 149, "4": 149, "3": 149, "1": [149, 155], "0": [149, 155], "develop": [150, 170], "qubit": [151, 155], "clifford": [151, 154, 156, 158], "group": 151, "decomposit": 151, "gener": [151, 157, 163, 165, 166], "1q": [151, 162], "2q": [151, 162], "dump": 151, "pickl": 151, "file": 151, "load": 151, "count": 151, "element": 151, "A": 151, "wai": 151, "work": 151, "out": [151, 161], "invers": 151, "sequenc": 151, "design": 151, "condit": 151, "how": 152, "make": 152, "your": 152, "own": 152, "devic": 153, "spark": 154, "connect": [154, 155], "backend": [154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166], "state": [154, 155, 158, 159, 160], "fidel": [154, 155, 158, 159, 160], "quantum": [154, 155, 158, 165, 166], "volum": [154, 155, 158, 165, 166], "layer": [154, 155, 157], "oper": [154, 155, 157], "per": [154, 155, 157], "second": [154, 155, 157], "random": [154, 156, 158, 162, 163], "interleav": [154, 158, 162], "irb": [154, 162], "q": [154, 155, 164], "score": [154, 155, 164], "summari": [154, 155, 158], "star": 155, "As": 155, "one": 155, "can": 155, "see": 155, "label": 155, "i": 155, "reserv": 155, "resontor": 155, "so": 155, "advis": 155, "defin": [155, 156, 157, 158, 161, 162, 163, 164, 165], "indic": [155, 168], "layout": 155, "interest": 155, "start": 155, "from": 155, "rb": [156, 163], "choos": [156, 157, 158, 161, 162, 163, 164, 165, 166], "set": [156, 157, 158, 160, 161, 163, 164, 165, 166], "token": [156, 157, 158, 160, 163, 164, 165, 166], "us": [156, 157, 158, 160, 163, 164, 165, 166, 170], "reson": [156, 157, 158, 160, 163, 164, 165, 166], "configur": [156, 157, 159, 160, 161, 162, 163, 164, 165, 166], "run": [156, 157, 159, 160, 162, 163, 164, 165, 166], "experi": [156, 157, 161, 162, 163, 164, 165, 166], "perform": [156, 157, 164, 165, 166], "analysi": [156, 157, 164, 165, 166], "list": [157, 163], "all": [157, 161, 163], "kei": [157, 163], "attribut": [157, 163], "dataset": [157, 163], "The": [157, 163], "observ": [157, 161, 163], "object": [157, 163], "contain": [157, 163], "result": [157, 159, 160, 161, 162, 163], "plot": [157, 161, 163, 165, 166], "notebook": [158, 170], "mirror": [158, 163], "greenberg": [159, 160], "horn": [159, 160], "zeiling": [159, 160], "definit": [159, 160], "access": [159, 160, 161], "compress": 161, "gate": [161, 162], "tomographi": 161, "gst": 161, "minim": 161, "execut": 161, "": 161, "examin": 161, "high": 161, "level": 161, "store": 161, "final": 161, "estim": 161, "further": 161, "process": 161, "creat": 161, "custom": 161, "check": 161, "matrix": 161, "correspond": 161, "pi": 161, "rotat": 161, "around": 161, "y": 161, "axi": 161, "analyz": [162, 163], "non": 162, "nativ": 162, "mrb": 163, "qv": [165, 166], "deneb": 166, "inspect": 166, "exampl": 167, "content": 168, "tabl": 168, "licens": 169, "instal": 170, "latest": 170, "releas": 170, "option": 170, "depend": 170, "chang": 170, "character": 170, "physic": 170, "hardwar": 170, "jupyt": 170, "python": 170, "script": 170, "schedul": 170, "ci": 170, "cd": 170, "pipelin": 170}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, "iqm-benchmarks-compressive-gst-compressive-gst-compressivegst"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, "iqm-benchmarks-compressive-gst-compressive-gst-gstconfiguration"]], "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set": [[23, "iqm-benchmarks-compressive-gst-compressive-gst-create-predefined-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set": [[24, "iqm-benchmarks-compressive-gst-compressive-gst-parse-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts": [[25, "iqm-benchmarks-compressive-gst-compressive-gst-parse-layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors": [[27, "iqm-benchmarks-compressive-gst-gst-analysis-bootstrap-errors"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure": [[28, "iqm-benchmarks-compressive-gst-gst-analysis-dataframe-to-figure"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format": [[29, "iqm-benchmarks-compressive-gst-gst-analysis-dataset-counts-to-mgst-format"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels": [[30, "iqm-benchmarks-compressive-gst-gst-analysis-generate-basis-labels"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results": [[31, "iqm-benchmarks-compressive-gst-gst-analysis-generate-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results": [[32, "iqm-benchmarks-compressive-gst-gst-analysis-generate-non-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results": [[33, "iqm-benchmarks-compressive-gst-gst-analysis-generate-unit-rank-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis": [[34, "iqm-benchmarks-compressive-gst-gst-analysis-mgst-analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations": [[35, "iqm-benchmarks-compressive-gst-gst-analysis-pandas-results-to-observations"]], "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats": [[36, "iqm-benchmarks-compressive-gst-gst-analysis-result-str-to-floats"]], "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper": [[37, "iqm-benchmarks-compressive-gst-gst-analysis-run-mgst-wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[42, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[43, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[44, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[45, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[46, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[47, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[48, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[49, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[50, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[51, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[52, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[53, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[54, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[55, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[56, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[57, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[58, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[59, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[60, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[61, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[62, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[63, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[64, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[65, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[66, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[67, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[69, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[70, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[71, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[72, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[73, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[74, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[75, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[76, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[77, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[78, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[79, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[80, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[81, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[82, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[83, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[84, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[85, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[86, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[87, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[89, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[90, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[91, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[92, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[94, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[95, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[96, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[97, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[99, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[100, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[101, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[102, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[103, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[104, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[105, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[106, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[107, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[108, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[109, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[110, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[111, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[112, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[113, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[114, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[115, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[116, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[117, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[118, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[119, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[120, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[121, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[122, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[123, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[124, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[125, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[126, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[127, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[128, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[129, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[130, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[131, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[132, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[133, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[134, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[135, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.count_2q_layers": [[136, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[137, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[138, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[139, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[140, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[141, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[142, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[143, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[144, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[145, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[146, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[147, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[148, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[149, "changelog"]], "Version 2.20": [[149, "version-2-20"]], "Version 2.19": [[149, "version-2-19"]], "Version 2.18": [[149, "version-2-18"]], "Version 2.17": [[149, "version-2-17"]], "Version 2.16": [[149, "version-2-16"]], "Version 2.15": [[149, "version-2-15"]], "Version 2.14": [[149, "version-2-14"]], "Version 2.13": [[149, "version-2-13"]], "Version 2.12": [[149, "version-2-12"]], "Version 2.11": [[149, "version-2-11"]], "Version 2.10": [[149, "version-2-10"]], "Version 2.9": [[149, "version-2-9"]], "Version 2.8": [[149, "version-2-8"]], "Version 2.7": [[149, "version-2-7"]], "Version 2.6": [[149, "version-2-6"]], "Version 2.5": [[149, "version-2-5"]], "Version 2.4": [[149, "version-2-4"]], "Version 2.3": [[149, "version-2-3"]], "Version 2.2": [[149, "version-2-2"]], "Version 2.1": [[149, "version-2-1"]], "Version 2.0": [[149, "version-2-0"]], "Version 1.12": [[149, "version-1-12"]], "Version 1.11": [[149, "version-1-11"]], "Version 1.10": [[149, "version-1-10"]], "Version 1.9": [[149, "version-1-9"]], "Version 1.8": [[149, "version-1-8"]], "Version 1.7": [[149, "version-1-7"]], "Version 1.6": [[149, "version-1-6"]], "Version 1.5": [[149, "version-1-5"]], "Version 1.4": [[149, "version-1-4"]], "Version 1.3": [[149, "version-1-3"]], "Version 1.2": [[149, "version-1-2"]], "Version 1.1": [[149, "version-1-1"]], "Version 1.0": [[149, "version-1-0"]], "Development": [[150, "development"]], "2-Qubit Clifford Group Decomposition": [[151, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[151, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[151, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[151, "dump-on-a-pickle-file"]], "Load": [[151, "load"]], "Count elements": [[151, "count-elements"]], "2Q": [[151, "q"]], "1Q": [[151, "id1"]], "A way to work out the inverse of sequences": [[151, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[151, "design-condition"]], "How to make your own benchmark?": [[152, "how-to-make-your-own-benchmark"]], "Devices": [[153, "devices"]], "Benchmarking IQM Spark": [[154, "benchmarking-iqm-spark"]], "Connect to the backend": [[154, "connect-to-the-backend"], [155, "connect-to-the-backend"]], "GHZ state fidelity": [[154, "ghz-state-fidelity"], [155, "ghz-state-fidelity"], [158, "ghz-state-fidelity"]], "Quantum Volume": [[154, "quantum-volume"], [155, "quantum-volume"], [158, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[154, "circuit-layer-operations-per-second-clops"], [155, "circuit-layer-operations-per-second-clops"], [157, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[154, "clifford-randomized-benchmarking"], [158, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[154, "interleaved-randomized-benchmarking-irb"], [162, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[154, "q-score"], [155, "q-score"], [164, "q-score"]], "Summary": [[154, "summary"], [155, "summary"]], "Benchmarking IQM Star": [[155, "benchmarking-iqm-star"]], "As one can see, the label \u201c0\u201d is reserved for the resontor. So it is advised to define the qubit indices in the layout of interest starting from 1.": [[155, "as-one-can-see-the-label-0-is-reserved-for-the-resontor-so-it-is-advised-to-define-the-qubit-indices-in-the-layout-of-interest-starting-from-1"]], "Clifford Randomized Benchmarking (RB)": [[156, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[156, "choose-or-define-a-backend"], [157, "choose-or-define-a-backend"], [158, "choose-or-define-a-backend"], [161, "choose-or-define-a-backend"], [162, "choose-or-define-a-backend"], [163, "choose-or-define-a-backend"], [164, "choose-or-define-a-backend"], [165, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[156, "set-iqm-token-if-using-resonance"], [158, "set-iqm-token-if-using-resonance"], [160, "set-iqm-token-if-using-resonance"], [163, "set-iqm-token-if-using-resonance"], [164, "set-iqm-token-if-using-resonance"], [165, "set-iqm-token-if-using-resonance"], [166, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[156, "randomized-benchmarking-configuration"]], "Run the experiment": [[156, "run-the-experiment"], [157, "run-the-experiment"], [163, "run-the-experiment"], [164, "run-the-experiment"], [165, "run-the-experiment"], [166, "run-the-experiment"]], "Perform the analysis": [[156, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[157, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[157, "clops-configuration"]], "Perform Analysis": [[157, "perform-analysis"], [164, "perform-analysis"], [165, "perform-analysis"], [166, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[157, "list-all-the-keys-in-the-attributes-of-the-dataset"], [163, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[157, "the-observation-object-contains-the-benchmark-results"], [163, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[157, "generate-plots"], [163, "generate-plots"], [165, "generate-plots"], [166, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[158, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[158, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[158, "mirror-randomized-benchmarking"]], "CLOPS": [[158, "clops"]], "QScore": [[158, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[159, "greenbergerhornezeilinger-ghz-state-fidelity"], [160, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[159, "definition-of-the-benchmark-configuration"], [160, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[159, "running-the-benchmark"], [160, "running-the-benchmark"]], "Accessing the results": [[159, "accessing-the-results"], [160, "accessing-the-results"]], "Compressive Gate Set Tomography (GST)": [[161, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[161, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[161, "execute-gst-experiment-s"]], "Examine the results": [[161, "examine-the-results"]], "High level results stored at result.observations": [[161, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[161, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[161, "plots"]], "Creating a custom gate set": [[161, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[161, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[161, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[162, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[162, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[162, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[162, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[162, "id1"]], "Run the experiment - 2Q gate IRB": [[162, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[162, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[162, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[163, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[163, "mirror-rb-configuration"]], "Analyze the results": [[163, "analyze-the-results"]], "Qscore Configuration": [[164, "qscore-configuration"]], "Quantum Volume (QV)": [[165, "quantum-volume-qv"]], "Quantum Volume Configuration": [[165, "quantum-volume-configuration"], [166, "quantum-volume-configuration"]], "QV on Deneb": [[166, "qv-on-deneb"]], "Choose Deneb as a backend": [[166, "choose-deneb-as-a-backend"]], "Inspect the circuits": [[166, "inspect-the-circuits"]], "Examples": [[167, "examples"]], "IQM Benchmarks": [[168, "iqm-benchmarks"], [170, "iqm-benchmarks"]], "Contents": [[168, "contents"]], "Indices and tables": [[168, "indices-and-tables"]], "License": [[169, "license"]], "Installation (latest release)": [[170, "installation-latest-release"]], "Optional dependencies": [[170, "optional-dependencies"]], "Development installation (latest changes)": [[170, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[170, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[170, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[170, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.compressive_gst"], [20, "module-iqm.benchmarks.compressive_gst.compressive_gst"], [26, "module-iqm.benchmarks.compressive_gst.gst_analysis"], [38, "module-iqm.benchmarks.entanglement"], [39, "module-iqm.benchmarks.entanglement.ghz"], [54, "module-iqm.benchmarks.logging_config"], [55, "module-iqm.benchmarks.optimization"], [56, "module-iqm.benchmarks.optimization.qscore"], [68, "module-iqm.benchmarks.quantum_volume"], [69, "module-iqm.benchmarks.quantum_volume.clops"], [75, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [87, "module-iqm.benchmarks.randomized_benchmarking"], [88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [89, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [94, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [99, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [108, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [113, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [131, "module-iqm.benchmarks.readout_mitigation"], [135, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "compressivegst (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST"]], "add_configuration_to_dataset() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst static method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.analysis_function"]], "execute() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.execute"]], "generate_meas_circuits() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.generate_meas_circuits"]], "gstconfiguration (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration"]], "batch_size (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.batch_size"]], "benchmark (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.benchmark"]], "bootstrap_samples (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.bootstrap_samples"]], "convergence_criteria (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.convergence_criteria"]], "from_init (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.from_init"]], "gate_labels (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_labels"]], "gate_set (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_set"]], "max_inits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_inits"]], "max_iterations (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_iterations"]], "model_computed_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_config"]], "model_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.num_circuits"]], "opt_method (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.opt_method"]], "qubit_layouts (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.qubit_layouts"]], "rank (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rank"]], "seq_len_list (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.seq_len_list"]], "shots (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.shots"]], "create_predefined_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[23, "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set"]], "parse_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[24, "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set"]], "parse_layouts() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[25, "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "bootstrap_errors() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[27, "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors"]], "dataframe_to_figure() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[28, "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure"]], "dataset_counts_to_mgst_format() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[29, "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format"]], "generate_basis_labels() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[30, "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels"]], "generate_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[31, "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results"]], "generate_non_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[32, "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results"]], "generate_unit_rank_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[33, "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results"]], "mgst_analysis() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[34, "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis"]], "pandas_results_to_observations() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[35, "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations"]], "result_str_to_floats() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[36, "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats"]], "run_mgst_wrapper() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[37, "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[42, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[43, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[44, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[45, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[46, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[47, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[48, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[49, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[50, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[51, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[52, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[53, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[54, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[55, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[56, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "qpu_topology (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qpu_topology"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[59, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[60, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[61, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[62, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[63, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[64, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[65, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[66, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[67, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[69, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[72, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[73, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[74, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[75, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[78, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[79, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[80, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[81, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[82, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[83, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[84, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[85, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[86, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[87, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[89, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[92, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[94, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[97, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[99, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[102, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[103, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[104, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[105, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[107, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[108, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[109, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[110, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[111, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[112, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[113, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[114, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[115, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[116, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[117, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[118, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[119, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[120, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[121, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[122, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[123, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[124, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[125, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[126, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[127, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[128, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[129, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[130, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[131, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[132, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[132, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[133, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[134, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[135, "module-iqm.benchmarks.utils"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[136, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[137, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[138, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[139, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[140, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[141, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[142, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[143, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[144, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[145, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[146, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[147, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[148, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})