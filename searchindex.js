Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.coherence", "api/iqm.benchmarks.coherence.coherence", "api/iqm.benchmarks.coherence.coherence.CoherenceBenchmark", "api/iqm.benchmarks.coherence.coherence.CoherenceConfiguration", "api/iqm.benchmarks.coherence.coherence.calculate_probabilities", "api/iqm.benchmarks.coherence.coherence.coherence_analysis", "api/iqm.benchmarks.coherence.coherence.exp_decay", "api/iqm.benchmarks.coherence.coherence.fit_coherence_model", "api/iqm.benchmarks.coherence.coherence.plot_coherence", "api/iqm.benchmarks.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "api/iqm.benchmarks.compressive_gst.compressive_gst.validate_gate_context", "api/iqm.benchmarks.compressive_gst.gst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "api/iqm.benchmarks.compressive_gst.gst_analysis.process_bootstrap_samples", "api/iqm.benchmarks.compressive_gst.gst_analysis.process_layout", "api/iqm.benchmarks.compressive_gst.gst_analysis.process_plots", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.entanglement.graph_states", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.direct_rb", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits", "api/iqm.benchmarks.randomized_benchmarking.eplg", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.bootstrap_counts", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.extract_fidelities", "api/iqm.benchmarks.utils.generate_state_tomography_circuits", "api/iqm.benchmarks.utils.get_Pauli_expectation", "api/iqm.benchmarks.utils.get_active_qubits", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.get_measurement_mapping", "api/iqm.benchmarks.utils.get_neighbors_of_edges", "api/iqm.benchmarks.utils.get_tomography_matrix", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.median_with_uncertainty", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.random_hamiltonian_path", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.split_into_disjoint_pairs", "api/iqm.benchmarks.utils.split_sequence_in_chunks", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "api/iqm.benchmarks.utils_plots", "api/iqm.benchmarks.utils_plots.GraphPositions", "api/iqm.benchmarks.utils_plots.calculate_node_radii", "api/iqm.benchmarks.utils_plots.draw_graph_edges", "api/iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph", "api/iqm.benchmarks.utils_shadows", "api/iqm.benchmarks.utils_shadows.CUE", "api/iqm.benchmarks.utils_shadows.get_local_shadow", "api/iqm.benchmarks.utils_shadows.get_negativity", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_coherence", "examples/example_eplg", "examples/example_experiment_all", "examples/example_ghz", "examples/example_graphstate", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.coherence.rst", "api/iqm.benchmarks.coherence.coherence.rst", "api/iqm.benchmarks.coherence.coherence.CoherenceBenchmark.rst", "api/iqm.benchmarks.coherence.coherence.CoherenceConfiguration.rst", "api/iqm.benchmarks.coherence.coherence.calculate_probabilities.rst", "api/iqm.benchmarks.coherence.coherence.coherence_analysis.rst", "api/iqm.benchmarks.coherence.coherence.exp_decay.rst", "api/iqm.benchmarks.coherence.coherence.fit_coherence_model.rst", "api/iqm.benchmarks.coherence.coherence.plot_coherence.rst", "api/iqm.benchmarks.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.validate_gate_context.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.process_bootstrap_samples.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.process_layout.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.process_plots.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.entanglement.graph_states.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.rst", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers.rst", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph.rst", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.bootstrap_counts.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.extract_fidelities.rst", "api/iqm.benchmarks.utils.generate_state_tomography_circuits.rst", "api/iqm.benchmarks.utils.get_Pauli_expectation.rst", "api/iqm.benchmarks.utils.get_active_qubits.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.get_measurement_mapping.rst", "api/iqm.benchmarks.utils.get_neighbors_of_edges.rst", "api/iqm.benchmarks.utils.get_tomography_matrix.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.median_with_uncertainty.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.random_hamiltonian_path.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.split_into_disjoint_pairs.rst", "api/iqm.benchmarks.utils.split_sequence_in_chunks.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "api/iqm.benchmarks.utils_plots.rst", "api/iqm.benchmarks.utils_plots.GraphPositions.rst", "api/iqm.benchmarks.utils_plots.calculate_node_radii.rst", "api/iqm.benchmarks.utils_plots.draw_graph_edges.rst", "api/iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths.rst", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph.rst", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph.rst", "api/iqm.benchmarks.utils_shadows.rst", "api/iqm.benchmarks.utils_shadows.CUE.rst", "api/iqm.benchmarks.utils_shadows.get_local_shadow.rst", "api/iqm.benchmarks.utils_shadows.get_negativity.rst", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_coherence.ipynb", "examples/example_eplg.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_graphstate.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.coherence", "iqm.benchmarks.coherence.coherence", "iqm.benchmarks.coherence.coherence.CoherenceBenchmark", "iqm.benchmarks.coherence.coherence.CoherenceConfiguration", "iqm.benchmarks.coherence.coherence.calculate_probabilities", "iqm.benchmarks.coherence.coherence.coherence_analysis", "iqm.benchmarks.coherence.coherence.exp_decay", "iqm.benchmarks.coherence.coherence.fit_coherence_model", "iqm.benchmarks.coherence.coherence.plot_coherence", "iqm.benchmarks.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "iqm.benchmarks.compressive_gst.compressive_gst.validate_gate_context", "iqm.benchmarks.compressive_gst.gst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "iqm.benchmarks.compressive_gst.gst_analysis.process_bootstrap_samples", "iqm.benchmarks.compressive_gst.gst_analysis.process_layout", "iqm.benchmarks.compressive_gst.gst_analysis.process_plots", "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.entanglement.graph_states", "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "iqm.benchmarks.entanglement.graph_states.generate_graph_state", "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "iqm.benchmarks.entanglement.graph_states.negativity_analysis", "iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.direct_rb", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits", "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits", "iqm.benchmarks.randomized_benchmarking.eplg", "iqm.benchmarks.randomized_benchmarking.eplg.eplg", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis", "iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.bootstrap_counts", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.extract_fidelities", "iqm.benchmarks.utils.generate_state_tomography_circuits", "iqm.benchmarks.utils.get_Pauli_expectation", "iqm.benchmarks.utils.get_active_qubits", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.get_measurement_mapping", "iqm.benchmarks.utils.get_neighbors_of_edges", "iqm.benchmarks.utils.get_tomography_matrix", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.median_with_uncertainty", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.random_hamiltonian_path", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.remove_directed_duplicates_to_list", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.split_into_disjoint_pairs", "iqm.benchmarks.utils.split_sequence_in_chunks", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "iqm.benchmarks.utils_plots", "iqm.benchmarks.utils_plots.GraphPositions", "iqm.benchmarks.utils_plots.calculate_node_radii", "iqm.benchmarks.utils_plots.draw_graph_edges", "iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths", "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "iqm.benchmarks.utils_plots.rx_to_nx_graph", "iqm.benchmarks.utils_shadows", "iqm.benchmarks.utils_shadows.CUE", "iqm.benchmarks.utils_shadows.get_local_shadow", "iqm.benchmarks.utils_shadows.get_negativity", "iqm.benchmarks.utils_shadows.local_shadow_tomography", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (CRB)", "Circuit Layer Operations Per Second (CLOPS)", "Coherence experiments", "Error Per Layered Gate (EPLG)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Graph State Bipartite Entanglement", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 25, 26, 29, 92, 135, 138, 139, 150, 156, 164, 166, 171, 184, 214, 215, 217, 218, 219, 222, 230, 231], "python": [1, 209], "librari": [1, 117, 130, 135, 164, 209, 211, 223], "suit": [1, 231], "qcvv": [1, 212, 229, 231], "subpackag": [1, 19, 28, 48, 77, 90, 109, 110, 115, 122, 128, 133], "modul": [1, 5, 15, 19, 28, 48, 76, 77, 90, 109, 110, 115, 122, 128, 133, 229], "gener": [2, 3, 18, 21, 29, 30, 31, 41, 44, 45, 46, 48, 50, 51, 55, 56, 57, 58, 59, 60, 64, 65, 67, 79, 87, 92, 95, 98, 107, 113, 117, 120, 121, 124, 125, 130, 131, 135, 138, 139, 142, 143, 149, 153, 154, 155, 160, 163, 170, 171, 175, 185, 198, 201, 202, 205, 209, 214, 215, 216, 219, 220, 221, 222, 223, 224, 230], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 29, 30, 31, 33, 49, 50, 51, 63, 64, 65, 78, 79, 80, 91, 92, 93, 97, 98, 99, 111, 112, 113, 116, 117, 118, 123, 124, 125, 129, 130, 131, 134, 135, 136, 153, 166, 167, 197, 198, 209, 211, 212, 230, 231], "inherit": [2, 3, 5, 15, 20, 29, 49, 63, 78, 91, 97, 111, 116, 123, 129, 134, 166, 197], "benchmarkbas": [2, 4, 231], "abc": [2, 3, 5, 6, 20, 29, 49, 63, 78, 91, 97, 111, 116, 123, 129, 134], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 29, 31, 33, 49, 51, 63, 65, 78, 80, 91, 93, 97, 99, 111, 112, 116, 117, 123, 125, 129, 130, 134, 135, 231], "pydant": [2, 4, 20, 22, 29, 31, 49, 51, 63, 65, 78, 80, 91, 93, 97, 99, 111, 112, 116, 117, 123, 125, 129, 130, 134, 135], "main": [2, 7, 8, 20, 29, 30, 49, 63, 78, 91, 97, 111, 116, 123, 129, 134, 214], "basemodel": [2, 4, 20, 29, 49, 63, 78, 91, 97, 111, 116, 123, 129, 134], "backend": [3, 6, 21, 27, 29, 30, 31, 32, 34, 38, 50, 51, 58, 64, 67, 70, 71, 72, 73, 74, 79, 87, 92, 93, 98, 99, 107, 113, 118, 120, 121, 124, 125, 127, 131, 136, 138, 139, 149, 153, 154, 161, 162, 164, 165, 167, 168, 169, 173, 174, 178, 184, 186, 190, 191, 194, 200, 201, 203, 209, 212, 221, 231], "iqmbackendbas": [3, 6, 21, 30, 50, 64, 67, 79, 92, 98, 113, 118, 120, 121, 124, 131, 136, 138, 139, 149, 153, 154, 155, 161, 162, 164, 165, 168, 173, 178, 184, 190, 194, 201], "configur": [3, 4, 6, 21, 22, 30, 31, 33, 34, 35, 37, 38, 41, 43, 44, 45, 46, 47, 50, 51, 64, 65, 79, 80, 92, 93, 98, 99, 106, 112, 113, 117, 118, 124, 125, 130, 131, 135, 136, 209, 230, 231], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 23, 30, 31, 50, 51, 53, 60, 64, 65, 79, 80, 82, 92, 93, 98, 99, 112, 113, 117, 118, 124, 125, 130, 131, 135, 136, 147, 167, 198, 199, 209, 210, 214, 215, 230], "The": [3, 6, 7, 12, 16, 17, 18, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 58, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 79, 80, 83, 89, 92, 93, 95, 98, 99, 101, 102, 104, 105, 112, 113, 117, 118, 119, 121, 124, 125, 126, 127, 130, 131, 135, 136, 137, 138, 148, 149, 159, 163, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 188, 189, 192, 193, 194, 195, 198, 200, 202, 203, 208, 214, 215, 216, 221, 222, 223, 227, 228, 230, 231], "implement": [3, 5, 6, 50, 51, 54, 221], "all": [3, 4, 6, 7, 16, 17, 18, 21, 27, 31, 37, 39, 41, 45, 46, 50, 51, 60, 62, 64, 79, 86, 92, 96, 98, 100, 101, 102, 105, 106, 112, 113, 117, 118, 124, 130, 131, 136, 153, 159, 161, 162, 167, 174, 175, 180, 181, 188, 189, 209, 212, 214, 215, 216, 218, 220, 221, 224, 226, 227, 228, 230, 231], "from": [3, 6, 7, 11, 21, 30, 31, 37, 38, 41, 43, 47, 50, 51, 58, 60, 61, 66, 75, 83, 89, 95, 96, 98, 100, 105, 107, 125, 135, 137, 145, 159, 160, 163, 167, 169, 171, 174, 176, 177, 178, 179, 181, 185, 187, 188, 189, 190, 196, 200, 201, 202, 205, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231], "which": [3, 6, 7, 8, 21, 24, 25, 26, 28, 31, 33, 38, 39, 47, 50, 51, 58, 61, 65, 68, 79, 80, 88, 90, 92, 93, 94, 98, 108, 112, 113, 114, 117, 120, 121, 130, 131, 132, 135, 136, 138, 139, 141, 149, 153, 159, 163, 167, 174, 208, 214, 215, 217, 221, 222, 223, 230, 231], "thei": [3, 17, 40, 223], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 28, 30, 31, 50, 51, 53, 64, 65, 79, 80, 92, 93, 98, 99, 112, 113, 117, 118, 120, 121, 124, 125, 130, 131, 135, 136, 138, 139, 167, 184, 198, 209, 214, 215, 220, 221, 223, 227], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 214, 215, 217, 219, 220, 221, 223], "abstract": [3, 6, 223], "classmethod": [3, 6, 7], "name": [3, 6, 7, 8, 16, 17, 18, 27, 31, 32, 33, 46, 62, 70, 71, 72, 73, 74, 87, 95, 107, 117, 127, 130, 135, 145, 152, 153, 169, 174, 175, 178, 198, 200, 202, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 227, 230], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 27, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 118, 119, 120, 121, 124, 126, 127, 131, 132, 136, 137, 138, 139, 140, 141, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 211, 212], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 21, 29, 30, 47, 50, 60, 64, 65, 73, 74, 77, 79, 87, 90, 92, 93, 98, 99, 100, 107, 112, 113, 117, 118, 124, 130, 131, 135, 136, 137, 150, 156, 161, 162, 163, 184, 186, 194, 195, 196, 209, 212, 214, 215, 216, 217, 219, 220, 222, 224, 225, 227, 230, 231], "full": [3, 28, 29, 31, 45, 93, 99, 223, 231], "given": [3, 6, 7, 11, 21, 31, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 67, 72, 73, 74, 77, 79, 80, 85, 90, 92, 98, 105, 106, 127, 128, 137, 154, 155, 176, 180, 181, 185, 191, 193, 198, 200, 206, 207, 214, 215, 221, 223, 231], "static": [3, 6, 21, 30, 50, 64, 79, 92, 98, 113, 118, 124, 131, 136, 198], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 22, 23, 26, 27, 31, 32, 33, 37, 44, 45, 46, 50, 51, 53, 54, 64, 65, 67, 70, 71, 72, 73, 74, 75, 80, 82, 83, 84, 87, 89, 92, 93, 95, 96, 98, 99, 100, 103, 104, 105, 107, 112, 113, 117, 118, 120, 121, 124, 125, 127, 130, 131, 135, 136, 137, 138, 139, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 167, 168, 169, 171, 173, 174, 175, 176, 178, 181, 182, 183, 184, 186, 188, 189, 194, 196, 198, 199, 200, 201, 202, 206, 208, 211, 212, 214, 220, 221, 223, 225, 227], "check": [3, 34, 35, 86, 106, 211, 214, 215, 221], "whether": [3, 4, 22, 31, 44, 51, 65, 80, 86, 87, 89, 92, 93, 98, 99, 106, 107, 112, 117, 121, 130, 154, 159, 160, 163, 171, 175, 184, 206, 208, 221, 224, 230], "requir": [3, 80, 175, 211, 221, 223, 230, 231], "ar": [3, 4, 7, 11, 16, 17, 18, 23, 27, 30, 31, 32, 34, 37, 39, 40, 41, 47, 50, 51, 60, 61, 75, 98, 99, 124, 139, 159, 165, 174, 175, 176, 179, 181, 182, 198, 202, 208, 209, 211, 214, 215, 217, 218, 221, 223, 228, 230, 231], "met": 3, "valid": [3, 33, 35, 124, 164, 165, 229, 231], "dictionari": [3, 4, 7, 11, 22, 23, 31, 38, 41, 43, 44, 45, 46, 51, 64, 65, 68, 70, 71, 72, 73, 74, 75, 80, 83, 92, 93, 96, 98, 99, 100, 103, 104, 105, 112, 117, 118, 120, 121, 125, 127, 130, 135, 136, 138, 139, 148, 149, 153, 154, 155, 157, 161, 162, 168, 169, 171, 173, 174, 175, 176, 179, 181, 182, 183, 191, 194, 196, 198, 199, 200, 201, 206, 208, 216, 219, 220, 223, 224], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 214, 223, 230], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 27, 31, 39, 40, 41, 51, 58, 61, 65, 70, 71, 72, 80, 87, 92, 93, 98, 99, 112, 117, 120, 121, 125, 127, 130, 135, 138, 139, 143, 148, 149, 152, 153, 154, 155, 157, 159, 161, 162, 164, 167, 171, 175, 184, 186, 188, 194, 198, 200, 202, 206, 208, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 231], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 30, 31, 46, 50, 51, 64, 65, 79, 80, 92, 93, 98, 99, 112, 113, 117, 118, 124, 125, 130, 131, 135, 136, 195, 198, 219, 223, 227, 230], "shot": [4, 22, 23, 31, 51, 65, 71, 72, 80, 93, 98, 99, 112, 117, 125, 130, 135, 161, 162, 167, 168, 194, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231], "int": [4, 9, 11, 16, 17, 21, 22, 23, 26, 27, 31, 32, 33, 34, 38, 39, 41, 43, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 87, 89, 92, 93, 95, 98, 99, 100, 103, 106, 107, 112, 117, 118, 120, 121, 125, 127, 130, 135, 136, 137, 138, 139, 140, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 167, 168, 171, 172, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 205, 206, 207, 208, 219, 221, 223], "256": [4, 65, 80, 93, 99, 112, 117, 125, 130, 135, 216, 220, 225], "max_gates_per_batch": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135, 161, 162, 194, 214, 215, 216, 219, 220, 222, 225, 227, 231], "max_circuits_per_batch": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135, 161, 162, 194, 209, 219, 222, 231], "calset_id": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135, 161, 162, 194, 214, 215, 216, 217, 219, 220, 222, 224, 225, 226, 227, 231], "routing_method": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 120, 121, 125, 130, 135, 138, 139, 184, 214, 215, 216, 219, 220, 222, 225, 227, 231], "liter": [4, 22, 31, 51, 65, 70, 71, 72, 80, 93, 99, 112, 117, 120, 121, 125, 130, 135, 138, 139, 176, 190, 198, 206, 208], "basic": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 120, 121, 125, 130, 135, 138, 139], "lookahead": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 120, 121, 125, 130, 135], "stochast": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 120, 121, 125, 130, 135], "sabr": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 120, 121, 125, 130, 135, 184, 214, 215, 216, 220, 221, 223, 227, 231], "physical_layout": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135, 190, 214, 215, 216, 219, 220, 222, 225, 227, 231], "fix": [4, 22, 31, 38, 44, 51, 65, 80, 93, 99, 112, 117, 118, 125, 130, 135, 136, 138, 154, 161, 163, 190, 209, 214, 215, 216, 220, 223, 227, 231], "batch": [4, 17, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135, 161, 162, 190, 191, 194, 209, 216, 219, 220, 221, 222, 223, 224, 225, 227, 231], "use_dd": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135, 219, 222], "bool": [4, 22, 31, 37, 44, 51, 65, 80, 86, 87, 89, 92, 93, 98, 99, 106, 107, 112, 117, 121, 125, 130, 135, 159, 160, 163, 167, 171, 174, 175, 184, 200], "fals": [4, 22, 31, 37, 51, 65, 80, 93, 99, 107, 112, 117, 121, 125, 130, 135, 159, 160, 163, 167, 171, 174, 184, 200, 214, 216, 219, 220, 223, 227], "dd_strategi": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135, 219, 222], "ddstrategi": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135], "number": [4, 21, 23, 31, 32, 33, 37, 39, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 65, 70, 71, 72, 77, 79, 80, 82, 84, 85, 87, 89, 90, 93, 98, 99, 106, 107, 109, 112, 117, 118, 120, 121, 125, 130, 135, 136, 137, 138, 139, 140, 149, 150, 153, 154, 155, 156, 161, 162, 167, 168, 171, 172, 173, 183, 185, 186, 192, 194, 198, 200, 201, 207, 208, 214, 215, 220, 221, 223], "us": [4, 6, 9, 16, 22, 27, 28, 29, 30, 31, 35, 37, 38, 40, 41, 50, 51, 53, 54, 58, 60, 61, 62, 65, 67, 70, 71, 72, 73, 74, 76, 80, 87, 89, 92, 93, 99, 117, 121, 127, 135, 137, 152, 159, 167, 169, 175, 194, 198, 199, 202, 206, 208, 209, 211, 212, 214, 215, 218, 221, 223, 224, 228, 230], "circuit": [4, 7, 10, 15, 16, 17, 21, 29, 30, 31, 32, 33, 37, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 64, 67, 79, 80, 83, 90, 92, 93, 98, 99, 100, 103, 106, 107, 112, 113, 117, 118, 120, 121, 124, 125, 130, 131, 135, 136, 137, 138, 139, 140, 148, 149, 150, 153, 154, 155, 156, 161, 162, 164, 167, 168, 172, 173, 175, 177, 179, 184, 186, 191, 194, 196, 208, 209, 211, 212, 216, 220, 221, 222, 224, 225, 227, 228, 229], "default": [4, 6, 12, 22, 31, 37, 51, 65, 70, 71, 72, 80, 93, 98, 99, 107, 112, 117, 120, 121, 125, 130, 135, 138, 139, 149, 155, 159, 160, 163, 167, 171, 174, 175, 190, 194, 200, 206, 208, 209, 214, 216, 220, 223, 224, 226], "i": [4, 6, 7, 21, 22, 24, 28, 30, 31, 32, 33, 35, 37, 38, 41, 51, 55, 58, 60, 62, 65, 70, 71, 72, 75, 79, 80, 86, 88, 89, 92, 93, 94, 98, 99, 106, 107, 108, 112, 113, 114, 117, 120, 121, 125, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 144, 149, 157, 159, 160, 163, 164, 167, 171, 174, 175, 176, 184, 190, 194, 198, 199, 200, 202, 206, 207, 208, 209, 211, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231], "2": [4, 21, 31, 32, 33, 35, 45, 61, 80, 86, 99, 106, 117, 121, 125, 135, 154, 160, 172, 174, 192, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231], "8": [4, 31, 160, 192, 211, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 227, 230, 231], "maximum": [4, 39, 71, 72, 73, 74, 89, 125, 161, 162, 194, 201, 209, 214, 215, 223], "gate": [4, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 50, 51, 55, 59, 60, 61, 68, 80, 90, 92, 93, 99, 109, 110, 113, 115, 117, 118, 120, 121, 122, 123, 124, 125, 128, 130, 131, 133, 135, 138, 139, 148, 149, 152, 153, 154, 155, 157, 159, 161, 162, 164, 172, 173, 175, 184, 194, 199, 201, 202, 206, 208, 209, 214, 221, 225, 228, 229, 231], "per": [4, 27, 31, 70, 71, 72, 90, 93, 99, 112, 117, 121, 122, 123, 135, 137, 138, 139, 140, 161, 162, 167, 168, 194, 207, 209, 223, 228, 229, 231], "option": [4, 29, 51, 61, 70, 71, 72, 80, 87, 98, 99, 117, 118, 120, 125, 127, 130, 135, 138, 139, 148, 149, 152, 154, 155, 157, 159, 161, 162, 164, 171, 175, 184, 186, 188, 194, 198, 199, 200, 202, 206, 208, 209, 212, 218, 219, 220, 221, 222, 223, 229], "calibr": [4, 6, 51, 61, 98, 99, 125, 161, 162, 167, 168, 174, 194, 201, 202, 209, 219, 220, 221, 224, 226], "id": [4, 194, 217, 220, 224, 226], "last": [4, 31], "avail": [4, 41, 230, 231], "qiskit": [4, 6, 22, 31, 38, 80, 93, 99, 117, 120, 121, 130, 135, 138, 139, 164, 184, 194, 209, 211, 212, 214, 223], "rout": [4, 93, 99, 117, 120, 121, 135, 138, 139, 184, 220, 221, 223, 227], "transpil": [4, 16, 22, 30, 50, 51, 53, 54, 80, 92, 93, 99, 117, 120, 121, 135, 138, 139, 153, 154, 164, 168, 173, 184, 191, 209, 212, 214, 217, 220, 221, 223, 227], "physic": [4, 31, 33, 51, 65, 80, 92, 93, 98, 99, 103, 117, 121, 130, 135, 138, 190, 220, 223, 227, 229], "layout": [4, 8, 11, 16, 17, 31, 33, 35, 44, 45, 46, 51, 62, 65, 72, 80, 92, 93, 98, 99, 117, 118, 121, 127, 135, 136, 161, 162, 169, 174, 184, 190, 198, 202, 209, 214, 215, 220, 221, 223, 225, 227], "constrain": [4, 190, 231], "dure": [4, 13, 22, 32, 64, 98, 113, 131, 222], "select": [4, 31, 51, 80, 99, 105, 125, 202, 209, 221, 223], "qubit": [4, 8, 9, 11, 16, 17, 19, 21, 22, 23, 26, 27, 30, 31, 32, 33, 35, 38, 41, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 72, 73, 74, 77, 79, 80, 82, 83, 89, 90, 92, 93, 98, 99, 103, 107, 109, 112, 113, 117, 118, 120, 121, 124, 125, 127, 130, 135, 136, 137, 138, 139, 149, 150, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 167, 169, 172, 174, 175, 177, 179, 184, 186, 190, 191, 194, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 229], "initi": [4, 6, 25, 28, 29, 31, 37, 44, 47, 51, 76, 169, 214, 223], "allow": [4, 209, 214, 215, 221, 231], "ani": [4, 8, 31, 32, 37, 39, 40, 41, 44, 45, 46, 53, 54, 64, 73, 74, 96, 98, 118, 130, 136, 140, 159, 161, 162, 168, 189, 193, 198, 211, 223, 230, 231], "other": [4, 23, 30, 37, 44, 51, 175, 194, 208, 209, 214, 215, 217, 223, 230, 231], "accord": [4, 37, 50, 56, 57, 79, 117, 149, 190, 191, 201, 211, 220, 223, 227], "final": [4, 6, 40, 61, 93, 98, 99, 103, 117, 121, 135, 179, 184, 190, 191, 194, 209, 214], "measur": [4, 23, 26, 27, 28, 29, 31, 37, 38, 41, 43, 44, 46, 50, 51, 53, 70, 71, 72, 79, 82, 92, 93, 98, 99, 103, 112, 117, 120, 121, 130, 135, 163, 168, 173, 175, 176, 179, 190, 191, 194, 208, 212, 214, 215, 221, 223], "boolean": [4, 51, 221], "flag": [4, 51, 200], "determin": [4, 31, 51, 221, 230], "enabl": [4, 192, 194, 209], "dynam": [4, 194, 209], "decoupl": [4, 194, 209], "model_config": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135], "classvar": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135], "configdict": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135], "model": [4, 22, 26, 31, 37, 44, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135, 152, 158, 159, 214, 223], "should": [4, 6, 8, 10, 22, 31, 50, 51, 58, 65, 75, 76, 80, 93, 99, 112, 117, 125, 130, 135, 154, 194, 209, 220, 221, 223, 230], "conform": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135], "config": [4, 22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135], "thi": [5, 6, 15, 16, 21, 26, 31, 32, 41, 44, 45, 46, 50, 51, 58, 62, 86, 93, 106, 125, 160, 169, 198, 210, 211, 212, 213, 214, 215, 217, 219, 221, 223, 228, 230, 231], "defin": [5, 6, 7, 33, 34, 46, 58, 60, 93, 153, 200, 209, 212, 214, 215, 221, 230, 231], "function": [5, 6, 20, 21, 24, 26, 29, 30, 31, 36, 42, 44, 45, 46, 47, 49, 63, 64, 69, 75, 78, 79, 83, 88, 91, 92, 94, 97, 98, 108, 111, 113, 114, 116, 118, 119, 123, 124, 126, 129, 131, 132, 134, 136, 141, 142, 144, 145, 147, 148, 151, 152, 158, 160, 166, 170, 194, 195, 197, 204, 209, 223], "benchmarkobservationidentifi": [5, 8, 43, 209, 216, 218, 220, 224, 227], "benchmarkobserv": [5, 7, 26, 43, 45, 62, 73, 74, 209, 216, 218, 220, 224, 227], "benchmarkrunresult": [5, 6, 7, 12, 21, 24, 30, 42, 50, 52, 64, 69, 79, 88, 92, 94, 98, 108, 113, 114, 118, 119, 124, 126, 131, 132, 136, 141, 209], "benchmarkanalysisresult": [5, 6, 12, 21, 24, 30, 42, 50, 52, 64, 69, 79, 88, 92, 94, 98, 108, 113, 114, 118, 119, 124, 126, 131, 132, 136, 141, 209], "kwarg": 6, "A": [6, 7, 9, 10, 11, 13, 16, 17, 21, 23, 24, 25, 26, 27, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 79, 88, 92, 94, 96, 98, 104, 105, 108, 113, 114, 117, 118, 120, 121, 127, 135, 136, 138, 139, 141, 148, 149, 152, 154, 155, 161, 162, 171, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 190, 192, 193, 194, 196, 198, 200, 201, 207, 214, 221, 223, 230, 231], "run": [6, 7, 8, 10, 21, 24, 29, 30, 31, 33, 37, 42, 43, 45, 50, 51, 52, 64, 69, 79, 83, 88, 92, 93, 94, 98, 108, 113, 114, 118, 119, 124, 126, 131, 132, 136, 141, 209, 212, 214, 215, 220, 223, 228, 231], "cortex": [6, 11], "experi": [6, 21, 22, 23, 24, 26, 27, 37, 38, 41, 43, 47, 62, 64, 69, 70, 71, 72, 73, 74, 79, 87, 88, 92, 94, 95, 98, 99, 101, 102, 108, 113, 114, 117, 121, 127, 131, 132, 136, 141, 151, 158, 159, 163, 165, 175, 200, 220, 228, 229], "In": [6, 117, 214, 215, 219, 223, 230, 231], "order": [6, 31, 37, 61, 62, 152, 160, 174, 175, 209, 219, 221, 231], "write": [6, 167, 211, 212, 230], "new": [6, 7, 11, 186, 209, 212, 214, 215, 223, 231], "recommend": [6, 223, 230, 231], "deriv": [6, 230], "baseclass": 6, "addition": [6, 221], "custom": [6, 80, 99, 124, 125, 198, 214, 215, 220, 226, 227, 231], "analysi": [6, 7, 12, 21, 22, 24, 30, 31, 36, 40, 42, 44, 45, 64, 69, 73, 74, 79, 88, 92, 94, 95, 98, 108, 113, 114, 118, 119, 124, 126, 131, 132, 136, 141, 209, 214, 223], "can": [6, 10, 16, 31, 40, 46, 51, 68, 77, 79, 90, 98, 117, 169, 174, 202, 209, 214, 215, 217, 219, 221, 223, 227, 231], "give": [6, 30, 31, 83, 192, 209, 214, 218, 221, 223, 230], "pointer": 6, "analysis_funct": [6, 21, 30, 50, 64, 79, 92, 98, 113, 118, 124, 131, 136, 212], "field": [6, 230], "accept": [6, 31, 87, 209, 230], "analysisresult": [6, 7, 21, 24, 50, 52, 79, 88, 92, 94, 98, 108, 113, 114, 118, 119, 124, 126, 131, 132, 136, 141, 209, 212], "its": [6, 127, 145, 186, 209, 214, 215, 230], "input": [6, 11, 33, 45, 66, 75, 93, 99, 118, 124, 140, 160, 164, 165, 169, 180, 183, 185, 190, 192, 193, 207, 218, 220, 223], "result": [6, 7, 8, 10, 11, 12, 21, 24, 29, 30, 31, 37, 39, 40, 41, 42, 43, 44, 45, 46, 62, 77, 79, 82, 88, 89, 90, 92, 94, 98, 99, 106, 107, 108, 113, 114, 118, 119, 124, 126, 131, 132, 136, 141, 150, 156, 158, 190, 194, 209, 212, 214, 215, 220, 227, 230, 231], "onli": [6, 12, 32, 93, 99, 117, 174, 186, 198, 207, 214, 215, 217, 221, 223, 225, 230], "pass": [6, 12, 140, 162, 169, 184, 194, 212, 219, 220], "through": [6, 12, 54, 230], "iqmbackend": [6, 98, 118, 136, 161, 162], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 30, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 62, 64, 73, 74, 79, 92, 95, 98, 113, 118, 124, 131, 136, 142, 144, 159, 196, 209, 212, 216, 219, 220, 223, 224, 227], "overridden": 6, "an": [6, 16, 17, 26, 28, 29, 30, 31, 39, 42, 43, 47, 50, 51, 52, 53, 79, 92, 121, 125, 131, 132, 160, 164, 168, 169, 176, 185, 199, 200, 205, 209, 211, 212, 214, 215, 221, 223, 230, 231], "xarrai": [6, 7, 11, 13, 21, 30, 37, 38, 41, 43, 46, 47, 50, 53, 64, 79, 92, 98, 113, 118, 124, 131, 136, 196, 209, 212], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 23, 26, 33, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 50, 52, 53, 54, 62, 64, 73, 74, 75, 118, 136, 149, 161, 162, 174, 186, 198, 199, 202, 209, 214, 215, 223, 227, 228, 230, 231], "inform": [6, 10, 61, 64, 76, 202, 230], "necessari": [6, 207, 214, 221, 231], "analys": 6, "calibration_set_id": [6, 218, 219, 222], "uuid": 6, "calibrationsetid": 6, "latest": [6, 194, 221, 229], "set": [6, 16, 17, 21, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 44, 45, 46, 47, 50, 66, 80, 93, 98, 99, 138, 140, 146, 149, 159, 173, 176, 180, 190, 194, 209, 211, 214, 215, 221, 222, 224, 228, 229, 231], "runresult": [6, 7, 10, 21, 24, 50, 52, 79, 88, 92, 94, 98, 108, 113, 114, 131, 132, 136, 141, 209, 212], "analyz": [6, 10, 26, 50, 52, 172, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 231], "run_index": [6, 220, 227], "1": [6, 27, 31, 35, 41, 45, 65, 80, 84, 105, 117, 120, 121, 135, 138, 139, 149, 151, 154, 160, 174, 175, 184, 206, 207, 208, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 231], "intern": [6, 17], "perform": [6, 30, 41, 44, 45, 73, 74, 80, 93, 99, 152, 163, 175, 184, 208, 214, 223, 228, 230, 231], "make": [6, 98, 194, 209, 210, 214, 229, 230, 231], "shallow": 6, "copi": [6, 171, 211, 223, 230], "produc": [6, 29, 33, 39, 41, 61, 99, 223, 231], "therefor": [6, 86, 106], "chang": [6, 31, 209, 229, 230], "data": [6, 7, 11, 26, 29, 30, 31, 36, 37, 41, 46, 50, 51, 53, 61, 70, 73, 74, 95, 107, 125, 143, 146, 152, 158, 167, 174, 201, 202, 212, 220, 221, 223, 227], "just": [6, 214, 223], "structur": [6, 120, 214, 215], "arrai": [6, 25, 26, 29, 37, 38, 39, 41, 44, 47, 92, 112, 117, 121, 124, 125, 130, 135, 159, 160, 165, 169, 199, 206, 223], "index": [6, 26, 50, 58, 60, 61, 92, 98, 117, 138, 227, 229], "construct": [6, 28, 51, 55, 206], "updat": [6, 30, 31, 42, 73, 74, 75, 92, 93, 209, 214, 215, 220, 231], "core": 7, "circuit_contain": 7, "plot": [7, 27, 29, 30, 31, 42, 46, 50, 52, 62, 70, 71, 72, 73, 74, 107, 127, 159, 197, 202, 209, 212, 214, 215, 216, 220, 221, 224, 231], "dict": [7, 11, 23, 27, 31, 32, 33, 41, 44, 45, 46, 53, 54, 64, 68, 70, 71, 72, 73, 74, 75, 82, 83, 89, 92, 95, 96, 98, 100, 103, 104, 105, 117, 118, 120, 121, 127, 135, 136, 137, 138, 139, 148, 149, 150, 153, 154, 155, 156, 157, 159, 161, 162, 163, 168, 169, 171, 173, 174, 175, 176, 179, 181, 182, 183, 188, 189, 191, 194, 196, 198, 199, 200, 201, 206, 208, 212], "matplotlib": [7, 27, 46, 202, 212, 214, 215, 222], "figur": [7, 14, 27, 40, 46, 62, 70, 71, 72, 87, 95, 107, 127, 159, 200, 202, 212, 219, 220, 222, 223], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 26, 30, 42, 43, 45, 50, 52, 62, 73, 74, 95, 159, 183, 209, 214, 215, 216, 218, 219, 220, 221, 222, 224, 226, 227], "list": [7, 9, 11, 13, 16, 17, 18, 21, 22, 23, 26, 27, 31, 32, 33, 34, 35, 38, 39, 41, 43, 44, 45, 46, 50, 51, 53, 54, 58, 60, 61, 62, 66, 67, 68, 73, 74, 79, 81, 82, 83, 85, 87, 89, 92, 93, 98, 100, 101, 102, 103, 104, 106, 107, 117, 118, 120, 121, 135, 136, 137, 138, 139, 140, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 177, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 208, 209, 211, 215, 218, 219, 221, 222, 223, 227, 230, 231], "object": [7, 8, 9, 10, 16, 17, 18, 26, 27, 33, 37, 43, 46, 50, 52, 62, 98, 118, 136, 143, 161, 162, 178, 188, 189, 194, 198, 200, 202, 223, 227, 230], "dataclass": [7, 8, 10], "store": [7, 8, 10, 30, 42, 62, 198, 209, 217, 231], "consist": [7, 28, 209, 221, 230], "map": [7, 30, 46, 51, 58, 61, 68, 73, 74, 82, 83, 93, 99, 174, 179, 184, 187, 190, 191, 198, 200, 203, 209, 221], "kei": [7, 23, 41, 46, 70, 71, 72, 75, 82, 89, 92, 98, 103, 117, 120, 121, 127, 135, 138, 139, 149, 173, 175, 176, 179, 181, 182, 183, 191, 194, 201, 208, 211, 219, 222, 223, 227], "valu": [7, 8, 23, 25, 26, 31, 41, 44, 50, 51, 54, 58, 68, 70, 71, 72, 75, 82, 83, 89, 92, 93, 117, 120, 121, 127, 135, 138, 139, 149, 151, 160, 173, 174, 175, 176, 179, 182, 183, 184, 191, 194, 199, 201, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227], "pair": [7, 59, 61, 64, 68, 70, 71, 72, 73, 74, 92, 125, 127, 165, 174, 180, 187, 192, 214, 219], "plot_nam": 7, "plot_al": [7, 212, 214, 215, 217, 218, 219, 220, 221, 223, 226, 227], "from_run_result": 7, "creat": [7, 21, 24, 30, 32, 37, 40, 46, 50, 51, 58, 59, 79, 83, 88, 92, 94, 98, 108, 113, 114, 131, 132, 136, 141, 202, 210, 212, 231], "identifi": [8, 9, 11, 37, 43, 44, 64, 98, 118, 136, 152, 159, 161, 162, 164, 188, 194, 196, 209, 214, 216, 218, 219, 220, 221, 222, 223, 224, 227, 230], "uncertainti": [8, 26, 31, 54, 70, 71, 72, 127, 183, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227], "singl": [8, 10, 13, 16, 18, 22, 31, 44, 45, 46, 51, 62, 65, 80, 81, 92, 93, 98, 99, 121, 144, 149, 174, 176, 194, 199, 202, 205, 209, 214, 215, 221, 223, 231], "string": [8, 9, 11, 17, 18, 23, 26, 37, 44, 75, 163, 175, 176, 181, 188, 206, 219, 231], "qubit_indic": [9, 16, 216, 218, 219, 220, 222, 224, 227], "eas": 9, "indic": [9, 21, 22, 23, 26, 27, 46, 71, 72, 73, 74, 98, 103, 127, 182, 191, 198, 200, 202, 206, 221, 230], "wa": [9, 23, 34, 40, 71, 72, 86, 106, 163, 214, 215, 218, 230], "properti": [9, 16, 17, 19, 21], "string_identifi": [9, 214, 220, 221, 223], "version": [9, 142, 211, 214, 215, 218, 230, 231], "enough": [10, 221], "those": [10, 23, 98, 103, 190, 214, 215, 223, 230], "count": [11, 23, 31, 37, 38, 41, 43, 45, 47, 50, 51, 52, 75, 82, 83, 89, 98, 100, 137, 150, 156, 163, 168, 169, 171, 173, 176, 182, 188, 189, 196, 206, 209, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227], "add": [11, 17, 21, 30, 50, 60, 64, 79, 92, 98, 113, 118, 124, 131, 136, 149, 195, 209, 211, 223, 230, 231], "job": [11, 92, 96, 98, 118, 136, 161, 162, 188, 212, 216, 217, 219, 220, 224, 225, 227], "If": [11, 27, 31, 35, 37, 40, 41, 51, 80, 117, 121, 124, 125, 135, 157, 163, 174, 176, 181, 198, 199, 202, 208, 214, 215, 219, 221, 223, 225, 230], "same": [11, 17, 35, 61, 135, 174, 214, 215, 220, 221, 223, 230], "alreadi": [11, 216], "present": 11, "old": 11, "both": [11, 30, 46, 99, 157, 214, 217, 219, 223, 224, 231], "ad": [11, 25, 209, 216, 217, 219, 220, 222, 223, 224, 225, 227], "togeth": [11, 231], "bitstr": [11, 23, 75, 82, 83, 84, 89, 105, 163, 176, 182], "current": [11, 37, 38, 41, 43, 44, 46, 47, 51, 92, 167, 174, 221, 223, 231], "instanc": [11, 16, 17, 30, 42, 53, 54, 72, 87, 127, 174, 209, 223], "xr": [11, 13, 21, 45, 50, 53, 54, 62, 64, 73, 74, 79, 92, 95, 98, 113, 118, 124, 131, 136, 159, 196, 212], "merg": [11, 13], "where": [11, 16, 17, 23, 31, 33, 34, 37, 47, 51, 139, 179, 202, 209, 214, 215, 221, 223, 230], "dataset_merg": 11, "recurs": 13, "minim": [13, 31, 51, 58, 60, 67, 158, 192, 221], "size": [13, 31, 51, 58, 77, 79, 87, 89, 157, 192, 193, 205, 212, 214, 220, 221, 226, 231], "dateset": 13, "fig": [14, 62, 212, 221], "show": [14, 202, 212, 214, 215, 217, 220, 221, 223], "close": [14, 31, 212], "easili": [15, 209, 231], "interact": [15, 209], "quantum": [15, 30, 31, 32, 33, 50, 51, 53, 55, 56, 57, 58, 59, 79, 90, 92, 93, 97, 98, 99, 100, 103, 106, 108, 138, 149, 150, 154, 155, 156, 167, 168, 172, 173, 175, 177, 179, 184, 186, 194, 198, 202, 208, 209, 219, 221, 223, 228, 229, 231], "circuitgroup": [15, 16, 50, 209], "benchmarkcircuit": [15, 18, 30, 209], "circuit_group": [16, 219, 222], "group": [16, 17, 21, 73, 74, 113, 210, 214, 219, 222, 229], "purpos": [16, 17, 230], "typic": [16, 17, 214, 215], "repres": [16, 17, 23, 32, 67, 68, 95, 107, 180, 182, 185, 187, 202, 230], "exampl": [16, 142, 192, 209, 210, 212, 213, 218, 221, 223, 229, 230, 231], "insid": [16, 209], "get_circuit_group_by_nam": 16, "get": [16, 29, 31, 145, 176, 178, 198, 220, 223, 225], "desir": [16, 17, 30, 185], "doe": [16, 51, 230], "exist": [16, 18, 198, 209, 214, 215, 231], "group_nam": [16, 219], "integ": [16, 17, 31, 33, 51, 67, 68, 98, 103, 138, 180, 187, 192], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 21, 23, 26, 27, 30, 31, 32, 33, 37, 39, 40, 41, 44, 45, 47, 51, 54, 58, 66, 70, 71, 72, 73, 74, 82, 83, 87, 89, 92, 93, 95, 98, 103, 107, 117, 118, 125, 127, 136, 152, 153, 154, 155, 157, 159, 161, 168, 174, 184, 185, 191, 192, 194, 198, 200, 201, 208], "qubit_layout": [16, 17, 31, 32, 33, 34, 38, 39, 41, 43, 45, 46, 50, 53, 54, 58, 60, 61, 62, 202, 214, 220, 221, 223], "qiskit_iqm": [17, 51, 209, 212, 214, 215, 218, 219, 220, 222], "iqm_circuit": 17, "iqmcircuit": [17, 32, 33, 50, 55, 56, 57, 58, 59, 92, 98, 103, 136, 138, 139, 148, 149, 153, 154, 155, 157, 161, 162, 164, 168, 172, 173, 175, 177, 179, 184, 186, 191, 194, 209], "It": [17, 117, 125, 211, 214, 215, 223, 231], "common": [17, 147, 230], "activ": [17, 177, 186, 208, 231], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 230, 231], "found": [17, 174, 214, 215, 221, 222, 231], "benchmark_circuit": [18, 219, 222], "get_benchmark_circuits_by_nam": [18, 219], "request": 18, "otherwis": [18, 230], "estim": [19, 21, 29, 31, 37, 39, 41, 47, 48, 50, 51, 53, 54, 64, 65, 77, 79, 93, 98, 113, 115, 118, 122, 124, 127, 131, 133, 136, 137, 163, 176, 209, 214, 215, 220, 221, 224], "comput": [19, 21, 37, 41, 50, 52, 58, 82, 83, 98, 100, 101, 102, 104, 148, 150, 156, 182, 183, 202, 207, 211, 214, 215, 219, 221, 223, 229, 230, 231], "reson": [19, 21, 209, 218, 221, 222, 224, 231], "coherencebenchmark": [20, 22, 218], "benchmark_definit": [20, 22, 29, 31, 49, 51, 63, 65, 78, 80, 91, 93, 97, 99, 111, 112, 116, 117, 123, 125, 129, 130, 134, 135, 212, 223], "coherenceconfigur": [20, 21, 218], "backend_arg": [21, 64, 79, 92, 98, 113, 118, 120, 121, 124, 131, 136, 138, 139, 149, 153, 154, 155, 161, 162, 164, 165, 168, 173, 201], "correspond": [21, 24, 26, 32, 68, 70, 71, 72, 75, 79, 88, 90, 92, 93, 94, 98, 103, 107, 108, 113, 114, 117, 118, 119, 120, 121, 124, 125, 126, 127, 131, 132, 135, 136, 137, 138, 139, 141, 149, 159, 163, 168, 175, 191, 194, 201, 203, 208, 209, 214, 215, 216, 219, 220, 221, 222, 224, 225, 227], "generate_coherence_circuit": 21, "nqubit": [21, 23], "quantumcircuit": [21, 31, 32, 33, 50, 55, 56, 57, 58, 59, 67, 79, 92, 98, 103, 118, 120, 121, 136, 139, 148, 149, 153, 154, 155, 161, 162, 168, 172, 175, 177, 179, 184, 186, 191, 194, 206, 208, 209, 211, 212, 223], "delai": [21, 22, 26, 27, 167, 209, 218], "time": [21, 22, 23, 25, 26, 27, 30, 31, 37, 92, 95, 96, 98, 118, 136, 161, 162, 195, 209, 214, 215, 217, 220, 221, 223], "appli": [21, 22, 44, 51, 55, 60, 68, 92, 99, 209, 220, 221, 223, 225, 230], "add_all_meta_to_dataset": [21, 64, 79, 92, 98, 118, 124, 131, 136], "metadata": [21, 30, 50, 62, 64, 79, 92, 96, 98, 113, 118, 124, 131, 136, 189], "variabl": [21, 25, 33, 64, 79, 92, 98, 113, 118, 124, 131, 136, 152, 212, 221, 223, 231], "checkerboard_groups_from_coupl": 21, "coupling_map": [21, 61, 184, 214, 215, 219, 222], "assign": [21, 32, 92, 93, 117, 118, 125, 135, 171, 175, 208, 209, 214, 215, 217, 220], "b": [21, 152, 207, 211, 214, 230], "checkerboard": 21, "pattern": [21, 46, 121], "infer": [21, 75, 214], "connect": [21, 51, 60, 165, 202, 209, 221], "graph": [21, 48, 58, 60, 61, 63, 64, 65, 66, 67, 69, 72, 79, 80, 81, 82, 83, 84, 86, 87, 89, 127, 180, 185, 198, 200, 201, 202, 203, 209, 214, 215, 221, 228, 229, 231], "assum": [21, 51, 62, 160, 176, 230], "grid": [21, 221], "like": [21, 25, 43, 169, 211, 214, 215, 217, 231], "edg": [21, 60, 61, 66, 68, 82, 83, 84, 149, 180, 185, 187, 200, 201, 202, 209, 214, 215, 219, 221], "group_b": 21, "group_a": 21, "1000": [22, 51, 80, 99, 168, 212, 214, 215, 218, 220, 221, 223, 226, 227], "iqm_client": [22, 31, 51, 65, 80, 93, 99, 112, 117, 125, 130, 135, 218], "float": [22, 23, 25, 26, 27, 30, 31, 61, 70, 71, 72, 73, 74, 75, 79, 81, 82, 84, 85, 86, 87, 89, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 117, 120, 121, 127, 130, 135, 137, 138, 139, 149, 150, 151, 152, 156, 159, 163, 164, 167, 169, 173, 174, 176, 181, 182, 183, 198, 199, 207], "optimize_sqg": [22, 51, 80, 92, 93, 99, 184, 214, 215, 218, 220, 227, 231], "true": [22, 31, 37, 51, 53, 80, 93, 98, 99, 117, 121, 159, 163, 174, 175, 184, 211, 214, 215, 218, 219, 220, 221, 223, 224, 226, 227, 231], "qiskit_optim_level": [22, 51, 80, 93, 99, 117, 120, 121, 135, 138, 139, 184, 214, 215, 218, 219, 220, 225, 227, 231], "3": [22, 31, 45, 51, 80, 93, 99, 106, 117, 160, 174, 192, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231], "coherence_exp": [22, 23, 26, 27, 218], "t1": [22, 23, 26, 27, 209, 218], "qubits_to_plot": [22, 218], "optim": [22, 29, 31, 39, 41, 44, 45, 46, 51, 92, 93, 99, 117, 120, 121, 135, 138, 139, 184, 209, 214, 215, 220, 221, 223, 226, 227, 231], "level": [22, 31, 43, 51, 80, 93, 99, 117, 120, 121, 135, 138, 139, 209, 214, 215, 220, 221, 227], "specifi": [22, 31, 32, 33, 37, 47, 51, 66, 93, 98, 99, 117, 118, 120, 121, 125, 130, 135, 136, 138, 139, 149, 157, 161, 162, 165, 173, 176, 180, 181, 182, 190, 192, 194, 199, 206, 209, 214, 215, 218, 219, 225, 231], "either": [22, 31, 117, 152, 157, 169, 173, 174, 182, 198, 202, 206, 208, 211, 221, 223, 230, 231], "echo": 22, "calcul": [23, 25, 60, 81, 87, 103, 146, 172, 195, 199, 209, 214, 215], "0": [23, 31, 50, 58, 60, 61, 79, 86, 99, 117, 120, 135, 138, 139, 149, 160, 174, 184, 190, 192, 207, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231], "each": [23, 27, 37, 38, 41, 44, 47, 60, 62, 68, 71, 72, 87, 101, 102, 103, 107, 117, 127, 130, 135, 137, 139, 143, 160, 163, 168, 173, 174, 199, 202, 206, 208, 216, 219, 220, 221, 224, 225, 230, 231], "provid": [23, 26, 40, 51, 85, 198, 199, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 230], "outcom": [23, 37, 38, 44, 47, 168, 214, 215, 223], "being": [23, 26, 45, 68, 70, 86, 92, 98, 103, 106, 107, 117, 120, 121, 135, 137, 138, 139, 149, 150, 156, 173, 175, 181, 182, 194, 201, 208, 214, 215, 221], "occurr": 23, "total": [23, 51, 65, 125, 146, 211, 214, 215, 217, 221], "t": [25, 27, 35, 72, 198, 209, 222, 230], "c": [25, 26, 27, 211, 214, 219, 222, 230], "exponenti": [25, 31, 151, 214], "decai": [25, 26, 27, 151, 159, 209, 214], "evalu": [25, 144, 201, 214, 215], "amplitud": [25, 26, 27, 130, 151, 214, 220, 224, 231], "constant": [25, 214], "dictat": 25, "rate": [25, 214], "offset": [25, 26, 27, 130, 151, 214, 220, 224, 231], "prob": 26, "ndarrai": [26, 37, 38, 39, 41, 44, 47, 70, 92, 151, 152, 158, 181, 199, 205, 206, 207, 208], "fit": [26, 27, 40, 43, 45, 130, 142, 143, 144, 146, 151, 152, 158, 159, 209, 223, 230], "probabl": [26, 27, 37, 38, 44, 47, 101, 102, 104, 105, 117, 120, 121, 135, 138, 139, 149, 150, 156, 163, 182, 214, 215, 225, 231], "along": [26, 37, 47, 230], "were": [26, 160, 163, 196, 209], "t2_echo": [26, 27, 218], "t_fit": [26, 27], "t_fit_err": [26, 27], "backend_nam": [27, 70, 71, 73, 74, 87, 107, 216, 219, 222, 225, 227], "qubit_set": [27, 149, 152], "qubit_prob": 27, "timestamp": [27, 70, 71, 72, 73, 74, 87, 107, 127, 200, 216, 225], "qubit_to_plot": 27, "subplot": 27, "amplitude_list": 27, "involv": [27, 92, 214, 215], "p": [27, 151, 214], "differ": [27, 30, 33, 37, 50, 95, 135, 198, 209, 214, 217, 218, 221, 223, 227, 228, 230, 231], "label": [27, 31, 32, 33, 41, 51, 70, 71, 72, 75, 93, 107, 127, 130, 138, 148, 155, 159, 175, 176, 184, 190, 206, 208, 209, 211, 212, 214, 217, 221], "error": [27, 29, 31, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 53, 80, 98, 99, 104, 122, 123, 125, 159, 169, 202, 209, 214, 220, 221, 223, 228, 229, 231], "specif": [27, 131, 184, 198, 211, 213, 214, 215, 220, 223, 227, 228, 230], "logic": 27, "filenam": 27, "save": [27, 37, 40, 223], "compress": [28, 29, 30, 31, 36, 42, 209, 228, 229, 231], "gst": [28, 30, 31, 37, 38, 41, 42, 43, 44, 45, 209, 228, 229], "self": [28, 30, 35, 155, 212], "character": [28, 30, 214, 229], "process": [28, 29, 37, 44, 45, 46, 99, 209, 214, 215, 216, 219, 220, 224, 225, 227], "matric": [28, 39, 46, 209, 222, 223], "well": [28, 30, 41, 42], "parametr": [28, 37, 83, 90, 92, 93, 214, 215, 220, 223], "state": [28, 31, 37, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 67, 69, 71, 72, 74, 150, 156, 175, 209, 212, 223, 228, 229, 230, 231], "povm": [28, 37, 39, 44, 46, 47], "low": [28, 223], "rank": [28, 31, 39, 41, 45, 209], "matrix": [28, 29, 39, 45, 46, 70, 140, 181, 205, 207, 211, 214, 215], "reduc": [28, 31, 51, 186], "post": [28, 99, 209, 216, 219, 220, 224, 225, 227], "overhead": 28, "tomographi": [29, 36, 44, 45, 46, 65, 70, 71, 72, 73, 74, 175, 204, 208, 228, 229, 231], "follow": [29, 46, 121, 214, 215, 219, 221, 223, 230, 231], "step": 29, "said": 29, "convers": [29, 230], "ideal": [29, 100, 137, 214, 215, 222, 223], "numpi": [29, 38, 39, 41, 171, 199, 206, 208, 211, 214, 215, 218, 219, 220, 223, 224], "mgst": [29, 31, 38, 45, 47, 209, 223, 230, 231], "first": [29, 31, 37, 47, 60, 79, 92, 117, 135, 221, 223, 225, 227, 228], "gaug": [29, 39, 41, 44, 45, 46, 223], "target": [29, 31, 37, 41, 44, 47, 67, 184, 223], "pygsti": [29, 37], "rerun": [29, 221], "bootstrap": [29, 31, 37, 40, 41, 44, 45, 65, 71, 72, 171, 209, 223], "bar": [29, 37, 40, 41, 159, 212, 217, 223], "tabl": [29, 31, 39, 40, 41, 46, 214, 223], "reconstruct": [29, 31, 37, 45, 47, 181, 222, 223], "compressivegst": [29, 31, 223], "gstconfigur": [29, 30, 33, 223], "spam": [30, 37, 40, 43, 44, 45, 46, 214], "robust": [30, 214], "generate_meas_circuit": 30, "random": [30, 31, 50, 51, 65, 70, 71, 72, 80, 92, 109, 111, 116, 117, 118, 121, 125, 129, 130, 134, 135, 139, 147, 149, 154, 155, 171, 185, 205, 206, 208, 209, 211, 215, 221, 223, 226, 228, 229, 231], "distribut": [30, 104, 105, 182, 211, 214, 215, 230], "among": [30, 121, 194, 214, 231], "depth": [30, 31, 51, 55, 56, 57, 58, 67, 80, 98, 107, 117, 118, 120, 121, 125, 135, 136, 138, 139, 151, 154, 158, 161, 163, 214, 215, 216, 219, 220, 221, 224, 225], "rang": [30, 196, 209, 211, 212, 214, 215, 216, 218, 220, 222, 223, 224, 225, 231], "l_min": 30, "l_max": 30, "seq_len_list": [30, 31], "No": 30, "than": [30, 51, 214, 215, 221, 225, 231], "need": [30, 31, 50, 92, 169, 214, 215, 219, 221, 223, 231], "axactli": 30, "describ": [30, 230], "meaning": [30, 77, 79, 90, 98, 99], "untranspiled_circuit": 30, "untranspil": [30, 98, 103, 120, 121, 153, 184, 209], "circuit_gen_transp_tim": 30, "took": 30, "transpiled_circuit": [30, 162, 168, 219], "add_configuration_to_dataset": [30, 50], "sourc": [30, 223, 229, 230], "further": [30, 50, 209], "storag": [30, 50, 209], "routin": [30, 50, 51, 80, 99, 152], "1024": [31, 51], "gate_set": [31, 32, 33, 35, 223], "gate_context": [31, 35, 223], "num_circuit": [31, 37, 47, 93, 99, 214, 215, 217, 220, 223, 227, 231], "gate_label": [31, 223], "14": [31, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231], "from_init": 31, "max_init": 31, "20": [31, 125, 211, 212, 216, 219, 220, 223, 224, 229], "opt_method": 31, "auto": 31, "max_iter": 31, "convergence_criteria": 31, "4": [31, 45, 92, 160, 175, 181, 211, 212, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231], "1e": [31, 223], "05": [31, 218, 219, 220, 224, 225], "batch_siz": 31, "bootstrap_sampl": [31, 223], "verbose_level": 31, "parallel_execut": [31, 112, 117, 130, 214, 216, 219, 220, 224, 231], "ghzbenchmark": [31, 49, 51, 214, 215, 220, 221], "sequenc": [31, 38, 44, 51, 65, 66, 67, 70, 80, 93, 98, 99, 112, 117, 118, 120, 121, 125, 130, 135, 136, 137, 149, 150, 153, 154, 155, 156, 161, 175, 180, 183, 184, 190, 192, 193, 200, 206, 208, 214, 216, 220, 223, 224], "e": [31, 32, 33, 37, 44, 47, 51, 117, 130, 135, 160, 163, 175, 176, 196, 209, 214, 215, 217, 220, 221, 223, 227], "g": [31, 51, 117, 130, 135, 160, 163, 175, 185, 196, 209, 211, 214, 215, 220, 221, 223, 227], "meant": [31, 33, 51], "cirucuit": 31, "one": [31, 93, 125, 160, 163, 212, 214, 215, 221, 223, 225, 230, 231], "predefin": [31, 32, 198, 202, 221, 223], "1qxyi": [31, 223], "2qxycz": [31, 223], "2qxycz_extend": [31, 223], "3qxycz": [31, 223], "tomograph": [31, 181], "complet": [31, 223], "mean": [31, 65, 70, 71, 72, 86, 163, 173, 202, 211, 214, 215, 223, 230], "vacuum": 31, "abl": [31, 219], "prepar": [31, 46, 47, 50, 67, 120, 175, 205, 208, 212, 214, 221, 223, 230], "form": [31, 149, 219, 230], "frame": [31, 223], "space": [31, 163], "practic": [31, 231], "suffici": [31, 207, 221], "condit": [31, 86, 106, 207, 221, 230], "combin": [31, 214, 215, 230], "local": [31, 65, 206, 208, 221], "pauli": [31, 41, 44, 46, 75, 135, 137, 138, 139, 140, 175, 176, 181, 211, 223], "eigenst": 31, "union": [31, 40, 169, 223, 230], "how": [31, 50, 210, 213, 223, 228, 229, 230, 231], "mani": [31, 50, 92, 209, 221], "guidelin": [31, 209], "choos": [31, 51, 79, 215, 221, 230], "At": 31, "least": [31, 44, 99, 214, 215, 223, 230], "50": [31, 65, 212, 214, 215, 219, 220, 222, 223, 224, 225, 230], "400": [31, 211, 216, 220, 222], "two": [31, 117, 121, 135, 149, 174, 209, 211, 212, 214, 221, 223], "6": [31, 39, 45, 160, 211, 216, 218, 219, 220, 221, 222, 224, 225, 230, 231], "2000": [31, 215, 223], "three": [31, 214, 215], "9": [31, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 230, 231], "expect": [31, 44, 75, 82, 83, 89, 117, 120, 121, 135, 138, 139, 149, 176, 181, 209, 214], "grow": 31, "linearli": [31, 51], "krau": [31, 37, 39, 41, 47, 223], "coher": [31, 50, 51, 53, 199, 202, 209, 214, 215, 220, 221, 228, 229], "dim": 31, "control": [31, 209, 221, 223, 230], "maxim": [31, 59, 214, 215], "middl": 31, "cutoff": 31, "below": [31, 44, 117, 214, 215, 221, 223, 230, 231], "possibl": [31, 51, 185, 221, 223, 227, 230], "algorithm": [31, 44, 47, 51, 60, 149, 198, 202, 214, 215, 221], "point": [31, 159, 183, 221], "tri": [31, 125, 201], "limit": [31, 211, 230], "amount": [31, 48, 65, 195, 196, 209], "retri": 31, "gd": 31, "sfn": 31, "gradient": 31, "descent": 31, "saddl": 31, "free": [31, 230], "newton": 31, "respect": [31, 51, 70, 117, 120, 135, 137, 175, 201, 209, 214], "automat": [31, 40, 135, 138, 139, 219, 221, 231], "iter": [31, 169, 182], "while": [31, 167, 221, 223, 230], "second": [31, 37, 47, 90, 92, 117, 218, 228, 229], "when": [31, 99, 198, 209, 214, 217, 221, 231], "termin": [31, 230, 231], "multipli": [31, 84], "cost": [31, 214, 215], "threshold": [31, 86, 87, 99, 106, 107, 214, 215], "nois": [31, 214, 223], "consid": [31, 93, 99, 125, 190, 206, 218], "success": [31, 86, 106, 214, 215], "10": [31, 93, 125, 163, 201, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 231], "usual": [31, 41], "sensibl": 31, "rel": 31, "between": [31, 59, 60, 139, 160, 167, 202, 214, 215, 217, 221, 223], "consecut": [31, 51], "hyperparamt": 31, "converg": [31, 44, 223], "behaviour": 31, "smaller": [31, 50, 51, 58, 214, 221, 231], "runtim": [31, 209], "lead": [31, 209, 221, 223], "errat": 31, "jump": 31, "lack": 31, "repeat": [31, 214, 215], "fake": [31, 209], "via": [31, 50, 51, 214, 215, 221, 223], "verbos": 31, "output": [31, 50, 76, 100, 101, 102, 103, 104, 105, 106, 160, 167, 192, 209, 211, 214, 215, 219, 223, 227, 231], "parallel": [31, 51, 60, 68, 90, 112, 117, 121, 125, 130, 154, 161, 163, 172, 209, 214, 215, 220, 221, 223, 224], "num_qubit": [32, 33, 54, 55, 56, 57, 59, 79, 80, 98, 137, 150, 156, 198, 215, 218, 219, 222, 223], "transipil": 32, "so": [32, 40, 209, 214, 215, 223], "stage": [32, 209], "mai": [32, 211, 214, 215, 217, 230], "actual": [32, 214, 215, 218, 223], "gate_labels_dict": [32, 33], "rx_pi_2": [32, 33], "pi": [32, 33, 211, 220, 224], "rotat": [32, 33, 41, 211, 212], "around": [32, 33, 214, 215], "x": [32, 33, 37, 47, 65, 84, 144, 146, 159, 175, 176, 198, 205, 209, 211, 212, 219, 222, 223, 225, 227], "axi": [32, 33, 37, 47, 159, 209], "num_gat": [32, 33], "handl": [33, 231], "correct": [34, 107, 137, 167, 168, 209, 214, 215, 223], "properli": [34, 35, 39, 41, 43, 209, 214, 215], "rais": [34, 35, 124, 125, 140, 149, 157, 165, 167, 176, 181, 184, 190, 198, 199, 208, 223], "context": [35, 107, 209], "ha": [35, 51, 80, 160, 214, 215, 216, 223, 225, 230, 231], "length": [35, 112, 125, 130, 137, 140, 153, 154, 155, 211, 214, 216, 220, 223, 224], "don": [35, 209, 230], "overlap": [35, 66, 68, 209], "valueerror": [35, 124, 140, 149, 157, 165, 176, 181, 184, 190, 198, 199, 208], "invalid": 35, "code": [36, 214, 215, 223, 229, 230, 231], "y": [37, 38, 47, 175, 176, 198, 211], "k": [37, 44, 47, 211, 214, 215, 217, 225, 227], "rho": [37, 44, 47, 207, 223], "target_mdl": [37, 44], "resampl": [37, 171], "repetit": 37, "newli": 37, "sampl": [37, 44, 50, 65, 70, 71, 72, 83, 89, 99, 105, 117, 120, 121, 124, 125, 130, 135, 137, 138, 139, 140, 149, 153, 154, 155, 171, 223], "non": [37, 40, 43, 45, 46, 66, 151, 214, 215, 230], "corresp": 37, "num_povm": [37, 47], "subarrai": [37, 47], "oper": [37, 41, 47, 90, 109, 164, 173, 209, 211, 221, 223, 228, 229], "enumer": [37, 47, 174, 221, 222, 223], "3d": [37, 39, 41, 223], "cpt": [37, 47], "superoper": [37, 47, 223], "standard": [37, 39, 41, 46, 47, 87, 99, 102, 111, 159, 173, 209, 223, 231], "basi": [37, 41, 44, 46, 47, 164, 184, 211, 214, 215, 223, 230], "stack": [37, 47], "els": [37, 211, 219], "x_arrai": 37, "tensor": [37, 44, 209], "e_arrai": 37, "rho_arrai": 37, "df_g_arrai": 37, "qualiti": [37, 40, 43, 44, 45, 50, 214, 215], "df_o_arrai": 37, "turn": [38, 40, 214], "obtain": [38, 211, 214, 215, 230, 231], "format": [38, 39, 40, 41, 43, 45, 174, 214, 230], "2d": [38, 39, 44], "j": [38, 44, 211, 214, 215, 221, 223], "column": [38, 44], "df_g": [39, 41, 43, 44], "datafram": [39, 40, 41, 43, 45, 46], "x_opt": [39, 41], "e_opt": 39, "rho_opt": 39, "bootstrap_result": [39, 40, 41], "max_ev": 39, "arbitrari": [39, 125], "panda": [39, 40, 41, 43], "after": [39, 41, 154, 231], "conta": 39, "element": [39, 44, 46, 79], "densiti": [39, 70, 117, 120, 121, 135, 138, 139, 149, 159, 181, 207, 214, 215, 222], "optmiz": 39, "eigenvalu": [39, 45, 46], "choi": [39, 45, 46], "df_g_evals_fin": [39, 46], "df_g_final": [39, 41, 45, 46], "df_o": [40, 43, 44], "also": [40, 41, 169, 209, 219, 221, 223, 227, 230, 231], "metric": [40, 41, 45, 46, 93, 174, 199, 202, 214, 215, 223, 224], "df_o_fin": [40, 45, 46], "k_target": [41, 47], "includ": [41, 46, 87, 95, 171, 200, 209, 214, 215, 217, 220, 221, 230], "hamiltonian": [41, 125, 185, 201, 209, 223], "fidel": [41, 45, 46, 50, 51, 52, 53, 54, 60, 61, 62, 93, 109, 110, 113, 115, 118, 122, 124, 125, 127, 128, 131, 133, 136, 137, 152, 159, 174, 199, 201, 202, 209, 223, 228, 229, 231], "diamond": [41, 45, 46, 223], "distanc": [41, 45, 46, 51, 60, 223], "4d": 41, "df_g_rotat": 41, "hamiltonian_param": 41, "convert": [43, 45, 140, 203, 211], "high": [43, 51, 214, 215, 221], "simpl": [43, 212, 214, 231], "observation_list": 43, "y_sampl": 44, "attr": [44, 216, 217, 219, 222, 223, 225, 227], "init": 44, "report": [44, 45, 209, 214, 217], "e_opt_pp": 44, "rho_opt_pp": 44, "opt_success": 44, "successfulli": [44, 214, 215, 216, 219, 220, 224, 225, 227], "squar": [44, 90, 214, 215, 223], "x_opt_pp": 44, "arg": 45, "workflow": 45, "5": [45, 117, 160, 174, 211, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231], "pdim": 45, "results_dict": [45, 46], "raw": [45, 223], "layout_observ": 45, "etc": [45, 217], "df_g_eval": 45, "variou": [46, 198, 199, 228], "visual": [46, 197, 202, 209, 214, 221, 223], "And": 46, "real": [46, 137, 231], "imaginari": 46, "part": [46, 211, 230], "experiment": [46, 73, 74], "empti": [46, 185], "layout_": [46, 223], "_": [46, 211, 214, 221, 223], "plot_typ": 46, "layout_plot": 46, "wrapper": [47, 50], "alg": 47, "x_target": 47, "e_target": 47, "rho_target": 47, "ghz": [48, 209, 228, 229, 231], "verifi": [48, 164, 211], "greenberg": [48, 50, 214, 215, 228, 229], "horn": [48, 50, 214, 215, 228, 229], "zeiling": [48, 50, 214, 215, 228, 229], "bipartit": [48, 64, 209, 228, 229, 231], "nativ": [48, 50, 61, 64, 67, 121, 124, 154, 155, 157, 164, 173, 175, 206, 208, 209, 214], "ghzconfigur": [49, 50, 214, 215, 220, 221], "generate_native_ghz": 50, "qubit_count": [50, 51], "topologi": [50, 174, 184, 186, 190, 198, 202, 209, 214], "subset": [50, 53, 54, 58, 60, 61, 68], "system": [50, 51, 53, 54, 58, 60, 61, 157, 167, 198, 214, 215, 223, 230, 231], "protocol": [50, 53, 54, 58, 60, 61, 214, 215, 228], "equal": [50, 58, 98, 209, 214, 215], "generate_coherence_meas_circuit": 50, "take": [50, 51, 184, 195, 209, 214, 215, 223, 231], "mult": 50, "q": [50, 77, 79, 80, 86, 117, 209, 220, 223, 228, 229, 231], "qc_list_transpil": 50, "append_rm": 50, "num_rm": [50, 51, 221], "append": [50, 92, 208, 211, 212, 223], "1q": [50, 117, 120, 121, 135, 138, 139, 149, 157, 206, 208, 209, 214], "clifford": [50, 110, 111, 112, 113, 114, 117, 120, 121, 129, 130, 131, 135, 138, 139, 148, 149, 153, 154, 155, 157, 164, 165, 206, 208, 209, 210, 219, 224, 228, 229, 231], "uniformli": [50, 117, 120, 121, 135, 138, 139, 149, 214], "param": [50, 55, 56, 57, 59, 92, 101, 113, 131, 140, 144, 146, 148, 150, 161, 162, 165, 182, 188, 189, 207], "origin": [50, 66, 98, 103, 171, 184, 186, 230], "generate_readout_circuit": 50, "creation": [50, 221], "all_circuits_list": 50, "state_generation_routin": [51, 214, 215, 220, 221], "tree": [51, 58, 60, 214, 220, 221], "custom_qubits_arrai": [51, 79, 80, 99, 125, 209, 214, 215, 219, 220, 221, 226, 227, 231], "fidelity_routin": [51, 214, 215, 220, 221], "100": [51, 65, 93, 99, 171, 214, 215, 217, 218, 219, 220, 222, 223, 226, 231], "rem": [51, 53, 80, 99, 107, 168, 209, 214, 215, 220, 221, 226, 227, 231], "mit_shot": [51, 80, 98, 99, 168, 214, 215, 220, 221, 226, 227, 231], "cal_url": [51, 174, 202, 219, 221], "log": [51, 56, 57, 58, 60, 209, 221], "coupl": [51, 58, 61, 68, 93, 99, 174, 184, 187, 190, 200, 203, 214, 221], "cz": [51, 59, 60, 61, 121, 154, 173, 174, 184, 206, 208, 211, 214, 221, 223], "account": [51, 80, 184, 223, 231], "span": [51, 58, 60], "largest": [51, 214, 215, 221, 223], "weight": [51, 60, 61, 105], "applic": [51, 60, 149, 211, 221, 230], "cx": [51, 55, 60, 92], "scale": [51, 214, 215], "logarithm": [51, 221], "naiv": [51, 80, 221], "textbook": [51, 221], "NOT": 51, "support": [51, 61, 209, 230], "denot": 51, "here": [51, 137, 212, 214, 215, 223], "small": [51, 209], "architectur": 51, "iqm_transpil": 51, "optimize_single_qubit_g": 51, "multipl": [51, 53, 65, 121, 142, 209, 214, 215, 221, 223], "moonei": [51, 53, 214, 215, 221], "2021": [51, 53, 214, 215, 221, 231], "randomized_measur": [51, 221], "outlin": 51, "http": [51, 54, 56, 57, 142, 183, 211, 212, 218, 219, 220, 221, 222, 223, 230, 231], "arxiv": [51, 54, 56, 57, 93, 121, 149, 211, 221, 231], "org": [51, 54, 56, 57, 211, 221, 223, 230], "ab": [51, 54, 56, 57, 211, 221, 222], "1812": [51, 54], "02624": [51, 54], "chosen": [51, 80, 214, 215, 221, 223], "readout": [51, 53, 80, 98, 99, 104, 166, 167, 169, 199, 202, 209, 220, 221], "mitig": [51, 53, 80, 98, 99, 104, 166, 167, 168, 169, 209, 220, 221], "url": [51, 125, 174, 201, 202, 214, 215, 219, 231], "retriev": [51, 92, 96, 125, 188, 189, 196, 201, 202, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227], "priorit": 51, "ideal_prob": 54, "cross": [54, 214, 215, 230], "correl": [54, 221], "rm": [54, 208], "eq": [54, 211], "34": [54, 212, 216, 219, 220, 222, 227], "hadamard": [55, 211], "seri": 55, "linear": [55, 125, 200, 219], "fashion": 55, "symmetr": 55, "halv": 55, "1807": [56, 221], "05572": [56, 221], "2101": [57, 221], "08946": [57, 221], "n_state": [58, 214], "networkx": [58, 60, 61, 79, 81, 82, 83, 84, 185, 203, 214, 215], "n": [58, 80, 113, 136, 181, 185, 201, 205, 211, 214, 215, 219, 221, 222], "participating_qubit": 58, "qc": [58, 92, 175, 177, 208, 211, 212, 231], "move": [59, 209], "cx_map": 60, "particip": 60, "2qb": 60, "them": [60, 68, 212, 231], "subgraph": 60, "Then": [60, 231], "find": [60, 66, 125, 214, 215, 221], "most": [60, 223], "central": 60, "posit": [60, 198, 202, 209], "next": 60, "start": [60, 79, 160, 174, 214, 220, 221, 223, 231], "smallest": 60, "layer": [60, 68, 81, 85, 89, 90, 92, 93, 98, 115, 117, 118, 120, 121, 122, 123, 124, 125, 127, 133, 135, 136, 138, 139, 149, 161, 172, 200, 209, 220, 223, 228, 229, 231], "couplingmap": [61, 68, 72, 127, 187, 190, 200, 203], "edges_c": 61, "fidelities_c": 61, "have": [61, 154, 176, 214, 215, 230, 231], "wai": [61, 174, 209, 214, 215, 223], "v": [62, 87, 92, 94, 214, 215, 220, 224], "user": [62, 217, 219, 222, 231], "identif": [62, 230], "graphstatebenchmark": [63, 65, 222], "graphstateconfigur": [63, 64, 222], "entangel": 64, "neg": [64, 70, 71, 72, 73, 74, 207, 209], "add_all_circuits_to_dataset": [64, 98, 113, 131], "generate_all_circuit_info_for_graph_state_benchmark": 64, "associ": [64, 105, 220, 230], "disjoint": [64, 125, 192, 200, 219], "neighbor": [64, 66, 70, 73, 74, 180, 222], "project": [64, 70, 75, 105, 231], "node": [64, 66, 68, 80, 82, 83, 87, 89, 180, 185, 198, 199, 202, 214, 215, 221, 226], "cover": 64, "state_tomographi": [65, 70, 71, 72, 222], "shadow_tomographi": [65, 70, 71, 72], "num_bootstrap": [65, 71, 72, 222], "n_random_unitari": [65, 222], "n_median_of_mean": [65, 222], "shadow": [65, 71, 72, 73, 204, 206, 208], "haar": [65, 205, 206, 208], "unitari": [65, 205, 206, 208, 214, 215, 223], "over": [65, 106, 167, 182, 214], "median": [65, 70, 71, 72, 183, 214, 215], "nb": [65, 176, 207, 214, 216, 217, 220], "call": [65, 167, 209], "factor": [65, 217], "cp_map": [68, 187], "sort": [68, 160, 191, 219, 225, 227], "arrang": 68, "item": [68, 214, 222], "2q": [68, 117, 120, 121, 122, 124, 125, 138, 139, 149, 157, 159, 201, 214, 220], "qubit_pair": 70, "num_rm_sampl": [70, 71, 72], "num_moms_sampl": [70, 71, 72], "np": [70, 92, 151, 158, 181, 205, 206, 207, 208, 211, 214, 215, 218, 219, 220, 221, 222, 223, 224], "gather": 70, "qubit_nam": [71, 72, 127, 200, 219, 222], "num_shot": [71, 72, 93, 214, 215, 217, 220], "max": [71, 72, 80, 192, 214, 215, 222, 231], "backend_coupling_map": [72, 127, 200, 203, 219], "station": [72, 125, 127, 198, 200, 202, 209, 212, 219, 231], "won": 72, "displai": [72, 209, 211, 214, 215, 216, 219, 220, 223, 224, 230], "titl": [72, 159, 230], "all_qubit_pairs_per_group": [73, 74], "all_qubit_neighbors_per_group": [73, 74], "all_unprojected_qubit": [73, 74, 222], "execution_timestamp": [73, 74, 216, 219, 222, 225, 227], "unproject": [73, 74], "pauli_expect": [75, 181], "projected_count": 75, "nonid_pauli_label": 75, "helper": [75, 160], "outermost": [75, 173], "innermost": 75, "ident": [75, 211, 223], "z": [75, 176, 184, 223], "instead": [75, 209, 231], "logger": [76, 195], "everi": 76, "warn": [76, 211, 214, 215, 218, 219, 222], "score": [77, 79, 80, 86, 209, 220, 228, 229, 231], "combinatori": [77, 79, 214, 215], "problem": [77, 79, 81, 82, 83, 84, 86, 87, 214, 215, 231], "qscorebenchmark": [78, 80, 214, 215, 220, 226], "qscoreconfigur": [78, 79, 214, 215, 220, 226], "generate_maxcut_ansatz": 79, "theta": 79, "ansatz": [79, 81, 83, 85, 89], "qaoa": [79, 80, 81, 85, 89], "maxcut": [79, 81, 82, 83, 84, 85, 89, 214, 215, 220], "end": [79, 92, 98, 211, 230], "variat": [79, 214, 215], "gamma": [79, 81], "beta": [79, 81, 86, 87, 214, 215, 220], "choose_qubits_na": 79, "sequenti": [79, 117, 162, 216, 220], "choose_qubits_custom": 79, "match": [79, 198, 221], "num_inst": [80, 87, 214, 215, 220, 226], "num_qaoa_lay": [80, 214, 215, 220, 226], "min_num_nod": [80, 214, 215, 220, 226], "max_num_nod": [80, 214, 215, 220, 226], "use_virtual_nod": [80, 87, 214, 215, 220, 226], "use_classically_optimized_angl": [80, 87, 214, 215, 220, 226], "choose_qubits_routin": [80, 99, 214, 215, 220, 226, 227, 231], "min_num_qubit": 80, "seed": [80, 214, 215, 220, 226], "min": [80, 167, 214, 215], "taken": [80, 214, 215], "increas": [80, 160, 175, 223], "potenti": 80, "pre": 80, "optimis": 80, "tune": 80, "minumum": 80, "virtual_nod": [80, 82, 83, 89], "upon": [80, 93, 99], "angl": [81, 85, 87, 89], "qubit_to_nod": [82, 83], "val": 82, "virtual": [82, 83, 87, 89, 184], "cut": [82, 83, 84, 89, 214, 215], "avg": [82, 220], "callabl": [83, 152, 158], "minu": [84, 125], "sign": 84, "solut": [84, 214, 215], "obj": 84, "num_lay": 85, "approximation_ratio": 86, "approxim": [86, 87, 214, 215, 220], "ratio": [86, 87, 214, 215, 220], "abov": [86, 106, 214, 215, 223, 230], "beta_ratio": 87, "beta_std": 87, "deviat": [87, 99, 102, 159, 173, 223], "classic": [87, 89, 98, 175, 176, 179, 208], "graph_phys": 89, "qubit_nod": [89, 199], "use_classical_angl": 89, "qaoa_lay": 89, "solv": [89, 214, 215], "averag": [89, 101, 106, 107, 113, 131, 133, 137, 152, 209, 214, 215, 221, 223], "presenc": 89, "volum": [90, 97, 98, 99, 108, 209, 228, 229, 231], "reflect": [90, 92, 98, 109, 110, 128], "deepest": [90, 98], "clop": [90, 209, 228, 229, 231], "speed": [90, 92, 214, 215], "clops_v": [90, 220], "qv": [90, 92, 93, 98, 99, 101, 102, 106, 107, 209, 214, 215, 220, 228, 229], "clops_h": [90, 93, 220], "clopsbenchmark": [91, 93, 214, 215, 217, 220], "clopsconfigur": [91, 92, 214, 215, 217, 220], "h": [92, 94, 223], "append_parameterized_unitari": 92, "q0": 92, "q1": 92, "decompos": [92, 214], "su": 92, "belong": [92, 121, 163], "generate_single_circuit": [92, 98], "generate_circuit_list": [92, 98], "generate_random_paramet": 92, "templat": [92, 214, 215, 217, 220], "float64": 92, "assign_random_parameters_to_al": 92, "dict_parametrized_circ": 92, "clops_cycl": 92, "sorted_transpiled_qc_list": [92, 98, 194], "cycl": 92, "elaps": [92, 95, 96, 195, 217, 220], "submiss": [92, 98, 118, 136, 161, 162, 214, 215, 217, 230], "generate_transpiled_clops_templ": 92, "num_upd": [93, 214, 215, 217, 220], "clops_h_bool": [93, 220], "establish": [93, 220], "By": [93, 217, 220], "definit": [93, 214, 215, 217, 220, 230], "2110": [93, 231], "14108": [93, 231], "quant": [93, 149, 231], "ph": [93, 149, 231], "rigor": [93, 223], "loos": 93, "www": [93, 211, 230], "ibm": [93, 167], "com": [93, 183, 218, 219, 221, 222], "blog": 93, "restrict": [93, 99, 190, 220, 227], "clops_data": 95, "job_meta": 96, "quantumvolumebenchmark": [97, 99, 214, 215, 220, 227], "quantumvolumeconfigur": [97, 98, 214, 215, 220, 227, 231], "classical_permut": 98, "permut": 98, "avoid": 98, "swap": [98, 211], "get_rem_quasidistro": 98, "sorted_qc_list_indic": [98, 103], "execution_result": [98, 100], "quasicollect": [98, 104, 168], "quasiprob": [98, 104, 168, 169], "qubii": 98, "submit_single_qv_job": 98, "submit": [98, 118, 136, 161, 162, 194, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 230], "organ": [98, 194], "vanilla": [98, 107, 136, 161, 162], "dd": [98, 107, 136, 161, 162], "num_sigma": [99, 106, 107, 214, 215, 220, 227, 231], "criteria": [99, 124], "consensu": 99, "unmitig": 99, "1_000": [99, 214, 215, 220, 227, 231], "ideal_heavy_output": [100, 104], "hop": [100, 101, 102, 106, 107, 209], "heavi": [100, 101, 102, 103, 104, 105, 106, 214, 215], "cumul": [101, 102], "individu": [101, 102, 159, 206, 209, 214, 221, 223, 230, 231], "trial": [101, 102], "qc_list": [103, 184], "bitrstr": 103, "all_rem_quasidistro": 104, "noiseless": [104, 220, 222, 227], "onto": 105, "heavy_output_prob": [106, 227], "within": [106, 200, 230, 231], "sigma": [106, 107], "qv_result": [107, 214, 215, 227], "qv_results_typ": [107, 227], "in_volumetr": 107, "plot_rem": 107, "come": [107, 137, 169, 176], "volumetr": 107, "rb": [110, 112, 113, 114, 115, 117, 118, 119, 120, 128, 130, 131, 132, 133, 135, 136, 150, 151, 152, 154, 156, 158, 159, 162, 163, 165, 209, 211, 214, 216, 219, 220, 224], "cliffordrandomizedbenchmark": [111, 112, 214, 216, 220], "cliffordrbconfigur": [111, 113, 214, 216, 220], "qubits_arrai": [112, 117, 121, 130, 135, 154, 159, 161, 163, 165, 214, 216, 219, 220, 224, 225, 231], "sequence_length": [112, 130, 153, 154, 214, 216, 220, 224, 231], "num_circuit_sampl": [112, 117, 121, 130, 135, 153, 214, 216, 219, 220, 224, 225, 231], "add_all_metadata_to_dataset": 113, "direct": [115, 116, 117, 118, 119, 120, 219, 230], "canon": [115, 118, 120, 121, 136, 138, 139, 161], "directrandomizedbenchmark": [116, 117], "directrbconfigur": [116, 118], "is_eplg": [117, 121, 159, 200, 219], "two_qubit_gate_ensembl": [117, 120, 135, 138, 139, 149, 219, 220, 225, 231], "densities_2q_g": [117, 219], "clifford_sqg_prob": [117, 120, 135, 138, 139, 149, 219], "sqg_gate_ensembl": [117, 120, 135, 138, 139, 149, 219], "drb": [117, 118, 119, 120, 121, 124, 125, 126], "regist": [117, 160, 163, 175, 176, 208], "case": [117, 214, 215, 223], "done": [117, 209, 211, 217], "eplg": [117, 121, 159, 200, 209, 228, 229], "subroutin": 117, "overrid": 117, "czgate": [117, 130, 135, 211, 214, 220, 223, 224, 225, 231], "igat": 117, "mrb": [117, 118, 135, 136, 138, 141, 152, 159, 161, 162, 209, 220, 228, 229], "ensembl": [117, 121, 133, 135, 136, 149, 159, 205], "cxgate": [117, 135], "len": [117, 135, 211, 214, 215, 223], "25": [117, 120, 135, 138, 139, 149, 214, 216, 219, 220, 222, 224, 225, 227, 231], "leav": 117, "uniform": 117, "assign_inputs_to_qubit": 118, "submit_single_drb_job": 118, "sorted_transpiled_circuit_dict": [118, 136, 161], "circ_sampl": [120, 138, 219], "density_2q_g": [120, 135, 138, 139, 149, 220, 225, 231], "stabil": [120, 135, 138, 139, 148, 155, 209], "randomli": 120, "assigned_density_2q_g": 121, "assigned_two_qubit_gate_ensembl": 121, "assigned_clifford_sqg_prob": 121, "assigned_sqg_gate_ensembl": 121, "cliffords_1q": [121, 154, 206, 208], "cliffords_2q": [121, 154], "barrier": [121, 173, 211, 212], "taylor": 121, "2311": [121, 231], "05933": [121, 231], "interleav": [121, 128, 129, 130, 131, 132, 135, 139, 151, 152, 153, 154, 155, 159, 209, 216, 228, 229, 231], "invers": [121, 148, 214], "term": [121, 154, 176, 206, 208, 211, 223, 230], "r": [121, 154, 173, 184, 206, 208, 211, 222, 223], "simultan": [121, 130, 152, 223], "eplgbenchmark": [123, 125, 219], "eplgconfigur": [123, 124, 219], "validate_custom_qubits_arrai": 124, "validate_random_chain_input": 124, "chain": [124, 125, 200, 219], "beyond": 124, "drb_depth": [125, 219], "drb_circuit_sampl": [125, 219], "chain_length": [125, 219], "chain_path_sampl": [125, 219], "num_disjoint_lay": [125, 219], "max_hamiltonian_path_tri": [125, 219], "calibration_url": [125, 219], "proce": 125, "highest": [125, 222], "path": [125, 167, 185, 201], "must": [125, 198, 214, 215, 230, 231], "eplg_estim": 127, "interleavedrandomizedbenchmark": [129, 130, 214, 220, 224], "interleavedrbconfigur": [129, 131, 214, 220, 224, 231], "interleaved_g": [130, 153, 154, 155, 159, 214, 220, 224, 231], "interleaved_gate_param": [130, 214, 220, 224, 231], "simultaneous_fit": [130, 214, 220, 224, 231], "irb": [130, 152, 209, 228, 229], "ygate": 130, "enter": [130, 152, 154], "mirror": [133, 134, 135, 136, 139, 209, 228, 229, 231], "mirrorrandomizedbenchmark": [134, 135, 220, 225, 231], "mirrorrbconfigur": [134, 136, 220, 225, 231], "depths_arrai": [135, 220, 225, 231], "num_pauli_sampl": [135, 137, 140, 220, 225, 231], "simulation_method": [135, 138, 139], "statevector": [135, 138, 139], "extended_stabil": [135, 138, 139], "matrix_product_st": [135, 138, 139], "aer": [135, 138, 139], "simul": [135, 137, 138, 139, 167, 209, 220, 225, 227], "submit_single_mrb_job": 136, "noisy_count": 137, "ideal_count": 137, "num_circ_sampl": [137, 140, 155], "polar": [137, 152], "noisi": 137, "rescal": 137, "few": [137, 214, 215, 221], "effect": [137, 160, 214, 215], "pauli_samples_per_circ": [138, 139], "dress": [138, 139, 140], "input_list": 140, "flat": 140, "shape": 140, "lmfit": [142, 143, 152], "extend": [142, 209, 223], "shown": [142, 214, 215, 221, 222, 223], "document": [142, 194, 214, 215, 230, 231], "github": [142, 231], "io": 142, "py": [142, 218, 219, 222, 231], "example_fit_multi_dataset": 142, "html": [142, 183, 231], "sphx": 142, "glr": 142, "multi": [142, 214, 215], "func": [143, 144, 145, 146, 152, 158], "initial_guess": 143, "constraint": [143, 231], "simultaneously_fit_var": 143, "line": 143, "signatur": 145, "residu": 146, "sever": [146, 209, 214, 215, 217], "techniqu": 147, "qc_inv": 148, "clifford_dictionari": 148, "invert": 148, "de": [148, 155], "n_layer": 149, "grab": [149, 167], "see": [149, 194, 209, 211, 214, 221, 223, 230], "2204": 149, "07568": 149, "subsequ": [149, 230], "do": [149, 167, 224, 230], "up": [149, 214, 231], "uniti": 149, "ground": [150, 156, 212], "depolarization_prob": 151, "depolar": 151, "rb_identifi": 152, "simultaneous_fit_var": 152, "interleaved_gate_str": 152, "0th": 152, "ap": [152, 223], "m": [152, 214, 215, 216, 220, 222, 224, 225, 231], "stdrb": 152, "clifford_dict": [153, 155], "fir": 153, "num_sampl": [154, 155], "befor": [154, 214], "seq_length": 155, "system_s": 157, "import": [157, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231], "load": [157, 216, 217], "1q_dict": 157, "2q_dict": 157, "fit_paramet": 158, "fit_data": 158, "minimizerresult": 158, "violin": 159, "scatter": 159, "shade_stdev": 159, "shade_meanerror": 159, "logscal": 159, "mrb_2q_densiti": 159, "mrb_2q_ensembl": 159, "shade": 159, "arr": 160, "separate_regist": [160, 163], "reversed_arr": 160, "relabel": 160, "increasingli": 160, "zero": [160, 209, 214, 215], "7": [160, 211, 214, 216, 218, 219, 220, 221, 222, 224, 225, 230, 231], "note": [160, 169, 207, 209, 221, 223, 231], "clbit": [160, 163], "separ": [160, 163, 167, 209, 227, 230], "skip": 160, "sublist": 160, "revers": [160, 219], "circuit_compilation_opt": [162, 194], "circuitcompilationopt": [162, 194], "compil": [162, 194, 209, 214, 217, 223, 230], "submit_execut": 162, "margin": [163, 167, 182], "surviv": [163, 214], "bit": [163, 179, 182, 206], "00": [163, 214, 215, 219, 220, 221, 222, 223, 225, 227], "anoth": [163, 212], "gate_id": 164, "gate_param": 164, "m3": [166, 167, 168], "modif": [166, 230], "qpu": [166, 209, 214, 218], "m3iqm": [166, 169], "mthree": [166, 169], "m3mitig": [166, 167], "iter_threshold": 167, "4096": 167, "modifi": [167, 209, 214, 215, 230], "work": [167, 169, 209, 214, 215, 230, 231], "devic": [167, 209, 214, 215, 229, 231], "cals_from_system": 167, "initial_reset": 167, "rep_delai": 167, "cals_fil": 167, "async_c": 167, "cal_id": 167, "array_lik": 167, "1e4": 167, "max_shot": 167, "balanc": 167, "hardwar": [167, 217, 229], "independ": [167, 214], "reset": 167, "begin": [167, 211], "json": 167, "async": 167, "thread": 167, "m3error": 167, "progress": 167, "against": [168, 230], "mit": [169, 230], "processor": [169, 209, 214, 215], "argument": [169, 209, 221, 231], "util": [169, 197, 204, 209, 221, 222, 223], "final_measurement_map": 169, "qubit_name_to_index": 169, "quasiprobabilti": 169, "we": [169, 212, 214, 215, 219, 223, 230], "could": [169, 223], "would": [169, 222], "out": [169, 230], "box": 169, "u": [169, 223], "sinc": [169, 214, 215, 217, 223], "annot": [169, 230], "original_count": 171, "num_bootstrap_sampl": 171, "rgen": 171, "include_original_count": 171, "default_rng": 171, "circuit_list": 172, "transpiled_qc_list": 173, "all_metr": 174, "under": [174, 209, 211, 214, 223, 230], "list_fid": 174, "list_coupl": 174, "chip": [174, 198, 202], "star": [174, 184, 190, 198, 209, 213, 214, 221, 229], "crystal": [174, 198, 209], "qubit_map": 174, "For": [174, 199, 207, 218, 221, 223, 230, 231], "metrics_dict": 174, "metric_nam": 174, "qubit_1": 174, "qubit_2": 174, "active_qubit": [175, 208], "measure_oth": [175, 208], "measure_other_nam": [175, 208], "tomograhi": 175, "xy": 175, "pauli_label": 176, "charact": [176, 230], "extract": [177, 179, 196, 214, 231], "backend_label": 178, "prob_dist_or_count": 182, "prob_dist": 182, "propag": 183, "refer": [183, 200, 214, 215, 217, 223, 229, 231], "mathworld": 183, "wolfram": 183, "statisticalmedian": 183, "basis_g": 184, "drop_final_rz": 184, "optimization_level": [184, 212, 214], "sqg": [184, 220, 221, 227], "drop": 184, "rz": 184, "emploi": 184, "vertic": [185, 187, 201], "backend_topologi": 186, "backend_num_qubit": [186, 200, 219], "remov": [187, 209], "duplic": 187, "iqm_job": [188, 189], "iqmjob": [188, 189, 194], "relev": 189, "transpiled_circuit_list": 191, "sorted_indic": [191, 222], "sorted_circuit": 191, "split": [192, 193, 219, 231], "13": [192, 211, 216, 218, 219, 220, 221, 222, 224, 225, 231], "17": [192, 211, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 231], "18": [192, 211, 216, 217, 219, 220, 221, 222, 223, 224, 225, 231], "todo": 192, "pylint": 192, "disabl": 192, "fixm": 192, "sequence_in": 193, "split_siz": 193, "chunk": 193, "normal": [194, 230], "sent": [194, 230], "manag": [194, 230, 231], "abil": 194, "f": [195, 211, 212, 214, 215, 218, 219, 220, 221, 222, 223], "decor": 195, "statement": [195, 230], "counts_rang": 196, "graphposit": 197, "garnet_posit": 198, "garnet": [198, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231], "deneb_posit": 198, "deneb": [198, 209, 216, 217, 220, 224, 225, 226, 227], "predefined_st": 198, "create_posit": 198, "pygraph": 198, "coordin": [198, 212], "get_posit": 198, "doesn": 198, "known": 198, "metric_dict": 199, "sq_metric": [199, 202, 221], "radii": 199, "idl": [199, 209, 221, 223], "durat": 199, "radiu": [199, 221], "unsupport": 199, "edge_list": 200, "disjoint_lay": [200, 219], "draw": [200, 211, 214, 215, 219, 222, 223], "respectv": 200, "path_sampl": 201, "max_tri": 201, "product": [201, 211, 230], "address": 201, "thick": [202, 209], "thinner": [202, 221], "better": [202, 221], "highlight": 202, "orang": [202, 221], "rustworkx": [203, 209], "random_gen": 205, "randomst": 205, "drawn": 205, "circuilar": 205, "unitary_arg": 206, "subsystem_bit_indic": 206, "clifford_or_haar": [206, 208], "initialis": [206, 208], "subsystem": [206, 207], "na": 207, "entangl": [207, 209, 214, 215, 220, 221, 228, 229, 231], "more": [207, 209, 214, 215, 230, 231], "mere": [207, 230], "nu": 208, "compos": [208, 211], "benchmark": [209, 210, 211, 213, 218, 222, 223, 226, 227, 228], "iqm": [209, 210, 211, 212, 213, 218, 221, 222, 223, 224, 228, 230], "client": [209, 218], "depend": [209, 217, 221, 223, 229], "bug": 209, "encorpor": 209, "overhaul": 209, "hinton": 209, "diagram": 209, "domin": [209, 223], "jupyt": 209, "tutori": 209, "explan": 209, "likelihood": 209, "emerald": [209, 218], "visibl": 209, "improv": [209, 230], "t2": 209, "qscore": [209, 214, 215], "deprec": 209, "colormap": 209, "usag": 209, "optimise_single_qubit_g": 209, "relax": 209, "numba": 209, "easier": [209, 230], "interoper": 209, "ensur": [209, 214, 223], "incorrect": 209, "width": [209, 214, 215, 221], "explicit": 209, "offlin": [209, 217], "spent": [209, 217], "header": 209, "example_graphst": [209, 222], "notebook": [209, 212, 214, 215, 223, 228, 229], "page": [209, 229, 230], "render": [209, 231], "wrong": 209, "aid": 209, "bottom": 209, "top": 209, "file": [209, 230, 231], "test": [209, 214, 215, 231], "instal": [209, 214, 223, 229], "command": [209, 231], "develop": [209, 211, 229], "mode": [209, 211, 231], "folder": [209, 230, 231], "doc": [209, 231], "spark": [209, 213, 229], "compat": 209, "adapt": [209, 231], "behavior": 209, "publish": 209, "ci": 209, "secur": [209, 231], "scan": [209, 231], "lockfil": [209, 231], "relat": [209, 214, 217], "modulenotfounderror": 209, "pyrit": [209, 226], "about": [209, 221], "revert": 209, "ones": [209, 214, 215, 231], "now": [209, 216, 220, 221, 222, 223, 224], "port": 209, "subclass": 209, "place": [209, 230], "miscellan": 209, "api": [209, 219, 221, 229, 231], "build": [209, 231], "overwrit": 209, "minor": 209, "longer": [209, 214], "renam": 209, "rebas": 209, "randomizedbenchmark": 209, "quantumvolum": 209, "serial": 209, "some": [209, 214, 215, 221], "available_benchmark": 209, "__init__": 209, "public": 209, "hint": 209, "docstr": 209, "messag": 209, "prevent": 209, "exclus": [209, 230], "section": [210, 213, 228, 230], "guidanc": [210, 213], "packag": [210, 214, 218, 219, 222, 228, 231], "your": [210, 214, 215, 217, 218, 229, 230, 231], "own": [210, 229, 230, 231], "decomposit": [210, 229], "1402": 211, "4848": 211, "copyright": [211, 230], "2024": [211, 216, 230], "licens": [211, 229], "apach": [211, 230], "you": [211, 214, 215, 218, 219, 224, 230, 231], "except": [211, 212, 230], "complianc": [211, 230], "unless": [211, 230], "law": [211, 230], "agre": [211, 230], "softwar": [211, 230], "AS": [211, 230], "without": [211, 214, 215, 217, 221, 230], "warranti": [211, 230], "OR": [211, 230], "OF": [211, 230], "kind": [211, 230], "express": [211, 230], "impli": [211, 230], "languag": [211, 230], "govern": [211, 230], "permiss": [211, 230], "quantum_info": 211, "qi": 211, "c0": 211, "24": [211, 216, 219, 220, 223, 224], "half": 211, "x2": 211, "to_gat": 211, "y2": 211, "x2m": 211, "y2m": 211, "inplac": 211, "2pi": 211, "11": [211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 231], "12": [211, 216, 218, 219, 220, 222, 223, 224, 225, 227], "15": [211, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225], "16": [211, 216, 219, 220, 221, 222, 223, 224, 225, 227], "19": [211, 217, 218, 219, 220, 221, 222, 224, 225], "21": [211, 219, 220, 221, 222, 224], "22": [211, 219, 220, 222, 223, 224, 225], "23": [211, 216, 219, 220, 221, 224, 225, 227], "clifford_sqg": 211, "s1": 211, "s1x2": 211, "s1y2": 211, "displaystyl": 211, "sum_": [211, 223], "prime": 211, "left": [211, 223], "mathrm": [211, 214, 215, 221], "tr": [211, 223], "u_": 211, "dagger": [211, 214, 223], "u_k": 211, "right": [211, 223, 230], "s2": 211, "satisfi": [211, 218, 223], "c_kei": 211, "aux": 211, "total_triangl": 211, "c1": 211, "adjoint": 211, "c2": 211, "c3": 211, "to_matrix": 211, "trace": 211, "print": [211, 214, 217, 219, 220, 221, 222, 223, 225, 227, 230], "0f": 211, "diagon": [211, 214, 215], "nsum": 211, "sum": 211, "clifford_2qg": 211, "c2q_0": 211, "c2q": 211, "counter": 211, "to_label": 211, "sqg_class_": 211, "cnot": [211, 221], "sy2": 211, "cnot_class_": 211, "iswap": 211, "sy1": 211, "sx2": 211, "i_swap_class_": 211, "swap_class_": 211, "clifford_1qg": 211, "open": 211, "clifford_1q": 211, "pkl": 211, "wb": 211, "clifford_2q": 211, "loaded_dict": 211, "def": [211, 212], "count_rcz": 211, "c_list": 211, "no_cz": 211, "no_r": 211, "count_op": 211, "num_2qcz": 211, "num_2qr": 211, "num_1qcz": 211, "num_1qr": 211, "875": [211, 214, 224, 227], "200": [211, 219, 222], "randint": [211, 214, 215, 220, 226], "11520": 211, "mpl": [211, 219, 222], "style": [211, 222], "iqp": [211, 222], "fold": [211, 219, 222], "ninvers": 211, "qc_aux": 211, "qcinv": 211, "op_seq": 211, "ncomposit": 211, "modulo": 211, "phase": 211, "equiv": 211, "ii": [211, 212, 230], "latex": 211, "composit": 211, "bmatrix": 211, "520": [211, 220], "132": [211, 220, 224], "710": [211, 220], "suffic": 211, "triangular": 211, "howev": [211, 230, 231], "still": [211, 223], "op": 211, "adj": 211, "prod": 211, "100000": 211, "ndone": 211, "defit": 212, "excit": 212, "add_counts_to_dataset": 212, "pyplot": [212, 214, 215], "plt": [212, 214, 215, 219], "generate_readout_test_circuit": 212, "n_qubit": [212, 219], "qb_to_measur": 212, "qc_transpil": 212, "plot_histogram": [212, 214], "try": 212, "state_": 212, "counts_": 212, "break": 212, "xtick": 212, "90": [212, 219, 222], "legend": 212, "readout_analysi": 212, "histogram": [212, 214], "readouttest": 212, "default_opt": 212, "n_shot": 212, "2048": 212, "staticmethod": 212, "readout_test": 212, "iqmprovid": [212, 214, 215, 218, 219, 220, 222, 231], "iqm_server_url": [212, 218], "fi": [212, 231], "coco": [212, 218, 219, 222, 231], "get_backend": [212, 214, 215, 218, 219, 220, 222, 231], "480b": 212, "dimens": [212, 223], "state_0": 212, "state_1": 212, "u4": 212, "144b": 212, "0000": 212, "0001": 212, "0010": 212, "1010": 212, "1100": 212, "176b": 212, "0011": 212, "0101": 212, "0110": 212, "1101": 212, "1110": 212, "1111": 212, "counts_0": 212, "int64": 212, "72b": 212, "1924": 212, "26": [212, 219, 220, 222, 224], "39": [212, 219, 220, 222, 224], "counts_1": 212, "88b": 212, "72": [212, 222], "48": [212, 219, 220, 223, 224], "78": [212, 219, 222], "36": [212, 219, 220, 222, 223], "1801": 212, "sure": [214, 231], "pip": [214, 231], "ipykernel": 214, "o": [214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 231], "environ": [214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 231], "iqm_tokens_fil": [214, 215], "token": [214, 215, 218, 221, 222, 224, 231], "iqm_url": [214, 215, 219, 220, 222], "access": [214, 215, 231], "everyth": [214, 215], "nx": [214, 215], "add_edges_from": [214, 215], "po": [214, 215], "spring_layout": [214, 215], "42": [214, 215, 219, 220, 222, 224], "with_label": [214, 215], "node_color": [214, 215], "lightblu": [214, 215], "edge_color": [214, 215], "grai": [214, 215], "node_s": [214, 215], "font_siz": [214, 215], "linewidth": [214, 215], "cell": [214, 215], "ignor": [214, 215, 223], "critic": [214, 215], "filterwarn": [214, 215], "action": [214, 215], "superposit": [214, 215], "rangl": [214, 215], "frac": [214, 215, 223], "sqrt": [214, 215], "otim": [214, 215, 223], "act": [214, 215, 223, 230], "wit": [214, 215], "genuin": [214, 215, 221], "cannot": [214, 215, 230], "explain": [214, 215], "great": [214, 215], "rho_": [214, 215], "text": [214, 215, 223, 230], "langl": [214, 215], "pure": [214, 215], "entri": [214, 215, 223], "written": [214, 215, 230], "corner": [214, 215], "simplifi": [214, 215], "four": [214, 215], "compon": [214, 215, 217], "formula": [214, 215], "nullifi": [214, 215], "To": [214, 215, 216, 219, 221, 223, 230, 231], "off": [214, 215], "want": [214, 215, 218, 231], "pleas": [214, 215], "generate_ghz_spanning_tre": 214, "get_edg": 214, "ghz_circuit": 214, "qc_transp": 214, "re": [214, 224], "10000": [214, 226], "get_count": 214, "benchmark_ghz": [214, 215, 220, 221], "run_ghz": [214, 215, 220, 221], "result_ghz": [214, 215], "introduc": [214, 215], "2019": [214, 215, 221, 231], "occcur": [214, 215], "greater": [214, 215], "ask": [214, 215], "confid": [214, 215], "higher": [214, 215], "97": [214, 215, 219], "85": [214, 215, 222, 231], "asymptot": [214, 215], "log_2": [214, 215], "v_q": [214, 215], "underset": [214, 215], "argmax": [214, 215], "d": [214, 215, 221, 230], "leq": [214, 215], "achiev": [214, 215, 222], "quantum_volum": [214, 215, 217, 220, 227, 231], "due": [214, 217], "topmost": 214, "500": [214, 215, 220, 225, 227, 231], "40_000": [214, 222], "minut": [214, 215, 223], "benchmark_qv": [214, 215, 220, 227], "run_qv": [214, 215], "result_qv": [214, 215], "That": [214, 215], "wack": [214, 215], "constitut": [214, 215, 230], "_time": [214, 215], "notic": [214, 215, 230], "plot_tim": [214, 215], "benchmark_clop": [214, 215, 217, 220], "run_clop": [214, 215, 217, 220], "result_clop": [214, 215, 217, 220], "idea": 214, "behind": 214, "crb": [214, 228, 229], "certain": [214, 215], "langle0": 214, "c_": 214, "inv": 214, "c_m": 214, "cdot": 214, "_2c_1": 214, "sim": 214, "c_1": 214, "c_2": 214, "ldot": 214, "c_1c_2": 214, "_m": 214, "leq1": 214, "isol": 214, "magesan": 214, "2012": [214, 231], "assumpt": 214, "markovian": 214, "stationari": 214, "theori": [214, 230], "fact": 214, "design": [214, 230, 231], "fulli": [214, 223], "our": 214, "overlin": 214, "intend": 214, "becaus": 214, "eventu": 214, "mention": 214, "barend": 214, "2014": 214, "approx": 214, "alwai": [214, 221], "slightli": 214, "care": 214, "compar": 214, "spec": 214, "randomized_benchmark": [214, 216, 219, 220, 224, 225, 231], "clifford_rb": [214, 216, 220], "benchmark_clifford_rb": [214, 216, 220], "run_clifford_rb": [214, 216, 220], "result_clifford_rb": [214, 216, 220], "previou": 214, "aim": [214, 221], "interest": 214, "sole": [214, 230], "made": [214, 230], "wish": 214, "interleaved_rb": [214, 220, 224, 231], "irb_cz": 214, "benchmark_irb_cz": 214, "run_irb_cz": 214, "result_irb_cz": 214, "martiel": [214, 215], "erd\u0151": [214, 215], "r\u00e9nyi": [214, 215], "geq": [214, 215, 223], "60": [214, 215, 222], "999999": [214, 215, 220, 226], "benchmark_qscor": [214, 215, 220, 226], "run_qscor": [214, 215, 220], "result_qscor": [214, 215, 220], "summar": 214, "obs_ghz": [214, 215], "round": [214, 215], "obs_qv": [214, 215], "obs_clop": [214, 215], "obs_crb": 214, "f_crb": 214, "obs_irb": 214, "f_irb": 214, "average_gate_fidelity_czg": 214, "obs_q": [214, 215], "argmin": [214, 215], "mean_approximation_ratio": [214, 215, 220], "3000": 214, "999": [214, 216, 220, 223], "98": [214, 219], "30": [214, 216, 218, 219, 220, 222, 223, 224, 231], "num": [214, 219], "chosen_layout": 215, "60_000": [215, 220, 227, 231], "load_ext": [216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227], "autoreload": [216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227], "extens": 216, "reload": 216, "reload_ext": 216, "fakeadoni": [216, 217, 220, 222, 224, 225, 226, 227], "fakeapollo": [216, 217, 219, 220, 221, 222, 224, 225, 226, 227], "iqm_token": [216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 231], "example_crb": [216, 220], "56": [216, 219, 220, 222, 223], "750": [216, 219, 220, 222], "logging_config": [216, 218, 219, 220, 221, 222, 223, 224, 225, 227], "info": [216, 218, 219, 220, 221, 222, 223, 224, 225, 227], "Will": [216, 219, 220, 223, 224, 225, 227, 231], "31": [216, 219, 220, 222, 224, 225], "63": [216, 219, 220, 222, 224], "831": [216, 220, 224], "992": [216, 220], "341": [216, 220], "040": [216, 220, 224], "469": [216, 220], "291": [216, 220], "292": [216, 220, 224], "349": 216, "541": [216, 220, 225], "600": [216, 220], "756": [216, 220, 222], "837": [216, 220, 224, 227], "025": 216, "171": [216, 218, 220], "905": [216, 220], "544": [216, 220], "899": [216, 219, 220], "32": [216, 219, 220, 222, 225], "624": [216, 220], "004": [216, 224], "43": [216, 219, 220, 224], "319": [216, 220], "569": [216, 219, 220, 225], "777": [216, 220], "840": [216, 220], "44": [216, 219, 220, 223, 224], "048": [216, 219, 220, 224], "098": [216, 220], "qubits_": [216, 219, 220, 225], "_depth_1": [216, 219, 220, 224], "323": [216, 220], "45": [216, 219, 220, 222, 224, 225], "186": [216, 224], "_depth_3": [216, 219, 220, 224], "225": [216, 220], "_depth_7": [216, 220, 224], "267": [216, 219, 220], "_depth_15": [216, 220, 224], "314": [216, 220], "_depth_31": [216, 220, 224], "315": [216, 220], "364": [216, 220, 225], "_depth_63": [216, 220, 224], "416": [216, 220], "417": [216, 220], "476": [216, 219], "542": [216, 219, 220, 225], "615": [216, 219, 220, 223], "616": 216, "697": [216, 220], "789": [216, 220, 224], "890": [216, 220, 224], "conclud": [216, 219, 220, 222, 224, 225, 227], "931": [216, 220], "938": [216, 220], "945": [216, 219, 220, 225], "952": [216, 220, 224], "959": [216, 220], "966": [216, 220], "972": [216, 220], "979": [216, 219], "986": [216, 219, 220], "993": [216, 225], "46": [216, 219, 220, 222], "006": [216, 223], "013": [216, 220], "946844466999168": 216, "9429197366921651": 216, "session_timestamp": [216, 219, 222, 225, 227], "20241217": 216, "115553": 216, "backend_configuration_nam": [216, 219, 222, 225, 227], "iqmfakeapollobackend": [216, 220, 221, 223, 227], "depth_1": 216, "time_circuit_gener": [216, 222, 225, 227], "541001081466675": 216, "time_submit": [216, 225, 227], "0006990432739257812": 216, "time_retriev": [216, 225, 227], "22491073608398438": 216, "all_job_metadata": [216, 225, 227], "batch_job_1": [216, 225], "job_id": [216, 225], "8f305755": 216, "e038": 216, "4596": 216, "8617": 216, "d96ba3f42ca9": 216, "aer_simul": [216, 225], "statu": [216, 225], "circuits_in_batch": [216, 225], "depth_3": 216, "05647683143615723": 216, "0005230903625488281": 216, "2fe0b406": 216, "8977": 216, "4567": 216, "bba0": 216, "d4168f0883ed": 216, "depth_7": 216, "19257187843322754": 216, "0004839897155761719": 216, "8299918c": 216, "be26": 216, "40d5": 216, "8778": 216, "9ea4468a1df2": 216, "depth_15": 216, "05831408500671387": 216, "0004811286926269531": 216, "174640c4": 216, "9ff3": 216, "4ca3": 216, "9ffc": 216, "d6aa5be304f3": 216, "depth_31": 216, "1564040184020996": 216, "0006189346313476562": 216, "7bb739f2": 216, "31bc": 216, "40af": 216, "8dbf": 216, "1d60a9310391": 216, "depth_63": 216, "08135986328125": 216, "0004200935363769531": 216, "f414a2c1": 216, "75c8": 216, "4d5a": 216, "9e4b": 216, "ccce29903f5f": 216, "147684812545776": 216, "0005502700805664062": 216, "00039887428283691406": 216, "8832576a": 216, "6d6e": 216, "4abe": 216, "8cfa": 216, "5001e6bb98e": 216, "08015298843383789": 216, "00039315223693847656": 216, "ecc1bcea": 216, "ef4c": 216, "4f35": 216, "9284": 216, "ab49af0c5b9f": 216, "16936397552490234": 216, "0003960132598876953": 216, "5582c842": 216, "0f07": 216, "46b6": 216, "96be": 216, "2fb3925b19d9": 216, "20774221420288086": 216, "0004191398620605469": 216, "6423b02b": 216, "8417": 216, "4300": 216, "b7ac": 216, "84d59f87a51f": 216, "0635080337524414": 216, "0004169940948486328": 216, "0b324804": 216, "44fe": 216, "4c16": 216, "83eb": 216, "08e5cd67aa79": 216, "20784401893615723": 216, "0004961490631103516": 216, "6c633640": 216, "d4b4": 216, "47de": 216, "a46d": 216, "d3ae4c84d212": 216, "avg_gate_fidel": [216, 225], "0012220693932290373": 216, "001545469960991071": 216, "xxxxxxxxxxxxxxx": 217, "example_clop": [217, 220], "operation_count": [217, 227], "breakdown": 217, "unit": 217, "remot": 217, "aspect": 217, "wall": 217, "experienc": 217, "encompass": 217, "compris": 217, "latenc": 217, "vari": 217, "significantli": 217, "extern": 217, "circumst": 217, "aggreg": 217, "finish": 217, "receiv": [217, 230], "xxxxx": 218, "xxxxxxx": 218, "xxxxxxxx": 218, "replac": [218, 230], "siriu": 218, "meetiqm": [218, 219, 221, 222], "opt": 218, "anaconda3": [218, 219, 222], "env": [218, 219, 222], "lib": [218, 219, 222], "python3": 218, "site": [218, 219, 222], "142": [218, 220], "userwarn": [218, 219, 222], "27": [218, 219, 220, 221, 222, 223, 224], "built": 218, "server": 218, "might": [218, 221], "encount": 218, "issu": [218, 230], "best": [218, 221], "29": [218, 219, 220, 222, 223, 224, 227], "version_incompatibility_msg": 218, "linspac": 218, "100e": 218, "iqm_provid": [218, 219, 220, 222], "unknown": [218, 219, 222], "unknown_opt": [218, 219, 222], "2025": [218, 219, 220, 221, 222, 223, 224, 225, 227, 229], "07": [218, 219, 220, 221, 222, 223, 224, 225], "202": [218, 220, 222], "7679157313590913e": 218, "332763060487301e": 218, "2792580706714276e": 218, "1769872662543327e": 218, "06": [218, 219, 220, 222, 225], "1690066792698488e": 218, "835859627497227e": 218, "9581411901572643e": 218, "5349341834275828e": 218, "7667960136510046e": 218, "650295798103166e": 218, "6166287001435286e": 218, "030620409848378e": 218, "902668232550718e": 218, "5752540482660701e": 218, "4079502861210074e": 218, "147131957835361e": 218, "4348794798121514e": 218, "839674906118737e": 218, "2879434275022574e": 218, "1510692110946111e": 218, "093928084952773e": 218, "5406298673381294e": 218, "8343162723982355e": 218, "4633111527445746e": 218, "4235245531448773e": 218, "914289199220578e": 218, "136033724339335e": 218, "110324524018475e": 218, "354338443470585e": 218, "7889199123019837e": 218, "9013724266285726e": 218, "6803076530869265e": 218, "xxxxxxxxxxxxxxxxxxxxxx": 219, "proxi": 219, "manual": 219, "necessarili": [219, 230], "simpli": 219, "resonance_st": 219, "v1": [219, 221], "example_eplg": 219, "geomspac": 219, "endpoint": 219, "dtype": 219, "tolist": 219, "benchmark_eplg": 219, "run_eplg": 219, "04": [219, 220, 222, 223, 224, 225], "358": [219, 220], "28": [219, 220, 222, 223, 224, 227], "742": [219, 220], "745": [219, 220, 224], "111": [219, 220, 227], "61": [219, 222], "748": [219, 222], "pedrofigueroaromero": [219, 222], "bench": [219, 222], "177": [219, 220, 222, 225], "571": [219, 220], "227": [219, 220], "523": [219, 220, 225], "539": [219, 220], "40": [219, 220, 222, 223], "580": [219, 220], "333": [219, 220, 224], "52": [219, 220, 222, 223, 224, 225], "692": [219, 220, 224], "57": [219, 220, 222, 223, 224], "059": [219, 220], "816": [219, 220, 222], "03": [219, 220, 222, 223, 224, 225], "812": [219, 220], "057": [219, 220], "672": [219, 220], "08": [219, 220, 222, 224, 225], "826": [219, 220], "097": [219, 220, 225], "112": 219, "454": [219, 220], "888": [219, 220], "556": 219, "537": [219, 222], "547": [219, 220], "054": [219, 220], "805": [219, 220], "51": [219, 220, 222, 224], "921": [219, 220], "066": [219, 220], "649": [219, 220], "33": [219, 220, 222, 225], "101": [219, 220], "37": [219, 220, 222, 223], "712": [219, 220], "41": [219, 220, 223, 224, 225], "280": [219, 220], "252": [219, 220, 227], "704": [219, 220, 222, 224], "536": 219, "49": [219, 220, 222, 224, 229], "689": [219, 220], "204": [219, 220, 224, 227], "53": [219, 220, 222, 224], "802": [219, 220], "54": [219, 220, 222, 224], "303": [219, 220, 222, 223], "55": [219, 220, 222, 225], "205": [219, 220, 222, 224], "813": [219, 220], "511": 219, "224": [219, 220], "136": [219, 220], "164": [219, 220], "236": 219, "920": [219, 220], "59": [219, 220, 221, 222, 224, 225], "124": 219, "126": [219, 220], "02": [219, 220, 221, 222, 223, 225], "019": [219, 220], "833": [219, 220], "724": [219, 220], "631": [219, 220, 224], "09": [219, 220, 221, 222, 224, 227], "861": [219, 220, 224], "955": [219, 220], "658": [219, 220], "819": [219, 220, 222, 224, 225], "161": [219, 220], "033": [219, 220, 224, 227], "050": [219, 220, 223, 225, 227], "357": [219, 220, 225], "785": [219, 220, 224], "147": [219, 220, 225], "289": [219, 220, 224], "253": [219, 220], "567": [219, 220], "914": [219, 220], "694": [219, 220], "282": [219, 220, 224], "408": 219, "38": [219, 220, 222, 224], "721": [219, 220, 222], "738": [219, 220], "298": [219, 220], "395": [219, 220, 222, 224], "913": [219, 220], "828": [219, 220, 224], "830": [219, 220], "129": [219, 220, 231], "852": [219, 220, 222], "_depth_200": 219, "307": [219, 225], "_depth_111": 219, "58": [219, 220, 221, 222, 223, 224], "471": [219, 220], "900": [219, 220], "_depth_61": 219, "525": [219, 220, 222], "067": [219, 220, 224], "_depth_34": 219, "832": [219, 220], "255": [219, 220, 224], "_depth_18": 219, "851": 219, "246": [219, 220], "_depth_10": 219, "460": [219, 220], "843": [219, 220], "_depth_5": 219, "279": [219, 220], "154": [219, 220], "641": [219, 220], "455": [219, 220], "950": [219, 221, 224], "568": [219, 220], "163": [219, 220, 224], "798": [219, 220, 222], "382": [219, 220], "636": [219, 220, 224], "322": [219, 220], "35": [219, 220, 222], "273": [219, 220], "036": [219, 220], "769": [219, 220], "681": [219, 220, 224], "751": [219, 220, 224], "774": 219, "788": [219, 220, 224], "632": [219, 220], "546": [219, 221, 223, 224, 225], "487": [219, 220, 222], "094": [219, 220, 224], "528": [219, 220], "594": [219, 220], "437": [219, 220], "01": [219, 220, 221, 222, 223, 224, 225, 227], "817": [219, 220], "873": [219, 220], "598": [219, 220, 225], "917": [219, 220], "901": [219, 220], "363": [219, 220], "895": [219, 220], "806": [219, 227], "329": [219, 220], "585": [219, 220, 222], "412": [219, 220, 222], "593": [219, 220, 224], "499": [219, 220, 222], "904": [219, 220], "814": 219, "401": [219, 220], "178": [219, 220], "863": [219, 220], "516": [219, 220, 222], "708": [219, 220, 222], "321": [219, 220], "656": [219, 220, 223], "47": [219, 220, 223, 224], "576": [219, 220, 221], "rcparam": [219, 222], "dpi": [219, 222], "175": [219, 220], "result_eplg": 219, "030": 219, "082": [219, 220, 227], "302": [219, 220], "893": [219, 220], "014": [219, 220], "108": [219, 220], "176": [219, 220, 225], "497": [219, 220], "683": [219, 220, 222], "935": 219, "173": [219, 220, 224], "290": [219, 220, 224, 227], "367": [219, 220], "442": [219, 220, 224], "827": [219, 220], "069": 219, "194": 219, "308": [219, 220], "405": [219, 220, 222], "526": [219, 220], "575": [219, 220, 223], "820": [219, 220, 224], "857": [219, 220], "946": [219, 220], "031": [219, 220], "116": [219, 220, 225], "185": [219, 220], "241": [219, 220], "334": [219, 220, 222], "375": [219, 220, 225], "dict_kei": [219, 222, 223], "parallel_all_0": 219, "parallel_all_1": 219, "parallel_all_2": 219, "parallel_all_3": 219, "2f": [219, 222], "2e": [219, 222], "average_gate_fidel": 219, "77": [219, 222], "96": 219, "95": [219, 222], "71": [219, 222], "81": [219, 222], "87": [219, 222], "75": [219, 222, 227], "70": [219, 222], "62": 219, "68": [219, 222], "80": [219, 222], "layer_fidel": 219, "88": [219, 223], "eplg_circ_nam": 219, "circ_group_idx": 219, "circuit_to_draw": 219, "idle_wir": [219, 223], "877": [220, 224], "127": [220, 224], "091": 220, "517": 220, "508": [220, 222], "507": [220, 222], "168": [220, 224], "188": [220, 224], "754": 220, "807": 220, "932": [220, 224], "052": 220, "447": 220, "448": [220, 225], "707": 220, "967": 220, "284": 220, "578": 220, "_depth_127": [220, 224], "324": [220, 222, 224], "557": [220, 225], "590": [220, 222], "602": [220, 221], "611": 220, "626": [220, 222, 223, 225], "example_irb_1q": [220, 224], "rgate": [220, 223, 224], "benchmark_irb_1q": [220, 224], "run_irb_1q": [220, 224], "021": [220, 227], "599": 220, "wxecut": 220, "047": 220, "588": 220, "423": 220, "348": [220, 224], "427": 220, "491": [220, 224], "445": 220, "219": 220, "479": 220, "482": [220, 222], "550": 220, "589": [220, 225], "623": [220, 224], "558": [220, 222], "218": 220, "328": 220, "810": [220, 221], "871": 220, "340": 220, "411": 220, "453": [220, 227], "876": [220, 224], "249": 220, "909": 220, "430": 220, "233": 220, "519": 220, "530": [220, 224], "790": [220, 224, 225], "187": 220, "635": [220, 224], "783": [220, 227], "793": 220, "829": [220, 224], "933": [220, 224], "049": [220, 224], "778": 220, "008": [220, 224], "095": [220, 224], "260": 220, "881": [220, 224], "028": 220, "153": 220, "883": [220, 224, 225], "330": [220, 222, 225], "579": 220, "620": 220, "133": [220, 224, 225], "210": [220, 227], "709": 220, "310": 220, "549": 220, "326": [220, 222], "529": [220, 225], "679": [220, 224, 225], "515": 220, "169": 220, "083": 220, "779": [220, 224], "009": 220, "732": 220, "560": 220, "943": 220, "071": 220, "182": 220, "976": 220, "553": [220, 224], "781": [220, 224, 227], "703": [220, 224], "554": 220, "639": [220, 221, 223], "823": [220, 222, 223], "179": 220, "859": 220, "114": 220, "338": [220, 224], "425": 220, "480": 220, "821": [220, 222, 224], "070": 220, "475": [220, 224], "000": [220, 224], "120": [220, 224], "250": [220, 223], "775": 220, "259": [220, 221], "352": 220, "648": 220, "044": 220, "874": [220, 224], "991": [220, 224], "229": 220, "690": [220, 223], "149": [220, 225], "011": [220, 222], "770": 220, "782": 220, "565": 220, "739": [220, 223, 224], "199": [220, 222], "346": [220, 224], "024": 220, "850": 220, "clifford_qubits_": [220, 224], "299": 220, "570": 220, "088": [220, 227], "377": 220, "379": 220, "698": 220, "700": 220, "150": [220, 222, 225], "_depth_255": [220, 224], "388": 220, "389": 220, "659": [220, 222], "110": 220, "118": [220, 224], "369": 220, "371": 220, "058": [220, 224], "650": [220, 224], "490": [220, 224], "834": 220, "682": [220, 224], "450": [220, 225], "240": 220, "189": 220, "231": 220, "660": 220, "018": 220, "939": [220, 224], "755": [220, 222], "759": 220, "484": 220, "970": [220, 225], "760": 220, "interleaved_qubits_": [220, 224], "109": [220, 231], "720": 220, "726": 220, "498": 220, "504": [220, 223], "937": 220, "320": [220, 223], "270": 220, "702": [220, 225], "181": [220, 225], "687": 220, "761": [220, 222], "148": [220, 224], "010": 220, "468": 220, "919": 220, "562": [220, 222], "370": 220, "884": [220, 221, 225], "172": [220, 223], "075": 220, "609": [220, 225], "053": 220, "983": [220, 225], "076": 220, "342": [220, 225], "849": [220, 225], "297": 220, "result_irb_1q": [220, 224], "894": 220, "452": 220, "677": 220, "772": [220, 223], "996": [220, 223, 225], "203": 220, "538": [220, 224], "762": 220, "969": 220, "080": 220, "208": [220, 222, 224], "627": 220, "734": [220, 224], "942": 220, "165": 220, "272": [220, 221, 225], "675": [220, 224], "882": [220, 224], "977": 220, "106": 220, "201": [220, 225], "431": 220, "666": 220, "776": 220, "887": [220, 225], "985": [220, 221], "206": [220, 224], "318": [220, 221], "545": [220, 225], "653": [220, 225], "766": [220, 225], "989": [220, 224], "221": 220, "335": 220, "691": [220, 224], "809": 220, "936": 220, "286": [220, 224], "398": [220, 222], "780": [220, 224, 225, 227], "892": [220, 225], "612": 220, "avg_gate_fidelity_interleav": [220, 224], "9979183032433894": 220, "144505494191281e": 220, "avg_gate_fidelity_clifford": [220, 224], "9958115103388792": 220, "17823609003449e": 220, "avg_gate_fidelity_n": 220, "9977661388474022": 220, "361722520237145e": 220, "997958281196824": 220, "00010535448906517988": 220, "996185705320257": 220, "354178172452585e": 220, "9979657095041371": 220, "9888883256457185e": 220, "9976806659229207": 220, "00010662386983132284": 220, "9958525686447902": 220, "031666798234228e": 220, "9977880366105548": 220, "816884091625878e": 220, "9977658880315101": 220, "00013395088590563366": 220, "996010014510697": 220, "00011462572813413851": 220, "9978720077390384": 220, "113374307582606e": 220, "9978184054322468": 220, "00011216064141600791": 220, "9957406711482065": 220, "837832701601442e": 220, "9977283579457101": 220, "246845828393341e": 220, "example_irb_2q": [220, 224], "benchmark_irb_2q": [220, 224], "run_irb_2q": [220, 224], "304": 220, "543": [220, 221], "034": [220, 224], "729": 220, "930": [220, 222], "974": 220, "243": 220, "081": 220, "139": 220, "160": 220, "277": 220, "514": [220, 222], "728": 220, "665": 220, "824": [220, 222], "951": [220, 224], "131": [220, 224], "633": 220, "392": 220, "835": 220, "138": 220, "572": [220, 221, 222, 223], "897": 220, "039": [220, 224], "407": 220, "439": [220, 221, 222], "555": 220, "003": [220, 224], "668": 220, "752": [220, 224], "180": [220, 225], "608": 220, "743": 220, "564": 220, "730": 220, "403": 220, "337": 220, "134": [220, 225], "676": [220, 225], "093": 220, "800": [220, 231], "926": 220, "394": [220, 224], "860": [220, 224], "269": 220, "368": 220, "846": 220, "995": [220, 223], "477": [220, 222], "016": 220, "078": [220, 221], "158": [220, 224], "614": 220, "866": 220, "035": 220, "213": 220, "419": 220, "815": 220, "838": 220, "478": 220, "574": 220, "144": 220, "744": [220, 224], "803": 220, "261": 220, "796": 220, "713": 220, "844": 220, "073": 220, "271": [220, 225], "736": 220, "196": [220, 224, 227], "198": 220, "652": [220, 224, 225], "384": 220, "032": [220, 227], "912": 220, "896": 220, "007": [220, 224], "152": [220, 225], "306": 220, "060": 220, "062": 220, "610": 220, "084": 220, "456": [220, 225], "026": 220, "117": [220, 225], "141": 220, "501": [220, 222], "278": 220, "714": [220, 222], "079": [220, 225], "617": 220, "190": 220, "678": [220, 225], "432": [220, 224], "285": [220, 224], "228": 220, "result_irb_2q": [220, 224], "481": 220, "655": 220, "971": 220, "130": 220, "209": 220, "288": 220, "510": 220, "629": 220, "685": [220, 224], "764": [220, 224], "907": 220, "987": [220, 222], "353": 220, "512": [220, 222, 225], "591": 220, "686": 220, "797": 220, "927": 220, "162": 220, "606": [220, 225], "928": 220, "492": [220, 221, 222, 224], "example_irb_iswap": [220, 224], "iswapg": [220, 224, 225, 231], "benchmark_irb_iswap": [220, 224], "run_irb_iswap": [220, 224], "166": [220, 221, 224], "156": 220, "077": 220, "923": 220, "735": 220, "068": 220, "918": 220, "325": 220, "234": 220, "531": 220, "688": [220, 224, 227], "811": 220, "226": 220, "074": [220, 224], "263": [220, 221], "669": 220, "673": 220, "002": [220, 223, 224], "327": 220, "577": [220, 224], "015": 220, "099": 220, "965": 220, "029": 220, "045": 220, "296": [220, 225], "607": [220, 224], "911": 220, "313": 220, "664": [220, 224], "113": 220, "988": 220, "532": [220, 221], "451": 220, "262": 220, "982": [220, 224, 225], "595": [220, 224], "336": 220, "result_irb_iswap": [220, 224], "953": 220, "140": 220, "191": 220, "223": [220, 224], "287": [220, 224], "355": [220, 224], "462": 220, "621": 220, "667": 220, "701": 220, "747": [220, 222], "795": 220, "041": 220, "mirror_rb": [220, 225, 231], "example_mrb": [220, 225, 231], "benchmark_mrb": [220, 225], "run_mrb": [220, 225], "10x5": [220, 225], "64": [220, 222, 225], "128": [220, 225], "622": 220, "865": 220, "305": 220, "671": [220, 224], "055": 220, "485": [220, 224], "391": 220, "584": [220, 222], "230": 220, "449": [220, 225], "242": 220, "472": 220, "509": [220, 221, 222, 224], "022": [220, 224], "436": [220, 224], "628": 220, "980": 220, "418": 220, "603": [220, 223], "808": [220, 223], "051": 220, "293": 220, "157": [220, 224], "268": 220, "858": 220, "527": [220, 222], "486": 220, "898": 220, "107": [220, 223, 224], "540": 220, "244": [220, 225], "661": 220, "885": [220, 221, 224], "765": [220, 224], "193": 220, "465": [220, 221], "910": 220, "643": 220, "104": [220, 221, 222], "438": [220, 221], "613": 220, "470": [220, 223], "581": 220, "693": 220, "266": 220, "488": 220, "662": 220, "870": 220, "506": 220, "207": [220, 224], "638": 220, "245": 220, "872": 220, "046": 220, "963": 220, "426": 220, "975": 220, "878": 220, "275": 220, "251": 220, "440": [220, 224], "964": [220, 222, 224], "922": 220, "309": 220, "981": [220, 224], "583": [220, 224], "413": [220, 225], "998": [220, 223], "906": [220, 224], "444": [220, 221], "891": 220, "217": [220, 227], "409": 220, "457": 220, "311": 220, "446": 220, "695": 220, "924": 220, "941": 220, "625": [220, 222, 227], "727": 220, "184": [220, 225], "012": [220, 222], "090": [220, 224], "372": 220, "642": [220, 221, 223], "489": 220, "696": 220, "949": 220, "238": 220, "839": 220, "596": [220, 224, 225], "684": 220, "753": [220, 222, 223], "535": 220, "415": 220, "354": 220, "345": 220, "604": 220, "968": [220, 224], "502": 220, "768": 220, "380": [220, 224], "220": 220, "283": [220, 227], "773": [220, 224], "867": [220, 225], "123": 220, "381": [220, 224], "767": [220, 223, 225], "072": 220, "551": 220, "741": 220, "958": [220, 223], "845": [220, 222, 224], "222": 220, "239": 220, "065": [220, 224], "903": 220, "869": 220, "552": 220, "757": [220, 227], "915": [220, 224], "043": 220, "125": [220, 222, 225], "429": 220, "984": 220, "618": 220, "344": 220, "663": 220, "216": [220, 224], "717": [220, 224], "258": 220, "421": 220, "647": 220, "420": 220, "410": 220, "390": 220, "566": [220, 222, 224], "718": 220, "645": 220, "587": [220, 222], "281": 220, "397": 220, "017": [220, 222], "592": [220, 222], "192": 220, "122": 220, "362": 220, "862": 220, "784": [220, 224], "483": 220, "350": [220, 222], "339": [220, 224], "257": [220, 222], "383": [220, 224], "619": 220, "822": 220, "886": 220, "063": 220, "404": 220, "836": [220, 224], "573": 220, "424": [220, 222], "855": 220, "085": 220, "644": 220, "902": 220, "461": [220, 222], "563": 220, "522": [220, 224, 225], "723": 220, "957": 220, "791": [220, 225], "908": 220, "195": [220, 222], "170": 220, "505": [220, 222], "294": [220, 224], "458": 220, "317": 220, "089": 220, "360": 220, "559": [220, 222], "399": 220, "159": [220, 222], "247": 220, "103": [220, 224], "119": [220, 225], "994": 220, "496": [220, 222, 224], "001": [220, 223], "848": 220, "435": 220, "725": 220, "197": [220, 222, 224], "023": 220, "818": [220, 224], "151": [220, 222], "473": [220, 222], "854": 220, "680": 220, "841": 220, "374": 220, "533": 220, "605": [220, 225], "086": 220, "211": 220, "758": [220, 222, 224, 225], "792": 220, "719": [220, 222], "548": 220, "235": 220, "997": [220, 223], "534": 220, "916": [220, 224], "137": 220, "654": 220, "_depth_2": [220, 225], "_depth_4": [220, 225], "763": 220, "_depth_8": [220, 225], "_depth_16": [220, 225], "_depth_32": [220, 225], "_depth_64": [220, 225], "_depth_128": [220, 225], "_depth_256": [220, 225], "_depth_512": [220, 225], "295": 220, "674": 220, "result_mrb": [220, 225], "061": 220, "597": [220, 225], "145": 220, "1600x1200": 220, "ax": 220, "all_qubit_layout": [220, 225], "key_mrb_plot": [220, 225], "example_qv": [220, 227, 231], "run0_qv": [220, 227], "637": 220, "subbatch": [220, 227], "264": [220, 225], "387": [220, 224, 225], "result0_qv": [220, 227], "722": 220, "run1_qv": [220, 227], "result1_qv": [220, 227], "466": 220, "422": [220, 225], "948": [220, 225], "733": 220, "630": 220, "493": 220, "There": 220, "6353": 220, "19060": 220, "minimal_ghz": [220, 221], "237": 220, "183": 220, "example_qscor": [220, 226], "10_000": 220, "880": 220, "4721": 220, "1866": 220, "301": [220, 225], "5760": 220, "3202": 220, "5666": 220, "6277": 220, "5362": 220, "1528": 220, "4720649335834727": 220, "264883828589849": 220, "is_succes": [220, 227], "qscore_result": 220, "5759620786516855": 220, "13942395641806907": 220, "5666397249858852": 220, "09938021346738757": 220, "536231071484655": 220, "13823427614487907": 220, "multipartit": 221, "One": [221, 227], "larger": 221, "leibfri": 221, "et": 221, "al": 221, "six": 221, "atom": 221, "schr\u00f6dinger": 221, "cat": 221, "natur": 221, "2005": 221, "offer": [221, 230], "verif": [221, 229, 231], "superconduct": 221, "phy": [221, 231], "commun": [221, 230], "095004": 221, "elben": 221, "statist": 221, "toolbox": 221, "probe": 221, "bodi": 221, "rev": [221, 231], "99": 221, "052323": 221, "ciruit": 221, "hadamrd": 221, "addit": [221, 223, 230, 231], "log_depth": 221, "cruz": 221, "yield": 221, "lower": [221, 223], "hous": 221, "reli": 221, "dai": 221, "thu": 221, "comparison": 221, "gme": 221, "prefer": [221, 230], "whenev": 221, "mitgat": 221, "arang": 221, "think": 221, "help": 221, "your_token": [221, 231], "mark": [221, 230], "w_": 221, "ij": [221, 223], "mathcal": 221, "until": 221, "nice": 221, "latter": 221, "utils_plot": 221, "plot_layout_fidelity_graph": 221, "711": [221, 222], "731": 221, "879": [221, 223], "463": 221, "960": 221, "248": 221, "961": 221, "fidelitii": 221, "filter": 221, "descript": [221, 230], "l0": 221, "l1": 221, "xxxxxxxxxxxxxxxx": 222, "get_iqm_backend": [222, 223], "300": [222, 223], "graph_stat": 222, "benchmark_graphst": 222, "run_graphst": 222, "749": 222, "396": [222, 224], "402": 222, "332": 222, "020": 222, "155": 222, "705": 222, "result_graphst": 222, "042": 222, "fetch": 222, "ok": 222, "font_manag": 222, "findfont": 222, "font": 222, "famili": 222, "stixgener": 222, "fall": 222, "back": 222, "dejavu": 222, "san": 222, "stixnonunicod": 222, "494": 222, "stixsizeonesym": 222, "stixsizetwosym": 222, "stixsizethreesym": 222, "stixsizefoursym": 222, "stixsizefivesym": 222, "cmsy10": 222, "cmr10": 222, "cmtt10": 222, "518": 222, "cmmi10": 222, "521": 222, "cmb10": 222, "524": 222, "cmss10": 222, "cmex10": 222, "mono": 222, "351": 222, "percentag": 222, "idx": 222, "max_neg": 222, "84": 222, "86": 222, "74": 222, "79": 222, "73": 222, "66": 222, "65": 222, "83": 222, "69": 222, "94": 222, "76": 222, "82": 222, "91": 222, "max_negativities_iqm_backend_20250325": 222, "160833": 222, "max_negativities_graph_20250325": 222, "lowest": 222, "resconstruct": 222, "observation_dict": 222, "ob": 222, "argsort": 222, "lowest_negativity_pair": 222, "highest_negativity_pair": 222, "all_projected_qubit": 222, "all_pair_group": 222, "all_neighbor_group": 222, "all_tomography_st": 222, "all_neg": 222, "bootstrapped_averag": 222, "adjust": 222, "06e": 222, "3206842864916416": 222, "31010765308352356": 222, "93e": 222, "3542183495445777": 222, "3539253716950112": 222, "53e": 222, "3888948376922817": 222, "38736774049571426": 222, "40e": 222, "43361445043616353": 222, "4196633945881397": 222, "41e": 222, "43662497937638245": 222, "42249850678510703": 222, "90e": [222, 223], "37169789059353975": 222, "36979367489991855": 222, "54e": 222, "38686144121566973": 222, "379324805728086": 222, "79e": 222, "39594160382229693": 222, "3931510385413373": 222, "97e": 222, "4092514317610637": 222, "4086540198375821": 222, "50e": 222, "36885658775672914": 222, "35382192582939426": 222, "08e": 222, "33451241682265326": 222, "32543228989306544": 222, "36671508133810615": 222, "36709383454659233": 222, "77e": 222, "32608570801001885": 222, "3213134253456277": 222, "29e": 222, "3566393931240753": 222, "3543493221398908": 222, "81e": 222, "3767486702923495": 222, "35860149933340935": 222, "3341624640356816": 222, "33262962066733953": 222, "00e": 222, "3486521211655147": 222, "3186675847362068": 222, "71e": 222, "39469814069723197": 222, "39099102345993036": 222, "13e": 222, "32804598413012276": 222, "3219124989220279": 222, "24e": 222, "3668085274286376": 222, "36257096650435117": 222, "62e": 222, "3732632016003694": 222, "35702785889177086": 222, "91e": 222, "3465755742920084": 222, "3416698385772142": 222, "17e": 222, "32654059296341725": 222, "30487999669484334": 222, "35e": 222, "39553971118808906": 222, "38203311102738585": 222, "3803202427020316": 222, "37715389665511634": 222, "76e": 222, "37343498488547655": 222, "35586222167388737": 222, "60e": 222, "41534546787652044": 222, "3993565114966017": 222, "45e": 222, "4134082416427767": 222, "398899780892523": 222, "55e": 222, "3810499300589416": 222, "3755024431288029": 222, "34e": 222, "37452627891460544": 222, "3671820250131137": 222, "q_0": 222, "\u03c0": [222, 223], "q_1": [222, 223], "q_2": [222, 223], "q_3": 222, "q_4": 222, "q_5": 222, "q_6": 222, "q_7": 222, "q_8": 222, "q_9": 222, "q_10": 222, "q_11": 222, "q_12": 222, "q_13": 222, "q_14": 222, "q_15": 222, "q_16": 222, "q_17": 222, "q_18": 222, "q_19": 222, "tomo_qubit": 222, "introduct": 223, "what": [223, 224], "background": 223, "journal": 223, "prxquantum": 223, "1103": 223, "010325": [223, 231], "compressive_gst": 223, "show_figur": 223, "iqmfakeadoni": 223, "iqmfakeapollo": 223, "k_i": 223, "trigger": 223, "benefit": 223, "less": [223, 225], "captur": 223, "trustworthi": 223, "veri": 223, "consum": 223, "minimal_1q_gst": 223, "minimal_2q_gst": 223, "2qxyicz": 223, "Be": 223, "extra": 223, "787": 223, "143": 223, "146": [223, 224], "092": 223, "49it": 223, "criterion": 223, "deepcopi": 223, "benchmark_rk1": 223, "result_rk1": 223, "63it": 223, "18e": 223, "582": 223, "uncertaintit": 223, "restult": 223, "average_gate_fidelity_idl": 223, "qb1": 223, "crosstalk_compon": 223, "qb1__qb2": 223, "99786": 223, "nan": 223, "diamond_distance_idl": 223, "00482": 223, "unitarity_idl": 223, "99433": 223, "average_gate_fidelity_rx_pi_2": 223, "99423": 223, "diamond_distance_rx_pi_2": 223, "00819": 223, "unitarity_rx_pi_2": 223, "98472": 223, "qb2": 223, "99594": 223, "00645": 223, "98929": 223, "average_gate_fidelity_ry_pi_2": 223, "99514": 223, "diamond_distance_ry_pi_2": 223, "00755": 223, "unitarity_ry_pi_2": 223, "98716": 223, "99569": 223, "00566": 223, "9886": 223, "average_gate_fidelity_cz": 223, "9903": 223, "diamond_distance_cz": 223, "01348": 223, "unitarity_cz": 223, "97447": 223, "mean_tvd_estimate_data": 223, "02108": 223, "mean_tvd_target_data": 223, "05824": 223, "povm_diamond_dist": 223, "05872": 223, "state_trace_dist": 223, "02263": 223, "results_layout_": 223, "raw_kraus_oper": 223, "raw_gat": 223, "raw_povm": 223, "raw_stat": 223, "gauge_opt_g": 223, "gauge_opt_gates_pauli_basi": 223, "gauge_opt_povm": 223, "gauge_opt_st": 223, "target_g": 223, "target_gates_pauli_basi": 223, "target_povm": 223, "target_st": 223, "main_mgst_tim": 223, "gauge_optimization_tim": 223, "choi_ev": 223, "full_metr": 223, "raw_result": 223, "array_str": 223, "precis": 223, "suppress_smal": 223, "001j": 223, "002j": 223, "003j": 223, "004j": 223, "005j": 223, "These": 223, "diplai": 223, "disc": 223, "represent": 223, "sinlg": 223, "g_": 223, "p_i": 223, "p_j": 223, "_gate_metr": 223, "_choi_eigenvalu": 223, "_other_metr": 223, "_process_matrix_0": 223, "_process_matrix_1": 223, "_process_matrix_2": 223, "_process_matrix_3": 223, "_process_matrix_4": 223, "_process_matrix_5": 223, "_spam_matrices_r": 223, "_spam_matrices_imag": 223, "quad": 223, "h_": 223, "sigma_": 223, "sigma_i": 223, "sigma_x": 223, "sigma_z": 223, "perfect": 223, "puls": 223, "enspac": 223, "foral": 223, "neq": 223, "exammpl": 223, "rx_pi": 223, "fig_1": 223, "_rx_pi_2": 223, "qb1_hamiltonian": 223, "fig_2": 223, "qb1_largest_coherent_err": 223, "_idl": 223, "qb2_hamiltonian": 223, "qb2_largest_coherent_err": 223, "_ry_pi_2": 223, "_cz": 223, "qb1__qb2_hamiltonian": 223, "qb1__qb2_largest_coherent_err": 223, "altern": 223, "ourselv": 223, "xyi": 223, "realist": 223, "instruct": 223, "gate_list": 223, "indentif": 223, "rx": 223, "ry": 223, "whole": [223, 230], "contrast": 223, "reason": [223, 230], "outsid": 223, "conflict": 223, "inconsist": 223, "furthermor": 223, "custom_1q_gst": 223, "889": [223, 225], "43it": 223, "88e": 223, "005": [223, 224], "064": 224, "121": 224, "954": 224, "376": 224, "9975073376613797": 224, "9957157328789242": 224, "9976959612386156": 224, "9957310522299055": 224, "752861001879659e": 224, "028839025109517e": 224, "64196778583225e": 224, "243656712565855e": 224, "know": 224, "640": 224, "842": [224, 225], "740": 224, "9798030906041997": 224, "9431232937255942": 224, "9840858225184934": 224, "945382422883015": 224, "174": 224, "038": 224, "215": [224, 225], "706": 224, "441": 224, "9344679810705316": 224, "9463377694591251": 224, "9267928870925659": 224, "943379008472002": 224, "947": 225, "646": 225, "365": 225, "428": 225, "940": 225, "944": 225, "331": 225, "096": 225, "651": 225, "343": 225, "214": 225, "attr_kei": [225, 227], "depth_2": 225, "14302134513855": 225, "007565975189208984": 225, "06883907318115234": 225, "f8d9d789": 225, "0e9a": 225, "4086": 225, "ab36": 225, "685064a7b66": 225, "depth_4": 225, "0004930496215820312": 225, "0007040500640869141": 225, "87e367b7": 225, "c3ae": 225, "4457": 225, "8a2d": 225, "7b169c528033": 225, "depth_8": 225, "0004889965057373047": 225, "0005979537963867188": 225, "d84330c9": 225, "101f": 225, "40ff": 225, "bea8": 225, "f5e4c0b41527": 225, "depth_16": 225, "0004627704620361328": 225, "0006148815155029297": 225, "1f58b4a0": 225, "fb16": 225, "4d12": 225, "a9e8": 225, "c9263da52418": 225, "depth_32": 225, "00047278404235839844": 225, "0005419254302978516": 225, "4e43834b": 225, "5694": 225, "4c6d": 225, "8a83": 225, "796913d67e40": 225, "depth_64": 225, "000469207763671875": 225, "0005609989166259766": 225, "036e1dd": 225, "ca95": 225, "42a1": 225, "ab68": 225, "30a243f6b4ba": 225, "depth_128": 225, "0004668235778808594": 225, "0005328655242919922": 225, "13a59ca8": 225, "2ab0": 225, "4de8": 225, "a643": 225, "5b3f318f03d4": 225, "depth_256": 225, "0004749298095703125": 225, "e673defd": 225, "039c": 225, "4c37": 225, "9ef3": 225, "d4734436f39a": 225, "depth_512": 225, "0005099773406982422": 225, "0005548000335693359": 225, "d83ac439": 225, "2929": 225, "4d78": 225, "b52b": 225, "f297873c3e44": 225, "9710221314803044": 225, "001462493086363885": 225, "9473471466489307": 225, "00285118172031131": 225, "xxxxxxxxxxxxxx": 226, "put": 226, "run0_qscor": 226, "result0_qscor": 226, "rem_quasidistribut": 227, "time_transpil": 227, "time_batch": 227, "cumulative_average_heavy_output_prob": 227, "cumulative_stddev_heavy_output_prob": 227, "rem_cumulative_average_heavy_output_prob": 227, "rem_cumulative_stddev_heavy_output_prob": 227, "rem_heavy_output_prob": 227, "60546875": 227, "71875": 227, "578125": 227, "74609375": 227, "6328125": 227, "546875": 227, "56640625": 227, "76953125": 227, "75390625": 227, "67578125": 227, "6171875": 227, "55078125": 227, "64453125": 227, "6875": 227, "7109375": 227, "82421875": 227, "76171875": 227, "6484375": 227, "6015625": 227, "73828125": 227, "63671875": 227, "69140625": 227, "61328125": 227, "734375": 227, "57421875": 227, "6953125": 227, "55859375": 227, "69921875": 227, "609375": 227, "671875": 227, "77734375": 227, "6796875": 227, "62890625": 227, "6640625": 227, "66796875": 227, "62109375": 227, "703125": 227, "68359375": 227, "58984375": 227, "71484375": 227, "59375": 227, "79296875": 227, "66015625": 227, "65234375": 227, "59765625": 227, "65625": 227, "84765625": 227, "5859375": 227, "5625": 227, "72265625": 227, "640625": 227, "58203125": 227, "54296875": 227, "8203125": 227, "78515625": 227, "7265625": 227, "53515625": 227, "5703125": 227, "5546875": 227, "5390625": 227, "828125": 227, "80859375": 227, "765625": 227, "81640625": 227, "5234375": 227, "73046875": 227, "87890625": 227, "7890625": 227, "7734375": 227, "7421875": 227, "70703125": 227, "50390625": 227, "7578125": 227, "52734375": 227, "78125": 227, "8125": 227, "average_heavy_output_prob": 227, "649203125": 227, "021341903733745705": 227, "672703125": 227, "020984452845629994": 227, "rem_average_heavy_output_prob": 227, "67954478782619": 227, "020869291754367154": 227, "rem_is_succes": 227, "rem_qv_result": 227, "710149650958595": 227, "020289757228807877": 227, "vanilla_4_qubits_": 227, "vanilla_rem_4_qubits_": 227, "Or": 227, "onc": [227, 231], "collect": 228, "demonstr": 228, "rest": 228, "summari": [228, 229], "releas": 229, "date": [229, 230], "finland": 229, "tool": [229, 231], "changelog": 229, "search": 229, "januari": 230, "2004": 230, "AND": 230, "FOR": 230, "reproduct": 230, "shall": 230, "licensor": 230, "owner": 230, "entiti": 230, "author": 230, "grant": 230, "legal": 230, "power": 230, "indirect": 230, "caus": 230, "contract": 230, "ownership": 230, "fifti": 230, "percent": 230, "outstand": 230, "iii": 230, "benefici": 230, "exercis": 230, "mechan": 230, "transform": 230, "translat": 230, "media": 230, "authorship": 230, "attach": 230, "appendix": 230, "editori": 230, "revis": 230, "elabor": 230, "remain": 230, "link": 230, "bind": 230, "interfac": 230, "thereof": 230, "contribut": 230, "intention": 230, "inclus": 230, "behalf": 230, "electron": 230, "verbal": 230, "mail": 230, "track": 230, "discuss": 230, "exclud": 230, "conspicu": 230, "Not": 230, "contributor": 230, "whom": 230, "been": 230, "incorpor": 230, "subject": 230, "herebi": 230, "perpetu": 230, "worldwid": 230, "charg": 230, "royalti": 230, "irrevoc": 230, "reproduc": 230, "publicli": 230, "sublicens": 230, "patent": 230, "sell": 230, "transfer": 230, "claim": 230, "infring": 230, "alon": 230, "institut": 230, "litig": 230, "counterclaim": 230, "lawsuit": 230, "alleg": 230, "contributori": 230, "redistribut": 230, "medium": 230, "meet": 230, "recipi": 230, "carri": 230, "promin": 230, "retain": 230, "trademark": 230, "pertain": 230, "readabl": 230, "wherev": 230, "third": 230, "parti": 230, "appear": 230, "content": 230, "alongsid": 230, "addendum": 230, "constru": 230, "compli": 230, "explicitli": 230, "notwithstand": 230, "noth": 230, "herein": 230, "supersed": 230, "agreement": 230, "regard": 230, "trade": 230, "servic": [230, 231], "customari": 230, "disclaim": 230, "merchant": 230, "particular": 230, "respons": 230, "appropri": 230, "risk": 230, "liabil": 230, "event": 230, "tort": 230, "neglig": 230, "deliber": [230, 231], "grossli": 230, "liabl": 230, "damag": 230, "special": 230, "incident": 230, "consequenti": 230, "aris": 230, "inabl": 230, "loss": 230, "goodwil": 230, "stoppag": 230, "failur": 230, "malfunct": 230, "commerci": 230, "even": 230, "advis": 230, "fee": 230, "indemn": 230, "oblig": 230, "indemnifi": 230, "defend": 230, "hold": 230, "harmless": 230, "incur": 230, "assert": 230, "boilerpl": 230, "enclos": 230, "bracket": 230, "comment": 230, "syntax": 230, "archiv": 230, "repositori": [230, 231], "licenc": 230, "src": 230, "raphael": 230, "brieger": 230, "ingo": 230, "roth": 230, "martin": 230, "kliesch": 230, "comprehens": 231, "modular": 231, "easi": 231, "042311": 231, "lett": 231, "080505": 231, "prx": 231, "2023": 231, "150502": 231, "2022": 231, "holist": 231, "032328": 231, "0712": 231, "0921": 231, "2007": 231, "adv": 231, "technol": 231, "2100061": 231, "ieee": 231, "tran": 231, "eng": 231, "legaci": 231, "wrap": 231, "benchmarkexperi": 231, "uv": 231, "highli": 231, "With": 231, "machin": 231, "venv": 231, "read": 231, "prompt": 231, "suppli": 231, "txt": 231, "lock": 231, "directli": 231, "repo": 231, "pypi": 231, "lint": 231, "cicd": 231, "clone": 231, "directori": 231, "edit": 231, "docbuild": 231, "pyproject": 231, "toml": 231, "commit": 231, "upgrad": 231, "transit": 231, "cloud": 231, "prem": 231, "platform": 231, "authent": 231, "example_irb": 231, "example_experi": 231, "setup": 231, "weekli": 231, "daili": 231, "gitlab": 231, "scheduled_experi": 231}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "coherence"], [28, 0, 0, "-", "compressive_gst"], [48, 0, 0, "-", "entanglement"], [76, 0, 0, "-", "logging_config"], [77, 0, 0, "-", "optimization"], [90, 0, 0, "-", "quantum_volume"], [109, 0, 0, "-", "randomized_benchmarking"], [166, 0, 0, "-", "readout_mitigation"], [170, 0, 0, "-", "utils"], [197, 0, 0, "-", "utils_plots"], [204, 0, 0, "-", "utils_shadows"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_circuits_per_batch"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"], [4, 3, 1, "", "use_dd"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.coherence": [[20, 0, 0, "-", "coherence"]], "iqm.benchmarks.coherence.coherence": [[21, 1, 1, "", "CoherenceBenchmark"], [22, 1, 1, "", "CoherenceConfiguration"], [23, 5, 1, "", "calculate_probabilities"], [24, 5, 1, "", "coherence_analysis"], [25, 5, 1, "", "exp_decay"], [26, 5, 1, "", "fit_coherence_model"], [27, 5, 1, "", "plot_coherence"]], "iqm.benchmarks.coherence.coherence.CoherenceBenchmark": [[21, 2, 1, "", "add_all_meta_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "checkerboard_groups_from_coupling"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_coherence_circuits"]], "iqm.benchmarks.coherence.coherence.CoherenceConfiguration": [[22, 3, 1, "", "benchmark"], [22, 3, 1, "", "coherence_exp"], [22, 3, 1, "", "delays"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "optimize_sqg"], [22, 3, 1, "", "qiskit_optim_level"]], "iqm.benchmarks.compressive_gst": [[29, 0, 0, "-", "compressive_gst"], [36, 0, 0, "-", "gst_analysis"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[30, 1, 1, "", "CompressiveGST"], [31, 1, 1, "", "GSTConfiguration"], [32, 5, 1, "", "create_predefined_gate_set"], [33, 5, 1, "", "parse_gate_set"], [34, 5, 1, "", "parse_layouts"], [35, 5, 1, "", "validate_gate_context"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[30, 2, 1, "", "add_configuration_to_dataset"], [30, 2, 1, "", "analysis_function"], [30, 2, 1, "", "execute"], [30, 2, 1, "", "generate_meas_circuits"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[31, 3, 1, "", "batch_size"], [31, 3, 1, "", "benchmark"], [31, 3, 1, "", "bootstrap_samples"], [31, 3, 1, "", "convergence_criteria"], [31, 3, 1, "", "from_init"], [31, 3, 1, "", "gate_labels"], [31, 3, 1, "", "gate_set"], [31, 3, 1, "", "max_inits"], [31, 3, 1, "", "max_iterations"], [31, 3, 1, "", "model_config"], [31, 3, 1, "", "num_circuits"], [31, 3, 1, "", "opt_method"], [31, 3, 1, "", "parallel_execution"], [31, 3, 1, "", "qubit_layouts"], [31, 3, 1, "", "rank"], [31, 3, 1, "", "seq_len_list"], [31, 3, 1, "", "shots"], [31, 3, 1, "", "verbose_level"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[37, 5, 1, "", "bootstrap_errors"], [38, 5, 1, "", "dataset_counts_to_mgst_format"], [39, 5, 1, "", "generate_gate_results"], [40, 5, 1, "", "generate_non_gate_results"], [41, 5, 1, "", "generate_unit_rank_gate_results"], [42, 5, 1, "", "mgst_analysis"], [43, 5, 1, "", "pandas_results_to_observations"], [44, 5, 1, "", "process_bootstrap_samples"], [45, 5, 1, "", "process_layout"], [46, 5, 1, "", "process_plots"], [47, 5, 1, "", "run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[49, 0, 0, "-", "ghz"], [63, 0, 0, "-", "graph_states"]], "iqm.benchmarks.entanglement.ghz": [[50, 1, 1, "", "GHZBenchmark"], [51, 1, 1, "", "GHZConfiguration"], [52, 5, 1, "", "fidelity_analysis"], [53, 5, 1, "", "fidelity_ghz_coherences"], [54, 5, 1, "", "fidelity_ghz_randomized_measurements"], [55, 5, 1, "", "generate_ghz_linear"], [56, 5, 1, "", "generate_ghz_log_cruz"], [57, 5, 1, "", "generate_ghz_log_mooney"], [58, 5, 1, "", "generate_ghz_spanning_tree"], [59, 5, 1, "", "generate_ghz_star"], [60, 5, 1, "", "get_cx_map"], [61, 5, 1, "", "get_edges"], [62, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[50, 2, 1, "", "add_configuration_to_dataset"], [50, 2, 1, "", "analysis_function"], [50, 2, 1, "", "append_rms"], [50, 2, 1, "", "execute"], [50, 2, 1, "", "generate_coherence_meas_circuits"], [50, 2, 1, "", "generate_native_ghz"], [50, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[51, 3, 1, "", "benchmark"], [51, 3, 1, "", "cal_url"], [51, 3, 1, "", "custom_qubits_array"], [51, 3, 1, "", "fidelity_routine"], [51, 3, 1, "", "mit_shots"], [51, 3, 1, "", "model_config"], [51, 3, 1, "", "num_RMs"], [51, 3, 1, "", "optimize_sqg"], [51, 3, 1, "", "qiskit_optim_level"], [51, 3, 1, "", "qubit_counts"], [51, 3, 1, "", "rem"], [51, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[51, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.entanglement.graph_states": [[64, 1, 1, "", "GraphStateBenchmark"], [65, 1, 1, "", "GraphStateConfiguration"], [66, 5, 1, "", "find_edges_with_disjoint_neighbors"], [67, 5, 1, "", "generate_graph_state"], [68, 5, 1, "", "generate_minimal_edge_layers"], [69, 5, 1, "", "negativity_analysis"], [70, 5, 1, "", "plot_density_matrix"], [71, 5, 1, "", "plot_max_negativities"], [72, 5, 1, "", "plot_max_negativities_graph"], [73, 5, 1, "", "shadow_tomography_analysis"], [74, 5, 1, "", "state_tomography_analysis"], [75, 5, 1, "", "update_pauli_expectations"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[64, 2, 1, "", "add_all_circuits_to_dataset"], [64, 2, 1, "", "add_all_meta_to_dataset"], [64, 2, 1, "", "analysis_function"], [64, 2, 1, "", "execute"], [64, 2, 1, "", "generate_all_circuit_info_for_graph_state_benchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[65, 3, 1, "", "benchmark"], [65, 3, 1, "", "model_config"], [65, 3, 1, "", "n_median_of_means"], [65, 3, 1, "", "n_random_unitaries"], [65, 3, 1, "", "num_bootstraps"], [65, 3, 1, "", "qubits"], [65, 3, 1, "", "tomography"]], "iqm.benchmarks.optimization": [[78, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[79, 1, 1, "", "QScoreBenchmark"], [80, 1, 1, "", "QScoreConfiguration"], [81, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [82, 5, 1, "", "compute_expectation_value"], [83, 5, 1, "", "create_objective_function"], [84, 5, 1, "", "cut_cost_function"], [85, 5, 1, "", "get_optimal_angles"], [86, 5, 1, "", "is_successful"], [87, 5, 1, "", "plot_approximation_ratios"], [88, 5, 1, "", "qscore_analysis"], [89, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[79, 2, 1, "", "add_all_meta_to_dataset"], [79, 2, 1, "", "analysis_function"], [79, 2, 1, "", "choose_qubits_custom"], [79, 2, 1, "", "choose_qubits_naive"], [79, 2, 1, "", "execute"], [79, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[80, 3, 1, "", "REM"], [80, 3, 1, "", "benchmark"], [80, 3, 1, "", "choose_qubits_routine"], [80, 3, 1, "", "custom_qubits_array"], [80, 3, 1, "", "max_num_nodes"], [80, 3, 1, "", "min_num_nodes"], [80, 3, 1, "", "min_num_qubits"], [80, 3, 1, "", "mit_shots"], [80, 3, 1, "", "model_config"], [80, 3, 1, "", "num_instances"], [80, 3, 1, "", "num_qaoa_layers"], [80, 3, 1, "", "optimize_sqg"], [80, 3, 1, "", "qiskit_optim_level"], [80, 3, 1, "", "seed"], [80, 3, 1, "", "use_classically_optimized_angles"], [80, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[91, 0, 0, "-", "clops"], [97, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[92, 1, 1, "", "CLOPSBenchmark"], [93, 1, 1, "", "CLOPSConfiguration"], [94, 5, 1, "", "clops_analysis"], [95, 5, 1, "", "plot_times"], [96, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[92, 2, 1, "", "add_all_meta_to_dataset"], [92, 2, 1, "", "analysis_function"], [92, 2, 1, "", "append_parameterized_unitary"], [92, 2, 1, "", "assign_random_parameters_to_all"], [92, 2, 1, "", "clops_cycle"], [92, 2, 1, "", "execute"], [92, 2, 1, "", "generate_circuit_list"], [92, 2, 1, "", "generate_random_parameters"], [92, 2, 1, "", "generate_single_circuit"], [92, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[93, 3, 1, "", "benchmark"], [93, 3, 1, "", "clops_h_bool"], [93, 3, 1, "", "model_config"], [93, 3, 1, "", "num_circuits"], [93, 3, 1, "", "num_shots"], [93, 3, 1, "", "num_updates"], [93, 3, 1, "", "optimize_sqg"], [93, 3, 1, "", "physical_layout"], [93, 3, 1, "", "qiskit_optim_level"], [93, 3, 1, "", "qubits"], [93, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[98, 1, 1, "", "QuantumVolumeBenchmark"], [99, 1, 1, "", "QuantumVolumeConfiguration"], [100, 5, 1, "", "compute_heavy_output_probabilities"], [101, 5, 1, "", "cumulative_hop"], [102, 5, 1, "", "cumulative_std"], [103, 5, 1, "", "get_ideal_heavy_outputs"], [104, 5, 1, "", "get_rem_hops"], [105, 5, 1, "", "heavy_projector"], [106, 5, 1, "", "is_successful"], [107, 5, 1, "", "plot_hop_threshold"], [108, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[98, 2, 1, "", "add_all_circuits_to_dataset"], [98, 2, 1, "", "add_all_meta_to_dataset"], [98, 2, 1, "", "analysis_function"], [98, 2, 1, "", "execute"], [98, 2, 1, "", "generate_circuit_list"], [98, 2, 1, "", "generate_single_circuit"], [98, 2, 1, "", "get_rem_quasidistro"], [98, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[99, 3, 1, "", "benchmark"], [99, 3, 1, "", "choose_qubits_routine"], [99, 3, 1, "", "custom_qubits_array"], [99, 3, 1, "", "mit_shots"], [99, 3, 1, "", "model_config"], [99, 3, 1, "", "num_circuits"], [99, 3, 1, "", "num_sigmas"], [99, 3, 1, "", "optimize_sqg"], [99, 3, 1, "", "physical_layout"], [99, 3, 1, "", "qiskit_optim_level"], [99, 3, 1, "", "rem"], [99, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[110, 0, 0, "-", "clifford_rb"], [115, 0, 0, "-", "direct_rb"], [122, 0, 0, "-", "eplg"], [128, 0, 0, "-", "interleaved_rb"], [133, 0, 0, "-", "mirror_rb"], [142, 0, 0, "-", "multi_lmfit"], [147, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[111, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[112, 1, 1, "", "CliffordRBConfiguration"], [113, 1, 1, "", "CliffordRandomizedBenchmarking"], [114, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[112, 3, 1, "", "benchmark"], [112, 3, 1, "", "model_config"], [112, 3, 1, "", "num_circuit_samples"], [112, 3, 1, "", "parallel_execution"], [112, 3, 1, "", "qubits_array"], [112, 3, 1, "", "sequence_lengths"], [112, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[113, 2, 1, "", "add_all_circuits_to_dataset"], [113, 2, 1, "", "add_all_metadata_to_dataset"], [113, 2, 1, "", "analysis_function"], [113, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.direct_rb": [[116, 0, 0, "-", "direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb": [[117, 1, 1, "", "DirectRBConfiguration"], [118, 1, 1, "", "DirectRandomizedBenchmarking"], [119, 5, 1, "", "direct_rb_analysis"], [120, 5, 1, "", "generate_drb_circuits"], [121, 5, 1, "", "generate_fixed_depth_parallel_drb_circuits"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration": [[117, 3, 1, "", "benchmark"], [117, 3, 1, "", "clifford_sqg_probabilities"], [117, 3, 1, "", "densities_2q_gates"], [117, 3, 1, "", "depths"], [117, 3, 1, "", "is_eplg"], [117, 3, 1, "", "model_config"], [117, 3, 1, "", "num_circuit_samples"], [117, 3, 1, "", "parallel_execution"], [117, 3, 1, "", "qiskit_optim_level"], [117, 3, 1, "", "qubits_array"], [117, 3, 1, "", "routing_method"], [117, 3, 1, "", "shots"], [117, 3, 1, "", "sqg_gate_ensembles"], [117, 3, 1, "", "two_qubit_gate_ensembles"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking": [[118, 2, 1, "", "add_all_meta_to_dataset"], [118, 2, 1, "", "analysis_function"], [118, 2, 1, "", "assign_inputs_to_qubits"], [118, 2, 1, "", "execute"], [118, 2, 1, "", "submit_single_drb_job"]], "iqm.benchmarks.randomized_benchmarking.eplg": [[123, 0, 0, "-", "eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg": [[124, 1, 1, "", "EPLGBenchmark"], [125, 1, 1, "", "EPLGConfiguration"], [126, 5, 1, "", "eplg_analysis"], [127, 5, 1, "", "plot_layered_fidelities_graph"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark": [[124, 2, 1, "", "add_all_meta_to_dataset"], [124, 2, 1, "", "analysis_function"], [124, 2, 1, "", "execute"], [124, 2, 1, "", "validate_custom_qubits_array"], [124, 2, 1, "", "validate_random_chain_inputs"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration": [[125, 3, 1, "", "calibration_url"], [125, 3, 1, "", "chain_length"], [125, 3, 1, "", "chain_path_samples"], [125, 3, 1, "", "custom_qubits_array"], [125, 3, 1, "", "drb_circuit_samples"], [125, 3, 1, "", "drb_depths"], [125, 3, 1, "", "max_hamiltonian_path_tries"], [125, 3, 1, "", "model_config"], [125, 3, 1, "", "num_disjoint_layers"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[129, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[130, 1, 1, "", "InterleavedRBConfiguration"], [131, 1, 1, "", "InterleavedRandomizedBenchmarking"], [132, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[130, 3, 1, "", "interleaved_gate"], [130, 3, 1, "", "interleaved_gate_params"], [130, 3, 1, "", "model_config"], [130, 3, 1, "", "num_circuit_samples"], [130, 3, 1, "", "parallel_execution"], [130, 3, 1, "", "qubits_array"], [130, 3, 1, "", "sequence_lengths"], [130, 3, 1, "", "shots"], [130, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[131, 2, 1, "", "add_all_circuits_to_dataset"], [131, 2, 1, "", "add_all_meta_to_dataset"], [131, 2, 1, "", "analysis_function"], [131, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[134, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[135, 1, 1, "", "MirrorRBConfiguration"], [136, 1, 1, "", "MirrorRandomizedBenchmarking"], [137, 5, 1, "", "compute_polarizations"], [138, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [139, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [140, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [141, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[135, 3, 1, "", "benchmark"], [135, 3, 1, "", "clifford_sqg_probability"], [135, 3, 1, "", "density_2q_gates"], [135, 3, 1, "", "depths_array"], [135, 3, 1, "", "model_config"], [135, 3, 1, "", "num_circuit_samples"], [135, 3, 1, "", "num_pauli_samples"], [135, 3, 1, "", "qiskit_optim_level"], [135, 3, 1, "", "qubits_array"], [135, 3, 1, "", "routing_method"], [135, 3, 1, "", "shots"], [135, 3, 1, "", "simulation_method"], [135, 3, 1, "", "sqg_gate_ensemble"], [135, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[136, 2, 1, "", "add_all_meta_to_dataset"], [136, 2, 1, "", "analysis_function"], [136, 2, 1, "", "execute"], [136, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[143, 5, 1, "", "create_multi_dataset_params"], [144, 5, 1, "", "eval_func_single_dataset"], [145, 5, 1, "", "get_param_names_from_func_signature"], [146, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[148, 5, 1, "", "compute_inverse_clifford"], [149, 5, 1, "", "edge_grab"], [150, 5, 1, "", "estimate_survival_probabilities"], [151, 5, 1, "", "exponential_rb"], [152, 5, 1, "", "fit_decay_lmfit"], [153, 5, 1, "", "generate_all_rb_circuits"], [154, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [155, 5, 1, "", "generate_random_clifford_seq_circuits"], [156, 5, 1, "", "get_survival_probabilities"], [157, 5, 1, "", "import_native_gate_cliffords"], [158, 5, 1, "", "lmfit_minimizer"], [159, 5, 1, "", "plot_rb_decay"], [160, 5, 1, "", "relabel_qubits_array_from_zero"], [161, 5, 1, "", "submit_parallel_rb_job"], [162, 5, 1, "", "submit_sequential_rb_jobs"], [163, 5, 1, "", "survival_probabilities_parallel"], [164, 5, 1, "", "validate_irb_gate"], [165, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[167, 1, 1, "", "M3IQM"], [168, 5, 1, "", "apply_readout_error_mitigation"], [169, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[167, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[171, 5, 1, "", "bootstrap_counts"], [172, 5, 1, "", "count_2q_layers"], [173, 5, 1, "", "count_native_gates"], [174, 5, 1, "", "extract_fidelities"], [175, 5, 1, "", "generate_state_tomography_circuits"], [176, 5, 1, "", "get_Pauli_expectation"], [177, 5, 1, "", "get_active_qubits"], [178, 5, 1, "", "get_iqm_backend"], [179, 5, 1, "", "get_measurement_mapping"], [180, 5, 1, "", "get_neighbors_of_edges"], [181, 5, 1, "", "get_tomography_matrix"], [182, 5, 1, "", "marginal_distribution"], [183, 5, 1, "", "median_with_uncertainty"], [184, 5, 1, "", "perform_backend_transpilation"], [185, 5, 1, "", "random_hamiltonian_path"], [186, 5, 1, "", "reduce_to_active_qubits"], [187, 5, 1, "", "remove_directed_duplicates_to_list"], [188, 5, 1, "", "retrieve_all_counts"], [189, 5, 1, "", "retrieve_all_job_metadata"], [190, 5, 1, "", "set_coupling_map"], [191, 5, 1, "", "sort_batches_by_final_layout"], [192, 5, 1, "", "split_into_disjoint_pairs"], [193, 5, 1, "", "split_sequence_in_chunks"], [194, 5, 1, "", "submit_execute"], [195, 5, 1, "", "timeit"], [196, 5, 1, "", "xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[198, 1, 1, "", "GraphPositions"], [199, 5, 1, "", "calculate_node_radii"], [200, 5, 1, "", "draw_graph_edges"], [201, 5, 1, "", "evaluate_hamiltonian_paths"], [202, 5, 1, "", "plot_layout_fidelity_graph"], [203, 5, 1, "", "rx_to_nx_graph"]], "iqm.benchmarks.utils_plots.GraphPositions": [[198, 2, 1, "", "create_positions"], [198, 3, 1, "", "deneb_positions"], [198, 3, 1, "", "garnet_positions"], [198, 2, 1, "", "get_positions"], [198, 3, 1, "", "predefined_stations"]], "iqm.benchmarks.utils_shadows": [[205, 5, 1, "", "CUE"], [206, 5, 1, "", "get_local_shadow"], [207, 5, 1, "", "get_negativity"], [208, 5, 1, "", "local_shadow_tomography"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 215, 216, 217, 219, 220, 225, 226, 227, 229, 231], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 215, 216, 217, 219, 220, 221, 224, 225, 229, 231], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 214, 215, 217, 219, 223], "coher": [19, 20, 21, 22, 23, 24, 25, 26, 27, 218], "coherencebenchmark": 21, "coherenceconfigur": 22, "calculate_prob": 23, "coherence_analysi": 24, "exp_decai": 25, "fit_coherence_model": 26, "plot_coher": 27, "compressive_gst": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "compressivegst": 30, "gstconfigur": 31, "create_predefined_gate_set": 32, "parse_gate_set": 33, "parse_layout": 34, "validate_gate_context": 35, "gst_analysi": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "bootstrap_error": 37, "dataset_counts_to_mgst_format": 38, "generate_gate_result": 39, "generate_non_gate_result": 40, "generate_unit_rank_gate_result": 41, "mgst_analysi": 42, "pandas_results_to_observ": 43, "process_bootstrap_sampl": 44, "process_layout": 45, "process_plot": 46, "run_mgst_wrapp": 47, "entangl": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 222], "ghz": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 214, 215, 220, 221], "ghzbenchmark": 50, "ghzconfigur": 51, "fidelity_analysi": 52, "fidelity_ghz_coher": 53, "fidelity_ghz_randomized_measur": 54, "generate_ghz_linear": 55, "generate_ghz_log_cruz": 56, "generate_ghz_log_moonei": 57, "generate_ghz_spanning_tre": 58, "generate_ghz_star": 59, "get_cx_map": 60, "get_edg": 61, "plot_fidel": 62, "graph_stat": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "graphstatebenchmark": 64, "graphstateconfigur": 65, "find_edges_with_disjoint_neighbor": 66, "generate_graph_st": 67, "generate_minimal_edge_lay": 68, "negativity_analysi": 69, "plot_density_matrix": 70, "plot_max_neg": 71, "plot_max_negativities_graph": 72, "shadow_tomography_analysi": 73, "state_tomography_analysi": 74, "update_pauli_expect": 75, "logging_config": 76, "optim": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "qscore": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 220, 226], "qscorebenchmark": 79, "qscoreconfigur": 80, "calculate_optimal_angles_for_qaoa_p1": 81, "compute_expectation_valu": 82, "create_objective_funct": 83, "cut_cost_funct": 84, "get_optimal_angl": 85, "is_success": [86, 106], "plot_approximation_ratio": 87, "qscore_analysi": 88, "run_qaoa": 89, "quantum_volum": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "clop": [91, 92, 93, 94, 95, 96, 214, 215, 217, 220], "clopsbenchmark": 92, "clopsconfigur": 93, "clops_analysi": 94, "plot_tim": 95, "retrieve_clops_elapsed_tim": 96, "quantumvolumebenchmark": 98, "quantumvolumeconfigur": 99, "compute_heavy_output_prob": 100, "cumulative_hop": 101, "cumulative_std": 102, "get_ideal_heavy_output": 103, "get_rem_hop": 104, "heavy_projector": 105, "plot_hop_threshold": 107, "qv_analysi": 108, "randomized_benchmark": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "clifford_rb": [110, 111, 112, 113, 114], "cliffordrbconfigur": 112, "cliffordrandomizedbenchmark": 113, "clifford_rb_analysi": 114, "direct_rb": [115, 116, 117, 118, 119, 120, 121], "directrbconfigur": 117, "directrandomizedbenchmark": 118, "direct_rb_analysi": 119, "generate_drb_circuit": 120, "generate_fixed_depth_parallel_drb_circuit": 121, "eplg": [122, 123, 124, 125, 126, 127, 219], "eplgbenchmark": 124, "eplgconfigur": 125, "eplg_analysi": 126, "plot_layered_fidelities_graph": 127, "interleaved_rb": [128, 129, 130, 131, 132], "interleavedrbconfigur": 130, "interleavedrandomizedbenchmark": 131, "interleaved_rb_analysi": 132, "mirror_rb": [133, 134, 135, 136, 137, 138, 139, 140, 141], "mirrorrbconfigur": 135, "mirrorrandomizedbenchmark": 136, "compute_polar": 137, "generate_fixed_depth_mrb_circuit": 138, "generate_pauli_dressed_mrb_circuit": 139, "list_to_numcircuit_times_numpauli_matrix": 140, "mrb_analysi": 141, "multi_lmfit": [142, 143, 144, 145, 146], "create_multi_dataset_param": 143, "eval_func_single_dataset": 144, "get_param_names_from_func_signatur": 145, "multi_dataset_residu": 146, "randomized_benchmarking_common": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "compute_inverse_clifford": 148, "edge_grab": 149, "estimate_survival_prob": 150, "exponential_rb": 151, "fit_decay_lmfit": 152, "generate_all_rb_circuit": 153, "generate_fixed_depth_parallel_rb_circuit": 154, "generate_random_clifford_seq_circuit": 155, "get_survival_prob": 156, "import_native_gate_clifford": 157, "lmfit_minim": 158, "plot_rb_decai": 159, "relabel_qubits_array_from_zero": 160, "submit_parallel_rb_job": 161, "submit_sequential_rb_job": 162, "survival_probabilities_parallel": 163, "validate_irb_g": 164, "validate_rb_qubit": 165, "readout_mitig": [166, 167, 168, 169], "m3iqm": 167, "apply_readout_error_mitig": 168, "readout_error_m3": 169, "util": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "bootstrap_count": 171, "count_2q_lay": 172, "count_native_g": 173, "extract_fidel": 174, "generate_state_tomography_circuit": 175, "get_pauli_expect": 176, "get_active_qubit": 177, "get_iqm_backend": 178, "get_measurement_map": 179, "get_neighbors_of_edg": 180, "get_tomography_matrix": 181, "marginal_distribut": 182, "median_with_uncertainti": 183, "perform_backend_transpil": 184, "random_hamiltonian_path": 185, "reduce_to_active_qubit": 186, "remove_directed_duplicates_to_list": 187, "retrieve_all_count": 188, "retrieve_all_job_metadata": 189, "set_coupling_map": 190, "sort_batches_by_final_layout": 191, "split_into_disjoint_pair": 192, "split_sequence_in_chunk": 193, "submit_execut": 194, "timeit": 195, "xrvariable_to_count": 196, "utils_plot": [197, 198, 199, 200, 201, 202, 203], "graphposit": 198, "calculate_node_radii": 199, "draw_graph_edg": 200, "evaluate_hamiltonian_path": 201, "plot_layout_fidelity_graph": 202, "rx_to_nx_graph": 203, "utils_shadow": [204, 205, 206, 207, 208], "cue": 205, "get_local_shadow": 206, "get_neg": 207, "local_shadow_tomographi": 208, "changelog": 209, "version": 209, "2": [209, 211], "49": 209, "48": 209, "47": 209, "46": 209, "45": 209, "44": 209, "43": 209, "42": 209, "41": 209, "40": 209, "39": 209, "38": 209, "37": 209, "36": 209, "35": 209, "34": 209, "33": 209, "32": 209, "31": 209, "30": 209, "29": 209, "28": 209, "27": 209, "26": 209, "25": 209, "24": 209, "23": 209, "22": 209, "21": 209, "20": 209, "19": 209, "18": 209, "17": 209, "16": 209, "15": 209, "14": 209, "13": 209, "12": 209, "11": 209, "10": 209, "9": 209, "8": 209, "7": 209, "6": 209, "5": 209, "4": 209, "3": 209, "1": [209, 223], "0": 209, "develop": [210, 231], "qubit": [211, 222], "clifford": [211, 214, 216, 220], "group": 211, "decomposit": 211, "gener": [211, 217, 225, 227], "1q": [211, 224], "2q": [211, 224], "dump": 211, "pickl": 211, "file": 211, "load": 211, "count": 211, "element": 211, "A": 211, "wai": 211, "work": 211, "out": [211, 223], "invers": 211, "sequenc": 211, "design": 211, "condit": 211, "how": 212, "make": 212, "your": 212, "own": 212, "devic": 213, "spark": 214, "connect": [214, 215], "backend": [214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227], "state": [214, 215, 220, 221, 222], "fidel": [214, 215, 219, 220, 221], "quantum": [214, 215, 220, 227], "volum": [214, 215, 220, 227], "layer": [214, 215, 217, 219], "oper": [214, 215, 217], "per": [214, 215, 217, 219], "second": [214, 215, 217], "random": [214, 216, 219, 220, 224, 225], "interleav": [214, 220, 224], "irb": [214, 224], "q": [214, 215, 226], "score": [214, 215, 226], "summari": [214, 215, 220], "star": 215, "crb": 216, "choos": [216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227], "defin": [216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227], "set": [216, 217, 219, 220, 223, 225, 226, 227], "token": [216, 217, 219, 220, 225, 226, 227], "us": [216, 217, 219, 220, 222, 225, 226, 227, 231], "reson": [216, 217, 219, 220, 225, 226, 227], "configur": [216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227], "run": [216, 217, 218, 219, 221, 222, 224, 225, 226, 227], "experi": [216, 217, 218, 219, 222, 223, 224, 225, 226, 227], "perform": [216, 217, 218, 219, 222, 226, 227], "analysi": [216, 217, 218, 219, 222, 226, 227], "list": [217, 225], "all": [217, 219, 222, 223, 225], "kei": [217, 225], "attribut": [217, 222, 225], "dataset": [217, 222, 225], "The": [217, 225], "observ": [217, 223, 225], "object": [217, 225], "contain": [217, 225], "result": [217, 218, 221, 223, 224, 225], "plot": [217, 218, 219, 222, 223, 225, 227], "error": 219, "gate": [219, 223, 224], "inspect": [219, 222], "final": [219, 223], "visual": 219, "select": 219, "drb": 219, "decai": 219, "sampl": [219, 222], "parallel": 219, "notebook": [220, 231], "mirror": [220, 225], "greenberg": 221, "horn": 221, "zeiling": 221, "definit": 221, "access": [221, 223], "graph": 222, "bipartit": 222, "displai": 222, "maximum": 222, "neg": 222, "pair": 222, "avail": 222, "If": 222, "tomographi": [222, 223], "bootstrap": 222, "bia": 222, "differ": 222, "between": 222, "each": [222, 223], "mean": 222, "measur": 222, "some": 222, "particular": 222, "pauli": 222, "compress": 223, "gst": 223, "minim": 223, "execut": 223, "": 223, "examin": 223, "high": 223, "level": 223, "store": 223, "estim": 223, "further": 223, "process": 223, "interpret": 223, "rank": 223, "creat": 223, "custom": 223, "context": 223, "check": 223, "matrix": 223, "correspond": 223, "pi": 223, "rotat": 223, "around": 223, "y": 223, "axi": 223, "analyz": [224, 225], "non": 224, "nativ": 224, "mrb": 225, "rb": 225, "qv": 227, "exampl": 228, "content": 229, "indic": 229, "tabl": 229, "licens": 230, "instal": 231, "latest": 231, "releas": 231, "option": 231, "depend": 231, "chang": 231, "character": 231, "physic": 231, "hardwar": 231, "jupyt": 231, "python": 231, "script": 231, "schedul": 231, "ci": 231, "cd": 231, "pipelin": 231}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.coherence": [[19, "module-iqm.benchmarks.coherence"]], "iqm.benchmarks.coherence.coherence": [[20, "module-iqm.benchmarks.coherence.coherence"]], "iqm.benchmarks.coherence.coherence.CoherenceBenchmark": [[21, "iqm-benchmarks-coherence-coherence-coherencebenchmark"]], "iqm.benchmarks.coherence.coherence.CoherenceConfiguration": [[22, "iqm-benchmarks-coherence-coherence-coherenceconfiguration"]], "iqm.benchmarks.coherence.coherence.calculate_probabilities": [[23, "iqm-benchmarks-coherence-coherence-calculate-probabilities"]], "iqm.benchmarks.coherence.coherence.coherence_analysis": [[24, "iqm-benchmarks-coherence-coherence-coherence-analysis"]], "iqm.benchmarks.coherence.coherence.exp_decay": [[25, "iqm-benchmarks-coherence-coherence-exp-decay"]], "iqm.benchmarks.coherence.coherence.fit_coherence_model": [[26, "iqm-benchmarks-coherence-coherence-fit-coherence-model"]], "iqm.benchmarks.coherence.coherence.plot_coherence": [[27, "iqm-benchmarks-coherence-coherence-plot-coherence"]], "iqm.benchmarks.compressive_gst": [[28, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[29, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[30, "iqm-benchmarks-compressive-gst-compressive-gst-compressivegst"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[31, "iqm-benchmarks-compressive-gst-compressive-gst-gstconfiguration"]], "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set": [[32, "iqm-benchmarks-compressive-gst-compressive-gst-create-predefined-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set": [[33, "iqm-benchmarks-compressive-gst-compressive-gst-parse-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts": [[34, "iqm-benchmarks-compressive-gst-compressive-gst-parse-layouts"]], "iqm.benchmarks.compressive_gst.compressive_gst.validate_gate_context": [[35, "iqm-benchmarks-compressive-gst-compressive-gst-validate-gate-context"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[36, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors": [[37, "iqm-benchmarks-compressive-gst-gst-analysis-bootstrap-errors"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format": [[38, "iqm-benchmarks-compressive-gst-gst-analysis-dataset-counts-to-mgst-format"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results": [[39, "iqm-benchmarks-compressive-gst-gst-analysis-generate-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results": [[40, "iqm-benchmarks-compressive-gst-gst-analysis-generate-non-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results": [[41, "iqm-benchmarks-compressive-gst-gst-analysis-generate-unit-rank-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis": [[42, "iqm-benchmarks-compressive-gst-gst-analysis-mgst-analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations": [[43, "iqm-benchmarks-compressive-gst-gst-analysis-pandas-results-to-observations"]], "iqm.benchmarks.compressive_gst.gst_analysis.process_bootstrap_samples": [[44, "iqm-benchmarks-compressive-gst-gst-analysis-process-bootstrap-samples"]], "iqm.benchmarks.compressive_gst.gst_analysis.process_layout": [[45, "iqm-benchmarks-compressive-gst-gst-analysis-process-layout"]], "iqm.benchmarks.compressive_gst.gst_analysis.process_plots": [[46, "iqm-benchmarks-compressive-gst-gst-analysis-process-plots"]], "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper": [[47, "iqm-benchmarks-compressive-gst-gst-analysis-run-mgst-wrapper"]], "iqm.benchmarks.entanglement": [[48, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[49, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[50, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[51, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[52, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[53, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[54, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[55, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[56, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[57, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[58, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[59, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[60, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[61, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[62, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[63, "module-iqm.benchmarks.entanglement.graph_states"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[64, "iqm-benchmarks-entanglement-graph-states-graphstatebenchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[65, "iqm-benchmarks-entanglement-graph-states-graphstateconfiguration"]], "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors": [[66, "iqm-benchmarks-entanglement-graph-states-find-edges-with-disjoint-neighbors"]], "iqm.benchmarks.entanglement.graph_states.generate_graph_state": [[67, "iqm-benchmarks-entanglement-graph-states-generate-graph-state"]], "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers": [[68, "iqm-benchmarks-entanglement-graph-states-generate-minimal-edge-layers"]], "iqm.benchmarks.entanglement.graph_states.negativity_analysis": [[69, "iqm-benchmarks-entanglement-graph-states-negativity-analysis"]], "iqm.benchmarks.entanglement.graph_states.plot_density_matrix": [[70, "iqm-benchmarks-entanglement-graph-states-plot-density-matrix"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities": [[71, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph": [[72, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities-graph"]], "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis": [[73, "iqm-benchmarks-entanglement-graph-states-shadow-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis": [[74, "iqm-benchmarks-entanglement-graph-states-state-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations": [[75, "iqm-benchmarks-entanglement-graph-states-update-pauli-expectations"]], "iqm.benchmarks.logging_config": [[76, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[77, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[78, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[79, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[80, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[81, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[82, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[83, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[84, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[85, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[86, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[87, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[88, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[89, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[90, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[91, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[92, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[93, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[94, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[95, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[96, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[97, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[98, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[99, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[100, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[101, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[102, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[103, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[104, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[105, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[106, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[107, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[108, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[109, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[110, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[111, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[112, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[113, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[114, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.direct_rb": [[115, "module-iqm.benchmarks.randomized_benchmarking.direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb": [[116, "module-iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration": [[117, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-directrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking": [[118, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-directrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis": [[119, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-direct-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits": [[120, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-generate-drb-circuits"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits": [[121, "iqm-benchmarks-randomized-benchmarking-direct-rb-direct-rb-generate-fixed-depth-parallel-drb-circuits"]], "iqm.benchmarks.randomized_benchmarking.eplg": [[122, "module-iqm.benchmarks.randomized_benchmarking.eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg": [[123, "module-iqm.benchmarks.randomized_benchmarking.eplg.eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark": [[124, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-eplgbenchmark"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration": [[125, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-eplgconfiguration"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis": [[126, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-eplg-analysis"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph": [[127, "iqm-benchmarks-randomized-benchmarking-eplg-eplg-plot-layered-fidelities-graph"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[128, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[129, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[130, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[131, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[132, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[133, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[134, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[135, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[136, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[137, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[138, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[139, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[140, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[141, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[142, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[143, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[144, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[145, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[146, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[147, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[148, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab": [[149, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[150, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[151, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[152, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[153, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[154, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[155, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[156, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[157, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[158, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[159, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[160, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[161, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[162, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[163, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[164, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[165, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[166, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[167, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[168, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[169, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[170, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.bootstrap_counts": [[171, "iqm-benchmarks-utils-bootstrap-counts"]], "iqm.benchmarks.utils.count_2q_layers": [[172, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[173, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.extract_fidelities": [[174, "iqm-benchmarks-utils-extract-fidelities"]], "iqm.benchmarks.utils.generate_state_tomography_circuits": [[175, "iqm-benchmarks-utils-generate-state-tomography-circuits"]], "iqm.benchmarks.utils.get_Pauli_expectation": [[176, "iqm-benchmarks-utils-get-pauli-expectation"]], "iqm.benchmarks.utils.get_active_qubits": [[177, "iqm-benchmarks-utils-get-active-qubits"]], "iqm.benchmarks.utils.get_iqm_backend": [[178, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.get_measurement_mapping": [[179, "iqm-benchmarks-utils-get-measurement-mapping"]], "iqm.benchmarks.utils.get_neighbors_of_edges": [[180, "iqm-benchmarks-utils-get-neighbors-of-edges"]], "iqm.benchmarks.utils.get_tomography_matrix": [[181, "iqm-benchmarks-utils-get-tomography-matrix"]], "iqm.benchmarks.utils.marginal_distribution": [[182, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.median_with_uncertainty": [[183, "iqm-benchmarks-utils-median-with-uncertainty"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[184, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.random_hamiltonian_path": [[185, "iqm-benchmarks-utils-random-hamiltonian-path"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[186, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.remove_directed_duplicates_to_list": [[187, "iqm-benchmarks-utils-remove-directed-duplicates-to-list"]], "iqm.benchmarks.utils.retrieve_all_counts": [[188, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[189, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[190, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[191, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.split_into_disjoint_pairs": [[192, "iqm-benchmarks-utils-split-into-disjoint-pairs"]], "iqm.benchmarks.utils.split_sequence_in_chunks": [[193, "iqm-benchmarks-utils-split-sequence-in-chunks"]], "iqm.benchmarks.utils.submit_execute": [[194, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[195, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[196, "iqm-benchmarks-utils-xrvariable-to-counts"]], "iqm.benchmarks.utils_plots": [[197, "module-iqm.benchmarks.utils_plots"]], "iqm.benchmarks.utils_plots.GraphPositions": [[198, "iqm-benchmarks-utils-plots-graphpositions"]], "iqm.benchmarks.utils_plots.calculate_node_radii": [[199, "iqm-benchmarks-utils-plots-calculate-node-radii"]], "iqm.benchmarks.utils_plots.draw_graph_edges": [[200, "iqm-benchmarks-utils-plots-draw-graph-edges"]], "iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths": [[201, "iqm-benchmarks-utils-plots-evaluate-hamiltonian-paths"]], "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph": [[202, "iqm-benchmarks-utils-plots-plot-layout-fidelity-graph"]], "iqm.benchmarks.utils_plots.rx_to_nx_graph": [[203, "iqm-benchmarks-utils-plots-rx-to-nx-graph"]], "iqm.benchmarks.utils_shadows": [[204, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.utils_shadows.CUE": [[205, "iqm-benchmarks-utils-shadows-cue"]], "iqm.benchmarks.utils_shadows.get_local_shadow": [[206, "iqm-benchmarks-utils-shadows-get-local-shadow"]], "iqm.benchmarks.utils_shadows.get_negativity": [[207, "iqm-benchmarks-utils-shadows-get-negativity"]], "iqm.benchmarks.utils_shadows.local_shadow_tomography": [[208, "iqm-benchmarks-utils-shadows-local-shadow-tomography"]], "Changelog": [[209, "changelog"]], "Version 2.49": [[209, "version-2-49"]], "Version 2.48": [[209, "version-2-48"]], "Version 2.47": [[209, "version-2-47"]], "Version 2.46": [[209, "version-2-46"]], "Version 2.45": [[209, "version-2-45"]], "Version 2.44": [[209, "version-2-44"]], "Version 2.43": [[209, "version-2-43"]], "Version 2.42": [[209, "version-2-42"]], "Version 2.41": [[209, "version-2-41"]], "Version 2.40": [[209, "version-2-40"]], "Version 2.39": [[209, "version-2-39"]], "Version 2.38": [[209, "version-2-38"]], "Version 2.37": [[209, "version-2-37"]], "Version 2.36": [[209, "version-2-36"]], "Version 2.35": [[209, "version-2-35"]], "Version 2.34": [[209, "version-2-34"]], "Version 2.33": [[209, "version-2-33"]], "Version 2.32": [[209, "version-2-32"]], "Version 2.31": [[209, "version-2-31"]], "Version 2.30": [[209, "version-2-30"]], "Version 2.29": [[209, "version-2-29"]], "Version 2.28": [[209, "version-2-28"]], "Version 2.27": [[209, "version-2-27"]], "Version 2.26": [[209, "version-2-26"]], "Version 2.25": [[209, "version-2-25"]], "Version 2.24": [[209, "version-2-24"]], "Version 2.23": [[209, "version-2-23"]], "Version 2.22": [[209, "version-2-22"]], "Version 2.21": [[209, "version-2-21"]], "Version 2.20": [[209, "version-2-20"]], "Version 2.19": [[209, "version-2-19"]], "Version 2.18": [[209, "version-2-18"]], "Version 2.17": [[209, "version-2-17"]], "Version 2.16": [[209, "version-2-16"]], "Version 2.15": [[209, "version-2-15"]], "Version 2.14": [[209, "version-2-14"]], "Version 2.13": [[209, "version-2-13"]], "Version 2.12": [[209, "version-2-12"]], "Version 2.11": [[209, "version-2-11"]], "Version 2.10": [[209, "version-2-10"]], "Version 2.9": [[209, "version-2-9"]], "Version 2.8": [[209, "version-2-8"]], "Version 2.7": [[209, "version-2-7"]], "Version 2.6": [[209, "version-2-6"]], "Version 2.5": [[209, "version-2-5"]], "Version 2.4": [[209, "version-2-4"]], "Version 2.3": [[209, "version-2-3"]], "Version 2.2": [[209, "version-2-2"]], "Version 2.1": [[209, "version-2-1"]], "Version 2.0": [[209, "version-2-0"]], "Version 1.12": [[209, "version-1-12"]], "Version 1.11": [[209, "version-1-11"]], "Version 1.10": [[209, "version-1-10"]], "Version 1.9": [[209, "version-1-9"]], "Version 1.8": [[209, "version-1-8"]], "Version 1.7": [[209, "version-1-7"]], "Version 1.6": [[209, "version-1-6"]], "Version 1.5": [[209, "version-1-5"]], "Version 1.4": [[209, "version-1-4"]], "Version 1.3": [[209, "version-1-3"]], "Version 1.2": [[209, "version-1-2"]], "Version 1.1": [[209, "version-1-1"]], "Version 1.0": [[209, "version-1-0"]], "Development": [[210, "development"]], "2-Qubit Clifford Group Decomposition": [[211, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[211, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[211, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[211, "dump-on-a-pickle-file"]], "Load": [[211, "load"]], "Count elements": [[211, "count-elements"]], "2Q": [[211, "q"]], "1Q": [[211, "id1"]], "A way to work out the inverse of sequences": [[211, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[211, "design-condition"]], "How to make your own benchmark?": [[212, "how-to-make-your-own-benchmark"]], "Devices": [[213, "devices"]], "Benchmarking IQM Spark": [[214, "benchmarking-iqm-spark"]], "Connect to the backend": [[214, "connect-to-the-backend"], [215, "connect-to-the-backend"]], "GHZ state fidelity": [[214, "ghz-state-fidelity"], [215, "ghz-state-fidelity"], [220, "ghz-state-fidelity"]], "Quantum Volume": [[214, "quantum-volume"], [215, "quantum-volume"], [220, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[214, "circuit-layer-operations-per-second-clops"], [215, "circuit-layer-operations-per-second-clops"], [217, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[214, "clifford-randomized-benchmarking"], [220, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[214, "interleaved-randomized-benchmarking-irb"], [224, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[214, "q-score"], [215, "q-score"], [226, "q-score"]], "Summary": [[214, "summary"], [215, "summary"]], "Benchmarking IQM Star": [[215, "benchmarking-iqm-star"]], "Clifford Randomized Benchmarking (CRB)": [[216, "clifford-randomized-benchmarking-crb"]], "Choose (or define) a backend": [[216, "choose-or-define-a-backend"], [217, "choose-or-define-a-backend"], [218, "choose-or-define-a-backend"], [219, "choose-or-define-a-backend"], [220, "choose-or-define-a-backend"], [222, "choose-or-define-a-backend"], [223, "choose-or-define-a-backend"], [224, "choose-or-define-a-backend"], [225, "choose-or-define-a-backend"], [226, "choose-or-define-a-backend"], [227, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[216, "set-iqm-token-if-using-resonance"], [219, "set-iqm-token-if-using-resonance"], [220, "set-iqm-token-if-using-resonance"], [225, "set-iqm-token-if-using-resonance"], [226, "set-iqm-token-if-using-resonance"], [227, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[216, "randomized-benchmarking-configuration"], [219, "randomized-benchmarking-configuration"]], "Run the experiment": [[216, "run-the-experiment"], [217, "run-the-experiment"], [218, "run-the-experiment"], [219, "run-the-experiment"], [222, "run-the-experiment"], [225, "run-the-experiment"], [226, "run-the-experiment"], [227, "run-the-experiment"]], "Perform the analysis": [[216, "perform-the-analysis"], [219, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[217, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[217, "clops-configuration"]], "Perform Analysis": [[217, "perform-analysis"], [222, "perform-analysis"], [226, "perform-analysis"], [227, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[217, "list-all-the-keys-in-the-attributes-of-the-dataset"], [225, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[217, "the-observation-object-contains-the-benchmark-results"], [225, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[217, "generate-plots"], [225, "generate-plots"], [227, "generate-plots"]], "Coherence experiments": [[218, "coherence-experiments"]], "Coherence Configuration": [[218, "coherence-configuration"]], "Perform analysis and plot results": [[218, "perform-analysis-and-plot-results"]], "Error Per Layered Gate (EPLG)": [[219, "error-per-layered-gate-eplg"]], "Inspect all the fidelities and the final EPLG": [[219, "inspect-all-the-fidelities-and-the-final-eplg"]], "Plot a visualization of the selected layers and all the DRB decays": [[219, "plot-a-visualization-of-the-selected-layers-and-all-the-drb-decays"]], "Inspect a sample circuit (parallel DRB)": [[219, "inspect-a-sample-circuit-parallel-drb"]], "IQM Benchmarks: Summary Notebook": [[220, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[220, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[220, "mirror-randomized-benchmarking"]], "CLOPS": [[220, "clops"]], "QScore": [[220, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[221, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[221, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[221, "running-the-benchmark"]], "Accessing the results": [[221, "accessing-the-results"]], "Graph State Bipartite Entanglement": [[222, "graph-state-bipartite-entanglement"]], "Graph State Configuration": [[222, "graph-state-configuration"]], "Display the maximum negativity for all qubit pairs": [[222, "display-the-maximum-negativity-for-all-qubit-pairs"]], "Inspect the available plots": [[222, "inspect-the-available-plots"]], "Display all available dataset attributes": [[222, "display-all-available-dataset-attributes"]], "If using state tomography: inspect the bootstrap bias (difference between each bootstrap mean and the measured sample)": [[222, "if-using-state-tomography-inspect-the-bootstrap-bias-difference-between-each-bootstrap-mean-and-the-measured-sample"]], "Inspect a graph state for some particular Pauli measurement": [[222, "inspect-a-graph-state-for-some-particular-pauli-measurement"]], "Compressive Gate Set Tomography (GST)": [[223, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[223, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[223, "execute-gst-experiment-s"]], "Examine the results": [[223, "examine-the-results"]], "High level results stored at result.observations": [[223, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[223, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[223, "plots"]], "Interpretation of rank 1 results": [[223, "interpretation-of-rank-1-results"]], "Creating a custom gate set with context circuits": [[223, "creating-a-custom-gate-set-with-context-circuits"]], "Define a context circuit for each gate": [[223, "define-a-context-circuit-for-each-gate"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[223, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[223, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[224, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[224, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[224, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[224, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[224, "id1"]], "Run the experiment - 2Q gate IRB": [[224, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[224, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[224, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[225, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[225, "mirror-rb-configuration"]], "Analyze the results": [[225, "analyze-the-results"]], "Qscore Configuration": [[226, "qscore-configuration"]], "Quantum Volume (QV)": [[227, "quantum-volume-qv"]], "Quantum Volume Configuration": [[227, "quantum-volume-configuration"]], "Examples": [[228, "examples"]], "IQM Benchmarks": [[229, "iqm-benchmarks"], [231, "iqm-benchmarks"]], "Contents": [[229, "contents"]], "Indices and tables": [[229, "indices-and-tables"]], "License": [[230, "license"]], "Installation (latest release)": [[231, "installation-latest-release"]], "Optional dependencies": [[231, "optional-dependencies"]], "Development installation (latest changes)": [[231, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[231, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[231, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[231, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.coherence"], [20, "module-iqm.benchmarks.coherence.coherence"], [28, "module-iqm.benchmarks.compressive_gst"], [29, "module-iqm.benchmarks.compressive_gst.compressive_gst"], [36, "module-iqm.benchmarks.compressive_gst.gst_analysis"], [48, "module-iqm.benchmarks.entanglement"], [49, "module-iqm.benchmarks.entanglement.ghz"], [63, "module-iqm.benchmarks.entanglement.graph_states"], [76, "module-iqm.benchmarks.logging_config"], [77, "module-iqm.benchmarks.optimization"], [78, "module-iqm.benchmarks.optimization.qscore"], [90, "module-iqm.benchmarks.quantum_volume"], [91, "module-iqm.benchmarks.quantum_volume.clops"], [97, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [109, "module-iqm.benchmarks.randomized_benchmarking"], [110, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [111, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [115, "module-iqm.benchmarks.randomized_benchmarking.direct_rb"], [116, "module-iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb"], [122, "module-iqm.benchmarks.randomized_benchmarking.eplg"], [123, "module-iqm.benchmarks.randomized_benchmarking.eplg.eplg"], [128, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [129, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [133, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [134, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [142, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [147, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [166, "module-iqm.benchmarks.readout_mitigation"], [170, "module-iqm.benchmarks.utils"], [197, "module-iqm.benchmarks.utils_plots"], [204, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_circuits_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_circuits_per_batch"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "use_dd (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.use_dd"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.coherence": [[19, "module-iqm.benchmarks.coherence"]], "iqm.benchmarks.coherence.coherence": [[20, "module-iqm.benchmarks.coherence.coherence"]], "coherencebenchmark (class in iqm.benchmarks.coherence.coherence)": [[21, "iqm.benchmarks.coherence.coherence.CoherenceBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.coherence.coherence.coherencebenchmark method)": [[21, "iqm.benchmarks.coherence.coherence.CoherenceBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.coherence.coherence.coherencebenchmark static method)": [[21, "iqm.benchmarks.coherence.coherence.CoherenceBenchmark.analysis_function"]], "checkerboard_groups_from_coupling() (iqm.benchmarks.coherence.coherence.coherencebenchmark method)": [[21, "iqm.benchmarks.coherence.coherence.CoherenceBenchmark.checkerboard_groups_from_coupling"]], "execute() (iqm.benchmarks.coherence.coherence.coherencebenchmark method)": [[21, "iqm.benchmarks.coherence.coherence.CoherenceBenchmark.execute"]], "generate_coherence_circuits() (iqm.benchmarks.coherence.coherence.coherencebenchmark method)": [[21, "iqm.benchmarks.coherence.coherence.CoherenceBenchmark.generate_coherence_circuits"]], "coherenceconfiguration (class in iqm.benchmarks.coherence.coherence)": [[22, "iqm.benchmarks.coherence.coherence.CoherenceConfiguration"]], "benchmark (iqm.benchmarks.coherence.coherence.coherenceconfiguration attribute)": [[22, "iqm.benchmarks.coherence.coherence.CoherenceConfiguration.benchmark"]], "coherence_exp (iqm.benchmarks.coherence.coherence.coherenceconfiguration attribute)": [[22, "iqm.benchmarks.coherence.coherence.CoherenceConfiguration.coherence_exp"]], "delays (iqm.benchmarks.coherence.coherence.coherenceconfiguration attribute)": [[22, "iqm.benchmarks.coherence.coherence.CoherenceConfiguration.delays"]], "model_config (iqm.benchmarks.coherence.coherence.coherenceconfiguration attribute)": [[22, "iqm.benchmarks.coherence.coherence.CoherenceConfiguration.model_config"]], "optimize_sqg (iqm.benchmarks.coherence.coherence.coherenceconfiguration attribute)": [[22, "iqm.benchmarks.coherence.coherence.CoherenceConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.coherence.coherence.coherenceconfiguration attribute)": [[22, "iqm.benchmarks.coherence.coherence.CoherenceConfiguration.qiskit_optim_level"]], "calculate_probabilities() (in module iqm.benchmarks.coherence.coherence)": [[23, "iqm.benchmarks.coherence.coherence.calculate_probabilities"]], "coherence_analysis() (in module iqm.benchmarks.coherence.coherence)": [[24, "iqm.benchmarks.coherence.coherence.coherence_analysis"]], "exp_decay() (in module iqm.benchmarks.coherence.coherence)": [[25, "iqm.benchmarks.coherence.coherence.exp_decay"]], "fit_coherence_model() (in module iqm.benchmarks.coherence.coherence)": [[26, "iqm.benchmarks.coherence.coherence.fit_coherence_model"]], "plot_coherence() (in module iqm.benchmarks.coherence.coherence)": [[27, "iqm.benchmarks.coherence.coherence.plot_coherence"]], "iqm.benchmarks.compressive_gst": [[28, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[29, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "compressivegst (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[30, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST"]], "add_configuration_to_dataset() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[30, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst static method)": [[30, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.analysis_function"]], "execute() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[30, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.execute"]], "generate_meas_circuits() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[30, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.generate_meas_circuits"]], "gstconfiguration (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration"]], "batch_size (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.batch_size"]], "benchmark (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.benchmark"]], "bootstrap_samples (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.bootstrap_samples"]], "convergence_criteria (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.convergence_criteria"]], "from_init (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.from_init"]], "gate_labels (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_labels"]], "gate_set (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_set"]], "max_inits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_inits"]], "max_iterations (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_iterations"]], "model_config (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_config"]], "num_circuits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.num_circuits"]], "opt_method (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.opt_method"]], "parallel_execution (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.parallel_execution"]], "qubit_layouts (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.qubit_layouts"]], "rank (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rank"]], "seq_len_list (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.seq_len_list"]], "shots (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.shots"]], "verbose_level (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[31, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.verbose_level"]], "create_predefined_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[32, "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set"]], "parse_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[33, "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set"]], "parse_layouts() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[34, "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts"]], "validate_gate_context() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[35, "iqm.benchmarks.compressive_gst.compressive_gst.validate_gate_context"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[36, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "bootstrap_errors() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[37, "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors"]], "dataset_counts_to_mgst_format() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[38, "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format"]], "generate_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[39, "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results"]], "generate_non_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[40, "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results"]], "generate_unit_rank_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[41, "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results"]], "mgst_analysis() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[42, "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis"]], "pandas_results_to_observations() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[43, "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations"]], "process_bootstrap_samples() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[44, "iqm.benchmarks.compressive_gst.gst_analysis.process_bootstrap_samples"]], "process_layout() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[45, "iqm.benchmarks.compressive_gst.gst_analysis.process_layout"]], "process_plots() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[46, "iqm.benchmarks.compressive_gst.gst_analysis.process_plots"]], "run_mgst_wrapper() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[47, "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[48, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[49, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[50, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[50, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[50, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[50, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[50, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[50, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[50, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[50, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[51, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[52, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[53, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[54, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[55, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[56, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[57, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[58, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[59, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[60, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[61, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[62, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[63, "module-iqm.benchmarks.entanglement.graph_states"]], "graphstatebenchmark (class in iqm.benchmarks.entanglement.graph_states)": [[64, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[64, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[64, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark static method)": [[64, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[64, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.execute"]], "generate_all_circuit_info_for_graph_state_benchmark() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[64, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.generate_all_circuit_info_for_graph_state_benchmark"]], "graphstateconfiguration (class in iqm.benchmarks.entanglement.graph_states)": [[65, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration"]], "benchmark (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[65, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.benchmark"]], "model_config (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[65, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.model_config"]], "n_median_of_means (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[65, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_median_of_means"]], "n_random_unitaries (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[65, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_random_unitaries"]], "num_bootstraps (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[65, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.num_bootstraps"]], "qubits (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[65, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.qubits"]], "tomography (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[65, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.tomography"]], "find_edges_with_disjoint_neighbors() (in module iqm.benchmarks.entanglement.graph_states)": [[66, "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors"]], "generate_graph_state() (in module iqm.benchmarks.entanglement.graph_states)": [[67, "iqm.benchmarks.entanglement.graph_states.generate_graph_state"]], "generate_minimal_edge_layers() (in module iqm.benchmarks.entanglement.graph_states)": [[68, "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers"]], "negativity_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[69, "iqm.benchmarks.entanglement.graph_states.negativity_analysis"]], "plot_density_matrix() (in module iqm.benchmarks.entanglement.graph_states)": [[70, "iqm.benchmarks.entanglement.graph_states.plot_density_matrix"]], "plot_max_negativities() (in module iqm.benchmarks.entanglement.graph_states)": [[71, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities"]], "plot_max_negativities_graph() (in module iqm.benchmarks.entanglement.graph_states)": [[72, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph"]], "shadow_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[73, "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis"]], "state_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[74, "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis"]], "update_pauli_expectations() (in module iqm.benchmarks.entanglement.graph_states)": [[75, "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations"]], "iqm.benchmarks.logging_config": [[76, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[77, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[78, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[79, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[79, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[79, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[79, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[79, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[79, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[79, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[80, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[81, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[82, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[83, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[84, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[85, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[86, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[87, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[88, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[89, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[90, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[91, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[92, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[93, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[94, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[95, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[96, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[97, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[99, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[100, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[101, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[102, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[103, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[104, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[105, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[106, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[107, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[108, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[109, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[110, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[111, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[112, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[113, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[113, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[113, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[113, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[113, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[114, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.direct_rb": [[115, "module-iqm.benchmarks.randomized_benchmarking.direct_rb"]], "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb": [[116, "module-iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb"]], "directrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.benchmark"]], "clifford_sqg_probabilities (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.clifford_sqg_probabilities"]], "densities_2q_gates (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.densities_2q_gates"]], "depths (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.depths"]], "is_eplg (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.is_eplg"]], "model_config (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.parallel_execution"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.shots"]], "sqg_gate_ensembles (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.sqg_gate_ensembles"]], "two_qubit_gate_ensembles (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrbconfiguration attribute)": [[117, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRBConfiguration.two_qubit_gate_ensembles"]], "directrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[118, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[118, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking static method)": [[118, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.analysis_function"]], "assign_inputs_to_qubits() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[118, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.assign_inputs_to_qubits"]], "execute() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[118, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.execute"]], "submit_single_drb_job() (iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.directrandomizedbenchmarking method)": [[118, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.DirectRandomizedBenchmarking.submit_single_drb_job"]], "direct_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[119, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.direct_rb_analysis"]], "generate_drb_circuits() (in module iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[120, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_drb_circuits"]], "generate_fixed_depth_parallel_drb_circuits() (in module iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb)": [[121, "iqm.benchmarks.randomized_benchmarking.direct_rb.direct_rb.generate_fixed_depth_parallel_drb_circuits"]], "iqm.benchmarks.randomized_benchmarking.eplg": [[122, "module-iqm.benchmarks.randomized_benchmarking.eplg"]], "iqm.benchmarks.randomized_benchmarking.eplg.eplg": [[123, "module-iqm.benchmarks.randomized_benchmarking.eplg.eplg"]], "eplgbenchmark (class in iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[124, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[124, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark static method)": [[124, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[124, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.execute"]], "validate_custom_qubits_array() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[124, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.validate_custom_qubits_array"]], "validate_random_chain_inputs() (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgbenchmark method)": [[124, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGBenchmark.validate_random_chain_inputs"]], "eplgconfiguration (class in iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration"]], "calibration_url (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.calibration_url"]], "chain_length (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.chain_length"]], "chain_path_samples (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.chain_path_samples"]], "custom_qubits_array (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.custom_qubits_array"]], "drb_circuit_samples (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.drb_circuit_samples"]], "drb_depths (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.drb_depths"]], "max_hamiltonian_path_tries (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.max_hamiltonian_path_tries"]], "model_config (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.model_config"]], "num_disjoint_layers (iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplgconfiguration attribute)": [[125, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.EPLGConfiguration.num_disjoint_layers"]], "eplg_analysis() (in module iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[126, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.eplg_analysis"]], "plot_layered_fidelities_graph() (in module iqm.benchmarks.randomized_benchmarking.eplg.eplg)": [[127, "iqm.benchmarks.randomized_benchmarking.eplg.eplg.plot_layered_fidelities_graph"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[128, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[129, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[130, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[131, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[131, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[131, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[131, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[131, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[132, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[133, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[134, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "clifford_sqg_probability (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.clifford_sqg_probability"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "simulation_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.simulation_method"]], "sqg_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.sqg_gate_ensemble"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[135, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[136, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[136, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[136, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[136, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[136, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[137, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[138, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[139, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[140, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[141, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[142, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[143, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[144, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[145, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[146, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[147, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[148, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[149, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.edge_grab"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[150, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[151, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[152, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[153, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[154, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[155, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[156, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[157, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[158, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[159, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[160, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[161, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[162, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[163, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[164, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[165, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[166, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[167, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[167, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[168, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[169, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[170, "module-iqm.benchmarks.utils"]], "bootstrap_counts() (in module iqm.benchmarks.utils)": [[171, "iqm.benchmarks.utils.bootstrap_counts"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[172, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[173, "iqm.benchmarks.utils.count_native_gates"]], "extract_fidelities() (in module iqm.benchmarks.utils)": [[174, "iqm.benchmarks.utils.extract_fidelities"]], "generate_state_tomography_circuits() (in module iqm.benchmarks.utils)": [[175, "iqm.benchmarks.utils.generate_state_tomography_circuits"]], "get_pauli_expectation() (in module iqm.benchmarks.utils)": [[176, "iqm.benchmarks.utils.get_Pauli_expectation"]], "get_active_qubits() (in module iqm.benchmarks.utils)": [[177, "iqm.benchmarks.utils.get_active_qubits"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[178, "iqm.benchmarks.utils.get_iqm_backend"]], "get_measurement_mapping() (in module iqm.benchmarks.utils)": [[179, "iqm.benchmarks.utils.get_measurement_mapping"]], "get_neighbors_of_edges() (in module iqm.benchmarks.utils)": [[180, "iqm.benchmarks.utils.get_neighbors_of_edges"]], "get_tomography_matrix() (in module iqm.benchmarks.utils)": [[181, "iqm.benchmarks.utils.get_tomography_matrix"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[182, "iqm.benchmarks.utils.marginal_distribution"]], "median_with_uncertainty() (in module iqm.benchmarks.utils)": [[183, "iqm.benchmarks.utils.median_with_uncertainty"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[184, "iqm.benchmarks.utils.perform_backend_transpilation"]], "random_hamiltonian_path() (in module iqm.benchmarks.utils)": [[185, "iqm.benchmarks.utils.random_hamiltonian_path"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[186, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "remove_directed_duplicates_to_list() (in module iqm.benchmarks.utils)": [[187, "iqm.benchmarks.utils.remove_directed_duplicates_to_list"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[188, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[189, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[190, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[191, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "split_into_disjoint_pairs() (in module iqm.benchmarks.utils)": [[192, "iqm.benchmarks.utils.split_into_disjoint_pairs"]], "split_sequence_in_chunks() (in module iqm.benchmarks.utils)": [[193, "iqm.benchmarks.utils.split_sequence_in_chunks"]], "submit_execute() (in module iqm.benchmarks.utils)": [[194, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[195, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[196, "iqm.benchmarks.utils.xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[197, "module-iqm.benchmarks.utils_plots"]], "graphpositions (class in iqm.benchmarks.utils_plots)": [[198, "iqm.benchmarks.utils_plots.GraphPositions"]], "create_positions() (iqm.benchmarks.utils_plots.graphpositions static method)": [[198, "iqm.benchmarks.utils_plots.GraphPositions.create_positions"]], "deneb_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[198, "iqm.benchmarks.utils_plots.GraphPositions.deneb_positions"]], "garnet_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[198, "iqm.benchmarks.utils_plots.GraphPositions.garnet_positions"]], "get_positions() (iqm.benchmarks.utils_plots.graphpositions static method)": [[198, "iqm.benchmarks.utils_plots.GraphPositions.get_positions"]], "predefined_stations (iqm.benchmarks.utils_plots.graphpositions attribute)": [[198, "iqm.benchmarks.utils_plots.GraphPositions.predefined_stations"]], "calculate_node_radii() (in module iqm.benchmarks.utils_plots)": [[199, "iqm.benchmarks.utils_plots.calculate_node_radii"]], "draw_graph_edges() (in module iqm.benchmarks.utils_plots)": [[200, "iqm.benchmarks.utils_plots.draw_graph_edges"]], "evaluate_hamiltonian_paths() (in module iqm.benchmarks.utils_plots)": [[201, "iqm.benchmarks.utils_plots.evaluate_hamiltonian_paths"]], "plot_layout_fidelity_graph() (in module iqm.benchmarks.utils_plots)": [[202, "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph"]], "rx_to_nx_graph() (in module iqm.benchmarks.utils_plots)": [[203, "iqm.benchmarks.utils_plots.rx_to_nx_graph"]], "iqm.benchmarks.utils_shadows": [[204, "module-iqm.benchmarks.utils_shadows"]], "cue() (in module iqm.benchmarks.utils_shadows)": [[205, "iqm.benchmarks.utils_shadows.CUE"]], "get_local_shadow() (in module iqm.benchmarks.utils_shadows)": [[206, "iqm.benchmarks.utils_shadows.get_local_shadow"]], "get_negativity() (in module iqm.benchmarks.utils_shadows)": [[207, "iqm.benchmarks.utils_shadows.get_negativity"]], "local_shadow_tomography() (in module iqm.benchmarks.utils_shadows)": [[208, "iqm.benchmarks.utils_shadows.local_shadow_tomography"]]}})