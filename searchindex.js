Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.append_rms", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "example_clifford_rb", "examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.append_rms.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "example_clifford_rb.ipynb", "examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.append_rms", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Clifford Randomized Benchmarking (RB) Example", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 50, 95, 101, 109, 111, 120, 133, 134], "python": 1, "librari": [1, 75, 80, 109], "suit": [1, 134], "qcvv": [1, 132, 134], "subpackag": [1, 19, 36, 48, 67, 68, 73, 78], "modul": [1, 5, 15, 19, 35, 36, 48, 67, 68, 73, 78, 132], "gener": [2, 3, 18, 19, 21, 22, 28, 29, 30, 31, 32, 38, 45, 50, 53, 56, 65, 71, 75, 76, 80, 83, 84, 85, 88, 89, 98, 99, 100, 115, 129, 130, 133], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 37, 38, 39, 49, 50, 51, 55, 56, 57, 69, 70, 71, 74, 75, 76, 79, 80, 81, 98, 111, 112, 129, 133, 134], "inherit": [2, 3, 5, 15, 20, 37, 49, 55, 69, 74, 79, 111], "benchmarkbas": [2, 4, 134], "abc": [2, 3, 5, 6, 20, 37, 49, 55, 69, 74, 79], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 37, 39, 49, 51, 55, 57, 69, 70, 74, 75, 79, 80, 134], "pydant": [2, 4, 20, 22, 37, 39, 49, 51, 55, 57, 69, 70, 74, 75, 79, 80], "main": [2, 7, 8, 20, 37, 49, 55, 69, 74, 79], "basemodel": [2, 4, 20, 37, 49, 55, 69, 74, 79], "backend": [3, 6, 21, 22, 23, 24, 31, 38, 45, 50, 51, 56, 57, 65, 71, 76, 81, 83, 84, 85, 98, 99, 106, 107, 109, 110, 112, 113, 114, 117, 118, 120, 121, 124, 125, 126, 129, 134], "iqmbackendbas": [3, 6, 21, 23, 38, 50, 56, 71, 76, 81, 83, 84, 85, 98, 99, 100, 106, 107, 109, 110, 113, 117, 118, 120, 124, 126], "configur": [3, 4, 6, 21, 22, 38, 39, 50, 51, 56, 57, 64, 70, 71, 75, 76, 80, 81, 129, 133, 134], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 26, 32, 38, 39, 41, 50, 51, 56, 57, 70, 71, 75, 76, 80, 81, 93, 112, 129, 133], "The": [3, 6, 7, 12, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 38, 39, 42, 47, 50, 51, 53, 56, 57, 59, 60, 62, 63, 70, 71, 75, 76, 80, 81, 82, 83, 84, 94, 104, 108, 114, 117, 118, 120, 121, 122, 123, 127, 130, 133, 134], "implement": [3, 5, 6, 21, 22, 27], "all": [3, 4, 6, 7, 16, 17, 18, 22, 23, 32, 34, 38, 44, 50, 54, 56, 58, 59, 60, 63, 64, 70, 71, 75, 76, 81, 98, 104, 106, 107, 112, 122, 123, 129, 130, 133, 134], "from": [3, 4, 6, 7, 11, 21, 22, 24, 31, 32, 33, 39, 42, 47, 51, 53, 54, 56, 57, 58, 63, 65, 70, 75, 80, 82, 91, 104, 105, 108, 112, 114, 118, 122, 123, 124, 128, 129, 130, 133, 134], "which": [3, 6, 7, 8, 21, 22, 24, 31, 33, 38, 46, 48, 50, 51, 52, 56, 66, 70, 71, 72, 75, 76, 77, 80, 81, 87, 98, 104, 108, 112, 121, 133, 134], "thei": [3, 17], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 26, 38, 39, 50, 51, 56, 57, 70, 71, 75, 76, 80, 81, 112, 120, 129], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "abstract": [3, 6], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 34, 39, 45, 51, 53, 57, 65, 70, 75, 80, 91, 98, 114, 118, 121, 129, 130, 133], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 76, 77, 81, 82, 83, 84, 85, 86, 87, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 21, 32, 36, 38, 45, 48, 50, 51, 56, 57, 58, 65, 70, 71, 75, 76, 80, 81, 82, 95, 101, 106, 107, 108, 120, 126, 127, 128, 129, 130, 133, 134], "full": [3, 51, 57, 134], "given": [3, 6, 7, 11, 21, 22, 23, 31, 32, 33, 34, 36, 38, 48, 50, 56, 63, 64, 73, 82, 99, 100, 125, 134], "static": [3, 6, 21, 38, 50, 56, 71, 76, 81], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 21, 22, 24, 26, 27, 39, 41, 42, 43, 45, 47, 50, 51, 53, 54, 56, 57, 58, 61, 62, 63, 65, 70, 71, 75, 76, 80, 81, 82, 83, 84, 85, 95, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 126, 128], "check": [3, 44, 64], "whether": [3, 4, 22, 23, 39, 44, 45, 47, 50, 51, 56, 57, 64, 65, 70, 75, 99, 104, 120, 133], "requir": [3, 4, 22, 39, 51, 57, 70, 75, 80, 133, 134], "ar": [3, 4, 7, 11, 16, 17, 18, 22, 23, 32, 33, 56, 57, 85, 104, 110, 119, 121, 129, 133, 134], "met": 3, "valid": [3, 109, 110, 132, 134], "dictionari": [3, 4, 7, 11, 22, 39, 42, 50, 51, 54, 56, 57, 58, 61, 62, 63, 70, 75, 80, 81, 83, 84, 94, 98, 99, 100, 102, 106, 107, 113, 114, 117, 119, 125, 128, 130], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 133, 134], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 31, 33, 39, 45, 50, 51, 56, 57, 70, 75, 80, 83, 84, 85, 89, 94, 97, 98, 99, 100, 104, 106, 107, 109, 112, 120, 121, 122, 126, 130, 134], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 38, 39, 50, 51, 56, 57, 70, 71, 75, 76, 80, 81, 127, 133], "shot": [4, 22, 39, 51, 56, 57, 70, 75, 80, 106, 107, 112, 113, 126, 130, 134], "int": [4, 9, 11, 16, 17, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 45, 47, 50, 51, 53, 56, 57, 58, 61, 64, 65, 70, 75, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 112, 113, 116, 119, 120, 122, 124, 125, 126, 128], "256": [4, 39, 51, 57, 70, 75, 80, 130], "max_gates_per_batch": [4, 22, 39, 51, 57, 70, 75, 80, 106, 107, 126, 130, 134], "calset_id": [4, 22, 39, 51, 57, 70, 75, 80, 106, 107, 126, 130, 134], "routing_method": [4, 22, 39, 51, 57, 70, 75, 80, 84, 85, 120, 130, 134], "liter": [4, 22, 39, 51, 57, 70, 75, 80, 124], "basic": [4, 22, 39, 51, 57, 70, 75, 80, 84, 85], "lookahead": [4, 22, 39, 51, 57, 70, 75, 80], "stochast": [4, 22, 39, 51, 57, 70, 75, 80], "sabr": [4, 22, 39, 51, 57, 70, 75, 80, 120, 130, 134], "physical_layout": [4, 22, 39, 51, 57, 70, 75, 80, 124, 130, 134], "fix": [4, 22, 39, 51, 57, 70, 75, 80, 81, 84, 99, 106, 108, 124, 129, 130, 134], "batch": [4, 17, 22, 39, 51, 57, 70, 75, 80, 106, 107, 124, 125, 126, 130], "number": [4, 21, 22, 27, 28, 29, 30, 31, 32, 34, 36, 38, 41, 43, 45, 47, 48, 51, 56, 57, 64, 65, 67, 70, 75, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99, 100, 101, 106, 107, 112, 113, 116, 117, 126], "us": [4, 6, 9, 16, 21, 22, 24, 26, 27, 31, 32, 33, 34, 35, 45, 47, 50, 51, 57, 80, 82, 97, 104, 112, 114, 126, 129, 133], "circuit": [4, 7, 10, 15, 16, 17, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 38, 42, 48, 50, 51, 56, 57, 58, 61, 64, 65, 70, 71, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 94, 95, 98, 99, 100, 101, 106, 107, 109, 112, 113, 116, 117, 120, 121, 125, 126, 128, 129, 130], "default": [4, 6, 12, 22, 39, 51, 56, 57, 65, 70, 75, 80, 100, 104, 112, 124, 130], "i": [4, 6, 7, 22, 24, 28, 31, 32, 34, 38, 39, 44, 46, 47, 50, 51, 52, 56, 57, 64, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 86, 87, 90, 105, 109, 112, 120, 124, 130, 133, 134], "2": [4, 33, 39, 44, 57, 64, 80, 99, 105, 116, 130, 132, 133, 134], "8": [4, 105, 130, 133, 134], "maximum": [4, 47, 106, 107, 126], "gate": [4, 21, 22, 23, 28, 32, 33, 39, 48, 50, 51, 57, 67, 68, 71, 73, 75, 76, 80, 83, 85, 94, 98, 99, 100, 102, 104, 106, 107, 109, 116, 117, 120, 126, 134], "per": [4, 48, 51, 57, 70, 80, 82, 84, 85, 86, 106, 107, 112, 113, 126], "option": [4, 22, 23, 33, 39, 45, 56, 57, 75, 84, 85, 94, 97, 99, 100, 104, 106, 107, 109, 120, 121, 122, 126], "calibr": [4, 6, 22, 24, 33, 56, 57, 106, 107, 112, 113, 126], "id": [4, 126], "last": 4, "avail": [4, 133, 134], "qiskit": [4, 6, 39, 51, 57, 75, 80, 109, 120, 129], "rout": [4, 51, 57, 80, 120], "transpil": [4, 16, 21, 22, 26, 27, 39, 50, 51, 57, 80, 98, 99, 109, 113, 117, 120, 125], "physic": [4, 22, 39, 50, 51, 56, 57, 61, 75, 80, 84, 124, 132], "layout": [4, 8, 11, 16, 17, 22, 34, 39, 50, 51, 56, 57, 80, 81, 106, 107, 114, 124, 129], "constrain": [4, 124], "dure": [4, 13, 56, 71, 76], "select": [4, 22, 39, 57, 63], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 47, 48, 50, 51, 56, 57, 61, 65, 67, 70, 71, 75, 80, 81, 82, 83, 84, 85, 95, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 114, 116, 120, 121, 124, 125, 129, 130], "initi": [4, 6, 22, 35, 114], "allow": [4, 129, 134], "ani": [4, 8, 26, 27, 54, 56, 75, 81, 86, 104, 106, 107, 113, 121, 123, 133], "other": [4, 22, 129, 133, 134], "accord": [4, 21, 29, 30, 38, 83, 124, 125], "final": [4, 6, 33, 51, 56, 57, 61, 80, 120, 124, 125], "measur": [4, 21, 22, 26, 38, 41, 50, 51, 56, 57, 61, 70, 75, 80, 108, 113, 117, 124, 125], "model_computed_field": [4, 22, 39, 51, 57, 70, 75, 80], "classvar": [4, 22, 39, 51, 57, 70, 75, 80], "dict": [4, 7, 11, 22, 26, 27, 39, 41, 42, 47, 50, 51, 53, 54, 56, 57, 58, 61, 62, 63, 70, 75, 80, 81, 82, 83, 84, 85, 94, 95, 98, 99, 100, 101, 102, 104, 106, 107, 108, 113, 114, 117, 119, 122, 123, 125, 126, 128], "computedfieldinfo": [4, 22, 39, 51, 57, 70, 75, 80], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 38, 39, 46, 50, 51, 52, 54, 56, 57, 62, 63, 66, 70, 71, 72, 75, 80, 81, 83, 84, 87, 94, 97, 99, 100, 106, 107, 119, 120, 121, 124, 128, 133, 134], "comput": [4, 21, 22, 25, 31, 39, 41, 42, 51, 56, 57, 58, 59, 60, 62, 70, 75, 80, 94, 95, 101, 119, 132, 133, 134], "field": [4, 6, 22, 39, 51, 57, 70, 75, 80, 133], "correspond": [4, 22, 38, 39, 46, 48, 50, 51, 52, 56, 57, 61, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 87, 104, 108, 113, 125, 130], "object": [4, 7, 8, 9, 10, 16, 17, 18, 21, 22, 25, 34, 39, 51, 56, 57, 70, 75, 80, 81, 89, 106, 107, 118, 122, 123, 126, 133], "model_config": [4, 22, 39, 51, 57, 70, 75, 80], "configdict": [4, 22, 39, 51, 57, 70, 75, 80], "model": [4, 22, 39, 51, 57, 70, 75, 80, 97, 103, 104], "should": [4, 6, 8, 10, 21, 22, 31, 35, 39, 51, 57, 70, 75, 80, 99, 129, 133], "conform": [4, 22, 39, 51, 57, 70, 75, 80], "config": [4, 22, 39, 51, 57, 70, 75, 80], "model_field": [4, 22, 39, 51, 57, 70, 75, 80], "fieldinfo": [4, 22, 39, 51, 57, 70, 75, 80], "annot": [4, 22, 39, 51, 57, 70, 75, 80, 114, 133], "true": [4, 22, 26, 39, 51, 56, 57, 70, 75, 80, 104, 120, 134], "union": [4, 22, 39, 51, 57, 70, 75, 80, 114, 133], "nonetyp": [4, 22, 39, 51, 57, 70, 75, 80], "fals": [4, 22, 39, 51, 57, 65, 70, 75, 80, 104, 112, 120, 130], "metadata": [4, 21, 22, 38, 39, 50, 51, 54, 56, 57, 70, 71, 75, 76, 80, 81, 123], "about": [4, 22, 39, 51, 57, 70, 75, 80], "defin": [4, 5, 6, 7, 22, 31, 32, 39, 51, 57, 70, 75, 80, 98, 121, 133, 134], "map": [4, 7, 22, 31, 33, 39, 41, 42, 51, 57, 70, 75, 80, 120, 124, 125, 129], "thi": [4, 5, 6, 15, 16, 21, 22, 31, 34, 39, 44, 51, 57, 64, 70, 75, 80, 105, 114, 133, 134], "replac": [4, 22, 39, 51, 57, 70, 75, 80, 133], "__fields__": [4, 22, 39, 51, 57, 70, 75, 80], "v1": [4, 22, 39, 51, 57, 70, 75, 80], "function": [5, 6, 20, 37, 38, 42, 46, 49, 50, 52, 55, 56, 66, 69, 71, 72, 74, 76, 77, 79, 81, 87, 88, 90, 91, 93, 94, 96, 97, 103, 105, 111, 115, 127, 129], "benchmarkobservationidentifi": [5, 8, 129, 130], "benchmarkobserv": [5, 7, 34, 129, 130], "benchmarkrunresult": [5, 6, 7, 12, 21, 25, 38, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 129], "benchmarkanalysisresult": [5, 6, 12, 21, 25, 38, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 129], "kwarg": 6, "run": [6, 7, 8, 10, 21, 22, 25, 38, 42, 46, 50, 51, 52, 56, 66, 71, 72, 76, 77, 81, 87, 134], "cortex": [6, 11], "experi": [6, 38, 45, 46, 50, 52, 53, 56, 57, 59, 60, 66, 71, 72, 76, 77, 81, 87, 96, 103, 104, 108, 110], "In": [6, 133, 134], "order": [6, 24, 33, 34, 97, 105, 134], "write": [6, 112, 133], "new": [6, 7, 11, 121, 129, 134], "recommend": [6, 132, 133], "deriv": [6, 133], "baseclass": 6, "addition": 6, "custom": [6, 39, 57, 134], "analysi": [6, 7, 12, 38, 46, 50, 52, 53, 56, 66, 71, 72, 76, 77, 81, 87, 129], "can": [6, 10, 16, 22, 24, 36, 38, 48, 56, 114, 129, 134], "give": [6, 42, 129, 133], "pointer": 6, "analysis_funct": [6, 21, 38, 50, 56, 71, 76, 81], "accept": [6, 45, 129, 133], "analysisresult": [6, 7, 21, 25, 38, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 129], "its": [6, 91, 121, 129, 133], "input": [6, 11, 51, 57, 86, 105, 109, 110, 114, 124], "result": [6, 7, 8, 10, 11, 12, 36, 38, 41, 46, 47, 48, 50, 52, 56, 57, 64, 65, 66, 71, 72, 76, 77, 81, 87, 95, 101, 103, 124, 129, 133, 134], "onli": [6, 12, 51, 57, 121, 133], "pass": [6, 12, 86, 114, 120], "through": [6, 12, 27, 133], "iqmbackend": [6, 56, 81, 106, 107], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 25, 26, 27, 38, 50, 53, 56, 71, 76, 81, 88, 90, 104, 128, 129, 130], "overridden": 6, "an": [6, 16, 17, 21, 22, 25, 26, 38, 50, 76, 77, 105, 109, 113, 114, 129, 133, 134], "xarrai": [6, 7, 11, 13, 21, 26, 38, 50, 56, 71, 76, 81, 128, 129], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 21, 24, 25, 26, 27, 81, 83, 106, 107, 121, 129, 133], "inform": [6, 10, 33, 35, 133], "necessari": 6, "analys": 6, "calibration_set_id": 6, "uuid": 6, "calibrationsetid": 6, "latest": [6, 126, 132], "set": [6, 16, 17, 21, 51, 57, 83, 84, 86, 92, 104, 117, 124, 126, 134], "runresult": [6, 7, 10, 21, 25, 38, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 129], "analyz": [6, 10, 21, 25, 116, 130, 134], "run_index": 6, "1": [6, 39, 43, 63, 80, 84, 85, 96, 99, 105, 120, 130, 133, 134], "intern": [6, 17], "perform": [6, 39, 51, 57, 97, 108, 120, 133, 134], "make": [6, 56, 126, 133, 134], "shallow": 6, "copi": [6, 133], "produc": [6, 33, 57, 134], "therefor": [6, 44, 64], "chang": [6, 129, 132, 133], "data": [6, 7, 11, 21, 22, 24, 26, 33, 53, 65, 89, 92, 97, 103, 112], "just": 6, "structur": 6, "arrai": [6, 50, 70, 75, 80, 104, 105, 110, 114], "index": [6, 21, 24, 31, 32, 33, 50, 56, 84, 132], "construct": [6, 22, 28], "updat": [6, 50, 51, 129], "core": 7, "circuit_contain": 7, "plot": [7, 21, 25, 34, 65, 104, 129, 130, 134], "matplotlib": 7, "figur": [7, 14, 34, 45, 53, 65, 104], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 25, 34, 53, 104, 129, 130], "list": [7, 9, 11, 13, 16, 17, 18, 21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 38, 40, 41, 42, 45, 47, 50, 51, 56, 58, 59, 60, 61, 62, 64, 65, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 119, 120, 122, 123, 124, 125, 126, 128, 129, 133, 134], "dataclass": [7, 8, 10], "store": [7, 8, 10, 34, 129, 134], "consist": [7, 133], "kei": [7, 41, 47, 50, 56, 61, 80, 83, 117, 119, 125], "valu": [7, 8, 21, 22, 27, 31, 41, 42, 47, 50, 51, 80, 83, 96, 117, 119, 120, 125, 130], "pair": [7, 24, 33, 50, 110], "plot_nam": 7, "plot_al": 7, "from_run_result": 7, "creat": [7, 21, 22, 31, 38, 42, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 134], "identifi": [8, 9, 11, 56, 81, 97, 104, 106, 107, 109, 122, 128, 130, 133], "uncertainti": [8, 27, 130], "singl": [8, 10, 13, 16, 18, 22, 34, 39, 40, 50, 51, 56, 57, 83, 90, 134], "string": [8, 9, 11, 17, 18, 122, 134], "qubit_indic": [9, 16, 130], "eas": 9, "indic": [9, 56, 61, 119, 125, 133], "wa": [9, 44, 64, 108, 133], "properti": [9, 16, 17], "string_identifi": 9, "version": [9, 88, 133], "enough": 10, "those": [10, 56, 61, 124, 133], "count": [11, 21, 22, 25, 41, 42, 47, 56, 58, 82, 95, 101, 108, 113, 114, 117, 122, 123, 128, 130], "add": [11, 17, 21, 32, 38, 50, 56, 71, 76, 81, 83, 127, 129, 133, 134], "job": [11, 50, 54, 56, 81, 106, 107, 122, 130], "If": [11, 22, 80, 133, 134], "same": [11, 17, 24, 33, 80, 133], "alreadi": [11, 130, 134], "present": 11, "old": 11, "both": [11, 57, 134], "ad": [11, 129, 130], "togeth": [11, 134], "bitstr": [11, 41, 42, 43, 47, 63, 108, 119], "current": [11, 22, 50, 112, 134], "instanc": [11, 16, 17, 26, 27, 45, 129], "xr": [11, 13, 21, 26, 27, 38, 50, 53, 56, 71, 76, 81, 104, 128], "merg": [11, 13], "where": [11, 16, 17, 22, 85, 133], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 31, 32, 103], "size": [13, 22, 31, 36, 38, 45, 47], "dateset": 13, "fig": [14, 34], "show": 14, "close": 14, "easili": [15, 129, 134], "interact": [15, 129], "quantum": [15, 21, 22, 26, 28, 29, 30, 31, 38, 48, 50, 51, 55, 56, 57, 58, 61, 64, 66, 83, 84, 95, 99, 100, 101, 112, 113, 116, 117, 120, 121, 126, 129, 132, 134], "circuitgroup": [15, 16, 21, 129], "benchmarkcircuit": [15, 18, 129], "circuit_group": 16, "group": [16, 17, 71], "purpos": [16, 17, 133], "typic": [16, 17], "repres": [16, 17, 53, 65, 119, 133], "exampl": [16, 88, 129, 132, 133, 134], "insid": [16, 129], "get_circuit_group_by_nam": 16, "get": [16, 91, 118, 134], "desir": [16, 17], "doe": [16, 22, 133], "exist": [16, 18, 129, 134], "group_nam": 16, "integ": [16, 17, 22, 56, 61, 84], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 24, 27, 31, 41, 42, 45, 47, 50, 51, 53, 56, 61, 65, 81, 97, 98, 99, 100, 102, 104, 106, 113, 120, 125, 126], "qubit_layout": [16, 17, 21, 24, 26, 27, 31, 32, 33, 34], "qiskit_iqm": [17, 22, 129], "iqm_circuit": 17, "iqmcircuit": [17, 21, 23, 28, 29, 30, 31, 50, 56, 61, 81, 83, 84, 85, 94, 98, 99, 100, 102, 106, 107, 109, 113, 116, 117, 120, 121, 125, 126, 129], "It": [17, 134], "common": [17, 93, 133], "activ": [17, 121, 134], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 133, 134], "found": [17, 24, 134], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 133], "ghz": [19, 129, 134], "verifi": [19, 109], "greenberg": [19, 21], "horn": [19, 21], "zeiling": [19, 21], "state": [19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 95, 101, 129, 133, 134], "ghzbenchmark": [20, 22], "benchmark_definit": [20, 22, 37, 39, 49, 51, 55, 57, 69, 70, 74, 75, 79, 80], "ghzconfigur": [20, 21], "estim": [21, 22, 26, 27, 36, 38, 51, 56, 71, 76, 81, 82, 108], "qualiti": 21, "fidel": [21, 22, 24, 25, 26, 27, 32, 33, 34, 51, 67, 68, 71, 73, 76, 78, 81, 82, 97, 104, 129, 134], "generate_native_ghz": 21, "qubit_count": [21, 22], "routin": [21, 22, 39, 57, 97], "prepar": [21, 133], "nativ": [21, 33, 99, 100, 102, 109, 117], "topologi": 21, "subset": [21, 24, 26, 27, 31, 32, 33], "system": [21, 22, 24, 26, 27, 31, 32, 33, 112, 133, 134], "protocol": [21, 24, 26, 27, 31, 32, 33], "0": [21, 24, 31, 32, 33, 38, 44, 57, 80, 83, 84, 85, 105, 130, 133, 134], "smaller": [21, 22, 31], "equal": [21, 31, 56, 129], "quantumcircuit": [21, 23, 31, 38, 50, 56, 61, 81, 83, 94, 98, 99, 100, 106, 107, 113, 116, 120, 121, 125, 126, 129], "generate_coherence_meas_circuit": 21, "take": [21, 22, 120, 127, 129, 134], "output": [21, 35, 58, 59, 60, 61, 62, 63, 64, 112], "need": [21, 50, 114, 134], "via": [21, 22], "mult": 21, "q": [21, 36, 38, 39, 44, 134], "coher": [21, 22, 26], "qc_list_transpil": 21, "generate_readout_circuit": 21, "wrapper": 21, "creation": 21, "differ": [21, 53, 80, 133, 134], "all_circuits_list": 21, "add_configuration_to_dataset": 21, "further": [21, 129], "storag": 21, "1024": 22, "state_generation_routin": 22, "tree": [22, 31, 32], "custom_qubits_arrai": [22, 38, 39, 57, 134], "sequenc": [22, 39, 51, 56, 57, 70, 75, 80, 81, 82, 95, 98, 99, 100, 101, 120, 124, 130], "qiskit_optim_level": [22, 39, 51, 57, 80, 84, 85, 120, 134], "3": [22, 39, 51, 57, 64, 105, 130, 133, 134], "optimize_sqg": [22, 39, 50, 51, 57, 120, 134], "bool": [22, 39, 44, 45, 47, 50, 51, 56, 57, 64, 65, 70, 75, 104, 112, 120], "fidelity_routin": 22, "num_rm": [22, 23], "100": [22, 51, 57, 134], "rem": [22, 26, 57, 65, 113, 134], "mit_shot": [22, 56, 57, 113, 134], "1000": [22, 57, 113], "cal_url": [22, 24], "possibl": [22, 133], "optim": [22, 50, 51, 57, 80, 120, 134], "log": [22, 29, 30, 31, 32], "depth": [22, 28, 29, 30, 31, 56, 65, 80, 81, 84, 85, 96, 99, 103, 106, 108, 130], "coupl": [22, 24, 31, 33, 51, 57, 120, 124], "cz": [22, 24, 32, 33, 99, 117, 120], "account": [22, 120, 134], "algorithm": [22, 32, 83], "span": [22, 31, 32], "choos": [22, 38, 133], "largest": 22, "weight": [22, 32, 33, 63], "distanc": [22, 32], "parallel": [22, 32, 48, 70, 75, 99, 106, 108, 116], "applic": [22, 32, 83, 133], "cx": [22, 28, 32, 50], "scale": 22, "logarithm": 22, "connect": [22, 32, 110], "naiv": [22, 39], "appli": [22, 28, 32, 50, 57, 129, 133], "textbook": 22, "linearli": 22, "specifi": [22, 51, 56, 57, 75, 81, 83, 84, 106, 107, 110, 117, 119, 124, 126, 134], "assum": [22, 34, 105, 133], "e": [22, 75, 80, 105, 128, 134], "g": [22, 75, 80, 105, 128, 134], "label": [22, 51, 65, 75, 84, 94, 100, 104], "meant": 22, "NOT": 22, "support": [22, 33, 133], "denot": 22, "provid": [22, 133], "here": [22, 82], "ha": [22, 130, 133], "than": 22, "small": [22, 129], "level": [22, 39, 51, 57, 80], "architectur": 22, "consecut": 22, "reduc": [22, 121], "iqm_transpil": 22, "optimize_single_qubit_g": 22, "multipl": [22, 26, 88, 129], "moonei": [22, 26], "2021": [22, 26, 134], "randomized_measur": 22, "random": [22, 23, 39, 50, 67, 69, 74, 75, 79, 80, 83, 85, 93, 99, 100, 129, 131, 132, 134], "outlin": 22, "http": [22, 27, 29, 30, 88, 133, 134], "arxiv": [22, 27, 29, 30, 51, 83, 134], "org": [22, 27, 29, 30, 133], "ab": [22, 27, 29, 30], "1812": [22, 27], "02624": [22, 27], "respect": [22, 80, 82], "chosen": 22, "boolean": 22, "flag": [22, 134], "determin": [22, 133], "readout": [22, 26, 56, 57, 62, 111, 112, 114], "error": [22, 26, 56, 57, 62, 104, 114, 129], "mitig": [22, 26, 56, 57, 62, 111, 112, 113, 114], "total": [22, 92], "url": [22, 24, 134], "retriev": [22, 50, 54, 122, 123, 128, 130], "priorit": 22, "high": 22, "append": [23, 50], "1q": [23, 102], "clifford": [23, 68, 69, 70, 71, 72, 74, 75, 76, 83, 94, 98, 99, 100, 102, 109, 110, 129, 131, 132, 134], "sampl": [23, 42, 47, 57, 63, 75, 80, 82, 83, 84, 85, 86, 98, 99, 100], "uniformli": 23, "param": [23, 28, 29, 30, 50, 59, 71, 76, 86, 90, 92, 94, 95, 106, 107, 108, 110, 119, 122, 123], "decompos": [23, 50], "origin": [23, 56, 61, 120, 121, 133], "float": [24, 33, 38, 40, 41, 43, 44, 45, 47, 50, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 75, 80, 82, 83, 84, 85, 95, 96, 97, 101, 104, 108, 109, 112, 114, 117, 119], "under": [24, 129, 133], "each": [24, 32, 34, 45, 59, 60, 61, 65, 75, 80, 82, 85, 89, 108, 113, 117, 130, 133, 134], "list_fid": 24, "wai": [24, 33, 129, 134], "list_coupl": 24, "ideal_prob": 27, "num_qubit": [27, 28, 29, 30, 38, 56, 82, 95, 101], "cross": [27, 133], "correl": 27, "rm": 27, "eq": 27, "34": [27, 130], "hadamard": 28, "seri": 28, "linear": 28, "fashion": 28, "symmetr": 28, "halv": 28, "n": [28, 29, 30, 31, 71, 81, 134], "1807": 29, "05572": 29, "2101": 30, "08946": 30, "graph": [31, 32, 33, 38, 40, 41, 42, 43, 44, 45, 47], "n_state": 31, "networkx": [31, 32, 33, 38, 40, 41, 42, 43], "participating_qubit": 31, "qc": [31, 50, 134], "calcul": [32, 40, 45, 61, 92, 116, 127], "cx_map": 32, "particip": 32, "2qb": 32, "between": [32, 85, 112], "them": [32, 134], "subgraph": 32, "edg": [32, 33, 41, 42, 43, 83], "Then": [32, 134], "find": 32, "most": 32, "central": 32, "posit": 32, "next": 32, "start": [32, 38, 105, 134], "smallest": 32, "layer": [32, 40, 47, 48, 50, 51, 56, 80, 81, 83, 84, 85, 106, 116, 134], "first": [32, 38, 50, 80], "coupling_map": [33, 120], "couplingmap": [33, 124], "edges_c": 33, "fidelities_c": 33, "have": [33, 99, 133, 134], "v": [34, 45, 50, 52], "user": [34, 134], "identif": [34, 133], "logger": [35, 127], "everi": 35, "warn": 35, "score": [36, 38, 39, 44, 134], "combinatori": [36, 38], "problem": [36, 38, 40, 41, 42, 43, 44, 45], "meaning": [36, 38, 48, 56, 57], "qscorebenchmark": [37, 39], "qscoreconfigur": [37, 38], "backend_arg": [38, 50, 56, 71, 76, 81, 83, 84, 85, 98, 99, 100, 106, 107, 109, 110, 113, 117], "generate_maxcut_ansatz": 38, "theta": 38, "ansatz": [38, 40, 42, 47], "qaoa": [38, 40, 47], "maxcut": [38, 40, 41, 42, 43, 47], "end": [38, 50, 56, 133], "variat": 38, "gamma": [38, 40], "beta": [38, 40, 44, 45], "add_all_meta_to_dataset": [38, 50, 56, 76, 81], "variabl": [38, 50, 56, 71, 76, 81, 97, 134], "choose_qubits_na": 38, "sequenti": [38, 107, 130], "choose_qubits_custom": 38, "element": 38, "match": 38, "num_inst": [39, 45], "num_qaoa_lay": 39, "min_num_nod": 39, "max_num_nod": 39, "use_virtual_nod": [39, 45], "use_classically_optimized_angl": [39, 45], "choose_qubits_routin": [39, 57, 134], "min_num_qubit": 39, "seed": 39, "upon": [39, 51, 57], "angl": [40, 45, 47], "qubit_to_nod": [41, 42], "virtual_nod": [41, 42, 47], "expect": [41, 42, 47, 80, 83, 85, 129], "val": 41, "node": [41, 42, 45, 47], "virtual": [41, 42, 45, 47, 120], "cut": [41, 42, 43, 47], "avg": 41, "callabl": [42, 97, 103], "parametr": [42, 48, 50, 51], "x": [43, 90, 92, 104], "minu": 43, "sign": 43, "solut": 43, "multipli": 43, "obj": 43, "approximation_ratio": 44, "approxim": [44, 45], "ratio": [44, 45], "abov": [44, 64, 133], "being": [44, 50, 56, 61, 64, 65, 82, 83, 95, 101, 117, 119], "success": [44, 64], "condit": [44, 64, 133], "mean": [44, 117, 133], "threshold": [44, 45, 57, 64, 65], "beta_ratio": 45, "beta_std": 45, "backend_nam": [45, 65, 121, 130], "timestamp": [45, 65, 130], "includ": [45, 53, 133], "standard": [45, 57, 60, 69, 104, 117, 134], "deviat": [45, 57, 60, 104, 117], "classic": [45, 47, 56], "graph_phys": 47, "qubit_nod": 47, "use_classical_angl": 47, "qaoa_lay": 47, "solv": 47, "averag": [47, 59, 64, 65, 71, 76, 82, 97], "presenc": 47, "volum": [48, 55, 56, 57, 66, 129, 134], "reflect": [48, 50, 56, 67, 68, 73, 78], "deepest": [48, 56], "oper": [48, 67, 109, 117, 129], "second": [48, 50], "clop": [48, 129, 134], "speed": [48, 50], "clops_v": 48, "qv": [48, 50, 51, 56, 57, 59, 60, 64, 65, 129], "clops_h": [48, 51], "squar": 48, "clopsbenchmark": [49, 51], "clopsconfigur": [49, 50], "h": [50, 52], "append_parameterized_unitari": 50, "q0": 50, "q1": 50, "su": 50, "4": [50, 105, 130, 132, 133, 134], "involv": 50, "belong": 50, "generate_single_circuit": [50, 56], "generate_circuit_list": [50, 56], "generate_random_paramet": 50, "ndarrai": [50, 96, 97, 103], "mani": [50, 129], "templat": 50, "np": [50, 96, 103], "float64": 50, "assign_random_parameters_to_al": 50, "dict_parametrized_circ": 50, "clops_cycl": 50, "sorted_transpiled_qc_list": [50, 56, 126], "cycl": 50, "assign": [50, 51, 80], "elaps": [50, 53, 54, 127], "time": [50, 53, 54, 56, 81, 106, 107, 127], "submiss": [50, 56, 81, 106, 107, 133], "generate_transpiled_clops_templ": 50, "num_circuit": [51, 57, 134], "num_upd": 51, "10": [51, 130, 134], "num_shot": 51, "clops_h_bool": 51, "one": [51, 105, 126, 133, 134], "establish": 51, "By": 51, "definit": [51, 133], "2110": [51, 134], "14108": [51, 134], "quant": [51, 83, 134], "ph": [51, 83, 134], "rigor": 51, "loos": 51, "www": [51, 133], "ibm": [51, 112], "com": 51, "blog": 51, "metric": 51, "restrict": [51, 57, 124], "consid": [51, 57, 124], "clops_data": 53, "job_meta": 54, "quantumvolumebenchmark": [55, 57], "quantumvolumeconfigur": [55, 56, 134], "add_all_circuits_to_dataset": [56, 71, 76], "classical_permut": 56, "permut": 56, "avoid": 56, "swap": 56, "get_rem_quasidistro": 56, "sorted_qc_list_indic": [56, 61], "execution_result": [56, 58], "quasicollect": [56, 62, 113], "quasiprob": [56, 62, 113, 114], "qubii": 56, "untranspil": [56, 61, 98, 120, 129], "submit_single_qv_job": 56, "submit": [56, 81, 106, 107, 126, 130, 133], "vanilla": [56, 65, 81, 106, 107], "dd": [56, 65, 81, 106, 107], "num_sigma": [57, 64, 65, 134], "least": [57, 133], "criteria": 57, "consensu": 57, "post": [57, 130], "process": [57, 130], "when": [57, 129], "unmitig": 57, "1_000": [57, 134], "ideal_heavy_output": [58, 62], "hop": [58, 59, 60, 64, 65, 129], "ideal": [58, 82], "heavi": [58, 59, 60, 61, 62, 63, 64], "cumul": [59, 60], "probabl": [59, 60, 62, 63, 80, 83, 95, 101, 108, 119, 134], "individu": [59, 60, 104, 129, 133, 134], "trial": [59, 60], "qc_list": [61, 120], "bitrstr": 61, "all_rem_quasidistro": 62, "distribut": [62, 63, 119, 133], "noiseless": 62, "project": [63, 134], "onto": 63, "associ": [63, 133], "heavy_output_prob": 64, "over": [64, 112, 119], "within": [64, 133], "sigma": [64, 65], "qv_result": 65, "qv_results_typ": 65, "in_volumetr": 65, "plot_rem": 65, "come": [65, 82, 114], "context": 65, "volumetr": 65, "correct": [65, 82, 112, 113], "rb": [68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 95, 96, 97, 99, 101, 103, 104, 107, 108, 110, 129, 131, 132], "cliffordrandomizedbenchmark": [69, 70, 130], "cliffordrbconfigur": [69, 71, 130], "qubits_arrai": [70, 75, 80, 99, 104, 106, 108, 110, 130, 134], "sequence_length": [70, 75, 98, 99, 130, 134], "num_circuit_sampl": [70, 75, 80, 98, 130, 134], "parallel_execut": [70, 75, 130, 134], "length": [70, 75, 82, 86, 98, 99, 100, 130], "add_all_metadata_to_dataset": 71, "interleav": [73, 74, 75, 76, 77, 80, 85, 96, 98, 99, 100, 104, 129, 130, 134], "interleavedrandomizedbenchmark": [74, 75], "interleavedrbconfigur": [74, 76, 134], "interleaved_g": [75, 98, 99, 100, 104, 134], "interleaved_gate_param": [75, 134], "simultaneous_fit": [75, 134], "amplitud": [75, 96, 134], "offset": [75, 96, 134], "irb": [75, 97], "ygate": 75, "czgate": [75, 80, 134], "enter": [75, 97, 99], "fit": [75, 88, 89, 90, 92, 96, 97, 103, 104, 129, 133], "simultan": [75, 97], "specif": [76, 120, 133], "mirror": [78, 79, 80, 81, 85, 129, 134], "mirrorrandomizedbenchmark": [79, 80, 134], "mirrorrbconfigur": [79, 81, 134], "depths_arrai": [80, 134], "num_pauli_sampl": [80, 82, 86, 134], "two_qubit_gate_ensembl": [80, 83, 84, 85, 134], "density_2q_g": [80, 83, 84, 85, 134], "25": [80, 83, 84, 85, 130, 134], "mrb": [80, 81, 84, 87, 97, 104, 106, 107], "len": 80, "pauli": [80, 82, 84, 85, 86], "two": [80, 83], "ensembl": [80, 81, 83, 104], "cxgate": 80, "densiti": [80, 83, 85, 104], "submit_single_mrb_job": 81, "sorted_transpiled_circuit_dict": [81, 106], "canon": [81, 84, 85, 106], "noisy_count": 82, "ideal_count": 82, "num_circ_sampl": [82, 86, 100], "polar": [82, 97], "noisi": 82, "rescal": 82, "few": 82, "effect": 82, "real": [82, 134], "simul": [82, 112, 129], "qubit_set": [83, 97], "n_layer": 83, "grab": [83, 112], "see": [83, 133], "2204": 83, "07568": 83, "2q": [83, 85, 102, 104], "form": [83, 133], "subsequ": [83, 133], "rais": [83, 86, 110, 112], "valueerror": [83, 86, 110], "do": [83, 112, 133], "up": [83, 134], "uniti": 83, "circ_sampl": 84, "pauli_samples_per_circ": [84, 85], "dress": [84, 85, 86], "input_list": 86, "convert": 86, "flat": 86, "matrix": 86, "shape": 86, "lmfit": [88, 89, 97], "extend": 88, "shown": 88, "document": [88, 133, 134], "github": [88, 134], "io": 88, "py": 88, "example_fit_multi_dataset": 88, "html": [88, 134], "sphx": 88, "glr": 88, "multi": 88, "func": [89, 90, 91, 92, 97, 103], "initial_guess": 89, "constraint": 89, "simultaneously_fit_var": 89, "line": 89, "evalu": 90, "signatur": 91, "residu": 92, "sever": 92, "techniqu": 93, "qc_inv": 94, "clifford_dictionari": 94, "invers": 94, "invert": 94, "de": [94, 100], "stabil": [94, 100], "ground": [95, 101], "depolarization_prob": 96, "non": [96, 133], "depolar": 96, "p": 96, "decai": [96, 104, 129], "exponenti": 96, "rb_identifi": 97, "simultaneous_fit_var": 97, "0th": 97, "ap": 97, "m": [97, 130, 134], "b": [97, 133], "either": [97, 114, 117, 133], "stdrb": 97, "clifford_dict": [98, 100], "fir": 98, "cliffords_1q": 99, "cliffords_2q": 99, "num_sampl": [99, 100], "befor": 99, "after": 99, "term": [99, 133], "r": [99, 117, 120], "seq_length": 100, "self": 100, "import": [102, 129, 130, 133, 134], "fit_paramet": 103, "fit_data": 103, "minimizerresult": 103, "violin": 104, "scatter": 104, "bar": 104, "shade_stdev": 104, "shade_meanerror": 104, "logscal": 104, "mrb_2q_densiti": 104, "mrb_2q_ensembl": 104, "point": 104, "shade": 104, "axi": 104, "titl": [104, 133], "arr": 105, "helper": 105, "relabel": 105, "increasingli": 105, "zero": [105, 129], "5": [105, 130, 133, 134], "7": [105, 130, 133, 134], "note": [105, 114], "sort": [105, 125], "increas": 105, "transpiled_circuit": [107, 113], "margin": [108, 112, 119], "surviv": 108, "gate_id": 109, "gate_param": 109, "basi": [109, 120, 133], "m3": [111, 112, 113], "modif": [111, 133], "qpu": 111, "m3iqm": [111, 114], "mthree": [111, 114], "m3mitig": [111, 112], "iter_threshold": 112, "4096": 112, "modifi": [112, 129, 133], "work": [112, 114, 133, 134], "devic": [112, 134], "cals_from_system": 112, "initial_reset": 112, "rep_delai": 112, "cals_fil": 112, "async_c": 112, "cal_id": 112, "array_lik": 112, "min": 112, "1e4": 112, "max_shot": 112, "balanc": 112, "hardwar": [112, 132], "independ": 112, "reset": 112, "begin": 112, "delai": 112, "path": 112, "json": 112, "async": 112, "separ": [112, 129, 133], "thread": 112, "m3error": 112, "call": [112, 129], "while": [112, 133], "progress": 112, "against": [113, 133], "outcom": 113, "mit": [114, 133], "iter": [114, 119], "processor": 114, "argument": [114, 129, 134], "util": 114, "final_measurement_map": 114, "like": 114, "qubit_name_to_index": 114, "quasiprobabilti": 114, "we": [114, 133], "could": 114, "also": [114, 129, 133, 134], "would": 114, "out": [114, 133], "box": 114, "u": 114, "sinc": 114, "circuit_list": 116, "transpiled_qc_list": 117, "barrier": 117, "outermost": 117, "backend_label": 118, "prob_dist": 119, "bit": 119, "basis_g": 120, "drop_final_rz": 120, "target": 120, "optimization_level": 120, "sqg": 120, "z": 120, "drop": 120, "rz": 120, "emploi": 120, "iqm_job": [122, 123], "iqmjob": [122, 123, 126], "relev": 123, "transpiled_circuit_list": 125, "sorted_indic": 125, "sorted_circuit": 125, "sent": [126, 133], "manag": [126, 133], "f": 127, "amount": [127, 128], "decor": 127, "statement": [127, 133], "counts_rang": 128, "extract": 128, "rang": [128, 129, 130, 134], "were": 128, "qscore": 129, "revert": 129, "ones": [129, 134], "bug": 129, "notebook": 129, "doc": [129, 134], "20": [129, 130], "now": [129, 130], "instead": [129, 134], "port": 129, "benchmark": [129, 131], "subclass": 129, "usag": 129, "iqm": [129, 133], "place": [129, 133], "miscellan": 129, "relax": 129, "depend": [129, 134], "api": [129, 132, 134], "build": [129, 134], "publish": 129, "overwrit": 129, "compress": [129, 134], "gst": 129, "tutori": 129, "remov": 129, "explicit": 129, "minor": 129, "compat": 129, "longer": 129, "move": 129, "renam": 129, "so": 129, "rebas": 129, "randomizedbenchmark": 129, "quantumvolum": 129, "serial": 129, "some": 129, "available_benchmark": 129, "__init__": 129, "public": 129, "improv": [129, 133], "hint": 129, "docstr": 129, "messag": 129, "prevent": 129, "exclus": [129, 133], "jupyt": 129, "load_ext": 130, "autoreload": 130, "extens": 130, "load": 130, "To": [130, 133, 134], "reload": 130, "reload_ext": 130, "fakeadoni": 130, "fakeapollo": 130, "garnet": [130, 134], "deneb": 130, "o": [130, 134], "environ": [130, 134], "iqm_token": [130, 134], "nb": 130, "randomized_benchmark": [130, 134], "clifford_rb": 130, "example_crb": 130, "9": [130, 133, 134], "13": [130, 134], "14": [130, 134], "17": [130, 134], "18": [130, 134], "6": [130, 133, 134], "11": [130, 134], "15": 130, "16": 130, "benchmark_clifford_rb": 130, "run_clifford_rb": 130, "2024": [130, 132, 133], "12": [130, 132], "56": 130, "750": 130, "logging_config": 130, "info": 130, "successfulli": 130, "Will": 130, "31": 130, "63": 130, "831": 130, "992": 130, "341": 130, "040": 130, "469": 130, "23": [130, 132], "291": 130, "292": 130, "349": 130, "541": 130, "600": 130, "756": 130, "837": 130, "24": 130, "025": 130, "30": [130, 134], "171": 130, "905": 130, "544": 130, "899": 130, "32": 130, "624": 130, "004": 130, "43": 130, "319": 130, "400": 130, "569": 130, "777": 130, "840": 130, "44": 130, "048": 130, "098": 130, "qubits_": 130, "_depth_1": 130, "323": 130, "45": 130, "186": 130, "_depth_3": 130, "225": 130, "_depth_7": 130, "267": 130, "_depth_15": 130, "314": 130, "_depth_31": 130, "315": 130, "364": 130, "_depth_63": 130, "416": 130, "417": 130, "476": 130, "542": 130, "615": 130, "616": 130, "697": 130, "789": 130, "890": 130, "conclud": 130, "result_clifford_rb": 130, "931": 130, "938": 130, "945": 130, "952": 130, "959": 130, "966": 130, "972": 130, "979": 130, "986": 130, "993": 130, "999": 130, "46": 130, "006": 130, "013": 130, "946844466999168": 130, "9429197366921651": 130, "attr": 130, "session_timestamp": 130, "20241217": 130, "115553": 130, "execution_timestamp": 130, "backend_configuration_nam": 130, "iqmfakeapollobackend": 130, "depth_1": 130, "time_circuit_gener": 130, "541001081466675": 130, "time_submit": 130, "0006990432739257812": 130, "time_retriev": 130, "22491073608398438": 130, "all_job_metadata": 130, "batch_job_1": 130, "job_id": 130, "8f305755": 130, "e038": 130, "4596": 130, "8617": 130, "d96ba3f42ca9": 130, "aer_simul": 130, "statu": 130, "circuits_in_batch": 130, "depth_3": 130, "05647683143615723": 130, "0005230903625488281": 130, "2fe0b406": 130, "8977": 130, "4567": 130, "bba0": 130, "d4168f0883ed": 130, "depth_7": 130, "19257187843322754": 130, "0004839897155761719": 130, "8299918c": 130, "be26": 130, "40d5": 130, "8778": 130, "9ea4468a1df2": 130, "depth_15": 130, "05831408500671387": 130, "0004811286926269531": 130, "174640c4": 130, "9ff3": 130, "4ca3": 130, "9ffc": 130, "d6aa5be304f3": 130, "depth_31": 130, "1564040184020996": 130, "0006189346313476562": 130, "7bb739f2": 130, "31bc": 130, "40af": 130, "8dbf": 130, "1d60a9310391": 130, "depth_63": 130, "08135986328125": 130, "0004200935363769531": 130, "f414a2c1": 130, "75c8": 130, "4d5a": 130, "9e4b": 130, "ccce29903f5f": 130, "147684812545776": 130, "0005502700805664062": 130, "00039887428283691406": 130, "8832576a": 130, "6d6e": 130, "4abe": 130, "8cfa": 130, "5001e6bb98e": 130, "08015298843383789": 130, "00039315223693847656": 130, "ecc1bcea": 130, "ef4c": 130, "4f35": 130, "9284": 130, "ab49af0c5b9f": 130, "16936397552490234": 130, "0003960132598876953": 130, "5582c842": 130, "0f07": 130, "46b6": 130, "96be": 130, "2fb3925b19d9": 130, "20774221420288086": 130, "0004191398620605469": 130, "6423b02b": 130, "8417": 130, "4300": 130, "b7ac": 130, "84d59f87a51f": 130, "0635080337524414": 130, "0004169940948486328": 130, "0b324804": 130, "44fe": 130, "4c16": 130, "83eb": 130, "08e5cd67aa79": 130, "20784401893615723": 130, "0004961490631103516": 130, "6c633640": 130, "d4b4": 130, "47de": 130, "a46d": 130, "d3ae4c84d212": 130, "avg_gate_fidel": 130, "0012220693932290373": 130, "001545469960991071": 130, "displai": [130, 133], "releas": 132, "date": [132, 133], "sourc": [132, 133], "code": [132, 133], "finland": 132, "character": 132, "verif": [132, 134], "tool": [132, 134], "develop": 132, "instal": 132, "mode": 132, "refer": [132, 134], "licens": 132, "changelog": 132, "search": 132, "page": [132, 133], "apach": 133, "januari": 133, "2004": 133, "AND": 133, "FOR": 133, "reproduct": 133, "shall": 133, "section": 133, "licensor": 133, "copyright": 133, "owner": 133, "entiti": 133, "author": 133, "grant": 133, "legal": 133, "act": 133, "control": 133, "For": [133, 134], "power": 133, "direct": 133, "indirect": 133, "caus": 133, "contract": 133, "ii": 133, "ownership": 133, "fifti": 133, "percent": 133, "50": 133, "more": [133, 134], "outstand": 133, "iii": 133, "benefici": 133, "you": [133, 134], "your": [133, 134], "exercis": 133, "permiss": 133, "prefer": 133, "limit": 133, "softwar": 133, "file": 133, "mechan": 133, "transform": 133, "translat": 133, "compil": 133, "convers": 133, "media": 133, "authorship": 133, "made": 133, "notic": 133, "attach": 133, "appendix": 133, "below": [133, 134], "editori": 133, "revis": 133, "elabor": 133, "whole": 133, "remain": 133, "mere": 133, "link": 133, "bind": 133, "interfac": 133, "thereof": 133, "contribut": 133, "addit": 133, "intention": 133, "inclus": 133, "behalf": 133, "electron": 133, "verbal": 133, "written": 133, "commun": 133, "mail": 133, "issu": 133, "track": 133, "discuss": 133, "exclud": 133, "conspicu": 133, "mark": 133, "design": [133, 134], "Not": 133, "contributor": 133, "whom": 133, "been": 133, "receiv": 133, "incorpor": 133, "subject": 133, "herebi": 133, "perpetu": 133, "worldwid": 133, "charg": 133, "royalti": 133, "free": 133, "irrevoc": 133, "reproduc": 133, "publicli": 133, "sublicens": 133, "patent": 133, "except": 133, "offer": 133, "sell": 133, "transfer": 133, "claim": 133, "necessarili": 133, "infring": 133, "alon": 133, "combin": 133, "institut": 133, "litig": 133, "counterclaim": 133, "lawsuit": 133, "alleg": 133, "constitut": 133, "contributori": 133, "termin": [133, 134], "redistribut": 133, "mai": 133, "medium": 133, "without": [133, 134], "meet": 133, "follow": [133, 134], "must": [133, 134], "recipi": 133, "carri": 133, "promin": 133, "c": 133, "retain": 133, "trademark": 133, "pertain": 133, "part": 133, "d": 133, "text": 133, "readabl": 133, "along": 133, "wherev": 133, "third": 133, "parti": 133, "normal": 133, "appear": 133, "content": 133, "own": [133, 134], "alongsid": 133, "addendum": 133, "cannot": 133, "constru": 133, "compli": 133, "unless": 133, "explicitli": 133, "notwithstand": 133, "noth": 133, "herein": 133, "supersed": 133, "agreement": 133, "regard": 133, "trade": 133, "servic": [133, 134], "product": 133, "reason": 133, "customari": 133, "describ": 133, "disclaim": 133, "warranti": 133, "law": 133, "agre": 133, "AS": 133, "OR": 133, "OF": 133, "kind": 133, "express": 133, "impli": 133, "merchant": 133, "particular": 133, "sole": 133, "respons": 133, "appropri": 133, "risk": 133, "liabil": 133, "event": 133, "theori": 133, "tort": 133, "neglig": 133, "deliber": 133, "grossli": 133, "liabl": 133, "damag": 133, "special": 133, "incident": 133, "consequenti": 133, "charact": 133, "aris": 133, "inabl": 133, "loss": 133, "goodwil": 133, "stoppag": 133, "failur": 133, "malfunct": 133, "commerci": 133, "even": 133, "advis": 133, "fee": 133, "indemn": 133, "oblig": 133, "right": 133, "howev": 133, "indemnifi": 133, "defend": 133, "hold": 133, "harmless": 133, "incur": 133, "assert": 133, "how": [133, 134], "boilerpl": 133, "enclos": 133, "bracket": 133, "don": 133, "t": 133, "comment": 133, "syntax": 133, "format": 133, "descript": 133, "print": 133, "easier": 133, "archiv": 133, "complianc": 133, "obtain": [133, 134], "languag": 133, "govern": 133, "repositori": [133, 134], "licenc": 133, "mgst": 133, "src": 133, "raphael": 133, "brieger": 133, "ingo": 133, "roth": 133, "martin": 133, "kliesch": 133, "folder": [133, 134], "comprehens": 134, "modular": 134, "easi": 134, "simpl": 134, "command": 134, "phy": 134, "rev": 134, "85": 134, "042311": 134, "2012": 134, "lett": 134, "109": 134, "080505": 134, "tomographi": 134, "prx": 134, "010325": 134, "2023": 134, "129": 134, "150502": 134, "2022": 134, "holist": 134, "032328": 134, "2019": 134, "entangl": 134, "0712": 134, "0921": 134, "2007": 134, "ieee": 134, "tran": 134, "eng": 134, "split": 134, "legaci": 134, "onc": 134, "wrap": 134, "benchmarkexperi": 134, "handl": 134, "among": 134, "usual": 134, "sens": 134, "conda": 134, "isol": 134, "setup": 134, "global": 134, "That": 134, "plai": 134, "around": 134, "mess": 134, "rest": 134, "machin": 134, "pip": 134, "want": 134, "upgrad": 134, "clone": 134, "directori": 134, "test": 134, "strategi": 134, "eager": 134, "tox": 134, "access": 134, "reson": 134, "cloud": 134, "prem": 134, "adapt": 134, "platform": 134, "token": 134, "automat": 134, "authent": 134, "your_token": 134, "interleaved_rb": 134, "mirror_rb": 134, "quantum_volum": 134, "example_irb": 134, "iswapg": 134, "example_mrb": 134, "example_qv": 134, "500": 134, "60_000": 134, "iqmprovid": 134, "station": 134, "fi": 134, "coco": 134, "get_backend": 134, "example_experi": 134, "weekli": 134, "daili": 134, "gitlab": 134, "scheduled_experi": 134}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "entanglement"], [35, 0, 0, "-", "logging_config"], [36, 0, 0, "-", "optimization"], [48, 0, 0, "-", "quantum_volume"], [67, 0, 0, "-", "randomized_benchmarking"], [111, 0, 0, "-", "readout_mitigation"], [115, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[20, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[21, 1, 1, "", "GHZBenchmark"], [22, 1, 1, "", "GHZConfiguration"], [23, 5, 1, "", "append_rms"], [24, 5, 1, "", "extract_fidelities"], [25, 5, 1, "", "fidelity_analysis"], [26, 5, 1, "", "fidelity_ghz_coherences"], [27, 5, 1, "", "fidelity_ghz_randomized_measurements"], [28, 5, 1, "", "generate_ghz_linear"], [29, 5, 1, "", "generate_ghz_log_cruz"], [30, 5, 1, "", "generate_ghz_log_mooney"], [31, 5, 1, "", "generate_ghz_spanning_tree"], [32, 5, 1, "", "get_cx_map"], [33, 5, 1, "", "get_edges"], [34, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_coherence_meas_circuits"], [21, 2, 1, "", "generate_native_ghz"], [21, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, 3, 1, "", "benchmark"], [22, 3, 1, "", "cal_url"], [22, 3, 1, "", "custom_qubits_array"], [22, 3, 1, "", "fidelity_routine"], [22, 3, 1, "", "mit_shots"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_RMs"], [22, 3, 1, "", "optimize_sqg"], [22, 3, 1, "", "qiskit_optim_level"], [22, 3, 1, "", "qubit_counts"], [22, 3, 1, "", "rem"], [22, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[22, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[37, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[38, 1, 1, "", "QScoreBenchmark"], [39, 1, 1, "", "QScoreConfiguration"], [40, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [41, 5, 1, "", "compute_expectation_value"], [42, 5, 1, "", "create_objective_function"], [43, 5, 1, "", "cut_cost_function"], [44, 5, 1, "", "is_successful"], [45, 5, 1, "", "plot_approximation_ratios"], [46, 5, 1, "", "qscore_analysis"], [47, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[38, 2, 1, "", "add_all_meta_to_dataset"], [38, 2, 1, "", "analysis_function"], [38, 2, 1, "", "choose_qubits_custom"], [38, 2, 1, "", "choose_qubits_naive"], [38, 2, 1, "", "execute"], [38, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[39, 3, 1, "", "benchmark"], [39, 3, 1, "", "choose_qubits_routine"], [39, 3, 1, "", "custom_qubits_array"], [39, 3, 1, "", "max_num_nodes"], [39, 3, 1, "", "min_num_nodes"], [39, 3, 1, "", "min_num_qubits"], [39, 3, 1, "", "model_computed_fields"], [39, 3, 1, "", "model_config"], [39, 3, 1, "", "model_fields"], [39, 3, 1, "", "num_instances"], [39, 3, 1, "", "num_qaoa_layers"], [39, 3, 1, "", "optimize_sqg"], [39, 3, 1, "", "qiskit_optim_level"], [39, 3, 1, "", "seed"], [39, 3, 1, "", "use_classically_optimized_angles"], [39, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[49, 0, 0, "-", "clops"], [55, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[50, 1, 1, "", "CLOPSBenchmark"], [51, 1, 1, "", "CLOPSConfiguration"], [52, 5, 1, "", "clops_analysis"], [53, 5, 1, "", "plot_times"], [54, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[50, 2, 1, "", "add_all_meta_to_dataset"], [50, 2, 1, "", "analysis_function"], [50, 2, 1, "", "append_parameterized_unitary"], [50, 2, 1, "", "assign_random_parameters_to_all"], [50, 2, 1, "", "clops_cycle"], [50, 2, 1, "", "execute"], [50, 2, 1, "", "generate_circuit_list"], [50, 2, 1, "", "generate_random_parameters"], [50, 2, 1, "", "generate_single_circuit"], [50, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[51, 3, 1, "", "benchmark"], [51, 3, 1, "", "clops_h_bool"], [51, 3, 1, "", "model_computed_fields"], [51, 3, 1, "", "model_config"], [51, 3, 1, "", "model_fields"], [51, 3, 1, "", "num_circuits"], [51, 3, 1, "", "num_shots"], [51, 3, 1, "", "num_updates"], [51, 3, 1, "", "optimize_sqg"], [51, 3, 1, "", "physical_layout"], [51, 3, 1, "", "qiskit_optim_level"], [51, 3, 1, "", "qubits"], [51, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[56, 1, 1, "", "QuantumVolumeBenchmark"], [57, 1, 1, "", "QuantumVolumeConfiguration"], [58, 5, 1, "", "compute_heavy_output_probabilities"], [59, 5, 1, "", "cumulative_hop"], [60, 5, 1, "", "cumulative_std"], [61, 5, 1, "", "get_ideal_heavy_outputs"], [62, 5, 1, "", "get_rem_hops"], [63, 5, 1, "", "heavy_projector"], [64, 5, 1, "", "is_successful"], [65, 5, 1, "", "plot_hop_threshold"], [66, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[56, 2, 1, "", "add_all_circuits_to_dataset"], [56, 2, 1, "", "add_all_meta_to_dataset"], [56, 2, 1, "", "analysis_function"], [56, 2, 1, "", "execute"], [56, 2, 1, "", "generate_circuit_list"], [56, 2, 1, "", "generate_single_circuit"], [56, 2, 1, "", "get_rem_quasidistro"], [56, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[57, 3, 1, "", "benchmark"], [57, 3, 1, "", "choose_qubits_routine"], [57, 3, 1, "", "custom_qubits_array"], [57, 3, 1, "", "mit_shots"], [57, 3, 1, "", "model_computed_fields"], [57, 3, 1, "", "model_config"], [57, 3, 1, "", "model_fields"], [57, 3, 1, "", "num_circuits"], [57, 3, 1, "", "num_sigmas"], [57, 3, 1, "", "optimize_sqg"], [57, 3, 1, "", "physical_layout"], [57, 3, 1, "", "qiskit_optim_level"], [57, 3, 1, "", "rem"], [57, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[68, 0, 0, "-", "clifford_rb"], [73, 0, 0, "-", "interleaved_rb"], [78, 0, 0, "-", "mirror_rb"], [88, 0, 0, "-", "multi_lmfit"], [93, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[69, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[70, 1, 1, "", "CliffordRBConfiguration"], [71, 1, 1, "", "CliffordRandomizedBenchmarking"], [72, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[70, 3, 1, "", "benchmark"], [70, 3, 1, "", "model_computed_fields"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "model_fields"], [70, 3, 1, "", "num_circuit_samples"], [70, 3, 1, "", "parallel_execution"], [70, 3, 1, "", "qubits_array"], [70, 3, 1, "", "sequence_lengths"], [70, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[71, 2, 1, "", "add_all_circuits_to_dataset"], [71, 2, 1, "", "add_all_metadata_to_dataset"], [71, 2, 1, "", "analysis_function"], [71, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[74, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[75, 1, 1, "", "InterleavedRBConfiguration"], [76, 1, 1, "", "InterleavedRandomizedBenchmarking"], [77, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[75, 3, 1, "", "interleaved_gate"], [75, 3, 1, "", "interleaved_gate_params"], [75, 3, 1, "", "model_computed_fields"], [75, 3, 1, "", "model_config"], [75, 3, 1, "", "model_fields"], [75, 3, 1, "", "num_circuit_samples"], [75, 3, 1, "", "parallel_execution"], [75, 3, 1, "", "qubits_array"], [75, 3, 1, "", "sequence_lengths"], [75, 3, 1, "", "shots"], [75, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[76, 2, 1, "", "add_all_circuits_to_dataset"], [76, 2, 1, "", "add_all_meta_to_dataset"], [76, 2, 1, "", "analysis_function"], [76, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[79, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[80, 1, 1, "", "MirrorRBConfiguration"], [81, 1, 1, "", "MirrorRandomizedBenchmarking"], [82, 5, 1, "", "compute_polarizations"], [83, 5, 1, "", "edge_grab"], [84, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [85, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [86, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [87, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[80, 3, 1, "", "benchmark"], [80, 3, 1, "", "density_2q_gates"], [80, 3, 1, "", "depths_array"], [80, 3, 1, "", "model_computed_fields"], [80, 3, 1, "", "model_config"], [80, 3, 1, "", "model_fields"], [80, 3, 1, "", "num_circuit_samples"], [80, 3, 1, "", "num_pauli_samples"], [80, 3, 1, "", "qiskit_optim_level"], [80, 3, 1, "", "qubits_array"], [80, 3, 1, "", "routing_method"], [80, 3, 1, "", "shots"], [80, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[81, 2, 1, "", "add_all_meta_to_dataset"], [81, 2, 1, "", "analysis_function"], [81, 2, 1, "", "execute"], [81, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[89, 5, 1, "", "create_multi_dataset_params"], [90, 5, 1, "", "eval_func_single_dataset"], [91, 5, 1, "", "get_param_names_from_func_signature"], [92, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[94, 5, 1, "", "compute_inverse_clifford"], [95, 5, 1, "", "estimate_survival_probabilities"], [96, 5, 1, "", "exponential_rb"], [97, 5, 1, "", "fit_decay_lmfit"], [98, 5, 1, "", "generate_all_rb_circuits"], [99, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [100, 5, 1, "", "generate_random_clifford_seq_circuits"], [101, 5, 1, "", "get_survival_probabilities"], [102, 5, 1, "", "import_native_gate_cliffords"], [103, 5, 1, "", "lmfit_minimizer"], [104, 5, 1, "", "plot_rb_decay"], [105, 5, 1, "", "relabel_qubits_array_from_zero"], [106, 5, 1, "", "submit_parallel_rb_job"], [107, 5, 1, "", "submit_sequential_rb_jobs"], [108, 5, 1, "", "survival_probabilities_parallel"], [109, 5, 1, "", "validate_irb_gate"], [110, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[112, 1, 1, "", "M3IQM"], [113, 5, 1, "", "apply_readout_error_mitigation"], [114, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[112, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[116, 5, 1, "", "count_2q_layers"], [117, 5, 1, "", "count_native_gates"], [118, 5, 1, "", "get_iqm_backend"], [119, 5, 1, "", "marginal_distribution"], [120, 5, 1, "", "perform_backend_transpilation"], [121, 5, 1, "", "reduce_to_active_qubits"], [122, 5, 1, "", "retrieve_all_counts"], [123, 5, 1, "", "retrieve_all_job_metadata"], [124, 5, 1, "", "set_coupling_map"], [125, 5, 1, "", "sort_batches_by_final_layout"], [126, 5, 1, "", "submit_execute"], [127, 5, 1, "", "timeit"], [128, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 134], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 134], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": 18, "entangl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "ghz": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "ghzbenchmark": 21, "ghzconfigur": 22, "append_rm": 23, "extract_fidel": 24, "fidelity_analysi": 25, "fidelity_ghz_coher": 26, "fidelity_ghz_randomized_measur": 27, "generate_ghz_linear": 28, "generate_ghz_log_cruz": 29, "generate_ghz_log_moonei": 30, "generate_ghz_spanning_tre": 31, "get_cx_map": 32, "get_edg": 33, "plot_fidel": 34, "logging_config": 35, "optim": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "qscore": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "qscorebenchmark": 38, "qscoreconfigur": 39, "calculate_optimal_angles_for_qaoa_p1": 40, "compute_expectation_valu": 41, "create_objective_funct": 42, "cut_cost_funct": 43, "is_success": [44, 64], "plot_approximation_ratio": 45, "qscore_analysi": 46, "run_qaoa": 47, "quantum_volum": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "clop": [49, 50, 51, 52, 53, 54], "clopsbenchmark": 50, "clopsconfigur": 51, "clops_analysi": 52, "plot_tim": 53, "retrieve_clops_elapsed_tim": 54, "quantumvolumebenchmark": 56, "quantumvolumeconfigur": 57, "compute_heavy_output_prob": 58, "cumulative_hop": 59, "cumulative_std": 60, "get_ideal_heavy_output": 61, "get_rem_hop": 62, "heavy_projector": 63, "plot_hop_threshold": 65, "qv_analysi": 66, "randomized_benchmark": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "clifford_rb": [68, 69, 70, 71, 72], "cliffordrbconfigur": 70, "cliffordrandomizedbenchmark": 71, "clifford_rb_analysi": 72, "interleaved_rb": [73, 74, 75, 76, 77], "interleavedrbconfigur": 75, "interleavedrandomizedbenchmark": 76, "interleaved_rb_analysi": 77, "mirror_rb": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "mirrorrbconfigur": 80, "mirrorrandomizedbenchmark": 81, "compute_polar": 82, "edge_grab": 83, "generate_fixed_depth_mrb_circuit": 84, "generate_pauli_dressed_mrb_circuit": 85, "list_to_numcircuit_times_numpauli_matrix": 86, "mrb_analysi": 87, "multi_lmfit": [88, 89, 90, 91, 92], "create_multi_dataset_param": 89, "eval_func_single_dataset": 90, "get_param_names_from_func_signatur": 91, "multi_dataset_residu": 92, "randomized_benchmarking_common": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "compute_inverse_clifford": 94, "estimate_survival_prob": 95, "exponential_rb": 96, "fit_decay_lmfit": 97, "generate_all_rb_circuit": 98, "generate_fixed_depth_parallel_rb_circuit": 99, "generate_random_clifford_seq_circuit": 100, "get_survival_prob": 101, "import_native_gate_clifford": 102, "lmfit_minim": 103, "plot_rb_decai": 104, "relabel_qubits_array_from_zero": 105, "submit_parallel_rb_job": 106, "submit_sequential_rb_job": 107, "survival_probabilities_parallel": 108, "validate_irb_g": 109, "validate_rb_qubit": 110, "readout_mitig": [111, 112, 113, 114], "m3iqm": 112, "apply_readout_error_mitig": 113, "readout_error_m3": 114, "util": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "count_2q_lay": 116, "count_native_g": 117, "get_iqm_backend": 118, "marginal_distribut": 119, "perform_backend_transpil": 120, "reduce_to_active_qubit": 121, "retrieve_all_count": 122, "retrieve_all_job_metadata": 123, "set_coupling_map": 124, "sort_batches_by_final_layout": 125, "submit_execut": 126, "timeit": 127, "xrvariable_to_count": 128, "changelog": 129, "version": 129, "2": 129, "4": 129, "3": 129, "1": 129, "0": 129, "12": 129, "11": 129, "10": 129, "9": 129, "8": 129, "7": 129, "6": 129, "5": 129, "clifford": 130, "random": 130, "rb": 130, "exampl": [130, 131], "choos": 130, "defin": 130, "backend": 130, "set": 130, "token": 130, "us": [130, 134], "reson": 130, "configur": 130, "run": 130, "experi": 130, "perform": 130, "analysi": 130, "content": 132, "indic": 132, "tabl": 132, "licens": 133, "instal": 134, "latest": 134, "releas": 134, "develop": 134, "mode": 134, "chang": 134, "recommend": 134, "character": 134, "physic": 134, "hardwar": 134, "jupyt": 134, "notebook": 134, "python": 134, "script": 134, "schedul": 134, "ci": 134, "cd": 134, "pipelin": 134}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.append_rms": [[23, "iqm-benchmarks-entanglement-ghz-append-rms"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[24, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[25, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[26, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[27, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[28, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[29, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[30, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[31, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[32, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[33, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[34, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[35, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[36, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[37, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[38, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[39, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[40, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[41, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[42, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[43, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.is_successful": [[44, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[45, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[46, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[47, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[48, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[49, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[50, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[51, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[52, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[53, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[54, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[55, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[56, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[57, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[58, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[59, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[60, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[61, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[62, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[63, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[64, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[65, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[66, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[67, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[70, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[71, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[72, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[73, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[75, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[76, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[77, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[78, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[80, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[81, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[82, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[83, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[84, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[85, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[86, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[87, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[88, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[89, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[90, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[91, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[92, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[93, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[94, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[95, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[96, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[97, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[98, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[99, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[100, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[101, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[102, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[103, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[104, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[105, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[106, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[107, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[108, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[109, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[110, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[111, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[112, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[113, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[114, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[115, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.count_2q_layers": [[116, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[117, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[118, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[119, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[120, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[121, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[122, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[123, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[124, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[125, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[126, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[127, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[128, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[129, "changelog"]], "Version 2.4": [[129, "version-2-4"]], "Version 2.3": [[129, "version-2-3"]], "Version 2.2": [[129, "version-2-2"]], "Version 2.1": [[129, "version-2-1"]], "Version 2.0": [[129, "version-2-0"]], "Version 1.12": [[129, "version-1-12"]], "Version 1.11": [[129, "version-1-11"]], "Version 1.10": [[129, "version-1-10"]], "Version 1.9": [[129, "version-1-9"]], "Version 1.8": [[129, "version-1-8"]], "Version 1.7": [[129, "version-1-7"]], "Version 1.6": [[129, "version-1-6"]], "Version 1.5": [[129, "version-1-5"]], "Version 1.4": [[129, "version-1-4"]], "Version 1.3": [[129, "version-1-3"]], "Version 1.2": [[129, "version-1-2"]], "Version 1.1": [[129, "version-1-1"]], "Version 1.0": [[129, "version-1-0"]], "Clifford Randomized Benchmarking (RB) Example": [[130, "clifford-randomized-benchmarking-rb-example"]], "Choose (or define) a backend": [[130, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[130, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[130, "randomized-benchmarking-configuration"]], "Run the experiment": [[130, "run-the-experiment"]], "Perform the analysis": [[130, "perform-the-analysis"]], "Examples": [[131, "examples"]], "IQM Benchmarks": [[132, "iqm-benchmarks"], [134, "iqm-benchmarks"]], "Contents": [[132, "contents"]], "Indices and tables": [[132, "indices-and-tables"]], "License": [[133, "license"]], "Installation (latest release)": [[134, "installation-latest-release"]], "Development mode (latest changes: recommended)": [[134, "development-mode-latest-changes-recommended"]], "Characterize Physical Hardware": [[134, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[134, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[134, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.entanglement"], [20, "module-iqm.benchmarks.entanglement.ghz"], [35, "module-iqm.benchmarks.logging_config"], [36, "module-iqm.benchmarks.optimization"], [37, "module-iqm.benchmarks.optimization.qscore"], [48, "module-iqm.benchmarks.quantum_volume"], [49, "module-iqm.benchmarks.quantum_volume.clops"], [55, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [67, "module-iqm.benchmarks.randomized_benchmarking"], [68, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [73, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [78, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [88, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [93, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [111, "module-iqm.benchmarks.readout_mitigation"], [115, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "append_rms() (in module iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.append_rms"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[33, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[34, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[35, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[36, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[37, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[40, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[41, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[42, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[43, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[44, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[45, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[46, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[47, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[48, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[49, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[52, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[53, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[54, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[55, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[59, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[60, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[61, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[62, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[63, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[64, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[65, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[66, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[67, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[73, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[78, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[83, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[84, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[85, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[86, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[87, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[88, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[89, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[90, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[91, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[92, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[93, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[94, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[95, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[96, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[97, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[98, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[99, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[100, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[101, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[102, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[103, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[104, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[105, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[106, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[107, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[108, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[109, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[110, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[111, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[112, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[112, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[113, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[114, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[115, "module-iqm.benchmarks.utils"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[116, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[117, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[118, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[119, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[120, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[121, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[122, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[123, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[124, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[125, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[126, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[127, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[128, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})