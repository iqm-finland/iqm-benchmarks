Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.benchmark_experiment", "api/iqm.benchmarks.benchmark_experiment.BenchmarkExperiment", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.append_rms", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.benchmark_experiment.rst", "api/iqm.benchmarks.benchmark_experiment.BenchmarkExperiment.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.append_rms.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.benchmark_experiment", "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.append_rms", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 40, 85, 91, 99, 101, 110, 121, 122], "python": 1, "librari": [1, 65, 70, 99], "suit": [1, 122], "qcvv": [1, 120, 122], "subpackag": [1, 17, 34, 38, 57, 58, 63, 68], "modul": [1, 5, 17, 33, 34, 38, 57, 58, 63, 68, 120], "gener": [2, 3, 15, 17, 19, 20, 26, 27, 28, 29, 30, 36, 40, 43, 46, 55, 61, 65, 66, 70, 71, 73, 74, 75, 78, 79, 88, 89, 90, 105, 119, 121], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 18, 19, 20, 35, 36, 37, 39, 40, 41, 45, 46, 47, 59, 60, 61, 64, 65, 66, 69, 70, 71, 88, 101, 102, 119, 121, 122], "inherit": [2, 3, 5, 15, 18, 35, 39, 45, 59, 64, 69, 101], "benchmarkbas": [2, 4, 35, 36, 37, 122], "abc": [2, 3, 5, 6, 18, 35, 39, 45, 59, 64, 69], "benchmarkconfigurationbas": [2, 3, 6, 16, 18, 20, 35, 37, 39, 41, 45, 47, 59, 60, 64, 65, 69, 70, 122], "pydant": [2, 4, 18, 20, 35, 37, 39, 41, 45, 47, 59, 60, 64, 65, 69, 70], "main": [2, 7, 8, 18, 35, 39, 45, 59, 64, 69], "basemodel": [2, 4, 18, 35, 39, 45, 59, 64, 69], "backend": [3, 6, 16, 19, 20, 21, 22, 29, 36, 40, 41, 46, 47, 55, 61, 66, 71, 73, 74, 75, 88, 89, 96, 97, 99, 100, 102, 103, 104, 107, 108, 110, 111, 114, 115, 116, 119, 122], "iqmbackendbas": [3, 6, 16, 19, 21, 36, 40, 46, 61, 66, 71, 73, 74, 75, 88, 89, 90, 96, 97, 99, 100, 103, 107, 108, 110, 114, 116], "configur": [3, 4, 6, 16, 19, 20, 36, 37, 40, 41, 46, 47, 54, 60, 61, 65, 66, 70, 71, 119, 121, 122], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 19, 20, 24, 30, 36, 37, 40, 41, 46, 47, 60, 61, 65, 66, 70, 71, 83, 102, 119, 121], "The": [3, 6, 7, 12, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 36, 40, 41, 43, 46, 47, 49, 50, 52, 53, 60, 61, 65, 66, 70, 71, 72, 73, 74, 84, 94, 98, 104, 107, 108, 110, 111, 112, 113, 117, 121, 122], "implement": [3, 5, 6, 19, 20, 25], "all": [3, 4, 6, 7, 20, 21, 30, 32, 36, 40, 44, 46, 48, 49, 50, 53, 54, 60, 61, 65, 66, 71, 88, 94, 96, 97, 102, 112, 113, 119, 121, 122], "from": [3, 4, 6, 7, 11, 19, 20, 22, 29, 30, 31, 36, 37, 41, 43, 44, 46, 47, 48, 53, 55, 60, 65, 70, 72, 81, 94, 95, 98, 102, 104, 108, 112, 113, 114, 118, 119, 121, 122], "which": [3, 6, 7, 8, 19, 20, 22, 29, 31, 38, 40, 41, 42, 46, 56, 60, 61, 62, 65, 66, 67, 70, 71, 77, 88, 94, 98, 102, 111, 121, 122], "thei": 3, "method": [3, 4, 6, 7, 8, 9, 10, 16, 19, 20, 24, 36, 37, 40, 41, 46, 47, 60, 61, 65, 66, 70, 71, 102, 110], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "abstract": [3, 6], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 20, 32, 36, 37, 41, 43, 47, 55, 60, 65, 70, 81, 88, 104, 108, 111, 119, 121], "return": [3, 6, 9, 11, 12, 13, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 66, 67, 71, 72, 73, 74, 75, 76, 77, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "execute_full_benchmark": [3, 36], "execut": [3, 4, 6, 9, 16, 19, 30, 34, 36, 38, 40, 41, 46, 47, 48, 55, 60, 61, 65, 66, 70, 71, 72, 85, 91, 96, 97, 98, 110, 116, 117, 118, 119, 121, 122], "full": [3, 36, 41, 47, 122], "given": [3, 6, 7, 11, 19, 20, 21, 29, 30, 31, 32, 34, 36, 38, 40, 46, 53, 54, 63, 72, 89, 90, 115, 122], "static": [3, 6, 19, 36, 40, 46, 61, 66, 71], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 19, 20, 22, 24, 25, 36, 37, 40, 41, 43, 44, 46, 47, 48, 51, 52, 53, 55, 60, 61, 65, 66, 70, 71, 72, 73, 74, 75, 85, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 116, 118], "check": [3, 16, 36, 54], "whether": [3, 4, 20, 21, 36, 40, 41, 46, 47, 54, 55, 60, 65, 89, 94, 110, 121], "requir": [3, 4, 16, 20, 37, 41, 47, 60, 65, 70, 121, 122], "ar": [3, 4, 7, 11, 16, 20, 21, 30, 31, 46, 47, 75, 94, 100, 109, 111, 119, 121, 122], "met": [3, 16], "valid": [3, 99, 100, 120, 122], "dictionari": [3, 4, 7, 11, 20, 37, 40, 41, 44, 46, 47, 48, 51, 52, 53, 60, 65, 70, 71, 73, 74, 84, 88, 89, 90, 92, 96, 97, 103, 104, 107, 109, 115, 118], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122], "generate_requir": 3, "none": [3, 4, 6, 8, 16, 20, 29, 31, 37, 40, 41, 46, 47, 60, 65, 70, 73, 74, 75, 79, 84, 87, 88, 89, 90, 94, 96, 97, 99, 102, 110, 111, 112, 116, 122], "attribut": [3, 4, 6, 7, 8, 9, 10, 19, 20, 37, 40, 41, 46, 47, 60, 61, 65, 66, 70, 71, 117, 121], "shot": [4, 20, 37, 41, 46, 47, 60, 65, 70, 96, 97, 102, 103, 116, 122], "int": [4, 9, 11, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 41, 43, 46, 47, 48, 51, 54, 55, 60, 65, 70, 71, 72, 73, 74, 75, 76, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 103, 106, 109, 110, 112, 114, 115, 116, 118], "256": [4, 37, 41, 47, 60, 65, 70], "max_gates_per_batch": [4, 20, 37, 41, 47, 60, 65, 70, 96, 97, 116, 122], "calset_id": [4, 20, 37, 41, 47, 60, 65, 70, 96, 97, 116, 122], "routing_method": [4, 20, 37, 41, 47, 60, 65, 70, 74, 75, 110, 122], "liter": [4, 20, 37, 41, 47, 60, 65, 70, 114], "basic": [4, 20, 37, 41, 47, 60, 65, 70, 74, 75], "lookahead": [4, 20, 37, 41, 47, 60, 65, 70], "stochast": [4, 20, 37, 41, 47, 60, 65, 70], "sabr": [4, 20, 37, 41, 47, 60, 65, 70, 110, 122], "physical_layout": [4, 20, 37, 41, 47, 60, 65, 70, 114, 122], "fix": [4, 20, 37, 41, 47, 60, 65, 70, 71, 74, 89, 96, 98, 114, 119, 122], "batch": [4, 20, 37, 41, 47, 60, 65, 70, 96, 97, 114, 115, 116], "number": [4, 19, 20, 26, 27, 28, 29, 30, 32, 34, 36, 38, 41, 46, 47, 54, 55, 57, 60, 65, 70, 71, 72, 73, 74, 75, 76, 85, 88, 89, 90, 91, 96, 97, 102, 103, 106, 107, 116], "us": [4, 6, 9, 19, 20, 22, 24, 25, 29, 30, 31, 32, 33, 36, 40, 41, 47, 70, 72, 87, 94, 102, 104, 116, 119, 121], "circuit": [4, 19, 20, 21, 26, 27, 28, 29, 30, 36, 38, 40, 41, 46, 47, 48, 51, 54, 55, 60, 61, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 84, 85, 88, 89, 90, 91, 96, 97, 99, 102, 103, 106, 107, 110, 111, 115, 116, 118, 119], "default": [4, 6, 12, 20, 37, 41, 46, 47, 55, 60, 65, 70, 90, 94, 102, 114], "i": [4, 6, 7, 20, 22, 26, 29, 30, 32, 36, 40, 41, 42, 46, 47, 54, 55, 56, 60, 61, 62, 65, 66, 67, 70, 71, 72, 76, 77, 80, 95, 99, 102, 110, 114, 121, 122], "2": [4, 31, 36, 37, 47, 54, 70, 89, 95, 106, 121, 122], "8": [4, 95, 121, 122], "maximum": [4, 36, 96, 97, 116], "gate": [4, 19, 20, 21, 26, 30, 31, 38, 40, 41, 47, 57, 58, 61, 63, 65, 66, 70, 73, 75, 84, 88, 89, 90, 92, 94, 96, 97, 99, 106, 107, 110, 116, 122], "per": [4, 38, 41, 47, 60, 70, 72, 74, 75, 76, 96, 97, 102, 103, 116], "option": [4, 20, 21, 31, 46, 47, 65, 74, 75, 84, 87, 89, 90, 94, 96, 97, 99, 110, 111, 112, 116], "calibr": [4, 6, 20, 22, 31, 46, 47, 96, 97, 102, 103, 116], "id": [4, 116], "last": 4, "avail": [4, 121, 122], "qiskit": [4, 6, 41, 47, 65, 70, 99, 110, 119], "rout": [4, 41, 47, 70, 110], "transpil": [4, 19, 20, 40, 41, 47, 70, 88, 89, 99, 103, 107, 110, 115], "physic": [4, 20, 40, 41, 46, 47, 51, 65, 70, 74, 114, 120], "layout": [4, 8, 11, 20, 32, 40, 41, 46, 47, 70, 71, 96, 97, 104, 114, 119], "constrain": [4, 114], "dure": [4, 13, 40, 46, 61, 66, 71], "select": [4, 20, 47, 53], "qubit": [4, 8, 9, 11, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 41, 46, 47, 51, 55, 57, 60, 61, 65, 70, 71, 72, 73, 74, 75, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 102, 104, 106, 110, 111, 114, 115, 119], "initi": [4, 6, 20, 33, 104], "allow": [4, 119, 122], "ani": [4, 8, 24, 25, 44, 46, 65, 71, 76, 94, 96, 97, 103, 111, 113, 121], "other": [4, 20, 119, 121, 122], "accord": [4, 19, 27, 28, 36, 73, 114, 115], "final": [4, 6, 31, 41, 46, 47, 51, 70, 110, 114, 115], "measur": [4, 19, 20, 24, 36, 40, 41, 46, 47, 51, 60, 65, 70, 98, 103, 107, 114, 115], "model_computed_field": [4, 20, 37, 41, 47, 60, 65, 70], "classvar": [4, 20, 37, 41, 47, 60, 65, 70], "dict": [4, 7, 11, 20, 24, 25, 36, 37, 40, 41, 43, 44, 46, 47, 48, 51, 52, 53, 60, 65, 70, 71, 72, 73, 74, 75, 84, 85, 88, 89, 90, 91, 92, 94, 96, 97, 98, 103, 104, 107, 109, 112, 113, 115, 116, 118], "computedfieldinfo": [4, 20, 37, 41, 47, 60, 65, 70], "A": [4, 6, 7, 9, 10, 11, 13, 16, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 37, 40, 41, 42, 44, 46, 47, 52, 53, 56, 60, 61, 62, 65, 70, 71, 73, 74, 77, 84, 87, 89, 90, 96, 97, 109, 110, 111, 114, 118, 121, 122], "comput": [4, 19, 20, 23, 29, 36, 37, 41, 46, 47, 48, 49, 50, 52, 60, 65, 70, 84, 85, 91, 109, 120, 121, 122], "field": [4, 6, 20, 37, 41, 47, 60, 65, 70, 121], "correspond": [4, 20, 37, 38, 40, 41, 42, 46, 47, 51, 55, 56, 60, 61, 62, 65, 66, 67, 70, 71, 72, 73, 74, 77, 94, 98, 103, 115], "object": [4, 7, 8, 9, 10, 16, 19, 20, 23, 32, 37, 41, 46, 47, 60, 65, 70, 71, 79, 96, 97, 108, 112, 113, 116, 121], "model_config": [4, 20, 37, 41, 47, 60, 65, 70], "configdict": [4, 20, 37, 41, 47, 60, 65, 70], "model": [4, 20, 37, 41, 47, 60, 65, 70, 87, 93, 94], "should": [4, 6, 8, 10, 19, 20, 29, 33, 37, 41, 47, 60, 65, 70, 89, 121], "conform": [4, 20, 37, 41, 47, 60, 65, 70], "config": [4, 20, 37, 41, 47, 60, 65, 70], "model_field": [4, 20, 37, 41, 47, 60, 65, 70], "fieldinfo": [4, 20, 37, 41, 47, 60, 65, 70], "annot": [4, 20, 37, 41, 47, 60, 65, 70, 104, 121], "true": [4, 20, 24, 37, 41, 46, 47, 60, 65, 70, 94, 110, 122], "union": [4, 20, 37, 41, 47, 60, 65, 70, 104, 121], "nonetyp": [4, 20, 37, 41, 47, 60, 65, 70], "fals": [4, 20, 37, 41, 47, 55, 60, 65, 70, 94, 102, 110], "metadata": [4, 19, 20, 37, 40, 41, 44, 46, 47, 60, 61, 65, 66, 70, 71, 113], "about": [4, 20, 37, 41, 47, 60, 65, 70], "defin": [4, 5, 6, 7, 20, 29, 30, 37, 41, 47, 60, 65, 70, 88, 111, 121, 122], "map": [4, 7, 20, 29, 31, 36, 37, 41, 47, 60, 65, 70, 110, 114, 115, 119], "thi": [4, 5, 6, 19, 20, 29, 32, 36, 37, 41, 47, 54, 60, 65, 70, 95, 104, 121, 122], "replac": [4, 20, 37, 41, 47, 60, 65, 70, 121], "__fields__": [4, 20, 37, 41, 47, 60, 65, 70], "v1": [4, 20, 37, 41, 47, 60, 65, 70], "function": [5, 6, 18, 36, 39, 40, 42, 45, 46, 56, 59, 61, 62, 64, 66, 67, 69, 71, 77, 78, 80, 81, 83, 84, 86, 87, 93, 95, 101, 105, 117, 119], "benchmarkobservationidentifi": [5, 8, 119], "benchmarkobserv": [5, 7, 32, 119], "benchmarkrunresult": [5, 6, 7, 19, 23, 40, 42, 46, 56, 61, 62, 66, 67, 71, 77, 119], "benchmarkanalysisresult": [5, 6, 12, 19, 23, 40, 42, 46, 56, 61, 62, 66, 67, 71, 77, 119], "kwarg": 6, "run": [6, 7, 8, 10, 16, 19, 20, 23, 36, 40, 41, 42, 46, 56, 61, 62, 66, 67, 71, 77, 122], "cortex": [6, 11], "experi": [6, 15, 16, 40, 42, 43, 46, 47, 49, 50, 56, 61, 62, 66, 67, 71, 77, 86, 93, 94, 98, 100], "In": [6, 121, 122], "order": [6, 22, 31, 32, 87, 95, 122], "write": [6, 102, 121], "new": [6, 7, 11, 111, 119, 122], "recommend": [6, 120, 121], "deriv": [6, 121], "baseclass": 6, "addition": 6, "custom": [6, 37, 47, 122], "analysi": [6, 7, 12, 40, 42, 43, 46, 56, 61, 62, 66, 67, 71, 77], "can": [6, 10, 20, 22, 34, 36, 38, 46, 104, 122], "give": [6, 36, 121], "pointer": 6, "analysis_funct": [6, 19, 40, 46, 61, 66, 71], "accept": [6, 36, 119, 121], "analysisresult": [6, 7, 19, 23, 40, 42, 46, 56, 61, 62, 66, 67, 71, 77, 119], "its": [6, 81, 111, 119, 121], "input": [6, 11, 41, 47, 76, 95, 99, 100, 104, 114], "result": [6, 7, 8, 10, 11, 12, 16, 34, 36, 38, 40, 42, 46, 47, 54, 55, 56, 61, 62, 66, 67, 71, 77, 85, 91, 93, 114, 119, 121, 122], "onli": [6, 12, 41, 47, 111, 121], "pass": [6, 12, 76, 104, 110], "through": [6, 12, 25, 121], "iqmbackend": [6, 46, 71, 96, 97], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 19, 23, 24, 25, 40, 43, 46, 61, 66, 71, 78, 80, 94, 118, 119], "overridden": 6, "an": [6, 19, 20, 23, 24, 36, 40, 66, 67, 95, 99, 103, 104, 121, 122], "xarrai": [6, 7, 11, 13, 19, 24, 40, 46, 61, 66, 71, 118], "contain": [6, 7, 9, 10, 13, 19, 22, 23, 24, 71, 73, 96, 97, 111, 121], "inform": [6, 10, 31, 33, 121], "necessari": 6, "analys": 6, "calibration_set_id": 6, "uuid": 6, "calibrationsetid": 6, "latest": [6, 116, 120], "set": [6, 19, 36, 41, 47, 73, 74, 76, 82, 94, 107, 114, 116, 122], "runresult": [6, 7, 10, 19, 23, 40, 42, 46, 56, 61, 62, 66, 67, 71, 77, 119], "analyz": [6, 10, 19, 23, 106, 122], "run_index": 6, "1": [6, 36, 37, 53, 70, 74, 75, 86, 89, 95, 110, 120, 121, 122], "intern": 6, "perform": [6, 41, 47, 87, 98, 110, 121, 122], "make": [6, 46, 116, 121, 122], "shallow": 6, "copi": [6, 121], "produc": [6, 31, 47, 122], "therefor": [6, 36, 54], "chang": [6, 119, 120, 121], "data": [6, 7, 11, 16, 19, 20, 22, 24, 31, 43, 55, 79, 82, 87, 93, 102], "just": 6, "structur": 6, "arrai": [6, 40, 60, 65, 70, 94, 95, 100, 104], "index": [6, 19, 22, 29, 30, 31, 40, 46, 74, 120], "construct": [6, 20, 26], "updat": [6, 40, 41, 119], "core": 7, "plot": [7, 16, 19, 23, 32, 55, 94, 119, 122], "matplotlib": 7, "figur": [7, 14, 16, 32, 36, 43, 55, 94], "factori": 7, "observ": [7, 8, 9, 19, 23, 32, 43, 94, 119], "list": [7, 9, 11, 13, 16, 19, 20, 21, 22, 24, 25, 29, 30, 31, 32, 36, 37, 40, 41, 46, 48, 49, 50, 51, 52, 54, 55, 70, 71, 72, 73, 74, 75, 76, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 106, 107, 109, 110, 112, 113, 114, 115, 116, 118, 119, 121, 122], "dataclass": [7, 8, 10], "store": [7, 8, 10, 16, 32, 122], "consist": [7, 121], "kei": [7, 36, 40, 46, 51, 70, 73, 107, 109, 115], "valu": [7, 8, 19, 20, 25, 29, 36, 40, 41, 70, 73, 86, 107, 109, 110, 115], "pair": [7, 22, 31, 40, 100], "plot_nam": 7, "plot_al": 7, "from_run_result": 7, "creat": [7, 19, 20, 29, 36, 40, 42, 46, 56, 61, 62, 66, 67, 71, 77, 122], "identifi": [8, 9, 11, 46, 71, 87, 94, 96, 97, 99, 112, 118, 121], "uncertainti": [8, 25], "singl": [8, 10, 13, 20, 32, 36, 40, 41, 46, 47, 73, 80, 122], "string": [8, 9, 11, 112, 122], "qubit_indic": 9, "eas": 9, "indic": [9, 36, 46, 51, 109, 115, 121], "wa": [9, 36, 54, 98, 121], "properti": 9, "string_identifi": 9, "version": [9, 78, 121], "enough": 10, "those": [10, 46, 51, 114, 121], "count": [11, 19, 20, 23, 36, 46, 48, 72, 85, 91, 98, 103, 104, 107, 112, 113, 118], "add": [11, 19, 30, 40, 46, 61, 66, 71, 73, 117, 119, 121, 122], "job": [11, 40, 44, 46, 71, 96, 97, 112], "If": [11, 20, 70, 121, 122], "same": [11, 22, 31, 70, 121], "alreadi": [11, 122], "present": 11, "old": 11, "both": [11, 47, 122], "ad": [11, 119], "togeth": [11, 122], "bitstr": [11, 36, 53, 98, 109], "current": [11, 20, 40, 102, 122], "instanc": [11, 36], "xr": [11, 13, 19, 24, 25, 40, 43, 46, 61, 66, 71, 94, 118], "merg": [11, 13], "where": [11, 20, 75, 121], "dataset_merg": 11, "recurs": 13, "minim": [13, 20, 29, 30, 93], "size": [13, 20, 29, 34, 36], "dateset": 13, "fig": [14, 32], "show": 14, "close": 14, "benchmarkexperi": [15, 122], "benchmark_configur": 16, "device_id": 16, "wrap": [16, 122], "one": [16, 41, 95, 116, 121, 122], "more": [16, 121, 122], "relev": [16, 113], "run_experi": 16, "raw": 16, "ghz": [17, 119, 122], "verifi": [17, 99], "greenberg": [17, 19], "horn": [17, 19], "zeiling": [17, 19], "state": [17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 85, 91, 119, 121, 122], "ghzbenchmark": [18, 20], "benchmark_definit": [18, 20, 39, 41, 45, 47, 59, 60, 64, 65, 69, 70], "ghzconfigur": [18, 19], "estim": [19, 20, 24, 25, 34, 36, 41, 46, 61, 66, 71, 72, 98], "qualiti": 19, "fidel": [19, 20, 22, 23, 24, 25, 30, 31, 32, 41, 57, 58, 61, 63, 66, 68, 71, 72, 87, 94, 119, 122], "generate_native_ghz": 19, "qubit_layout": [19, 22, 24, 25, 29, 30, 31, 32], "qubit_count": [19, 20], "routin": [19, 20, 47, 87], "quantumcircuit": [19, 21, 26, 27, 28, 29, 36, 40, 46, 51, 71, 73, 74, 75, 84, 88, 89, 90, 92, 96, 97, 99, 103, 106, 107, 110, 111, 115, 116], "prepar": [19, 121], "nativ": [19, 31, 89, 90, 92, 99, 107], "topologi": 19, "subset": [19, 22, 24, 25, 29, 30, 31], "system": [19, 20, 22, 24, 25, 29, 30, 31, 102, 121, 122], "protocol": [19, 22, 24, 25, 29, 30, 31], "0": [19, 22, 29, 30, 31, 36, 47, 70, 73, 74, 75, 95, 121, 122], "smaller": [19, 20, 29], "equal": [19, 29, 46], "generate_coherence_meas_circuit": 19, "take": [19, 20, 110, 117, 119, 122], "output": [19, 33, 48, 49, 50, 51, 52, 53, 54, 102], "need": [19, 40, 104, 122], "via": [19, 20], "mult": 19, "q": [19, 34, 35, 36, 37, 122], "coher": [19, 20, 24], "quantum": [19, 20, 24, 26, 27, 28, 29, 36, 38, 40, 41, 45, 46, 47, 48, 51, 54, 56, 73, 74, 85, 89, 90, 91, 102, 103, 106, 107, 110, 111, 116, 119, 120, 122], "qc_list_transpil": 19, "generate_readout_circuit": 19, "wrapper": 19, "creation": 19, "differ": [19, 43, 70, 121, 122], "all_circuits_list": 19, "add_configuration_to_dataset": 19, "further": [19, 119], "storag": 19, "1024": 20, "state_generation_routin": 20, "tree": [20, 29, 30], "custom_qubits_arrai": [20, 36, 37, 47, 122], "sequenc": [20, 41, 46, 47, 60, 65, 70, 71, 72, 85, 88, 89, 90, 91, 110, 114], "qiskit_optim_level": [20, 37, 41, 47, 70, 74, 75, 110, 122], "3": [20, 37, 41, 47, 54, 95, 121, 122], "optimize_sqg": [20, 37, 40, 41, 47, 110, 122], "bool": [20, 36, 37, 40, 41, 46, 47, 54, 55, 60, 65, 94, 102, 110], "fidelity_routin": 20, "num_rm": [20, 21], "100": [20, 41, 47, 122], "rem": [20, 24, 47, 55, 103, 122], "mit_shot": [20, 46, 47, 103, 122], "1000": [20, 47, 103], "cal_url": [20, 22], "possibl": [20, 121], "optim": [20, 40, 41, 47, 70, 110, 122], "log": [20, 27, 28, 29, 30], "depth": [20, 26, 27, 28, 29, 46, 55, 70, 71, 74, 75, 86, 89, 93, 96, 98], "coupl": [20, 22, 29, 31, 41, 47, 110, 114], "cz": [20, 22, 30, 31, 89, 107, 110], "account": [20, 110, 122], "algorithm": [20, 30, 73], "span": [20, 29, 30], "choos": [20, 36, 121], "largest": 20, "weight": [20, 30, 31, 53], "distanc": [20, 30], "parallel": [20, 30, 38, 60, 65, 89, 96, 98, 106], "applic": [20, 30, 73, 121], "cx": [20, 26, 30, 40], "scale": 20, "logarithm": 20, "doe": [20, 121], "connect": [20, 30, 100], "naiv": [20, 37], "appli": [20, 26, 30, 40, 47, 119, 121], "textbook": 20, "linearli": 20, "specifi": [20, 41, 46, 47, 65, 71, 73, 74, 96, 97, 100, 107, 109, 114, 116, 122], "assum": [20, 32, 95, 121], "e": [20, 65, 70, 95, 118, 122], "g": [20, 65, 70, 95, 118, 122], "tupl": [20, 22, 25, 29, 36, 40, 41, 43, 46, 51, 55, 71, 87, 88, 89, 90, 92, 94, 96, 103, 110, 115, 116], "integ": [20, 46, 51, 74], "label": [20, 41, 55, 65, 74, 84, 90, 94], "meant": 20, "NOT": 20, "support": [20, 31, 121], "denot": 20, "provid": [20, 121], "here": [20, 72], "ha": [20, 121], "than": 20, "small": [20, 119], "level": [20, 41, 47, 70], "architectur": 20, "consecut": 20, "reduc": [20, 111], "qiskit_iqm": 20, "iqm_transpil": 20, "optimize_single_qubit_g": 20, "multipl": [20, 24, 78, 119], "moonei": [20, 24], "2021": [20, 24, 122], "randomized_measur": 20, "random": [20, 21, 40, 57, 59, 64, 65, 69, 70, 73, 75, 83, 89, 90, 119, 122], "outlin": 20, "http": [20, 25, 27, 28, 78, 121, 122], "arxiv": [20, 25, 27, 28, 41, 73, 122], "org": [20, 25, 27, 28, 121], "ab": [20, 25, 27, 28], "1812": [20, 25], "02624": [20, 25], "respect": [20, 70, 72], "chosen": 20, "boolean": 20, "flag": [20, 122], "determin": [20, 121], "readout": [20, 24, 46, 47, 52, 101, 102, 104], "error": [20, 24, 46, 47, 52, 94, 104, 119], "mitig": [20, 24, 46, 47, 52, 101, 102, 103, 104], "total": [20, 82], "url": [20, 22, 122], "retriev": [20, 40, 44, 112, 113, 118], "priorit": 20, "high": 20, "append": [21, 40], "1q": [21, 92], "clifford": [21, 58, 59, 60, 61, 62, 64, 65, 66, 73, 84, 88, 89, 90, 92, 99, 100, 119, 122], "sampl": [21, 36, 47, 53, 65, 70, 72, 73, 74, 75, 76, 88, 89, 90], "uniformli": 21, "param": [21, 26, 27, 28, 40, 49, 61, 66, 71, 76, 80, 82, 84, 85, 96, 97, 98, 100, 109, 112, 113], "decompos": [21, 40], "origin": [21, 46, 51, 110, 111, 121], "float": [22, 31, 36, 40, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 65, 70, 72, 73, 74, 75, 85, 86, 87, 91, 94, 98, 99, 102, 104, 107, 109], "under": [22, 119, 121], "found": [22, 122], "each": [22, 30, 32, 36, 49, 50, 51, 55, 65, 70, 72, 75, 79, 98, 103, 107, 121, 122], "list_fid": 22, "wai": [22, 31, 122], "list_coupl": 22, "ideal_prob": 25, "num_qubit": [25, 26, 27, 28, 36, 46, 72, 85, 91], "cross": [25, 121], "correl": 25, "rm": 25, "eq": 25, "34": 25, "hadamard": 26, "seri": 26, "linear": 26, "fashion": 26, "symmetr": 26, "halv": 26, "n": [26, 27, 28, 29, 61, 71, 122], "1807": 27, "05572": 27, "2101": 28, "08946": 28, "graph": [29, 30, 31, 36], "n_state": 29, "networkx": [29, 30, 31, 36], "participating_qubit": 29, "qc": [29, 40, 122], "calcul": [30, 36, 51, 82, 106, 117], "cx_map": 30, "particip": 30, "2qb": 30, "between": [30, 75, 102], "them": [30, 122], "subgraph": 30, "edg": [30, 31, 36, 73], "Then": [30, 122], "find": 30, "most": 30, "central": 30, "posit": 30, "next": 30, "start": [30, 36, 95, 122], "smallest": 30, "layer": [30, 36, 38, 40, 41, 46, 70, 71, 73, 74, 75, 96, 106, 122], "first": [30, 36, 40, 70], "coupling_map": [31, 110], "couplingmap": [31, 114], "edges_c": 31, "fidelities_c": 31, "have": [31, 89, 121, 122], "v": [32, 36, 40, 42], "user": [32, 122], "identif": [32, 121], "logger": [33, 117], "everi": 33, "warn": 33, "score": [34, 35, 36, 37, 122], "combinatori": [34, 36], "problem": [34, 36], "meaning": [34, 36, 38, 46, 47], "qscorebenchmark": [35, 37], "qscoreconfigur": [35, 36], "generate_maxcut_ansatz": 36, "theta": 36, "ansatz": 36, "qaoa": 36, "maxcut": 36, "end": [36, 40, 46, 121], "variat": 36, "gamma": 36, "beta": 36, "cost_funct": 36, "x": [36, 80, 82, 94], "cut": 36, "minu": 36, "sign": 36, "solut": 36, "multipli": 36, "obj": 36, "compute_expectation_valu": 36, "expect": [36, 70, 73, 75], "val": 36, "avg": 36, "create_objective_funct": 36, "qubit_set": [36, 73, 87], "callabl": [36, 87, 93], "parametr": [36, 38, 40, 41], "calculate_optimal_angles_for_qaoa_p1": 36, "angl": 36, "run_qaoa": 36, "solv": 36, "averag": [36, 49, 54, 55, 61, 66, 72, 87], "is_success": 36, "approximation_ratio": 36, "approxim": 36, "ratio": 36, "abov": [36, 54, 121], "being": [36, 40, 46, 51, 54, 55, 72, 73, 85, 91, 107, 109], "success": [36, 54], "condit": [36, 54, 121], "mean": [36, 107, 121], "threshold": [36, 47, 54, 55], "choose_qubits_na": 36, "sequenti": [36, 97], "choose_qubits_custom": 36, "element": 36, "match": 36, "plot_approximation_ratio": 36, "list_of_num_nod": 36, "list_of_cut_s": 36, "node": 36, "includ": [36, 43, 121], "standard": [36, 47, 50, 59, 94, 107, 122], "deviat": [36, 47, 50, 94, 107], "execute_single_benchmark": 36, "num_nod": 36, "self": [36, 90], "min_num_nod": [36, 37], "up": [36, 73, 122], "failur": [36, 121], "devic": [36, 102, 122], "ration": 36, "over": [36, 54, 102, 109], "num_inst": 37, "num_qaoa_lay": 37, "max_num_nod": 37, "use_virtual_nod": 37, "use_classically_optimized_angl": 37, "choose_qubits_routin": [37, 47, 122], "min_num_qubit": 37, "seed": 37, "volum": [38, 45, 46, 47, 56, 119, 122], "reflect": [38, 40, 46, 57, 58, 63, 68], "deepest": [38, 46], "oper": [38, 57, 99, 107, 119], "second": [38, 40], "clop": [38, 119, 122], "speed": [38, 40], "clops_v": 38, "qv": [38, 40, 41, 46, 47, 49, 50, 54, 55], "clops_h": [38, 41], "squar": 38, "clopsbenchmark": [39, 41], "clopsconfigur": [39, 40], "backend_arg": [40, 46, 61, 66, 71, 73, 74, 75, 88, 89, 90, 96, 97, 99, 100, 103, 107], "h": [40, 42], "add_all_meta_to_dataset": [40, 46, 66, 71], "variabl": [40, 46, 61, 66, 71, 87, 122], "add_all_circuits_to_dataset": [40, 46, 61, 66, 71], "append_parameterized_unitari": 40, "q0": 40, "q1": 40, "su": 40, "4": [40, 95, 121, 122], "involv": 40, "belong": 40, "generate_single_circuit": [40, 46], "generate_circuit_list": [40, 46], "generate_random_paramet": 40, "ndarrai": [40, 86, 87, 93], "mani": 40, "templat": 40, "np": [40, 86, 93], "float64": 40, "assign_random_parameters_to_al": 40, "dict_parametrized_circ": 40, "clops_cycl": 40, "sorted_transpiled_qc_list": [40, 46, 116], "cycl": 40, "assign": [40, 41, 70], "elaps": [40, 43, 44, 117], "time": [40, 43, 44, 46, 71, 96, 97, 117], "submiss": [40, 46, 71, 96, 97, 121], "generate_transpiled_clops_templ": 40, "num_circuit": [41, 47, 122], "num_upd": 41, "10": [41, 122], "num_shot": 41, "clops_h_bool": 41, "establish": 41, "By": 41, "definit": [41, 121], "2110": [41, 122], "14108": [41, 122], "quant": [41, 73, 122], "ph": [41, 73, 122], "rigor": 41, "loos": 41, "www": [41, 121], "ibm": [41, 102], "com": 41, "blog": 41, "metric": 41, "upon": [41, 47], "restrict": [41, 47, 114], "consid": [41, 47, 114], "clops_data": 43, "repres": [43, 55, 109, 121], "job_meta": 44, "quantumvolumebenchmark": [45, 47], "quantumvolumeconfigur": [45, 46, 122], "classical_permut": 46, "permut": 46, "classic": 46, "avoid": 46, "swap": 46, "get_rem_quasidistro": 46, "sorted_qc_list_indic": [46, 51], "execution_result": [46, 48], "quasicollect": [46, 52, 103], "quasiprob": [46, 52, 103, 104], "qubii": 46, "untranspil": [46, 51, 88, 110], "submit_single_qv_job": 46, "submit": [46, 71, 96, 97, 116, 121], "vanilla": [46, 55, 71, 96, 97], "dd": [46, 55, 71, 96, 97], "num_sigma": [47, 54, 55, 122], "least": [47, 121], "criteria": 47, "consensu": 47, "post": 47, "process": 47, "when": [47, 119], "unmitig": 47, "1_000": [47, 122], "ideal_heavy_output": [48, 52], "hop": [48, 49, 50, 54, 55], "ideal": [48, 72], "heavi": [48, 49, 50, 51, 52, 53, 54], "cumul": [49, 50], "probabl": [49, 50, 52, 53, 70, 73, 85, 91, 98, 109, 122], "individu": [49, 50, 94, 121, 122], "trial": [49, 50], "qc_list": [51, 110], "bitrstr": 51, "all_rem_quasidistro": 52, "distribut": [52, 53, 109, 121], "noiseless": 52, "project": [53, 122], "onto": 53, "associ": [53, 121], "heavy_output_prob": 54, "within": [54, 121], "sigma": [54, 55], "qv_result": 55, "qv_results_typ": 55, "backend_nam": [55, 111], "timestamp": 55, "in_volumetr": 55, "plot_rem": 55, "come": [55, 72, 104], "context": 55, "volumetr": 55, "correct": [55, 72, 102, 103], "rb": [58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 85, 86, 87, 89, 91, 93, 94, 97, 98, 100], "cliffordrandomizedbenchmark": [59, 60], "cliffordrbconfigur": [59, 61], "qubits_arrai": [60, 65, 70, 89, 94, 96, 98, 100, 122], "sequence_length": [60, 65, 88, 89, 122], "num_circuit_sampl": [60, 65, 70, 88, 122], "parallel_execut": [60, 65, 122], "length": [60, 65, 72, 76, 88, 89, 90], "group": 61, "add_all_metadata_to_dataset": 61, "interleav": [63, 64, 65, 66, 67, 70, 75, 86, 88, 89, 90, 94, 119, 122], "interleavedrandomizedbenchmark": [64, 65], "interleavedrbconfigur": [64, 66, 122], "interleaved_g": [65, 88, 89, 90, 94, 122], "interleaved_gate_param": [65, 122], "simultaneous_fit": [65, 122], "amplitud": [65, 86, 122], "offset": [65, 86, 122], "irb": [65, 87], "ygate": 65, "czgate": [65, 70, 122], "enter": [65, 87, 89], "fit": [65, 78, 79, 80, 82, 86, 87, 93, 94, 119, 121], "simultan": [65, 87], "specif": [66, 110, 121], "mirror": [68, 69, 70, 71, 75, 119, 122], "mirrorrandomizedbenchmark": [69, 70, 122], "mirrorrbconfigur": [69, 71, 122], "depths_arrai": [70, 122], "num_pauli_sampl": [70, 72, 76, 122], "two_qubit_gate_ensembl": [70, 73, 74, 75, 122], "density_2q_g": [70, 73, 74, 75, 122], "25": [70, 73, 74, 75, 122], "mrb": [70, 71, 74, 77, 87, 94, 96, 97], "len": 70, "pauli": [70, 72, 74, 75, 76], "two": [70, 73], "ensembl": [70, 71, 73, 94], "cxgate": 70, "densiti": [70, 73, 75, 94], "submit_single_mrb_job": 71, "sorted_transpiled_circuit_dict": [71, 96], "canon": [71, 74, 75, 96], "noisy_count": 72, "ideal_count": 72, "num_circ_sampl": [72, 76, 90], "polar": [72, 87], "noisi": 72, "rescal": 72, "few": 72, "effect": 72, "real": [72, 122], "simul": [72, 102, 119], "n_layer": 73, "grab": [73, 102], "see": [73, 121], "2204": 73, "07568": 73, "2q": [73, 75, 92, 94], "form": [73, 121], "subsequ": [73, 121], "rais": [73, 76, 100, 102], "valueerror": [73, 76, 100], "do": [73, 102, 121], "uniti": 73, "circ_sampl": 74, "pauli_samples_per_circ": [74, 75], "dress": [74, 75, 76], "input_list": 76, "convert": 76, "flat": 76, "matrix": 76, "shape": 76, "lmfit": [78, 79, 87], "extend": 78, "shown": 78, "exampl": [78, 119, 121, 122], "document": [78, 121, 122], "github": [78, 122], "io": 78, "py": 78, "example_fit_multi_dataset": 78, "html": [78, 122], "sphx": 78, "glr": 78, "multi": 78, "func": [79, 80, 81, 82, 87, 93], "initial_guess": 79, "constraint": 79, "simultaneously_fit_var": 79, "line": 79, "evalu": 80, "get": [81, 108, 122], "signatur": 81, "residu": 82, "sever": 82, "common": [83, 121], "techniqu": 83, "qc_inv": 84, "clifford_dictionari": 84, "invers": 84, "invert": 84, "de": [84, 90], "stabil": [84, 90], "ground": [85, 91], "depolarization_prob": 86, "non": [86, 121], "depolar": 86, "p": 86, "decai": [86, 94], "exponenti": 86, "rb_identifi": 87, "simultaneous_fit_var": 87, "0th": 87, "ap": 87, "m": [87, 122], "b": [87, 121], "either": [87, 104, 107, 121], "stdrb": 87, "clifford_dict": [88, 90], "fir": 88, "cliffords_1q": 89, "cliffords_2q": 89, "num_sampl": [89, 90], "befor": 89, "after": 89, "term": [89, 121], "r": [89, 107, 110], "seq_length": 90, "import": [92, 119, 121, 122], "fit_paramet": 93, "fit_data": 93, "minimizerresult": 93, "violin": 94, "scatter": 94, "bar": 94, "shade_stdev": 94, "shade_meanerror": 94, "logscal": 94, "mrb_2q_densiti": 94, "mrb_2q_ensembl": 94, "point": 94, "shade": 94, "axi": 94, "titl": [94, 121], "arr": 95, "helper": 95, "relabel": 95, "increasingli": 95, "zero": 95, "5": [95, 121, 122], "7": [95, 121, 122], "note": [95, 104], "sort": [95, 115], "increas": 95, "transpiled_circuit": [97, 103], "margin": [98, 102, 109], "surviv": 98, "gate_id": 99, "gate_param": 99, "basi": [99, 110, 121], "m3": [101, 102, 103], "modif": [101, 121], "qpu": 101, "m3iqm": [101, 104], "mthree": [101, 104], "m3mitig": [101, 102], "iter_threshold": 102, "4096": 102, "modifi": [102, 119, 121], "work": [102, 104, 121, 122], "cals_from_system": 102, "initial_reset": 102, "rep_delai": 102, "cals_fil": 102, "async_c": 102, "cal_id": 102, "array_lik": 102, "min": 102, "1e4": 102, "max_shot": 102, "balanc": 102, "hardwar": [102, 120], "independ": 102, "reset": 102, "begin": 102, "delai": 102, "path": 102, "json": 102, "async": 102, "separ": [102, 119, 121], "thread": 102, "m3error": 102, "call": [102, 119], "while": [102, 121], "progress": 102, "against": [103, 121], "outcom": 103, "mit": [104, 121], "iter": [104, 109], "processor": 104, "argument": [104, 122], "util": 104, "final_measurement_map": 104, "like": 104, "qubit_name_to_index": 104, "quasiprobabilti": 104, "we": [104, 121], "could": 104, "also": [104, 121, 122], "would": 104, "out": [104, 121], "box": 104, "u": 104, "sinc": 104, "circuit_list": 106, "transpiled_qc_list": 107, "barrier": 107, "outermost": 107, "backend_label": 108, "prob_dist": 109, "bit": 109, "basis_g": 110, "drop_final_rz": 110, "target": 110, "optimization_level": 110, "sqg": 110, "virtual": 110, "z": 110, "drop": 110, "rz": 110, "emploi": 110, "activ": [111, 122], "iqm_job": [112, 113], "iqmjob": [112, 113, 116], "transpiled_circuit_list": 115, "sorted_indic": 115, "sorted_circuit": 115, "sent": [116, 121], "manag": [116, 121], "f": 117, "amount": [117, 118], "decor": 117, "statement": [117, 121], "counts_rang": 118, "extract": 118, "rang": [118, 119, 122], "were": 118, "miscellan": 119, "bug": 119, "relax": 119, "depend": [119, 122], "api": [119, 120, 122], "doc": [119, 122], "build": [119, 122], "publish": 119, "overwrit": 119, "compress": [119, 122], "gst": 119, "benchmark": 119, "tutori": 119, "notebook": 119, "remov": 119, "explicit": 119, "instead": [119, 122], "iqm": [119, 121], "minor": 119, "compat": 119, "longer": 119, "move": 119, "renam": 119, "so": 119, "now": 119, "rebas": 119, "randomizedbenchmark": 119, "quantumvolum": 119, "serial": 119, "some": 119, "available_benchmark": 119, "__init__": 119, "public": 119, "improv": [119, 121], "hint": 119, "docstr": 119, "messag": 119, "prevent": 119, "exclus": [119, 121], "jupyt": 119, "releas": 120, "12": 120, "date": [120, 121], "2024": [120, 121], "13": [120, 122], "sourc": [120, 121], "code": [120, 121], "finland": 120, "character": 120, "verif": [120, 122], "tool": [120, 122], "develop": 120, "instal": 120, "mode": 120, "refer": [120, 122], "licens": 120, "changelog": 120, "search": 120, "page": [120, 121], "apach": 121, "januari": 121, "2004": 121, "AND": 121, "FOR": 121, "reproduct": 121, "shall": 121, "section": 121, "9": [121, 122], "licensor": 121, "copyright": 121, "owner": 121, "entiti": 121, "author": 121, "grant": 121, "legal": 121, "act": 121, "control": 121, "For": [121, 122], "purpos": 121, "power": 121, "direct": 121, "indirect": 121, "caus": 121, "contract": 121, "otherwis": 121, "ii": 121, "ownership": 121, "fifti": 121, "percent": 121, "50": 121, "outstand": 121, "share": [121, 122], "iii": 121, "benefici": 121, "you": [121, 122], "your": [121, 122], "exercis": 121, "permiss": 121, "prefer": 121, "limit": 121, "softwar": 121, "file": 121, "mechan": 121, "transform": 121, "translat": 121, "compil": 121, "convers": 121, "media": 121, "authorship": 121, "made": 121, "notic": 121, "attach": 121, "appendix": 121, "below": [121, 122], "editori": 121, "revis": 121, "elabor": 121, "whole": 121, "remain": 121, "mere": 121, "link": 121, "bind": 121, "interfac": 121, "thereof": 121, "contribut": 121, "addit": 121, "intention": 121, "inclus": 121, "behalf": 121, "electron": 121, "verbal": 121, "written": 121, "commun": 121, "mail": 121, "issu": 121, "track": 121, "discuss": 121, "exclud": 121, "conspicu": 121, "mark": 121, "design": [121, 122], "Not": 121, "contributor": 121, "whom": 121, "been": 121, "receiv": 121, "incorpor": 121, "subject": 121, "herebi": 121, "perpetu": 121, "worldwid": 121, "charg": 121, "royalti": 121, "free": 121, "irrevoc": 121, "reproduc": 121, "publicli": 121, "displai": 121, "sublicens": 121, "patent": 121, "except": 121, "offer": 121, "sell": 121, "transfer": 121, "claim": 121, "necessarili": 121, "infring": 121, "alon": 121, "combin": 121, "institut": 121, "litig": 121, "counterclaim": 121, "lawsuit": 121, "alleg": 121, "constitut": 121, "contributori": 121, "termin": [121, 122], "redistribut": 121, "mai": 121, "medium": 121, "without": [121, 122], "meet": 121, "follow": [121, 122], "must": [121, 122], "recipi": 121, "carri": 121, "promin": 121, "c": 121, "retain": 121, "trademark": 121, "pertain": 121, "part": 121, "d": 121, "text": 121, "readabl": 121, "place": 121, "along": 121, "wherev": 121, "third": 121, "parti": 121, "normal": 121, "appear": 121, "content": 121, "own": [121, 122], "alongsid": 121, "addendum": 121, "cannot": 121, "constru": 121, "compli": 121, "unless": 121, "explicitli": 121, "notwithstand": 121, "noth": 121, "herein": 121, "supersed": 121, "agreement": 121, "regard": 121, "6": [121, 122], "trade": 121, "servic": [121, 122], "product": 121, "reason": 121, "customari": 121, "describ": 121, "disclaim": 121, "warranti": 121, "law": 121, "agre": 121, "AS": 121, "OR": 121, "OF": 121, "kind": 121, "express": 121, "impli": 121, "merchant": 121, "particular": 121, "sole": 121, "respons": 121, "appropri": 121, "risk": 121, "liabil": 121, "event": 121, "theori": 121, "tort": 121, "neglig": 121, "deliber": 121, "grossli": 121, "liabl": 121, "damag": 121, "special": 121, "incident": 121, "consequenti": 121, "charact": 121, "aris": 121, "inabl": 121, "loss": 121, "goodwil": 121, "stoppag": 121, "malfunct": 121, "commerci": 121, "even": 121, "advis": 121, "fee": 121, "indemn": 121, "oblig": 121, "right": 121, "howev": 121, "indemnifi": 121, "defend": 121, "hold": 121, "harmless": 121, "incur": 121, "assert": 121, "how": [121, 122], "To": [121, 122], "boilerpl": 121, "enclos": 121, "bracket": 121, "don": 121, "t": 121, "comment": 121, "syntax": 121, "format": 121, "descript": 121, "print": 121, "easier": 121, "archiv": 121, "complianc": 121, "obtain": [121, 122], "languag": 121, "govern": 121, "repositori": [121, 122], "licenc": 121, "mgst": 121, "src": 121, "raphael": 121, "brieger": 121, "ingo": 121, "roth": 121, "martin": 121, "kliesch": 121, "folder": [121, 122], "It": 122, "comprehens": 122, "modular": 122, "easili": 122, "exist": 122, "ones": 122, "easi": 122, "simpl": 122, "command": 122, "phy": 122, "rev": 122, "85": 122, "042311": 122, "2012": 122, "lett": 122, "109": 122, "080505": 122, "tomographi": 122, "prx": 122, "010325": 122, "2023": 122, "129": 122, "150502": 122, "2022": 122, "holist": 122, "032328": 122, "2019": 122, "entangl": 122, "0712": 122, "0921": 122, "2007": 122, "ieee": 122, "tran": 122, "eng": 122, "split": 122, "legaci": 122, "onc": 122, "handl": 122, "among": 122, "usual": 122, "sens": 122, "conda": 122, "environ": 122, "isol": 122, "setup": 122, "global": 122, "That": 122, "plai": 122, "around": 122, "mess": 122, "rest": 122, "machin": 122, "11": 122, "pip": 122, "want": 122, "upgrad": 122, "clone": 122, "directori": 122, "test": 122, "strategi": 122, "eager": 122, "tox": 122, "access": 122, "reson": 122, "cloud": 122, "prem": 122, "adapt": 122, "platform": 122, "token": 122, "iqm_token": 122, "automat": 122, "authent": 122, "o": 122, "your_token": 122, "randomized_benchmark": 122, "interleaved_rb": 122, "mirror_rb": 122, "quantum_volum": 122, "example_irb": 122, "30": 122, "iswapg": 122, "example_mrb": 122, "14": 122, "17": 122, "18": 122, "example_qv": 122, "500": 122, "60_000": 122, "garnet": 122, "iqmprovid": 122, "station": 122, "fi": 122, "coco": 122, "get_backend": 122, "example_experi": 122, "weekli": 122, "daili": 122, "gitlab": 122, "scheduled_experi": 122}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "benchmark_experiment"], [17, 0, 0, "-", "entanglement"], [33, 0, 0, "-", "logging_config"], [34, 0, 0, "-", "optimization"], [38, 0, 0, "-", "quantum_volume"], [57, 0, 0, "-", "randomized_benchmarking"], [101, 0, 0, "-", "readout_mitigation"], [105, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.benchmark_experiment": [[16, 1, 1, "", "BenchmarkExperiment"]], "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment": [[16, 2, 1, "", "run_experiment"]], "iqm.benchmarks.entanglement": [[18, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[19, 1, 1, "", "GHZBenchmark"], [20, 1, 1, "", "GHZConfiguration"], [21, 5, 1, "", "append_rms"], [22, 5, 1, "", "extract_fidelities"], [23, 5, 1, "", "fidelity_analysis"], [24, 5, 1, "", "fidelity_ghz_coherences"], [25, 5, 1, "", "fidelity_ghz_randomized_measurements"], [26, 5, 1, "", "generate_ghz_linear"], [27, 5, 1, "", "generate_ghz_log_cruz"], [28, 5, 1, "", "generate_ghz_log_mooney"], [29, 5, 1, "", "generate_ghz_spanning_tree"], [30, 5, 1, "", "get_cx_map"], [31, 5, 1, "", "get_edges"], [32, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[19, 2, 1, "", "add_configuration_to_dataset"], [19, 2, 1, "", "analysis_function"], [19, 2, 1, "", "execute"], [19, 2, 1, "", "generate_coherence_meas_circuits"], [19, 2, 1, "", "generate_native_ghz"], [19, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[20, 3, 1, "", "benchmark"], [20, 3, 1, "", "cal_url"], [20, 3, 1, "", "custom_qubits_array"], [20, 3, 1, "", "fidelity_routine"], [20, 3, 1, "", "mit_shots"], [20, 3, 1, "", "model_computed_fields"], [20, 3, 1, "", "model_config"], [20, 3, 1, "", "model_fields"], [20, 3, 1, "", "num_RMs"], [20, 3, 1, "", "optimize_sqg"], [20, 3, 1, "", "qiskit_optim_level"], [20, 3, 1, "", "qubit_counts"], [20, 3, 1, "", "rem"], [20, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[20, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[35, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[36, 1, 1, "", "QScoreBenchmark"], [37, 1, 1, "", "QScoreConfiguration"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[36, 2, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [36, 2, 1, "", "choose_qubits_custom"], [36, 2, 1, "", "choose_qubits_naive"], [36, 2, 1, "", "compute_expectation_value"], [36, 2, 1, "", "cost_function"], [36, 2, 1, "", "create_objective_function"], [36, 2, 1, "", "execute_full_benchmark"], [36, 2, 1, "", "execute_single_benchmark"], [36, 2, 1, "", "generate_maxcut_ansatz"], [36, 2, 1, "", "is_successful"], [36, 2, 1, "", "name"], [36, 2, 1, "", "plot_approximation_ratios"], [36, 2, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[37, 3, 1, "", "model_computed_fields"], [37, 3, 1, "", "model_config"], [37, 3, 1, "", "model_fields"]], "iqm.benchmarks.quantum_volume": [[39, 0, 0, "-", "clops"], [45, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[40, 1, 1, "", "CLOPSBenchmark"], [41, 1, 1, "", "CLOPSConfiguration"], [42, 5, 1, "", "clops_analysis"], [43, 5, 1, "", "plot_times"], [44, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[40, 2, 1, "", "add_all_circuits_to_dataset"], [40, 2, 1, "", "add_all_meta_to_dataset"], [40, 2, 1, "", "analysis_function"], [40, 2, 1, "", "append_parameterized_unitary"], [40, 2, 1, "", "assign_random_parameters_to_all"], [40, 2, 1, "", "clops_cycle"], [40, 2, 1, "", "execute"], [40, 2, 1, "", "generate_circuit_list"], [40, 2, 1, "", "generate_random_parameters"], [40, 2, 1, "", "generate_single_circuit"], [40, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[41, 3, 1, "", "benchmark"], [41, 3, 1, "", "clops_h_bool"], [41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "num_circuits"], [41, 3, 1, "", "num_shots"], [41, 3, 1, "", "num_updates"], [41, 3, 1, "", "optimize_sqg"], [41, 3, 1, "", "physical_layout"], [41, 3, 1, "", "qiskit_optim_level"], [41, 3, 1, "", "qubits"], [41, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[46, 1, 1, "", "QuantumVolumeBenchmark"], [47, 1, 1, "", "QuantumVolumeConfiguration"], [48, 5, 1, "", "compute_heavy_output_probabilities"], [49, 5, 1, "", "cumulative_hop"], [50, 5, 1, "", "cumulative_std"], [51, 5, 1, "", "get_ideal_heavy_outputs"], [52, 5, 1, "", "get_rem_hops"], [53, 5, 1, "", "heavy_projector"], [54, 5, 1, "", "is_successful"], [55, 5, 1, "", "plot_hop_threshold"], [56, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[46, 2, 1, "", "add_all_circuits_to_dataset"], [46, 2, 1, "", "add_all_meta_to_dataset"], [46, 2, 1, "", "analysis_function"], [46, 2, 1, "", "execute"], [46, 2, 1, "", "generate_circuit_list"], [46, 2, 1, "", "generate_single_circuit"], [46, 2, 1, "", "get_rem_quasidistro"], [46, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[47, 3, 1, "", "benchmark"], [47, 3, 1, "", "choose_qubits_routine"], [47, 3, 1, "", "custom_qubits_array"], [47, 3, 1, "", "mit_shots"], [47, 3, 1, "", "model_computed_fields"], [47, 3, 1, "", "model_config"], [47, 3, 1, "", "model_fields"], [47, 3, 1, "", "num_circuits"], [47, 3, 1, "", "num_sigmas"], [47, 3, 1, "", "optimize_sqg"], [47, 3, 1, "", "physical_layout"], [47, 3, 1, "", "qiskit_optim_level"], [47, 3, 1, "", "rem"], [47, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[58, 0, 0, "-", "clifford_rb"], [63, 0, 0, "-", "interleaved_rb"], [68, 0, 0, "-", "mirror_rb"], [78, 0, 0, "-", "multi_lmfit"], [83, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[59, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[60, 1, 1, "", "CliffordRBConfiguration"], [61, 1, 1, "", "CliffordRandomizedBenchmarking"], [62, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[60, 3, 1, "", "benchmark"], [60, 3, 1, "", "model_computed_fields"], [60, 3, 1, "", "model_config"], [60, 3, 1, "", "model_fields"], [60, 3, 1, "", "num_circuit_samples"], [60, 3, 1, "", "parallel_execution"], [60, 3, 1, "", "qubits_array"], [60, 3, 1, "", "sequence_lengths"], [60, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[61, 2, 1, "", "add_all_circuits_to_dataset"], [61, 2, 1, "", "add_all_metadata_to_dataset"], [61, 2, 1, "", "analysis_function"], [61, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[64, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[65, 1, 1, "", "InterleavedRBConfiguration"], [66, 1, 1, "", "InterleavedRandomizedBenchmarking"], [67, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[65, 3, 1, "", "interleaved_gate"], [65, 3, 1, "", "interleaved_gate_params"], [65, 3, 1, "", "model_computed_fields"], [65, 3, 1, "", "model_config"], [65, 3, 1, "", "model_fields"], [65, 3, 1, "", "num_circuit_samples"], [65, 3, 1, "", "parallel_execution"], [65, 3, 1, "", "qubits_array"], [65, 3, 1, "", "sequence_lengths"], [65, 3, 1, "", "shots"], [65, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[66, 2, 1, "", "add_all_circuits_to_dataset"], [66, 2, 1, "", "add_all_meta_to_dataset"], [66, 2, 1, "", "analysis_function"], [66, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[69, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[70, 1, 1, "", "MirrorRBConfiguration"], [71, 1, 1, "", "MirrorRandomizedBenchmarking"], [72, 5, 1, "", "compute_polarizations"], [73, 5, 1, "", "edge_grab"], [74, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [75, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [76, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [77, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[70, 3, 1, "", "benchmark"], [70, 3, 1, "", "density_2q_gates"], [70, 3, 1, "", "depths_array"], [70, 3, 1, "", "model_computed_fields"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "model_fields"], [70, 3, 1, "", "num_circuit_samples"], [70, 3, 1, "", "num_pauli_samples"], [70, 3, 1, "", "qiskit_optim_level"], [70, 3, 1, "", "qubits_array"], [70, 3, 1, "", "routing_method"], [70, 3, 1, "", "shots"], [70, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[71, 2, 1, "", "add_all_circuits_to_dataset"], [71, 2, 1, "", "add_all_meta_to_dataset"], [71, 2, 1, "", "analysis_function"], [71, 2, 1, "", "execute"], [71, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[79, 5, 1, "", "create_multi_dataset_params"], [80, 5, 1, "", "eval_func_single_dataset"], [81, 5, 1, "", "get_param_names_from_func_signature"], [82, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[84, 5, 1, "", "compute_inverse_clifford"], [85, 5, 1, "", "estimate_survival_probabilities"], [86, 5, 1, "", "exponential_rb"], [87, 5, 1, "", "fit_decay_lmfit"], [88, 5, 1, "", "generate_all_rb_circuits"], [89, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [90, 5, 1, "", "generate_random_clifford_seq_circuits"], [91, 5, 1, "", "get_survival_probabilities"], [92, 5, 1, "", "import_native_gate_cliffords"], [93, 5, 1, "", "lmfit_minimizer"], [94, 5, 1, "", "plot_rb_decay"], [95, 5, 1, "", "relabel_qubits_array_from_zero"], [96, 5, 1, "", "submit_parallel_rb_job"], [97, 5, 1, "", "submit_sequential_rb_jobs"], [98, 5, 1, "", "survival_probabilities_parallel"], [99, 5, 1, "", "validate_irb_gate"], [100, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[102, 1, 1, "", "M3IQM"], [103, 5, 1, "", "apply_readout_error_mitigation"], [104, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[102, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[106, 5, 1, "", "count_2q_layers"], [107, 5, 1, "", "count_native_gates"], [108, 5, 1, "", "get_iqm_backend"], [109, 5, 1, "", "marginal_distribution"], [110, 5, 1, "", "perform_backend_transpilation"], [111, 5, 1, "", "reduce_to_active_qubits"], [112, 5, 1, "", "retrieve_all_counts"], [113, 5, 1, "", "retrieve_all_job_metadata"], [114, 5, 1, "", "set_coupling_map"], [115, 5, 1, "", "sort_batches_by_final_layout"], [116, 5, 1, "", "submit_execute"], [117, 5, 1, "", "timeit"], [118, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "benchmark_experi": [15, 16], "benchmarkexperi": 16, "entangl": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "ghz": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "ghzbenchmark": 19, "ghzconfigur": 20, "append_rm": 21, "extract_fidel": 22, "fidelity_analysi": 23, "fidelity_ghz_coher": 24, "fidelity_ghz_randomized_measur": 25, "generate_ghz_linear": 26, "generate_ghz_log_cruz": 27, "generate_ghz_log_moonei": 28, "generate_ghz_spanning_tre": 29, "get_cx_map": 30, "get_edg": 31, "plot_fidel": 32, "logging_config": 33, "optim": [34, 35, 36, 37], "qscore": [35, 36, 37], "qscorebenchmark": 36, "qscoreconfigur": 37, "quantum_volum": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "clop": [39, 40, 41, 42, 43, 44], "clopsbenchmark": 40, "clopsconfigur": 41, "clops_analysi": 42, "plot_tim": 43, "retrieve_clops_elapsed_tim": 44, "quantumvolumebenchmark": 46, "quantumvolumeconfigur": 47, "compute_heavy_output_prob": 48, "cumulative_hop": 49, "cumulative_std": 50, "get_ideal_heavy_output": 51, "get_rem_hop": 52, "heavy_projector": 53, "is_success": 54, "plot_hop_threshold": 55, "qv_analysi": 56, "randomized_benchmark": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "clifford_rb": [58, 59, 60, 61, 62], "cliffordrbconfigur": 60, "cliffordrandomizedbenchmark": 61, "clifford_rb_analysi": 62, "interleaved_rb": [63, 64, 65, 66, 67], "interleavedrbconfigur": 65, "interleavedrandomizedbenchmark": 66, "interleaved_rb_analysi": 67, "mirror_rb": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "mirrorrbconfigur": 70, "mirrorrandomizedbenchmark": 71, "compute_polar": 72, "edge_grab": 73, "generate_fixed_depth_mrb_circuit": 74, "generate_pauli_dressed_mrb_circuit": 75, "list_to_numcircuit_times_numpauli_matrix": 76, "mrb_analysi": 77, "multi_lmfit": [78, 79, 80, 81, 82], "create_multi_dataset_param": 79, "eval_func_single_dataset": 80, "get_param_names_from_func_signatur": 81, "multi_dataset_residu": 82, "randomized_benchmarking_common": [83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "compute_inverse_clifford": 84, "estimate_survival_prob": 85, "exponential_rb": 86, "fit_decay_lmfit": 87, "generate_all_rb_circuit": 88, "generate_fixed_depth_parallel_rb_circuit": 89, "generate_random_clifford_seq_circuit": 90, "get_survival_prob": 91, "import_native_gate_clifford": 92, "lmfit_minim": 93, "plot_rb_decai": 94, "relabel_qubits_array_from_zero": 95, "submit_parallel_rb_job": 96, "submit_sequential_rb_job": 97, "survival_probabilities_parallel": 98, "validate_irb_g": 99, "validate_rb_qubit": 100, "readout_mitig": [101, 102, 103, 104], "m3iqm": 102, "apply_readout_error_mitig": 103, "readout_error_m3": 104, "util": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "count_2q_lay": 106, "count_native_g": 107, "get_iqm_backend": 108, "marginal_distribut": 109, "perform_backend_transpil": 110, "reduce_to_active_qubit": 111, "retrieve_all_count": 112, "retrieve_all_job_metadata": 113, "set_coupling_map": 114, "sort_batches_by_final_layout": 115, "submit_execut": 116, "timeit": 117, "xrvariable_to_count": 118, "changelog": 119, "version": 119, "1": 119, "12": 119, "11": 119, "10": 119, "9": 119, "8": 119, "7": 119, "6": 119, "5": 119, "4": 119, "3": 119, "2": 119, "0": 119, "content": 120, "indic": 120, "tabl": 120, "licens": 121, "instal": 122, "latest": 122, "releas": 122, "develop": 122, "mode": 122, "chang": 122, "recommend": 122, "character": 122, "physic": 122, "hardwar": 122, "us": 122, "jupyt": 122, "notebook": 122, "python": 122, "script": 122, "schedul": 122, "ci": 122, "cd": 122, "pipelin": 122}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.benchmark_experiment": [[15, "module-iqm.benchmarks.benchmark_experiment"]], "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment": [[16, "iqm-benchmarks-benchmark-experiment-benchmarkexperiment"]], "iqm.benchmarks.entanglement": [[17, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[18, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[19, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[20, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.append_rms": [[21, "iqm-benchmarks-entanglement-ghz-append-rms"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[22, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[23, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[24, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[25, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[26, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[27, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[28, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[29, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[30, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[31, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[32, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[33, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[34, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[35, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[36, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[37, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.quantum_volume": [[38, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[39, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[40, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[41, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[42, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[43, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[44, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[45, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[46, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[47, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[48, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[49, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[50, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[51, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[52, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[53, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[54, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[55, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[56, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[57, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[58, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[59, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[60, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[61, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[62, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[63, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[64, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[65, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[66, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[67, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[70, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[71, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[72, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[73, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[74, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[75, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[76, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[77, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[78, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[79, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[80, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[81, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[82, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[83, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[84, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[85, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[86, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[87, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[88, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[89, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[90, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[91, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[92, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[93, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[94, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[95, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[96, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[97, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[98, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[99, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[100, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[101, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[102, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[103, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[104, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[105, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.count_2q_layers": [[106, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[107, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[108, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[109, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[110, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[111, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[112, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[113, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[114, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[115, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[116, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[117, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[118, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[119, "changelog"]], "Version 1.12": [[119, "version-1-12"]], "Version 1.11": [[119, "version-1-11"]], "Version 1.10": [[119, "version-1-10"]], "Version 1.9": [[119, "version-1-9"]], "Version 1.8": [[119, "version-1-8"]], "Version 1.7": [[119, "version-1-7"]], "Version 1.6": [[119, "version-1-6"]], "Version 1.5": [[119, "version-1-5"]], "Version 1.4": [[119, "version-1-4"]], "Version 1.3": [[119, "version-1-3"]], "Version 1.2": [[119, "version-1-2"]], "Version 1.1": [[119, "version-1-1"]], "Version 1.0": [[119, "version-1-0"]], "IQM Benchmarks": [[120, "iqm-benchmarks"], [122, "iqm-benchmarks"]], "Contents": [[120, "contents"]], "Indices and tables": [[120, "indices-and-tables"]], "License": [[121, "license"]], "Installation (latest release)": [[122, "installation-latest-release"]], "Development mode (latest changes: recommended)": [[122, "development-mode-latest-changes-recommended"]], "Characterize Physical Hardware": [[122, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[122, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[122, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.benchmark_experiment"], [17, "module-iqm.benchmarks.entanglement"], [18, "module-iqm.benchmarks.entanglement.ghz"], [33, "module-iqm.benchmarks.logging_config"], [34, "module-iqm.benchmarks.optimization"], [35, "module-iqm.benchmarks.optimization.qscore"], [38, "module-iqm.benchmarks.quantum_volume"], [39, "module-iqm.benchmarks.quantum_volume.clops"], [45, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [57, "module-iqm.benchmarks.randomized_benchmarking"], [58, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [59, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [63, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [64, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [68, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [69, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [78, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [83, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [101, "module-iqm.benchmarks.readout_mitigation"], [105, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.benchmark_experiment": [[15, "module-iqm.benchmarks.benchmark_experiment"]], "benchmarkexperiment (class in iqm.benchmarks.benchmark_experiment)": [[16, "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment"]], "run_experiment() (iqm.benchmarks.benchmark_experiment.benchmarkexperiment method)": [[16, "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment.run_experiment"]], "iqm.benchmarks.entanglement": [[17, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[18, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[19, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[19, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[19, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[19, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[19, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[19, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[19, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[20, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "append_rms() (in module iqm.benchmarks.entanglement.ghz)": [[21, "iqm.benchmarks.entanglement.ghz.append_rms"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[22, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[33, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[34, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[35, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "calculate_optimal_angles_for_qaoa_p1() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.calculate_optimal_angles_for_QAOA_p1"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "compute_expectation_value() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.compute_expectation_value"]], "cost_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.cost_function"]], "create_objective_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.create_objective_function"]], "execute_full_benchmark() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute_full_benchmark"]], "execute_single_benchmark() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute_single_benchmark"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "is_successful() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.is_successful"]], "name() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.name"]], "plot_approximation_ratios() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.plot_approximation_ratios"]], "run_qaoa() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[36, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.run_QAOA"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[37, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[37, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[37, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[37, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "iqm.benchmarks.quantum_volume": [[38, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[39, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[40, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[41, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[42, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[43, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[44, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[45, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[46, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[46, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[46, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[46, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[46, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[46, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[46, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[46, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[46, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[47, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[48, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[49, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[52, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[53, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[54, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[55, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[57, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[58, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[59, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[60, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[61, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[61, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[61, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[61, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[61, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[62, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[63, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[64, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[65, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[66, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[66, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[66, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[66, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[66, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[67, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[71, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[71, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[72, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[73, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[75, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[76, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[77, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[78, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[79, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[80, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[81, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[82, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[83, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[84, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[85, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[86, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[87, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[88, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[89, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[90, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[91, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[92, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[93, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[94, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[95, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[96, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[97, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[98, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[99, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[100, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[101, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[102, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[102, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[103, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[104, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[105, "module-iqm.benchmarks.utils"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[106, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[107, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[108, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[109, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[110, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[111, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[112, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[113, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[114, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[115, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[116, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[117, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[118, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})