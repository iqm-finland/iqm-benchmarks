Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "api/iqm.benchmarks.compressive_gst.gst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.entanglement.graph_states", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.bootstrap_counts", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.extract_fidelities", "api/iqm.benchmarks.utils.generate_state_tomography_circuits", "api/iqm.benchmarks.utils.get_Pauli_expectation", "api/iqm.benchmarks.utils.get_active_qubits", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.get_measurement_mapping", "api/iqm.benchmarks.utils.get_neighbors_of_edges", "api/iqm.benchmarks.utils.get_tomography_matrix", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.median_with_uncertainty", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.split_sequence_in_chunks", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "api/iqm.benchmarks.utils_plots", "api/iqm.benchmarks.utils_plots.GraphPositions", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph", "api/iqm.benchmarks.utils_shadows", "api/iqm.benchmarks.utils_shadows.CUE", "api/iqm.benchmarks.utils_shadows.get_local_shadow", "api/iqm.benchmarks.utils_shadows.get_negativity", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_graphstate", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.entanglement.graph_states.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.rst", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers.rst", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph.rst", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.bootstrap_counts.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.extract_fidelities.rst", "api/iqm.benchmarks.utils.generate_state_tomography_circuits.rst", "api/iqm.benchmarks.utils.get_Pauli_expectation.rst", "api/iqm.benchmarks.utils.get_active_qubits.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.get_measurement_mapping.rst", "api/iqm.benchmarks.utils.get_neighbors_of_edges.rst", "api/iqm.benchmarks.utils.get_tomography_matrix.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.median_with_uncertainty.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.split_sequence_in_chunks.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "api/iqm.benchmarks.utils_plots.rst", "api/iqm.benchmarks.utils_plots.GraphPositions.rst", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph.rst", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph.rst", "api/iqm.benchmarks.utils_shadows.rst", "api/iqm.benchmarks.utils_shadows.CUE.rst", "api/iqm.benchmarks.utils_shadows.get_local_shadow.rst", "api/iqm.benchmarks.utils_shadows.get_negativity.rst", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_graphstate.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "iqm.benchmarks.compressive_gst.gst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.entanglement.graph_states", "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "iqm.benchmarks.entanglement.graph_states.generate_graph_state", "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "iqm.benchmarks.entanglement.graph_states.negativity_analysis", "iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.bootstrap_counts", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.extract_fidelities", "iqm.benchmarks.utils.generate_state_tomography_circuits", "iqm.benchmarks.utils.get_Pauli_expectation", "iqm.benchmarks.utils.get_active_qubits", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.get_measurement_mapping", "iqm.benchmarks.utils.get_neighbors_of_edges", "iqm.benchmarks.utils.get_tomography_matrix", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.median_with_uncertainty", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.remove_directed_duplicates_to_list", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.split_sequence_in_chunks", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "iqm.benchmarks.utils_plots", "iqm.benchmarks.utils_plots.GraphPositions", "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "iqm.benchmarks.utils_plots.rx_to_nx_graph", "iqm.benchmarks.utils_shadows", "iqm.benchmarks.utils_shadows.CUE", "iqm.benchmarks.utils_shadows.get_local_shadow", "iqm.benchmarks.utils_shadows.get_negativity", "iqm.benchmarks.utils_shadows.local_shadow_tomography", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Graph State Benchmark Example", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 20, 82, 127, 133, 141, 143, 148, 161, 186, 187, 189, 192, 200, 201], "python": 1, "librari": [1, 107, 112, 141, 183, 193], "suit": [1, 201], "qcvv": [1, 28, 184, 199, 201], "subpackag": [1, 19, 38, 67, 80, 99, 100, 105, 110], "modul": [1, 5, 15, 19, 38, 66, 67, 80, 99, 100, 105, 110, 199], "gener": [2, 3, 18, 20, 21, 22, 30, 33, 38, 40, 41, 45, 46, 47, 48, 49, 50, 54, 55, 57, 69, 77, 82, 85, 88, 97, 103, 107, 108, 112, 115, 116, 117, 120, 121, 130, 131, 132, 147, 148, 152, 173, 174, 177, 181, 186, 187, 188, 190, 191, 192, 193, 194, 200], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 24, 39, 40, 41, 53, 54, 55, 68, 69, 70, 81, 82, 83, 87, 88, 89, 101, 102, 103, 106, 107, 108, 111, 112, 113, 130, 143, 144, 172, 173, 181, 183, 184, 200, 201], "inherit": [2, 3, 5, 15, 20, 39, 53, 68, 81, 87, 101, 106, 111, 143, 172], "benchmarkbas": [2, 4, 201], "abc": [2, 3, 5, 6, 20, 39, 53, 68, 81, 87, 101, 106, 111], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 24, 39, 41, 53, 55, 68, 70, 81, 83, 87, 89, 101, 102, 106, 107, 111, 112, 201], "pydant": [2, 4, 20, 22, 39, 41, 53, 55, 68, 70, 81, 83, 87, 89, 101, 102, 106, 107, 111, 112], "main": [2, 7, 8, 20, 21, 39, 53, 68, 81, 87, 101, 106, 111, 186], "basemodel": [2, 4, 20, 39, 53, 68, 81, 87, 101, 106, 111], "backend": [3, 6, 20, 21, 22, 23, 25, 29, 40, 41, 48, 54, 57, 60, 61, 62, 63, 64, 69, 77, 82, 83, 88, 89, 97, 103, 108, 113, 115, 116, 117, 130, 131, 138, 139, 141, 142, 144, 145, 146, 150, 151, 155, 161, 162, 166, 167, 169, 175, 181, 184, 191, 201], "iqmbackendbas": [3, 6, 21, 40, 54, 57, 69, 82, 88, 103, 108, 113, 115, 116, 117, 130, 131, 132, 138, 139, 141, 142, 145, 150, 155, 161, 166, 169], "configur": [3, 4, 6, 21, 22, 24, 25, 27, 29, 32, 33, 35, 37, 40, 41, 54, 55, 69, 70, 82, 83, 88, 89, 96, 102, 103, 107, 108, 112, 113, 181, 200, 201], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 43, 50, 54, 55, 69, 70, 72, 82, 83, 88, 89, 102, 103, 107, 108, 112, 113, 125, 144, 173, 181, 182, 186, 187, 200], "The": [3, 6, 7, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 69, 70, 73, 79, 82, 83, 85, 88, 89, 91, 92, 94, 95, 102, 103, 107, 108, 112, 113, 114, 115, 116, 126, 136, 140, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 164, 165, 168, 169, 170, 173, 174, 175, 180, 186, 187, 188, 191, 192, 193, 197, 198, 200, 201], "implement": [3, 5, 6, 40, 41, 44, 191], "all": [3, 4, 6, 7, 16, 17, 18, 22, 27, 30, 31, 33, 40, 41, 50, 52, 54, 69, 76, 82, 86, 88, 90, 91, 92, 95, 96, 102, 103, 107, 108, 113, 130, 136, 138, 139, 144, 152, 157, 158, 164, 165, 181, 184, 186, 187, 188, 190, 191, 194, 196, 197, 198, 200, 201], "from": [3, 4, 6, 7, 11, 21, 22, 27, 29, 32, 33, 35, 36, 37, 40, 41, 48, 50, 51, 55, 56, 65, 70, 73, 79, 83, 85, 86, 88, 89, 90, 95, 97, 102, 107, 112, 114, 123, 136, 137, 140, 144, 146, 148, 151, 153, 154, 155, 156, 158, 163, 164, 165, 166, 171, 174, 177, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201], "which": [3, 6, 7, 8, 19, 22, 24, 29, 30, 31, 37, 40, 41, 48, 51, 55, 58, 69, 70, 78, 80, 82, 83, 84, 88, 98, 102, 103, 104, 107, 108, 109, 112, 113, 119, 130, 136, 140, 144, 151, 180, 186, 187, 189, 191, 192, 193, 200, 201], "thei": [3, 17, 32, 193], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 19, 21, 22, 40, 41, 43, 54, 55, 69, 70, 82, 83, 88, 89, 102, 103, 107, 108, 112, 113, 144, 161, 173, 181, 186, 187, 189, 190, 191, 193, 197], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 186, 187, 189, 190, 191, 193], "abstract": [3, 6, 193], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 23, 24, 41, 52, 55, 60, 61, 62, 63, 64, 70, 77, 83, 85, 89, 97, 102, 107, 112, 123, 129, 130, 146, 151, 152, 155, 173, 174, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 200], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 108, 109, 113, 114, 115, 116, 117, 118, 119, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 183, 184], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 20, 21, 37, 40, 50, 54, 55, 63, 64, 67, 69, 77, 80, 82, 83, 88, 89, 90, 97, 102, 103, 107, 108, 112, 113, 114, 127, 133, 138, 139, 140, 161, 162, 169, 170, 171, 181, 184, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 200, 201], "full": [3, 19, 20, 22, 83, 89, 193, 201], "given": [3, 6, 7, 11, 22, 30, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 57, 62, 63, 64, 67, 69, 70, 75, 80, 82, 88, 95, 96, 105, 114, 131, 132, 153, 157, 158, 167, 168, 173, 178, 179, 186, 187, 191, 193, 201], "static": [3, 6, 21, 40, 54, 69, 82, 88, 103, 108, 113, 173], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 22, 23, 24, 27, 28, 30, 36, 40, 41, 43, 44, 54, 55, 57, 60, 61, 62, 63, 64, 65, 70, 72, 73, 74, 77, 79, 82, 83, 85, 86, 88, 89, 90, 93, 94, 95, 97, 102, 103, 107, 108, 112, 113, 114, 115, 116, 117, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 144, 145, 146, 148, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 164, 165, 169, 171, 173, 174, 178, 180, 183, 184, 186, 190, 191, 193, 195, 197], "check": [3, 25, 76, 96, 183, 186, 187, 191], "whether": [3, 4, 22, 41, 55, 70, 76, 77, 79, 82, 83, 88, 89, 96, 97, 102, 107, 131, 136, 148, 152, 161, 178, 180, 191, 194, 200], "requir": [3, 4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 152, 183, 191, 193, 200, 201], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 23, 25, 27, 31, 32, 37, 40, 41, 50, 51, 65, 88, 89, 117, 136, 142, 152, 153, 156, 158, 159, 174, 180, 181, 183, 186, 187, 189, 191, 193, 198, 200, 201], "met": 3, "valid": [3, 24, 141, 142, 199, 201], "dictionari": [3, 4, 7, 11, 22, 29, 35, 41, 54, 55, 58, 60, 61, 62, 63, 64, 65, 70, 73, 82, 83, 86, 88, 89, 90, 93, 94, 95, 102, 107, 112, 113, 115, 116, 126, 130, 131, 132, 134, 138, 139, 145, 146, 148, 150, 152, 153, 156, 158, 159, 160, 167, 169, 171, 173, 178, 180, 188, 190, 193, 194], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 178, 179, 180, 181, 186, 193, 200], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 28, 30, 41, 48, 51, 55, 60, 61, 62, 70, 77, 82, 83, 88, 89, 102, 107, 112, 115, 116, 117, 121, 126, 129, 130, 131, 132, 134, 136, 138, 139, 141, 144, 148, 152, 161, 162, 164, 169, 173, 174, 178, 180, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 201], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 54, 55, 69, 70, 82, 83, 88, 89, 102, 103, 107, 108, 112, 113, 170, 173, 193, 197, 200], "shot": [4, 22, 41, 55, 61, 62, 70, 83, 88, 89, 102, 107, 112, 138, 139, 144, 145, 169, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201], "int": [4, 9, 11, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 69, 70, 72, 73, 74, 75, 77, 79, 82, 83, 85, 88, 89, 90, 93, 96, 97, 102, 107, 112, 113, 114, 115, 116, 117, 118, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144, 145, 148, 149, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 173, 174, 177, 178, 179, 180, 191, 193], "256": [4, 55, 70, 83, 89, 102, 107, 112, 188, 190, 195, 196], "max_gates_per_batch": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 138, 139, 169, 186, 187, 188, 189, 190, 192, 195, 197, 201], "max_circuits_per_batch": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 138, 139, 169, 181, 189, 192, 201], "calset_id": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 138, 139, 169, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 201], "routing_method": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 116, 117, 161, 186, 187, 188, 189, 190, 192, 195, 197, 201], "liter": [4, 22, 41, 55, 60, 61, 62, 70, 83, 89, 102, 107, 112, 153, 166, 173, 178, 180], "basic": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 116, 117], "lookahead": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "stochast": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "sabr": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 161, 186, 187, 188, 189, 190, 191, 193, 197, 201], "physical_layout": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 166, 186, 187, 188, 189, 190, 192, 195, 197, 201], "fix": [4, 22, 29, 41, 55, 70, 83, 89, 102, 107, 112, 113, 116, 131, 138, 140, 166, 181, 186, 187, 188, 189, 190, 193, 197, 201], "batch": [4, 17, 22, 41, 55, 70, 83, 89, 102, 107, 112, 138, 139, 166, 167, 169, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 201], "use_dd": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 189, 192], "bool": [4, 22, 27, 41, 55, 70, 76, 77, 79, 82, 83, 88, 89, 96, 97, 102, 107, 112, 136, 144, 148, 152, 161], "fals": [4, 22, 27, 41, 55, 70, 83, 89, 97, 102, 107, 112, 136, 144, 148, 161, 186, 188, 190, 197], "dd_strategi": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 189, 192], "ddstrategi": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "number": [4, 22, 23, 24, 27, 28, 31, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 55, 60, 61, 62, 67, 69, 70, 72, 74, 75, 77, 79, 80, 83, 88, 89, 96, 97, 99, 102, 107, 112, 113, 114, 115, 116, 117, 118, 127, 130, 131, 132, 133, 138, 139, 144, 145, 148, 149, 150, 160, 162, 169, 179, 180, 186, 187, 190, 191, 193], "us": [4, 6, 9, 16, 19, 20, 21, 22, 27, 28, 29, 32, 33, 40, 41, 43, 44, 48, 50, 51, 52, 55, 57, 60, 61, 62, 63, 64, 66, 70, 77, 79, 82, 83, 89, 112, 114, 129, 136, 144, 146, 152, 169, 174, 178, 180, 181, 183, 184, 186, 187, 191, 193, 194, 198, 200], "circuit": [4, 7, 10, 15, 16, 17, 20, 21, 22, 23, 24, 27, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 57, 69, 70, 73, 80, 82, 83, 88, 89, 90, 93, 96, 97, 102, 103, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 126, 127, 130, 131, 132, 133, 138, 139, 141, 144, 145, 149, 150, 152, 154, 156, 161, 162, 167, 169, 171, 180, 181, 183, 184, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "default": [4, 6, 12, 22, 27, 30, 41, 55, 60, 61, 62, 70, 83, 88, 89, 97, 102, 107, 112, 132, 136, 144, 148, 152, 166, 169, 178, 180, 186, 188, 190, 193, 194, 196], "i": [4, 6, 7, 19, 21, 22, 23, 24, 27, 28, 29, 30, 33, 41, 45, 48, 50, 52, 55, 60, 61, 62, 65, 69, 70, 76, 78, 79, 82, 83, 84, 88, 89, 96, 97, 98, 102, 103, 104, 107, 108, 109, 112, 113, 114, 118, 119, 122, 134, 137, 141, 144, 148, 151, 152, 153, 161, 166, 169, 174, 178, 179, 180, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201], "2": [4, 22, 23, 24, 28, 51, 70, 76, 89, 96, 112, 131, 137, 149, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201], "8": [4, 22, 137, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201], "maximum": [4, 31, 61, 62, 63, 64, 79, 138, 139, 169, 181, 186, 187, 193], "gate": [4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 35, 37, 40, 41, 45, 49, 50, 51, 58, 70, 80, 82, 83, 89, 99, 100, 103, 105, 107, 108, 112, 115, 117, 126, 129, 130, 131, 132, 134, 136, 138, 139, 141, 149, 150, 152, 161, 169, 174, 178, 180, 181, 186, 191, 195, 198, 199, 201], "per": [4, 22, 60, 61, 62, 80, 83, 89, 102, 112, 114, 116, 117, 118, 138, 139, 144, 145, 169, 179, 181, 193, 198, 199], "option": [4, 20, 41, 51, 60, 61, 62, 70, 77, 88, 89, 107, 116, 117, 126, 129, 131, 132, 134, 136, 138, 139, 141, 148, 152, 161, 162, 164, 169, 173, 178, 180, 181, 184, 189, 190, 192, 193, 199], "calibr": [4, 6, 41, 51, 88, 89, 138, 139, 144, 145, 151, 169, 174, 181, 190, 191, 194, 196], "id": [4, 169, 189, 190, 194, 196], "last": [4, 22], "avail": [4, 33, 200, 201], "qiskit": [4, 6, 22, 29, 70, 83, 89, 107, 112, 141, 161, 169, 181, 183, 184, 186, 193], "rout": [4, 83, 89, 112, 161, 187, 189, 190, 191, 193, 197], "transpil": [4, 16, 21, 40, 41, 43, 44, 70, 82, 83, 89, 112, 130, 131, 141, 145, 150, 161, 167, 181, 184, 186, 187, 189, 190, 191, 193, 197], "physic": [4, 22, 24, 30, 41, 55, 70, 82, 83, 88, 89, 93, 107, 112, 116, 166, 187, 189, 190, 193, 197, 199], "layout": [4, 8, 11, 16, 17, 22, 24, 41, 52, 55, 62, 70, 82, 83, 88, 89, 112, 113, 138, 139, 146, 151, 161, 166, 173, 174, 181, 186, 187, 189, 190, 191, 193, 195, 197], "constrain": [4, 166, 201], "dure": [4, 13, 23, 54, 88, 103, 108, 192], "select": [4, 22, 41, 70, 89, 95, 174, 181, 191, 193], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 24, 27, 29, 32, 33, 35, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 72, 73, 79, 80, 82, 83, 88, 89, 93, 97, 99, 102, 103, 107, 112, 113, 114, 115, 116, 117, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 144, 146, 149, 151, 152, 154, 156, 161, 162, 166, 167, 169, 174, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199], "initi": [4, 6, 19, 20, 22, 27, 37, 41, 66, 146, 186, 193], "allow": [4, 181, 186, 187, 191, 201], "ani": [4, 8, 22, 23, 27, 43, 44, 54, 63, 64, 86, 88, 107, 113, 118, 136, 138, 139, 145, 165, 168, 183, 187, 200, 201], "other": [4, 21, 27, 41, 152, 169, 180, 181, 186, 187, 189, 200, 201], "accord": [4, 27, 40, 46, 47, 69, 115, 166, 167, 183, 187, 189, 190, 193, 197], "final": [4, 6, 32, 51, 83, 88, 89, 93, 112, 156, 161, 166, 167, 169, 186], "measur": [4, 19, 20, 22, 27, 29, 33, 35, 40, 41, 43, 60, 61, 62, 69, 72, 82, 83, 88, 89, 93, 102, 107, 112, 140, 145, 150, 152, 153, 156, 166, 167, 169, 180, 184, 186, 187, 189, 191, 193], "boolean": [4, 41, 191], "flag": [4, 41], "determin": [4, 22, 41, 200], "enabl": [4, 169, 181], "dynam": [4, 169, 181], "decoupl": [4, 169, 181], "model_computed_field": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "classvar": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "dict": [4, 7, 11, 22, 23, 24, 41, 43, 44, 54, 55, 58, 60, 61, 62, 63, 64, 65, 70, 72, 73, 79, 82, 83, 85, 86, 88, 89, 90, 93, 94, 95, 102, 107, 112, 113, 114, 115, 116, 117, 126, 127, 130, 131, 132, 133, 134, 136, 138, 139, 140, 145, 146, 148, 150, 152, 153, 156, 158, 159, 160, 164, 165, 167, 169, 171, 173, 178, 180, 184], "computedfieldinfo": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 69, 70, 78, 82, 83, 84, 86, 88, 89, 94, 95, 98, 102, 103, 104, 107, 112, 113, 115, 116, 119, 126, 129, 131, 132, 138, 139, 148, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 166, 168, 169, 171, 173, 179, 186, 191, 193, 200, 201], "comput": [4, 22, 27, 33, 40, 41, 42, 48, 55, 70, 72, 73, 83, 88, 89, 90, 91, 92, 94, 102, 107, 112, 126, 127, 133, 159, 160, 174, 179, 183, 186, 187, 191, 193, 199, 200, 201], "field": [4, 6, 22, 41, 55, 70, 83, 89, 102, 107, 112, 200], "correspond": [4, 22, 23, 30, 41, 55, 58, 60, 61, 62, 65, 69, 70, 78, 80, 82, 83, 84, 88, 89, 93, 97, 98, 102, 103, 104, 107, 108, 109, 112, 113, 114, 115, 116, 119, 136, 140, 145, 152, 167, 169, 175, 180, 181, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197], "object": [4, 7, 8, 9, 10, 16, 17, 18, 22, 24, 27, 28, 35, 40, 41, 42, 52, 55, 70, 83, 88, 89, 102, 107, 112, 113, 121, 138, 139, 155, 164, 165, 169, 173, 174, 193, 197, 200], "model_config": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "configdict": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "model": [4, 22, 27, 41, 55, 70, 83, 89, 102, 107, 112, 129, 135, 136, 186, 193], "should": [4, 6, 8, 10, 22, 40, 41, 48, 55, 65, 66, 70, 83, 89, 102, 107, 112, 131, 169, 181, 189, 190, 191, 193, 200], "conform": [4, 22, 28, 41, 55, 70, 83, 89, 102, 107, 112], "config": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "model_field": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "fieldinfo": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "annot": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 146, 200], "true": [4, 22, 27, 41, 43, 55, 70, 83, 88, 89, 102, 107, 112, 136, 152, 161, 183, 186, 187, 190, 191, 193, 194, 196, 197, 201], "union": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 146, 193, 200], "nonetyp": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "metadata": [4, 21, 22, 40, 41, 52, 54, 55, 69, 70, 82, 83, 86, 88, 89, 102, 103, 107, 108, 112, 113, 165, 189], "about": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 181, 191], "defin": [4, 5, 6, 7, 22, 24, 25, 41, 48, 50, 55, 70, 83, 89, 102, 107, 112, 130, 184, 186, 187, 191, 200, 201], "map": [4, 7, 21, 22, 41, 48, 51, 55, 58, 63, 64, 70, 72, 73, 83, 89, 102, 107, 112, 156, 161, 163, 166, 167, 173, 175, 181, 191], "thi": [4, 5, 6, 15, 16, 22, 23, 28, 33, 40, 41, 48, 52, 55, 70, 76, 83, 89, 96, 102, 107, 112, 137, 146, 173, 182, 183, 184, 185, 186, 187, 189, 191, 193, 198, 200, 201], "replac": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 200], "__fields__": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112], "v1": [4, 22, 41, 55, 70, 83, 89, 102, 107, 112, 191], "function": [5, 6, 20, 21, 22, 26, 34, 37, 39, 53, 54, 59, 65, 68, 69, 73, 78, 81, 82, 84, 87, 88, 98, 101, 103, 104, 106, 108, 109, 111, 113, 119, 120, 122, 123, 125, 126, 128, 129, 135, 137, 143, 147, 169, 170, 172, 176, 181, 193], "benchmarkobservationidentifi": [5, 8, 35, 181, 188, 189, 190, 194, 196, 197], "benchmarkobserv": [5, 7, 35, 52, 63, 64, 181, 188, 189, 190, 194, 196, 197], "benchmarkrunresult": [5, 6, 7, 12, 21, 34, 40, 42, 54, 59, 69, 78, 82, 84, 88, 98, 103, 104, 108, 109, 113, 119, 181], "benchmarkanalysisresult": [5, 6, 12, 21, 34, 40, 42, 54, 59, 69, 78, 82, 84, 88, 98, 103, 104, 108, 109, 113, 119, 181], "kwarg": 6, "run": [6, 7, 8, 10, 20, 21, 22, 24, 27, 34, 35, 40, 41, 42, 54, 59, 69, 73, 78, 82, 83, 84, 88, 98, 103, 104, 108, 109, 113, 119, 181, 184, 186, 187, 190, 193, 198, 201], "cortex": [6, 11], "experi": [6, 27, 29, 32, 33, 35, 37, 52, 54, 59, 60, 61, 62, 63, 64, 69, 77, 78, 82, 84, 85, 88, 89, 91, 92, 98, 103, 104, 108, 109, 113, 119, 128, 135, 136, 140, 142, 152, 187, 190, 198], "In": [6, 186, 187, 193, 200, 201], "order": [6, 22, 27, 51, 52, 129, 137, 151, 152, 181, 191, 201], "write": [6, 144, 183, 184, 200], "new": [6, 7, 11, 162, 181, 184, 186, 187, 193, 201], "recommend": [6, 193, 200, 201], "deriv": [6, 200], "baseclass": 6, "addition": [6, 191], "custom": [6, 70, 89, 186, 187, 190, 196, 197, 201], "analysi": [6, 7, 12, 21, 22, 26, 34, 54, 59, 63, 64, 69, 78, 82, 84, 85, 88, 98, 103, 104, 108, 109, 113, 119, 181, 186, 193], "can": [6, 10, 16, 22, 30, 32, 41, 58, 67, 69, 80, 88, 146, 151, 181, 186, 187, 189, 191, 193, 197, 201], "give": [6, 21, 73, 181, 186, 191, 193, 200], "pointer": 6, "analysis_funct": [6, 21, 40, 54, 69, 82, 88, 103, 108, 113, 184], "accept": [6, 22, 77, 181, 200], "analysisresult": [6, 7, 40, 42, 69, 78, 82, 84, 88, 98, 103, 104, 108, 109, 113, 119, 181, 184], "its": [6, 123, 162, 181, 186, 187, 200], "input": [6, 11, 24, 56, 65, 83, 89, 118, 137, 141, 142, 146, 157, 160, 166, 168, 179, 189, 190, 193], "result": [6, 7, 8, 10, 11, 12, 20, 21, 22, 27, 28, 31, 32, 33, 34, 35, 36, 52, 67, 69, 72, 78, 79, 80, 82, 84, 88, 89, 96, 97, 98, 103, 104, 108, 109, 113, 119, 127, 133, 135, 166, 169, 181, 184, 186, 187, 190, 197, 200, 201], "onli": [6, 12, 23, 83, 89, 162, 179, 186, 187, 189, 191, 193, 195, 200], "pass": [6, 12, 118, 139, 146, 161, 169, 184, 190, 196], "through": [6, 12, 44, 200], "iqmbackend": [6, 88, 113, 138, 139], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 27, 29, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 52, 54, 63, 64, 69, 82, 85, 88, 103, 108, 113, 120, 122, 136, 171, 181, 184, 186, 187, 188, 190, 193, 194, 197], "overridden": 6, "an": [6, 16, 17, 19, 20, 21, 22, 31, 34, 35, 37, 40, 41, 42, 43, 69, 82, 108, 109, 137, 141, 145, 146, 153, 177, 181, 183, 184, 186, 187, 191, 193, 200, 201], "xarrai": [6, 7, 11, 13, 21, 27, 29, 33, 35, 37, 40, 43, 54, 69, 82, 88, 103, 108, 113, 171, 181, 184], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 24, 27, 28, 29, 31, 32, 33, 35, 37, 40, 42, 43, 44, 52, 54, 63, 64, 65, 113, 115, 138, 139, 151, 162, 173, 174, 181, 186, 187, 193, 197, 198, 200, 201], "inform": [6, 10, 51, 54, 66, 174, 200], "necessari": [6, 179, 186, 191, 201], "analys": 6, "calibration_set_id": [6, 189, 192], "uuid": 6, "calibrationsetid": 6, "latest": [6, 169, 191, 199], "set": [6, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 37, 40, 56, 70, 83, 88, 89, 115, 116, 118, 124, 136, 150, 153, 157, 166, 169, 183, 186, 187, 191, 192, 194, 198, 199, 201], "runresult": [6, 7, 10, 40, 42, 69, 78, 82, 84, 88, 98, 103, 104, 108, 109, 113, 119, 181, 184], "analyz": [6, 10, 40, 42, 149, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 201], "run_index": [6, 190, 197], "1": [6, 22, 33, 55, 70, 74, 95, 112, 116, 117, 128, 131, 137, 152, 161, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201], "intern": [6, 17], "perform": [6, 21, 33, 63, 64, 70, 83, 89, 129, 140, 152, 161, 180, 186, 193, 198, 200, 201], "make": [6, 88, 169, 181, 182, 186, 199, 200, 201], "shallow": 6, "copi": [6, 148, 183, 193, 200], "produc": [6, 20, 24, 31, 33, 51, 89, 193, 201], "therefor": [6, 76, 96], "chang": [6, 22, 181, 199, 200], "data": [6, 7, 11, 20, 21, 22, 26, 27, 33, 40, 41, 43, 51, 60, 63, 64, 85, 97, 121, 124, 129, 135, 144, 151, 174, 184, 190, 191, 193, 197], "just": [6, 186], "structur": [6, 186, 187], "arrai": [6, 20, 27, 29, 31, 33, 37, 82, 102, 107, 112, 136, 137, 142, 146, 178, 193], "index": [6, 40, 48, 50, 51, 82, 88, 116, 197, 199], "construct": [6, 19, 41, 45, 178], "updat": [6, 21, 34, 63, 64, 65, 82, 83, 181, 186, 187, 189, 190, 201], "core": 7, "circuit_contain": 7, "plot": [7, 20, 21, 22, 34, 40, 42, 52, 60, 61, 62, 63, 64, 97, 136, 172, 174, 181, 184, 186, 187, 188, 190, 191, 194, 201], "matplotlib": [7, 28, 174, 184, 186, 187, 192, 193], "figur": [7, 14, 28, 31, 32, 33, 52, 60, 61, 62, 77, 85, 97, 136, 174, 184, 190, 192, 193], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 34, 35, 40, 42, 52, 63, 64, 85, 136, 160, 181, 186, 187, 188, 190, 191, 192, 194, 196, 197], "list": [7, 9, 11, 13, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 43, 44, 48, 50, 51, 52, 56, 57, 58, 63, 64, 69, 71, 72, 73, 75, 77, 79, 82, 83, 88, 90, 91, 92, 93, 94, 96, 97, 112, 113, 114, 115, 116, 117, 118, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 148, 149, 150, 151, 154, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 174, 180, 181, 183, 187, 191, 192, 193, 197, 200, 201], "dataclass": [7, 8, 10], "store": [7, 8, 10, 21, 34, 52, 173, 181, 189, 201], "consist": [7, 19, 181, 191, 200], "kei": [7, 60, 61, 62, 65, 72, 79, 82, 88, 93, 112, 115, 150, 152, 153, 156, 158, 159, 160, 167, 169, 180, 183, 192, 193, 197], "valu": [7, 8, 22, 36, 40, 41, 44, 48, 58, 60, 61, 62, 65, 72, 73, 79, 82, 83, 112, 115, 128, 150, 152, 153, 156, 159, 160, 161, 167, 169, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "pair": [7, 36, 49, 51, 54, 58, 60, 61, 62, 63, 64, 82, 142, 151, 157, 163, 186], "plot_nam": 7, "plot_al": [7, 184, 186, 187, 189, 190, 191, 193, 196, 197], "from_run_result": 7, "creat": [7, 21, 23, 27, 32, 40, 41, 48, 49, 69, 73, 78, 82, 84, 88, 98, 103, 104, 108, 109, 113, 119, 174, 182, 184, 201], "identifi": [8, 9, 11, 27, 35, 54, 88, 113, 129, 136, 138, 139, 141, 164, 169, 171, 181, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 200], "uncertainti": [8, 22, 36, 44, 60, 61, 62, 160, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "singl": [8, 10, 13, 16, 18, 22, 36, 41, 52, 55, 70, 71, 82, 83, 88, 89, 115, 122, 153, 169, 177, 181, 186, 187, 193, 201], "string": [8, 9, 11, 17, 18, 27, 30, 36, 65, 152, 153, 158, 164, 178, 201], "qubit_indic": [9, 16, 188, 189, 190, 192, 194, 196, 197], "eas": 9, "indic": [9, 61, 62, 63, 64, 88, 93, 159, 167, 173, 174, 178, 191, 200], "wa": [9, 25, 32, 61, 62, 76, 96, 140, 186, 187, 200], "properti": [9, 16, 17], "string_identifi": [9, 186, 190, 191, 193], "version": [9, 120, 183, 186, 187, 200, 201], "enough": [10, 191], "those": [10, 88, 93, 166, 186, 187, 193, 200], "count": [11, 22, 27, 29, 32, 33, 35, 37, 40, 41, 42, 65, 72, 73, 79, 88, 90, 114, 127, 133, 140, 145, 146, 148, 150, 153, 159, 164, 165, 171, 178, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "add": [11, 17, 21, 40, 50, 54, 69, 82, 88, 103, 108, 113, 115, 170, 181, 183, 200, 201], "job": [11, 82, 86, 88, 113, 138, 139, 164, 184, 187, 188, 189, 190, 194, 195, 197], "If": [11, 22, 27, 33, 41, 70, 112, 134, 153, 158, 174, 180, 186, 187, 191, 193, 195, 200], "same": [11, 17, 51, 112, 151, 186, 187, 189, 190, 191, 193, 200], "alreadi": [11, 188, 189], "present": 11, "old": 11, "both": [11, 21, 89, 134, 186, 189, 194, 201], "ad": [11, 181, 187, 188, 189, 190, 192, 194, 195, 197], "togeth": [11, 201], "bitstr": [11, 65, 72, 73, 74, 79, 95, 140, 153, 159], "current": [11, 27, 29, 30, 32, 33, 35, 37, 41, 82, 144, 151, 191, 193, 201], "instanc": [11, 16, 17, 21, 34, 43, 44, 62, 77, 181, 193], "xr": [11, 13, 32, 40, 43, 44, 52, 54, 63, 64, 69, 82, 85, 88, 103, 108, 113, 136, 171, 184], "merg": [11, 13], "where": [11, 16, 17, 22, 24, 25, 27, 37, 41, 117, 156, 174, 181, 186, 187, 191, 193, 200], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 41, 48, 50, 57, 135, 191], "size": [13, 22, 28, 41, 48, 67, 69, 77, 79, 134, 168, 177, 184, 186, 190, 196, 201], "dateset": 13, "fig": [14, 52, 184, 191], "show": [14, 174, 184, 186, 187, 189, 190, 191], "close": [14, 22, 184], "easili": [15, 181, 201], "interact": [15, 181], "quantum": [15, 21, 22, 23, 24, 40, 41, 43, 45, 46, 47, 48, 49, 69, 80, 82, 83, 87, 88, 89, 90, 93, 96, 98, 115, 116, 127, 131, 132, 133, 144, 145, 149, 150, 152, 154, 156, 161, 162, 169, 173, 174, 180, 181, 191, 193, 198, 199, 201], "circuitgroup": [15, 16, 40, 181], "benchmarkcircuit": [15, 18, 21, 181], "circuit_group": [16, 192], "group": [16, 17, 63, 64, 103, 182, 186, 192, 199], "purpos": [16, 17, 200], "typic": [16, 17, 186, 187], "repres": [16, 17, 23, 28, 57, 58, 85, 97, 157, 159, 163, 174, 200], "exampl": [16, 120, 181, 182, 184, 185, 191, 193, 199, 200, 201], "insid": [16, 181], "get_circuit_group_by_nam": 16, "get": [16, 20, 22, 123, 153, 155, 190, 193, 195], "desir": [16, 17, 21], "doe": [16, 41, 200], "exist": [16, 18, 181, 186, 187, 201], "group_nam": 16, "integ": [16, 17, 22, 24, 41, 57, 58, 88, 93, 116, 157, 163], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 21, 22, 23, 24, 27, 31, 32, 33, 36, 37, 41, 44, 48, 56, 60, 61, 62, 63, 64, 72, 73, 77, 79, 82, 83, 85, 88, 93, 97, 113, 129, 130, 131, 132, 134, 136, 138, 145, 151, 161, 167, 169, 173, 180], "qubit_layout": [16, 17, 22, 23, 24, 25, 27, 29, 31, 32, 33, 35, 40, 43, 44, 48, 50, 51, 52, 174, 186, 190, 191, 193], "qiskit_iqm": [17, 41, 181, 184, 186, 187, 189, 190, 192], "iqm_circuit": 17, "iqmcircuit": [17, 23, 24, 40, 45, 46, 47, 48, 49, 82, 88, 93, 113, 115, 116, 117, 126, 130, 131, 132, 134, 138, 139, 141, 145, 149, 150, 152, 154, 156, 161, 162, 167, 169, 181], "It": [17, 183, 186, 187, 201], "common": [17, 125, 200], "activ": [17, 154, 162, 180, 201], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 200, 201], "found": [17, 151, 186, 187, 191, 192, 201], "benchmark_circuit": [18, 192], "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 200], "compress": [19, 20, 21, 22, 26, 34, 181, 198, 199, 201], "gst": [19, 21, 22, 27, 28, 29, 32, 33, 34, 35, 181, 198, 199], "self": [19, 21, 132, 184], "character": [19, 21, 186, 199], "process": [19, 20, 27, 89, 186, 187, 188, 190, 194, 195, 197], "matric": [19, 31, 192, 193], "well": [19, 21, 33, 34], "parametr": [19, 27, 73, 80, 82, 83, 186, 187, 189, 190, 193], "state": [19, 22, 27, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 57, 59, 61, 62, 64, 127, 133, 152, 181, 184, 193, 198, 199, 200, 201], "povm": [19, 27, 31, 37, 193], "low": [19, 193], "rank": [19, 22, 31, 33, 181, 193], "matrix": [19, 20, 31, 60, 118, 158, 177, 179, 183, 186, 187], "reduc": [19, 22, 41, 162], "post": [19, 89, 187, 188, 190, 194, 195, 197], "overhead": 19, "tomographi": [20, 26, 55, 60, 61, 62, 63, 64, 152, 176, 180, 198, 199, 201], "follow": [20, 186, 187, 191, 193, 200, 201], "step": 20, "said": 20, "convers": [20, 200], "ideal": [20, 90, 114, 186, 187, 192], "numpi": [20, 29, 31, 33, 148, 178, 180, 183, 186, 187, 190, 193, 194], "mgst": [20, 22, 29, 36, 37, 181, 193, 200, 201], "first": [20, 22, 27, 37, 50, 69, 82, 112, 191, 193, 195, 197, 198], "estim": [20, 22, 27, 31, 33, 37, 38, 40, 41, 43, 44, 54, 55, 67, 69, 83, 88, 103, 108, 113, 114, 140, 153, 181, 186, 187, 189, 190, 191, 194], "gaug": [20, 31, 33, 193], "optim": [20, 22, 31, 33, 41, 82, 83, 89, 112, 161, 181, 186, 187, 189, 190, 191, 193, 196, 197, 201], "target": [20, 22, 27, 33, 37, 57, 161, 193], "pygsti": [20, 27], "rerun": [20, 191], "bootstrap": [20, 22, 27, 32, 33, 55, 61, 62, 148, 181, 193], "error": [20, 22, 25, 27, 31, 32, 33, 35, 36, 41, 43, 70, 88, 89, 94, 136, 146, 174, 181, 186, 187, 190, 191, 193], "bar": [20, 27, 32, 33, 136, 184, 189, 193], "tabl": [20, 22, 28, 31, 32, 33, 186, 193], "reconstruct": [20, 22, 27, 37, 158, 192, 193], "compressivegst": [20, 22, 193], "benchmark_definit": [20, 22, 39, 41, 53, 55, 68, 70, 81, 83, 87, 89, 101, 102, 106, 107, 111, 112, 184], "gstconfigur": [20, 21, 24, 193], "spam": [21, 27, 32, 35, 186], "robust": [21, 186], "generate_meas_circuit": 21, "random": [21, 22, 40, 41, 55, 60, 61, 62, 70, 82, 99, 101, 106, 107, 111, 112, 115, 117, 125, 131, 132, 148, 177, 178, 180, 181, 183, 187, 189, 191, 193, 196, 198, 199, 201], "distribut": [21, 94, 95, 159, 183, 186, 187, 200], "among": [21, 169, 186, 201], "differ": [21, 24, 27, 40, 85, 112, 173, 186, 187, 189, 191, 193, 197, 198, 200, 201], "depth": [21, 22, 41, 45, 46, 47, 48, 57, 70, 88, 97, 112, 113, 116, 117, 128, 131, 135, 138, 140, 186, 187, 188, 189, 190, 191, 194, 195], "rang": [21, 171, 181, 183, 184, 186, 187, 188, 190, 192, 193, 194, 195, 201], "l_min": 21, "l_max": 21, "seq_len_list": [21, 22], "No": 21, "than": [21, 41, 186, 187, 191, 195, 201], "need": [21, 22, 28, 40, 82, 146, 186, 187, 191, 193, 201], "axactli": 21, "describ": [21, 200], "meaning": [21, 67, 69, 80, 88, 89], "untranspiled_circuit": 21, "untranspil": [21, 88, 93, 130, 161, 181], "circuit_gen_transp_tim": 21, "float": [21, 22, 28, 36, 51, 60, 61, 62, 63, 64, 65, 69, 71, 72, 74, 75, 76, 77, 79, 82, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 107, 112, 114, 115, 116, 117, 127, 128, 129, 133, 136, 140, 141, 144, 146, 150, 151, 153, 158, 159, 160, 173, 179], "time": [21, 22, 27, 82, 85, 86, 88, 113, 138, 139, 170, 181, 186, 187, 189, 190, 191, 193], "took": 21, "transpiled_circuit": [21, 139, 145], "add_configuration_to_dataset": [21, 40], "sourc": [21, 193, 199, 200], "further": [21, 40, 181], "storag": [21, 40, 181], "routin": [21, 28, 40, 41, 70, 89, 129], "1024": [22, 41], "iqm_client": [22, 41, 55, 70, 83, 89, 102, 107, 112, 187], "gate_set": [22, 23, 24, 193], "num_circuit": [22, 27, 37, 83, 89, 186, 187, 189, 190, 193, 197, 201], "gate_label": [22, 193], "14": [22, 183, 187, 188, 190, 192, 194, 195, 201], "from_init": 22, "max_init": 22, "20": [22, 183, 184, 187, 188, 189, 190, 194], "opt_method": 22, "auto": 22, "max_iter": 22, "convergence_criteria": 22, "4": [22, 82, 137, 152, 158, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201], "0": [22, 40, 48, 50, 51, 69, 76, 89, 112, 115, 116, 117, 137, 161, 166, 179, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201], "0001": [22, 184], "batch_siz": 22, "bootstrap_sampl": [22, 193], "test": [22, 181, 186, 187, 201], "parallel_execut": [22, 102, 107, 186, 188, 190, 194, 201], "ghzbenchmark": [22, 39, 41, 186, 187, 190, 191], "sequenc": [22, 29, 41, 55, 56, 57, 60, 70, 83, 88, 89, 102, 107, 112, 113, 114, 127, 130, 131, 132, 133, 152, 157, 160, 161, 166, 168, 178, 180, 186, 188, 190, 193, 194], "e": [22, 23, 24, 27, 37, 41, 107, 112, 137, 152, 153, 171, 181, 186, 187, 189, 190, 191, 193, 197], "g": [22, 41, 107, 112, 137, 152, 171, 181, 183, 186, 187, 190, 191, 193, 197], "specifi": [22, 23, 24, 27, 37, 41, 56, 83, 88, 89, 107, 113, 115, 116, 134, 138, 139, 142, 150, 153, 157, 158, 159, 166, 169, 178, 181, 186, 187, 195, 201], "label": [22, 23, 24, 28, 30, 41, 60, 61, 62, 65, 83, 97, 107, 116, 126, 132, 136, 152, 153, 161, 166, 178, 180, 181, 183, 184, 186, 189, 191], "meant": [22, 24, 41], "either": [22, 70, 129, 134, 146, 150, 151, 159, 173, 178, 180, 183, 191, 193, 200, 201], "cirucuit": 22, "one": [22, 83, 137, 184, 186, 187, 191, 193, 195, 200, 201], "predefin": [22, 23, 173, 174, 191, 193], "1qxyi": [22, 193], "2qxycz": [22, 193], "2qxycz_extend": [22, 193], "3qxycz": [22, 193], "tomograph": [22, 158], "complet": 22, "mean": [22, 55, 60, 61, 62, 76, 150, 174, 183, 186, 187, 189, 193, 200], "vacuum": 22, "abl": 22, "prepar": [22, 37, 40, 57, 152, 177, 180, 184, 186, 191, 193, 200], "form": [22, 115, 200], "frame": [22, 193], "space": 22, "practic": [22, 201], "suffici": [22, 179, 191], "condit": [22, 76, 96, 179, 191, 200], "combin": [22, 30, 186, 187, 200], "local": [22, 55, 178, 180, 191], "pauli": [22, 30, 33, 65, 112, 114, 116, 117, 118, 152, 153, 158, 183, 193], "eigenst": 22, "quantumcircuit": [22, 23, 24, 40, 45, 46, 47, 48, 49, 57, 69, 82, 88, 93, 113, 115, 126, 130, 131, 132, 138, 139, 145, 149, 152, 154, 156, 161, 162, 167, 169, 178, 180, 181, 183, 184, 193], "how": [22, 40, 182, 185, 193, 198, 199, 200, 201], "mani": [22, 40, 82, 181, 191], "guidelin": [22, 181], "choos": [22, 30, 41, 69, 187, 191, 200], "At": 22, "least": [22, 89, 186, 187, 193, 200], "50": [22, 55, 184, 186, 187, 190, 192, 193, 194, 195, 196, 200], "3": [22, 41, 70, 83, 89, 96, 137, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201], "400": [22, 183, 188, 190, 192, 196], "two": [22, 112, 115, 183, 184, 186, 191, 193], "6": [22, 31, 183, 188, 189, 190, 191, 192, 194, 195, 196, 200, 201], "2000": [22, 187, 193], "three": [22, 186, 187], "9": [22, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 200, 201], "expect": [22, 65, 72, 73, 79, 112, 115, 117, 153, 158, 181, 186], "grow": 22, "linearli": [22, 41], "exponenti": [22, 128, 186], "krau": [22, 27, 31, 33, 37, 193], "coher": [22, 40, 41, 43, 186, 187, 190, 191], "dim": 22, "control": [22, 28, 191, 200], "maxim": [22, 49, 186, 187], "middl": 22, "cutoff": 22, "below": [22, 186, 187, 191, 193, 200, 201], "possibl": [22, 41, 191, 197, 200], "algorithm": [22, 37, 41, 50, 115, 174, 186, 187, 191], "point": [22, 136, 160, 191], "tri": 22, "limit": [22, 183, 200], "amount": [22, 38, 55, 170, 171, 181], "retri": 22, "gd": 22, "sfn": 22, "gradient": 22, "descent": 22, "saddl": 22, "free": [22, 200], "newton": 22, "respect": [22, 41, 60, 112, 114, 152, 181, 186], "automat": [22, 32, 191, 201], "iter": [22, 146, 159], "while": [22, 144, 191, 193, 200], "second": [22, 27, 37, 80, 82, 198, 199], "when": [22, 89, 181, 186, 189, 191, 201], "termin": [22, 200, 201], "multipli": [22, 74], "cost": [22, 186, 187], "threshold": [22, 76, 77, 89, 96, 97, 186, 187], "nois": [22, 186], "consid": [22, 83, 89, 166, 178, 187], "success": [22, 76, 96, 186, 187], "10": [22, 83, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201], "usual": [22, 33], "sensibl": 22, "rel": 22, "between": [22, 49, 50, 117, 144, 174, 186, 187, 189, 191], "consecut": [22, 41], "1e": [22, 193], "hyperparamt": 22, "converg": [22, 193], "behaviour": 22, "smaller": [22, 40, 41, 48, 186, 201], "runtim": [22, 181], "lead": [22, 181, 191, 193], "errat": 22, "jump": 22, "lack": 22, "repeat": [22, 186, 187], "fake": [22, 181], "via": [22, 40, 41, 186, 187, 191, 193], "parallel": [22, 41, 50, 58, 80, 102, 107, 131, 138, 140, 149, 181, 186, 187, 190, 191, 194], "num_qubit": [23, 24, 44, 45, 46, 47, 49, 69, 70, 88, 114, 127, 133, 187, 189, 192], "assign": [23, 82, 83, 112, 148, 152, 180, 181, 186, 187, 189, 190], "transipil": 23, "so": [23, 32, 181, 186, 187, 193], "stage": [23, 181], "mai": [23, 183, 186, 187, 189, 200], "actual": [23, 186, 187], "gate_labels_dict": [23, 24], "rx_pi_2": [23, 24], "pi": [23, 24, 183, 190, 194], "rotat": [23, 24, 33, 183, 184], "around": [23, 24, 186, 187], "x": [23, 24, 27, 37, 55, 74, 122, 124, 136, 152, 153, 173, 177, 181, 183, 184, 192, 193, 195, 197], "axi": [23, 24, 27, 37, 136, 181], "num_gat": [23, 24], "handl": [24, 201], "variabl": [24, 54, 69, 82, 88, 103, 108, 113, 129, 184, 191, 193, 201], "correct": [25, 97, 114, 144, 145, 181, 186, 187, 193], "properli": [25, 31, 33, 35, 186, 187], "rais": [25, 115, 118, 134, 142, 144, 153, 158, 161, 166, 180], "code": [26, 186, 187, 193, 199, 200, 201], "y": [27, 29, 37, 152, 153, 173, 183], "ndarrai": [27, 29, 31, 33, 37, 60, 82, 128, 129, 135, 158, 177, 178, 179, 180], "k": [27, 37, 183, 186, 187, 189, 195, 197], "rho": [27, 37, 179, 193], "target_mdl": 27, "resampl": [27, 148], "outcom": [27, 29, 37, 145, 186, 187, 193], "each": [27, 29, 37, 50, 52, 58, 61, 62, 77, 91, 92, 93, 97, 107, 112, 114, 117, 121, 140, 145, 150, 151, 174, 178, 180, 188, 190, 191, 193, 194, 195, 200, 201], "repetit": 27, "newli": 27, "sampl": [27, 40, 55, 60, 61, 62, 73, 79, 89, 95, 107, 112, 114, 115, 116, 117, 118, 130, 131, 132, 148, 193], "non": [27, 32, 35, 56, 128, 186, 187, 200], "corresp": 27, "probabl": [27, 29, 37, 91, 92, 94, 95, 112, 115, 127, 133, 140, 159, 186, 187, 195, 201], "save": [27, 28, 32, 193], "num_povm": [27, 37], "subarrai": [27, 37], "along": [27, 37, 200], "oper": [27, 33, 37, 80, 99, 141, 150, 181, 183, 191, 193, 198, 199], "enumer": [27, 37, 191, 192, 193], "3d": [27, 31, 33, 193], "cpt": [27, 37], "superoper": [27, 37, 193], "standard": [27, 28, 30, 31, 33, 37, 77, 89, 92, 101, 136, 150, 181, 193, 201], "basi": [27, 30, 33, 37, 141, 161, 183, 186, 187, 193, 200], "stack": [27, 37], "els": [27, 183], "x_arrai": 27, "tensor": [27, 181], "e_arrai": 27, "rho_arrai": 27, "df_g_arrai": 27, "qualiti": [27, 32, 35, 40, 186, 187], "df_o_arrai": 27, "df": 28, "datafram": [28, 31, 32, 33, 35], "row_label": 28, "col_width": 28, "fontsiz": 28, "12": [28, 183, 187, 188, 189, 190, 192, 193, 194, 195, 197], "turn": [28, 29, 31, 32, 33, 186], "panda": [28, 31, 32, 33, 35], "file": [28, 181, 200, 201], "row": 28, "cell": [28, 186, 187], "width": [28, 181, 186, 187, 191], "font": [28, 192], "text": [28, 186, 187, 193, 200], "obtain": [29, 183, 186, 187, 200, 201], "format": [29, 31, 32, 33, 35, 36, 186, 200], "2d": [29, 31], "j": [29, 183, 186, 187, 191, 193], "column": 29, "pdim": 30, "dimens": [30, 184, 193], "like": [30, 35, 146, 183, 186, 187, 189, 201], "ii": [30, 183, 184, 200], "ix": 30, "xx": 30, "df_g": [31, 33, 35], "x_opt": [31, 33], "e_opt": 31, "rho_opt": 31, "max_ev": 31, "arbitrari": 31, "them": [31, 33, 50, 58, 184, 201], "after": [31, 33, 131, 201], "conta": 31, "element": [31, 69], "densiti": [31, 60, 112, 115, 117, 136, 158, 179, 186, 187, 192], "optmiz": 31, "eigenvalu": 31, "choi": 31, "df_g_evals_fin": 31, "fig_g": [31, 33], "fidel": [31, 33, 40, 41, 42, 43, 44, 50, 51, 52, 83, 99, 100, 103, 105, 108, 110, 113, 114, 129, 136, 151, 174, 181, 193, 198, 199, 201], "etc": [31, 33, 189], "fig_choi": 31, "df_g_final": [31, 33], "df_o": [32, 35], "also": [32, 33, 146, 181, 191, 193, 197, 200, 201], "metric": [32, 33, 83, 186, 187, 193, 194], "fit": [32, 35, 107, 120, 121, 122, 124, 128, 129, 135, 136, 181, 193, 200], "df_o_fin": 32, "k_target": [33, 37], "includ": [33, 77, 85, 148, 181, 186, 187, 189, 190, 191, 200], "hamiltonian": [33, 181, 193], "diamond": [33, 193], "distanc": [33, 41, 50, 193], "4d": 33, "df_g_rotat": 33, "fig_rot": 33, "convert": [35, 36, 118, 175, 183], "high": [35, 41, 186, 187, 191], "level": [35, 41, 70, 83, 89, 112, 181, 186, 187, 189, 190, 191, 197], "simpl": [35, 184, 186, 201], "observation_list": 35, "result_str": 36, "err": 36, "interv": 36, "floar": 36, "wrapper": [37, 40], "alg": 37, "x_target": 37, "e_target": 37, "rho_target": 37, "ghz": [38, 181, 198, 199, 201], "verifi": [38, 141, 183], "greenberg": [38, 40, 186, 187, 198, 199], "horn": [38, 40, 186, 187, 198, 199], "zeiling": [38, 40, 186, 187, 198, 199], "graph": [38, 48, 50, 51, 53, 54, 55, 56, 57, 59, 62, 69, 70, 71, 72, 73, 74, 76, 77, 79, 157, 173, 174, 175, 181, 186, 187, 191, 198, 199, 201], "bipartit": [38, 54, 181, 201], "nativ": [38, 40, 51, 54, 57, 131, 132, 134, 141, 150, 152, 178, 180, 181, 186], "ghzconfigur": [39, 40, 186, 187, 190, 191], "generate_native_ghz": 40, "qubit_count": [40, 41], "topologi": [40, 70, 151, 161, 162, 166, 173, 174, 181, 186], "subset": [40, 43, 44, 48, 50, 51, 58], "system": [40, 41, 43, 44, 48, 50, 51, 134, 144, 186, 187, 193, 200, 201], "protocol": [40, 43, 44, 48, 50, 51, 186, 187, 198], "equal": [40, 48, 88, 181, 186, 187], "generate_coherence_meas_circuit": 40, "take": [40, 41, 161, 170, 181, 186, 187, 193, 201], "output": [40, 66, 90, 91, 92, 93, 94, 95, 96, 144, 181, 183, 186, 187, 193, 197, 201], "mult": 40, "q": [40, 67, 69, 70, 76, 190, 193, 198, 199, 201], "qc_list_transpil": 40, "append_rm": 40, "num_rm": [40, 41, 191], "append": [40, 82, 180, 183, 184, 193], "1q": [40, 134, 178, 180, 181, 186], "clifford": [40, 100, 101, 102, 103, 104, 106, 107, 108, 115, 126, 130, 131, 132, 134, 141, 142, 178, 180, 181, 182, 194, 198, 199, 201], "uniformli": [40, 186], "param": [40, 45, 46, 47, 49, 82, 91, 103, 108, 118, 122, 124, 126, 127, 138, 139, 140, 142, 159, 164, 165, 179], "origin": [40, 56, 88, 93, 148, 161, 162, 200], "generate_readout_circuit": 40, "creation": [40, 191], "all_circuits_list": 40, "state_generation_routin": [41, 186, 187, 190, 191], "tree": [41, 48, 50, 186, 190, 191], "custom_qubits_arrai": [41, 69, 70, 89, 181, 186, 187, 190, 191, 196, 197, 201], "qiskit_optim_level": [41, 70, 83, 89, 112, 116, 117, 161, 186, 187, 189, 190, 195, 197, 201], "optimize_sqg": [41, 70, 82, 83, 89, 161, 186, 187, 189, 190, 197, 201], "fidelity_routin": [41, 186, 187, 190, 191], "100": [41, 55, 83, 89, 148, 186, 187, 189, 190, 192, 193, 196, 201], "rem": [41, 43, 70, 89, 97, 145, 181, 186, 187, 190, 191, 196, 197, 201], "mit_shot": [41, 70, 88, 89, 145, 186, 187, 190, 191, 196, 197, 201], "1000": [41, 70, 89, 145, 184, 186, 187, 190, 191, 193, 196, 197], "cal_url": [41, 151, 174, 191], "log": [41, 46, 47, 48, 50, 191], "coupl": [41, 48, 51, 58, 83, 89, 151, 161, 163, 166, 175, 186, 191], "cz": [41, 49, 50, 51, 131, 150, 151, 161, 178, 180, 183, 186, 189, 191], "account": [41, 70, 161, 193, 201], "span": [41, 48, 50], "largest": [41, 186, 187, 191], "weight": [41, 50, 51, 95], "applic": [41, 50, 115, 183, 191, 200], "cx": [41, 45, 50, 82], "scale": [41, 186, 187], "logarithm": [41, 191], "connect": [41, 50, 142, 174, 181, 191], "naiv": [41, 70, 191], "appli": [41, 45, 50, 58, 82, 89, 181, 187, 190, 191, 195, 200], "textbook": [41, 191], "assum": [41, 52, 137, 153, 200], "NOT": 41, "support": [41, 51, 200], "denot": 41, "provid": [41, 75, 173, 182, 184, 185, 186, 187, 190, 191, 192, 200], "here": [41, 114, 184, 186, 187, 193], "ha": [41, 70, 186, 187, 188, 193, 195, 200, 201], "small": [41, 181], "architectur": 41, "iqm_transpil": 41, "optimize_single_qubit_g": 41, "multipl": [41, 43, 55, 120, 181, 186, 187, 191], "moonei": [41, 43, 186, 187, 191], "2021": [41, 43, 186, 187, 191, 201], "randomized_measur": [41, 191], "outlin": 41, "http": [41, 44, 46, 47, 120, 160, 183, 184, 187, 190, 191, 192, 193, 200, 201], "arxiv": [41, 44, 46, 47, 83, 115, 183, 191, 201], "org": [41, 44, 46, 47, 183, 191, 193, 200], "ab": [41, 44, 46, 47, 183, 191, 192], "1812": [41, 44], "02624": [41, 44], "chosen": [41, 70, 186, 187, 191, 193], "readout": [41, 43, 70, 88, 89, 94, 143, 144, 146, 181, 187, 190, 191], "mitig": [41, 43, 70, 88, 89, 94, 143, 144, 145, 146, 181, 187, 190, 191], "total": [41, 55, 124, 183, 186, 187, 189, 191], "url": [41, 151, 174, 186, 201], "retriev": [41, 82, 86, 164, 165, 171, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "priorit": 41, "ideal_prob": 44, "cross": [44, 186, 187, 200], "correl": [44, 191], "rm": [44, 180], "eq": [44, 183], "34": [44, 184, 188, 189, 190, 192, 196, 197], "hadamard": [45, 183], "seri": 45, "linear": 45, "fashion": 45, "symmetr": 45, "halv": 45, "1807": [46, 191], "05572": [46, 191], "2101": [47, 191], "08946": [47, 191], "n_state": [48, 186], "networkx": [48, 50, 51, 69, 71, 72, 73, 74, 175, 186, 187], "n": [48, 70, 103, 113, 158, 177, 183, 186, 187, 191, 192], "participating_qubit": 48, "qc": [48, 82, 152, 154, 180, 183, 184, 201], "move": [49, 181], "calcul": [50, 71, 77, 93, 124, 149, 170, 181, 186, 187], "cx_map": 50, "particip": 50, "2qb": 50, "subgraph": 50, "edg": [50, 51, 56, 58, 72, 73, 74, 115, 157, 163, 174, 181, 186, 187, 191], "Then": [50, 201], "find": [50, 56, 186, 187, 191], "most": [50, 193], "central": 50, "posit": [50, 173, 174], "next": 50, "start": [50, 69, 137, 186, 189, 190, 191, 193, 201], "smallest": 50, "layer": [50, 58, 71, 75, 79, 80, 82, 83, 88, 112, 113, 115, 116, 117, 138, 149, 190, 198, 199, 201], "coupling_map": [51, 161, 186, 187, 192], "couplingmap": [51, 58, 62, 163, 166, 175], "edges_c": 51, "fidelities_c": 51, "have": [51, 131, 153, 186, 187, 200, 201], "wai": [51, 151, 181, 186, 187], "v": [52, 77, 82, 84, 186, 187, 190, 194], "user": [52, 187, 189, 192, 201], "identif": [52, 200], "graphstatebenchmark": [53, 55, 192], "graphstateconfigur": [53, 54, 192], "backend_arg": [54, 69, 82, 88, 103, 108, 113, 115, 116, 117, 130, 131, 132, 138, 139, 141, 142, 145, 150], "entangel": 54, "neg": [54, 60, 61, 62, 63, 64, 179, 181], "add_all_meta_to_dataset": [54, 69, 82, 88, 108, 113], "add_all_circuits_to_dataset": [54, 88, 103, 108], "generate_all_circuit_info_for_graph_state_benchmark": 54, "associ": [54, 95, 190, 200], "disjoint": 54, "neighbor": [54, 56, 60, 63, 64, 157, 192], "project": [54, 60, 65, 95, 201], "node": [54, 56, 58, 70, 72, 73, 77, 79, 157, 173, 174, 186, 187, 191, 196], "cover": 54, "state_tomographi": [55, 60, 61, 62, 192], "shadow_tomographi": [55, 60, 61, 62], "num_bootstrap": [55, 61, 62, 192], "n_random_unitari": [55, 192], "n_median_of_mean": [55, 192], "shadow": [55, 61, 62, 63, 176, 178, 180], "haar": [55, 177, 178, 180], "unitari": [55, 177, 178, 180, 186, 187, 193], "over": [55, 96, 144, 159, 186], "median": [55, 60, 61, 62, 160, 186, 187], "nb": [55, 153, 179, 186, 188, 189, 190], "call": [55, 144, 181], "factor": [55, 189], "overlap": [56, 58, 181], "cp_map": [58, 163], "sort": [58, 137, 167, 195, 197], "arrang": 58, "being": [58, 60, 76, 82, 88, 93, 96, 97, 114, 115, 127, 133, 150, 152, 158, 159, 169, 180, 186, 187], "item": [58, 186, 187, 192], "2q": [58, 115, 117, 134, 136, 186, 190], "qubit_pair": 60, "backend_nam": [60, 61, 63, 64, 77, 97, 188, 189, 192, 195, 197], "timestamp": [60, 61, 62, 63, 64, 77, 97, 188, 195], "num_rm_sampl": [60, 61, 62], "num_moms_sampl": [60, 61, 62], "np": [60, 82, 128, 135, 158, 177, 178, 179, 180, 183, 186, 187, 190, 191, 192, 193, 194], "gather": 60, "qubit_nam": [61, 62, 192], "num_shot": [61, 62, 83, 186, 187, 189, 190], "max": [61, 62, 70, 186, 187, 192, 201], "backend_coupling_map": [62, 175], "station": [62, 174, 184, 201], "won": 62, "t": [62, 181, 192, 200], "displai": [62, 181, 183, 186, 187, 188, 190, 193, 194, 200], "titl": [62, 136, 200], "all_qubit_pairs_per_group": [63, 64], "all_qubit_neighbors_per_group": [63, 64], "all_unprojected_qubit": [63, 64, 192], "execution_timestamp": [63, 64, 188, 189, 192, 195, 197], "experiment": [63, 64], "unproject": [63, 64], "pauli_expect": [65, 158], "projected_count": 65, "nonid_pauli_label": 65, "helper": [65, 137], "outermost": [65, 150], "innermost": 65, "ident": [65, 183], "infer": [65, 186], "z": [65, 153, 161], "instead": [65, 181, 201], "logger": [66, 170], "everi": 66, "warn": [66, 183, 186, 187, 189, 192], "score": [67, 69, 70, 76, 190, 198, 199, 201], "combinatori": [67, 69, 186, 187], "problem": [67, 69, 71, 72, 73, 74, 76, 77, 186, 187, 201], "qscorebenchmark": [68, 70, 186, 187, 190, 196], "qscoreconfigur": [68, 69, 186, 187, 190, 196], "generate_maxcut_ansatz": 69, "theta": 69, "ansatz": [69, 71, 73, 75, 79], "qaoa": [69, 70, 71, 75, 79], "maxcut": [69, 71, 72, 73, 74, 75, 79, 186, 187, 190, 196], "end": [69, 82, 88, 183, 200], "variat": [69, 186, 187], "gamma": [69, 71], "beta": [69, 71, 76, 77, 186, 187, 190, 196], "choose_qubits_na": 69, "sequenti": [69, 139, 188, 190], "choose_qubits_custom": 69, "match": [69, 191], "num_inst": [70, 77, 186, 187, 190, 196], "num_qaoa_lay": [70, 186, 187, 190, 196], "min_num_nod": [70, 186, 187, 190, 196], "max_num_nod": [70, 186, 187, 190, 196], "use_virtual_nod": [70, 77, 186, 187, 190, 196], "use_classically_optimized_angl": [70, 77, 186, 187, 190, 196], "choose_qubits_routin": [70, 89, 186, 187, 190, 196, 197, 201], "min_num_qubit": 70, "seed": [70, 186, 187, 190, 196], "qpu_topologi": [70, 186, 187, 196], "crystal": [70, 151, 173, 186, 196], "min": [70, 144, 186, 187, 189], "taken": [70, 186, 187], "increas": [70, 137, 152, 193], "potenti": 70, "pre": 70, "optimis": 70, "tune": 70, "minumum": 70, "virtual_nod": [70, 72, 73, 79], "upon": [70, 83, 89], "qpu": [70, 143, 181, 186, 187], "star": [70, 151, 161, 166, 173, 181, 185, 186, 191, 199], "angl": [71, 75, 77, 79], "qubit_to_nod": [72, 73], "val": 72, "virtual": [72, 73, 77, 79, 161], "cut": [72, 73, 74, 79, 186, 187], "avg": [72, 190, 193, 196], "callabl": [73, 129, 135], "minu": 74, "sign": 74, "solut": [74, 186, 187], "obj": 74, "num_lay": 75, "approximation_ratio": 76, "approxim": [76, 77, 186, 187, 190, 196], "ratio": [76, 77, 186, 187, 190, 196], "abov": [76, 96, 186, 187, 193, 200], "beta_ratio": 77, "beta_std": 77, "deviat": [77, 89, 92, 136, 150], "classic": [77, 79, 88, 152, 153, 156, 180], "graph_phys": 79, "qubit_nod": 79, "use_classical_angl": 79, "qaoa_lay": 79, "solv": [79, 186, 187], "averag": [79, 91, 96, 97, 103, 108, 114, 129, 181, 186, 187, 193], "presenc": 79, "volum": [80, 87, 88, 89, 98, 181, 198, 199, 201], "reflect": [80, 82, 88, 99, 100, 105, 110], "deepest": [80, 88], "clop": [80, 181, 198, 199, 201], "speed": [80, 82, 186, 187], "clops_v": [80, 186, 187, 189, 190], "qv": [80, 82, 83, 88, 89, 91, 92, 96, 97, 181, 186, 187, 189, 190, 198, 199], "clops_h": [80, 83, 189, 190], "squar": [80, 186, 187, 193], "clopsbenchmark": [81, 83, 186, 187, 189, 190], "clopsconfigur": [81, 82, 186, 187, 189, 190], "h": [82, 84], "append_parameterized_unitari": 82, "q0": 82, "q1": 82, "decompos": [82, 186], "su": 82, "involv": [82, 186, 187], "belong": 82, "generate_single_circuit": [82, 88], "generate_circuit_list": [82, 88], "generate_random_paramet": 82, "templat": [82, 186, 187, 189, 190], "float64": 82, "assign_random_parameters_to_al": 82, "dict_parametrized_circ": 82, "clops_cycl": 82, "sorted_transpiled_qc_list": [82, 88, 169], "cycl": 82, "elaps": [82, 85, 86, 170, 189, 190], "submiss": [82, 88, 113, 138, 139, 186, 187, 189, 200], "generate_transpiled_clops_templ": 82, "num_upd": [83, 186, 187, 189, 190], "clops_h_bool": [83, 189, 190], "establish": [83, 189, 190], "By": [83, 189, 190], "definit": [83, 186, 187, 189, 190, 200], "2110": [83, 201], "14108": [83, 201], "quant": [83, 115, 201], "ph": [83, 115, 201], "rigor": [83, 193], "loos": 83, "www": [83, 183, 200], "ibm": [83, 144], "com": [83, 160, 187, 191, 192], "blog": 83, "restrict": [83, 89, 166, 187, 190, 197], "clops_data": 85, "job_meta": 86, "quantumvolumebenchmark": [87, 89, 186, 187, 190, 197], "quantumvolumeconfigur": [87, 88, 186, 187, 190, 197, 201], "classical_permut": 88, "permut": 88, "avoid": 88, "swap": [88, 183], "get_rem_quasidistro": 88, "sorted_qc_list_indic": [88, 93], "execution_result": [88, 90], "quasicollect": [88, 94, 145], "quasiprob": [88, 94, 145, 146], "qubii": 88, "submit_single_qv_job": 88, "submit": [88, 113, 138, 139, 169, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200], "organ": [88, 169], "vanilla": [88, 97, 113, 138, 139], "dd": [88, 97, 113, 138, 139], "num_sigma": [89, 96, 97, 186, 187, 190, 197, 201], "criteria": 89, "consensu": 89, "unmitig": 89, "1_000": [89, 186, 187, 190, 197, 201], "ideal_heavy_output": [90, 94], "hop": [90, 91, 92, 96, 97, 181], "heavi": [90, 91, 92, 93, 94, 95, 96, 186, 187], "cumul": [91, 92], "individu": [91, 92, 136, 178, 181, 186, 191, 193, 200, 201], "trial": [91, 92], "qc_list": [93, 161], "bitrstr": 93, "all_rem_quasidistro": 94, "noiseless": [94, 187, 190, 192, 197], "onto": 95, "heavy_output_prob": [96, 197], "within": [96, 200, 201], "sigma": [96, 97], "qv_result": [97, 186, 187, 197], "qv_results_typ": [97, 197], "in_volumetr": 97, "plot_rem": 97, "come": [97, 114, 146, 153], "context": 97, "volumetr": 97, "rb": [100, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 127, 128, 129, 131, 133, 135, 136, 139, 140, 142, 181, 183, 186, 190, 194, 198, 199], "cliffordrandomizedbenchmark": [101, 102, 186, 188, 190], "cliffordrbconfigur": [101, 103, 186, 188, 190], "qubits_arrai": [102, 107, 112, 131, 136, 138, 140, 142, 186, 188, 190, 194, 195, 201], "sequence_length": [102, 107, 130, 131, 186, 188, 190, 194, 201], "num_circuit_sampl": [102, 107, 112, 130, 186, 188, 190, 194, 195, 201], "length": [102, 107, 114, 118, 130, 131, 132, 183, 186, 188, 190, 194], "add_all_metadata_to_dataset": 103, "interleav": [105, 106, 107, 108, 109, 112, 117, 128, 129, 130, 131, 132, 136, 181, 188, 198, 199, 201], "interleavedrandomizedbenchmark": [106, 107, 186, 190, 194], "interleavedrbconfigur": [106, 108, 186, 190, 194, 201], "interleaved_g": [107, 130, 131, 132, 136, 186, 190, 194, 201], "interleaved_gate_param": [107, 186, 190, 194, 201], "simultaneous_fit": [107, 186, 190, 194, 201], "amplitud": [107, 128, 186, 190, 194, 201], "offset": [107, 128, 186, 190, 194, 201], "irb": [107, 129, 181, 198, 199], "ygate": 107, "czgate": [107, 112, 183, 186, 190, 193, 194, 195, 201], "enter": [107, 129, 131], "simultan": [107, 129], "specif": [108, 161, 183, 185, 186, 187, 190, 193, 197, 198, 200], "mirror": [110, 111, 112, 113, 117, 181, 198, 199, 201], "mirrorrandomizedbenchmark": [111, 112, 190, 195, 201], "mirrorrbconfigur": [111, 113, 190, 195, 201], "depths_arrai": [112, 190, 195, 201], "num_pauli_sampl": [112, 114, 118, 190, 195, 201], "two_qubit_gate_ensembl": [112, 115, 116, 117, 190, 195, 201], "density_2q_g": [112, 115, 116, 117, 190, 195, 201], "25": [112, 115, 116, 117, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 201], "mrb": [112, 113, 116, 119, 129, 136, 138, 139, 181, 190, 198, 199], "len": [112, 183, 186, 187, 193], "ensembl": [112, 113, 115, 136, 177], "cxgate": 112, "submit_single_mrb_job": 113, "sorted_transpiled_circuit_dict": [113, 138], "canon": [113, 116, 117, 138], "noisy_count": 114, "ideal_count": 114, "num_circ_sampl": [114, 118, 132], "polar": [114, 129], "noisi": 114, "rescal": 114, "few": [114, 186, 187, 191], "effect": [114, 186, 187], "real": [114, 201], "simul": [114, 144, 181, 187, 190, 195, 197], "qubit_set": [115, 129], "n_layer": 115, "grab": [115, 144], "see": [115, 169, 181, 183, 186, 191, 193, 200], "2204": 115, "07568": 115, "subsequ": [115, 200], "valueerror": [115, 118, 134, 142, 153, 158, 161, 166, 180], "do": [115, 144, 194, 200], "up": [115, 186, 201], "uniti": 115, "circ_sampl": 116, "pauli_samples_per_circ": [116, 117], "dress": [116, 117, 118], "input_list": 118, "flat": 118, "shape": 118, "lmfit": [120, 121, 129], "extend": [120, 181], "shown": [120, 186, 187, 191, 192, 193], "document": [120, 169, 186, 187, 200, 201], "github": [120, 201], "io": 120, "py": [120, 187, 189, 192, 201], "example_fit_multi_dataset": 120, "html": [120, 160, 201], "sphx": 120, "glr": 120, "multi": [120, 186, 187], "func": [121, 122, 123, 124, 129, 135], "initial_guess": 121, "constraint": [121, 201], "simultaneously_fit_var": 121, "line": 121, "evalu": [122, 186, 187], "signatur": 123, "residu": 124, "sever": [124, 181, 186, 187, 189], "techniqu": 125, "qc_inv": 126, "clifford_dictionari": 126, "invers": [126, 186], "invert": 126, "de": [126, 132], "stabil": [126, 132, 181], "ground": [127, 133, 184], "depolarization_prob": 128, "depolar": 128, "p": [128, 186], "decai": [128, 136, 181, 186], "rb_identifi": 129, "simultaneous_fit_var": 129, "interleaved_gate_str": 129, "0th": 129, "ap": [129, 193], "m": [129, 186, 187, 188, 190, 192, 194, 195, 201], "b": [129, 179, 183, 186, 200], "stdrb": 129, "clifford_dict": [130, 132], "fir": 130, "cliffords_1q": [131, 178, 180], "cliffords_2q": 131, "num_sampl": [131, 132], "befor": [131, 186], "term": [131, 153, 178, 180, 183, 193, 200], "r": [131, 150, 161, 178, 180, 183, 189, 192, 193], "seq_length": 132, "system_s": 134, "import": [134, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201], "load": [134, 188, 189], "1q_dict": 134, "2q_dict": 134, "fit_paramet": 135, "fit_data": 135, "minimizerresult": 135, "violin": 136, "scatter": 136, "shade_stdev": 136, "shade_meanerror": 136, "logscal": 136, "mrb_2q_densiti": 136, "mrb_2q_ensembl": 136, "shade": 136, "arr": 137, "relabel": 137, "increasingli": 137, "zero": [137, 181, 186, 187], "5": [137, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201], "7": [137, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 200, 201], "note": [137, 146, 179, 181, 191, 193, 201], "circuit_compilation_opt": [139, 169], "circuitcompilationopt": [139, 169], "compil": [139, 169, 181, 186, 189, 193, 200], "submit_execut": 139, "margin": [140, 144, 159], "surviv": [140, 186], "gate_id": 141, "gate_param": 141, "m3": [143, 144, 145], "modif": [143, 200], "m3iqm": [143, 146], "mthree": [143, 146], "m3mitig": [143, 144], "iter_threshold": 144, "4096": 144, "modifi": [144, 181, 186, 187, 200], "work": [144, 146, 186, 187, 200, 201], "devic": [144, 181, 186, 187, 199, 201], "cals_from_system": 144, "initial_reset": 144, "rep_delai": 144, "cals_fil": 144, "async_c": 144, "cal_id": 144, "array_lik": 144, "1e4": 144, "max_shot": 144, "balanc": 144, "hardwar": [144, 189, 199], "independ": [144, 186], "reset": [144, 189], "begin": [144, 183], "delai": [144, 189], "path": 144, "json": [144, 193], "async": 144, "separ": [144, 181, 197, 200], "thread": 144, "m3error": 144, "progress": 144, "against": [145, 200], "mit": [146, 200], "processor": [146, 186, 187], "argument": [146, 181, 191, 201], "util": [146, 172, 176, 181, 191, 192], "final_measurement_map": 146, "qubit_name_to_index": 146, "quasiprobabilti": 146, "we": [146, 184, 186, 187, 193, 200], "could": 146, "would": [146, 192], "out": [146, 200], "box": 146, "u": 146, "sinc": [146, 186, 187, 189, 193], "original_count": 148, "num_bootstrap_sampl": 148, "rgen": 148, "include_original_count": 148, "default_rng": 148, "circuit_list": 149, "transpiled_qc_list": 150, "barrier": [150, 183, 184, 189], "under": [151, 181, 183, 186, 193, 200], "list_fid": 151, "list_coupl": 151, "chip": [151, 173, 174], "active_qubit": [152, 180], "measure_oth": [152, 180], "measure_other_nam": [152, 180], "tomograhi": 152, "regist": [152, 153, 180], "xy": 152, "pauli_label": 153, "charact": [153, 200], "extract": [154, 156, 171, 186, 201], "backend_label": 155, "bit": [156, 159, 178], "prob_dist_or_count": 159, "prob_dist": 159, "propag": 160, "refer": [160, 186, 187, 189, 193, 199, 201], "mathworld": 160, "wolfram": 160, "statisticalmedian": 160, "basis_g": 161, "drop_final_rz": 161, "optimization_level": [161, 184, 186], "sqg": [161, 187, 189, 190, 191, 197], "drop": 161, "rz": 161, "emploi": 161, "backend_topologi": 162, "backend_num_qubit": 162, "remov": [163, 181], "duplic": 163, "vertic": 163, "iqm_job": [164, 165], "iqmjob": [164, 165, 169], "relev": 165, "transpiled_circuit_list": 167, "sorted_indic": [167, 192], "sorted_circuit": 167, "sequence_in": 168, "split_siz": 168, "split": [168, 201], "chunk": 168, "normal": [169, 200], "sent": [169, 200], "manag": [169, 200, 201], "abil": 169, "f": [170, 183, 184, 186, 187, 189, 190, 191, 192, 193], "decor": 170, "statement": [170, 200], "counts_rang": 171, "were": [171, 181], "visual": [172, 174, 181, 186, 191], "graphposit": 172, "variou": [173, 198], "garnet_posit": 173, "garnet": [173, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201], "deneb_posit": 173, "deneb": [173, 181, 187, 188, 189, 190, 194, 195, 196, 197], "predefined_st": 173, "create_posit": 173, "pygraph": 173, "must": [173, 186, 187, 200, 201], "coordin": [173, 184], "thick": [174, 181], "thinner": [174, 191], "better": [174, 191], "highlight": 174, "orang": [174, 191], "rustworkx": [175, 181], "random_gen": 177, "randomst": 177, "drawn": 177, "circuilar": 177, "unitary_arg": 178, "subsystem_bit_indic": 178, "clifford_or_haar": [178, 180], "initialis": [178, 180], "subsystem": [178, 179], "na": 179, "entangl": [179, 181, 186, 187, 190, 191, 192, 201], "For": [179, 187, 191, 193, 200, 201], "more": [179, 181, 186, 187, 200, 201], "mere": [179, 200], "nu": 180, "compos": [180, 183], "incorrect": 181, "bug": 181, "benchmark": [181, 182, 183, 185, 193, 196, 197, 198], "jupyt": 181, "tutori": 181, "report": [181, 186, 189], "explicit": 181, "offlin": [181, 189], "spent": [181, 189], "header": 181, "example_graphst": [181, 192], "notebook": [181, 184, 186, 187, 193, 198, 199], "page": [181, 199, 200], "render": [181, 201], "iqm": [181, 182, 183, 184, 185, 191, 192, 193, 194, 198, 200], "depend": [181, 189, 191, 193, 199], "wrong": 181, "aid": 181, "don": [181, 200], "improv": [181, 200], "bottom": 181, "top": 181, "qscore": [181, 186, 187], "done": [181, 183, 189], "instal": [181, 186, 193, 199], "command": [181, 201], "develop": [181, 183, 199], "mode": [181, 183, 201], "41": [181, 187, 190, 194, 195, 196], "folder": [181, 200, 201], "doc": [181, 201], "spark": [181, 185, 199], "compat": 181, "adapt": [181, 201], "behavior": 181, "publish": 181, "ci": 181, "secur": [181, 201], "scan": [181, 201], "lockfil": [181, 201], "relat": [181, 186, 189], "modulenotfounderror": 181, "pyrit": [181, 196], "revert": 181, "ones": [181, 186, 187, 201], "now": [181, 187, 188, 189, 190, 191, 192, 193, 194], "port": 181, "subclass": 181, "usag": 181, "place": [181, 200], "miscellan": 181, "relax": 181, "api": [181, 191, 199, 201], "build": [181, 201], "overwrit": 181, "minor": 181, "longer": [181, 186], "renam": 181, "rebas": 181, "randomizedbenchmark": 181, "quantumvolum": 181, "serial": 181, "some": [181, 186, 187, 191], "available_benchmark": 181, "__init__": 181, "public": 181, "hint": 181, "docstr": 181, "messag": 181, "prevent": 181, "exclus": [181, 200], "section": [182, 185, 198, 200], "guidanc": [182, 185], "packag": [182, 186, 187, 189, 192, 198, 201], "your": [182, 186, 187, 189, 199, 200, 201], "own": [182, 199, 200, 201], "decomposit": [182, 199], "1402": 183, "4848": 183, "copyright": [183, 200], "2024": [183, 188, 200], "licens": [183, 199], "apach": [183, 200], "you": [183, 186, 187, 194, 200, 201], "except": [183, 184, 200], "complianc": [183, 200], "unless": [183, 200], "law": [183, 200], "agre": [183, 200], "softwar": [183, 200], "AS": [183, 200], "without": [183, 186, 187, 189, 191, 200], "warranti": [183, 200], "OR": [183, 200], "OF": [183, 200], "kind": [183, 200], "express": [183, 200], "impli": [183, 200], "languag": [183, 200], "govern": [183, 200], "permiss": [183, 200], "quantum_info": 183, "qi": 183, "c0": 183, "c": [183, 186, 187, 189, 192, 200], "_": [183, 186, 191, 193], "24": [183, 187, 188, 190, 193, 194, 196], "half": 183, "x2": 183, "to_gat": 183, "y2": 183, "x2m": 183, "y2m": 183, "inplac": 183, "2pi": 183, "11": [183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201], "13": [183, 187, 188, 190, 191, 192, 194, 195, 201], "15": [183, 186, 187, 188, 189, 190, 192, 194, 195], "16": [183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197], "17": [183, 188, 190, 191, 192, 194, 195, 197, 201], "18": [183, 188, 190, 191, 192, 194, 195, 201], "19": [183, 189, 190, 191, 192, 193, 194, 195], "21": [183, 187, 189, 190, 192, 194], "22": [183, 187, 189, 190, 192, 193, 194, 195], "23": [183, 188, 190, 191, 194, 195, 197], "clifford_sqg": 183, "s1": 183, "s1x2": 183, "s1y2": 183, "displaystyl": 183, "sum_": [183, 193], "prime": 183, "left": 183, "mathrm": [183, 186, 187, 191], "tr": [183, 193], "u_": 183, "dagger": [183, 186, 193], "u_k": 183, "right": [183, 200], "s2": 183, "satisfi": [183, 187, 193], "c_kei": 183, "aux": 183, "total_triangl": 183, "c1": 183, "adjoint": 183, "c2": 183, "c3": 183, "to_matrix": 183, "trace": [183, 193], "print": [183, 186, 189, 190, 191, 192, 193, 195, 197, 200], "0f": 183, "diagon": [183, 186, 187], "nsum": 183, "sum": 183, "clifford_2qg": 183, "product": [183, 200], "c2q_0": 183, "c2q": 183, "counter": 183, "to_label": 183, "sqg_class_": 183, "cnot": [183, 191], "sy2": 183, "cnot_class_": 183, "iswap": 183, "sy1": 183, "sx2": 183, "i_swap_class_": 183, "swap_class_": 183, "clifford_1qg": 183, "open": 183, "clifford_1q": 183, "pkl": 183, "wb": 183, "clifford_2q": 183, "loaded_dict": 183, "def": [183, 184], "count_rcz": 183, "c_list": 183, "no_cz": 183, "no_r": 183, "count_op": 183, "num_2qcz": 183, "num_2qr": 183, "num_1qcz": 183, "num_1qr": 183, "875": [183, 186, 194, 197], "200": [183, 189, 192, 196], "randint": [183, 186, 187, 190, 196], "11520": 183, "draw": [183, 186, 187, 192], "mpl": [183, 192], "style": [183, 192], "iqp": [183, 192], "fold": [183, 192], "ninvers": 183, "qc_aux": 183, "qcinv": 183, "op_seq": 183, "ncomposit": 183, "modulo": 183, "phase": 183, "equiv": 183, "latex": 183, "composit": 183, "bmatrix": 183, "520": [183, 190, 196], "132": [183, 190, 194], "710": [183, 190, 196], "suffic": 183, "triangular": 183, "part": [183, 200], "howev": [183, 200, 201], "still": [183, 193], "op": 183, "adj": 183, "prod": 183, "100000": 183, "ndone": 183, "defit": 184, "anoth": 184, "excit": 184, "add_counts_to_dataset": 184, "pyplot": [184, 186, 187, 193], "plt": [184, 186, 187, 193], "generate_readout_test_circuit": 184, "n_qubit": 184, "qb_to_measur": 184, "qc_transpil": 184, "plot_histogram": [184, 186], "try": 184, "state_": 184, "counts_": 184, "break": 184, "xtick": 184, "90": [184, 192], "legend": 184, "readout_analysi": 184, "histogram": [184, 186], "readouttest": 184, "default_opt": 184, "n_shot": 184, "2048": 184, "staticmethod": 184, "readout_test": 184, "iqmprovid": [184, 186, 187, 190, 192, 201], "iqm_server_url": 184, "fi": [184, 201], "coco": [184, 187, 192, 201], "get_backend": [184, 186, 187, 190, 192, 201], "480b": 184, "state_0": 184, "state_1": 184, "u4": 184, "144b": 184, "0000": 184, "0010": 184, "1010": 184, "1100": 184, "176b": 184, "0011": 184, "0101": 184, "0110": 184, "1101": 184, "1110": 184, "1111": 184, "counts_0": 184, "int64": 184, "72b": 184, "1924": 184, "26": [184, 190, 192, 193, 194, 196], "39": [184, 190, 192, 193, 194, 196], "counts_1": 184, "88b": 184, "72": [184, 192], "48": [184, 189, 190, 193, 194, 196], "78": [184, 192], "36": [184, 189, 190, 192, 193, 196], "1801": 184, "sure": [186, 201], "pip": [186, 201], "ipykernel": 186, "o": [186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 201], "environ": [186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 201], "iqm_tokens_fil": 186, "token": [186, 187, 191, 192, 194, 201], "iqm_url": [186, 187, 190, 192], "access": [186, 187, 201], "everyth": [186, 187], "nx": [186, 187], "add_edges_from": [186, 187], "po": [186, 187], "spring_layout": [186, 187], "42": [186, 187, 189, 190, 191, 192, 193, 194, 196], "with_label": [186, 187], "node_color": [186, 187], "lightblu": [186, 187], "edge_color": [186, 187], "grai": [186, 187], "node_s": [186, 187], "font_siz": [186, 187], "linewidth": [186, 187], "ignor": [186, 187], "critic": [186, 187], "filterwarn": [186, 187], "action": [186, 187], "superposit": [186, 187], "rangl": [186, 187], "frac": [186, 187, 193], "sqrt": [186, 187], "otim": [186, 187], "act": [186, 187, 200], "wit": [186, 187], "genuin": [186, 187, 191], "cannot": [186, 187, 200], "explain": [186, 187], "great": [186, 187], "rho_": [186, 187], "langl": [186, 187], "pure": [186, 187], "case": [186, 187], "entri": [186, 187, 193], "written": [186, 187, 200], "00": [186, 187, 189, 190, 192, 193, 195, 197], "corner": [186, 187], "simplifi": [186, 187], "four": [186, 187], "compon": [186, 187, 189], "formula": [186, 187], "nullifi": [186, 187], "To": [186, 187, 188, 189, 191, 193, 200, 201], "off": [186, 187], "want": [186, 187, 201], "pleas": [186, 187], "generate_ghz_spanning_tre": 186, "get_edg": 186, "ghz_circuit": 186, "qc_transp": 186, "re": [186, 194], "10000": [186, 187, 196], "get_count": 186, "benchmark_ghz": [186, 187, 190, 191], "run_ghz": [186, 187, 190, 191], "result_ghz": [186, 187], "introduc": [186, 187], "2019": [186, 187, 191, 201], "successfulli": [186, 187, 188, 190, 194, 195, 197], "occcur": [186, 187], "greater": [186, 187], "ask": [186, 187], "confid": [186, 187], "higher": [186, 187], "97": [186, 187], "85": [186, 187, 192, 201], "asymptot": [186, 187], "log_2": [186, 187], "v_q": [186, 187], "underset": [186, 187], "argmax": [186, 187], "d": [186, 187, 191, 200], "leq": [186, 187], "achiev": [186, 187, 192], "quantum_volum": [186, 187, 189, 190, 197, 201], "due": [186, 189], "topmost": 186, "500": [186, 187, 190, 195, 197, 201], "60_000": [186, 190, 197, 201], "minut": [186, 187, 193], "benchmark_qv": [186, 187, 190, 197], "run_qv": [186, 187], "result_qv": [186, 187], "That": [186, 187], "wack": [186, 187], "constitut": [186, 187, 200], "_time": [186, 187], "notic": [186, 187, 200], "plot_tim": [186, 187], "benchmark_clop": [186, 187, 189, 190], "run_clop": [186, 187, 189, 190], "result_clop": [186, 187, 189, 190], "fig_clop": [186, 187], "idea": 186, "behind": 186, "crb": 186, "certain": [186, 187], "langle0": 186, "c_": 186, "inv": 186, "c_m": 186, "cdot": 186, "_2c_1": 186, "sim": 186, "c_1": 186, "c_2": 186, "ldot": 186, "c_1c_2": 186, "_m": 186, "leq1": 186, "constant": 186, "isol": 186, "magesan": 186, "2012": [186, 201], "assumpt": 186, "markovian": 186, "stationari": 186, "theori": [186, 200], "fact": 186, "design": [186, 200, 201], "fulli": [186, 193], "ensur": 186, "our": 186, "overlin": 186, "intend": 186, "becaus": 186, "eventu": 186, "mention": 186, "barend": 186, "2014": 186, "approx": 186, "alwai": [186, 191], "slightli": 186, "care": 186, "compar": 186, "spec": 186, "randomized_benchmark": [186, 188, 190, 194, 195, 201], "clifford_rb": [186, 188, 190], "benchmark_clifford_rb": [186, 188, 190], "run_clifford_rb": [186, 188, 190], "result_clifford_rb": [186, 188, 190], "previou": 186, "aim": [186, 191], "interest": 186, "sole": [186, 200], "made": [186, 200], "rate": 186, "wish": 186, "interleaved_rb": [186, 190, 194, 201], "irb_cz": 186, "benchmark_irb_cz": 186, "run_irb_cz": 186, "result_irb_cz": 186, "martiel": [186, 187], "erd\u0151": [186, 187], "r\u00e9nyi": [186, 187], "geq": [186, 187, 193], "999999": [186, 187, 190, 196], "benchmark_qscor": [186, 187, 190, 196], "run_qscor": [186, 187, 190], "result_qscor": [186, 187, 190], "summar": 186, "obs_ghz": [186, 187], "round": [186, 187], "obs_qv": [186, 187], "obs_clop": [186, 187], "obs_crb": 186, "f_crb": 186, "obs_irb": 186, "f_irb": 186, "avg_gate_fidelity_interleav": [186, 190, 194], "obs_q": [186, 187], "argmin": [186, 187], "mean_approximation_ratio": [186, 187, 190, 196], "3000": 186, "999": [186, 188, 190, 193], "98": 186, "30": [186, 188, 190, 192, 194, 196, 201], "num": 186, "iqm_token": [187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 201], "reson": [187, 191, 192, 194, 201], "meetiqm": [187, 191, 192], "raphaelbrieg": 187, "miniconda3": 187, "env": [187, 189, 192], "lib": [187, 189, 192], "site": [187, 189, 192], "140": [187, 190], "userwarn": [187, 189, 192], "client": 187, "built": 187, "server": 187, "might": [187, 191], "encount": 187, "issu": [187, 200], "best": [187, 191], "version_incompatibility_msg": 187, "chosen_layout": 187, "2025": [187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199], "03": [187, 189, 190, 191, 192, 194, 195], "866": [187, 190], "logging_config": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "info": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "868": 187, "665": [187, 190], "936": [187, 190, 196], "384": [187, 190], "429": [187, 190], "762": [187, 190, 196], "307": [187, 195, 196], "310": [187, 190, 196], "413": [187, 190, 195], "066": [187, 190, 196], "497": [187, 190], "501": [187, 190, 192], "565": [187, 189, 190], "297": [187, 190], "758": [187, 190, 192, 193, 194, 195], "323": [187, 188, 190], "43": [187, 188, 189, 190, 191, 193, 194, 196], "06": [187, 190, 192, 193, 195], "137": [187, 190, 196], "07": [187, 189, 190, 192, 193, 194, 195], "265": [187, 196], "988": [187, 190], "028": [187, 190, 196], "991": [187, 190, 194], "10_000": [187, 190], "45": [187, 188, 190, 191, 192, 194, 195, 196], "314": [187, 188, 190], "655": [187, 190, 196], "657": 187, "Will": [187, 188, 189, 190, 193, 194, 195, 197, 201], "658": [187, 190], "46": [187, 188, 189, 190, 192, 193, 196], "04": [187, 189, 190, 192, 193, 194, 195, 199], "018": [187, 190, 196], "033": [187, 189, 190, 194, 197], "subbatch": [187, 190, 197], "192": [187, 190], "05": [187, 190, 193, 194, 195], "443": 187, "786": 187, "116": [187, 190, 195], "863": [187, 190], "47": [187, 190, 193, 194, 196], "654": [187, 190, 196], "40": [187, 189, 190, 192, 196], "986": [187, 188, 190], "conclud": [187, 188, 190, 192, 194, 195, 197], "326": [187, 190, 192, 196], "554": [187, 190], "load_ext": [188, 189, 190, 192, 193, 194, 195, 196, 197], "autoreload": [188, 189, 190, 192, 193, 194, 195, 196, 197], "extens": [188, 189], "reload": [188, 189], "reload_ext": [188, 189], "fakeadoni": [188, 189, 190, 192, 194, 195, 196, 197], "fakeapollo": [188, 189, 190, 191, 192, 194, 195, 196, 197], "example_crb": [188, 190], "56": [188, 190, 192, 193, 196], "750": [188, 190, 192, 196], "31": [188, 189, 190, 192, 194, 195, 196], "63": [188, 190, 192, 194], "831": [188, 189, 190, 194, 196], "992": [188, 190, 196], "341": [188, 190, 196], "040": [188, 190, 194], "469": [188, 190], "291": [188, 190], "292": [188, 190, 194], "349": 188, "541": [188, 190, 195], "600": [188, 190, 191], "756": [188, 190, 192], "837": [188, 190, 194, 196, 197], "025": [188, 196], "171": [188, 190], "905": [188, 190, 196], "544": [188, 190, 196], "899": [188, 190], "32": [188, 190, 192, 195, 196, 199], "624": [188, 190], "004": [188, 194, 196], "319": [188, 190], "569": [188, 190, 195, 196], "777": [188, 190], "840": [188, 190], "44": [188, 189, 190, 191, 193, 194, 196], "048": [188, 190, 194], "098": [188, 190, 196], "qubits_": [188, 190, 195], "_depth_1": [188, 190, 194], "186": [188, 194], "_depth_3": [188, 190, 194], "225": [188, 190], "_depth_7": [188, 190, 194], "267": [188, 190, 196], "_depth_15": [188, 190, 194], "_depth_31": [188, 190, 194], "315": [188, 190, 196], "364": [188, 190, 195], "_depth_63": [188, 190, 194], "416": [188, 190, 196], "417": [188, 190, 196], "476": 188, "542": [188, 190, 195], "615": [188, 190], "616": [188, 191, 196], "697": [188, 190, 196], "789": [188, 190, 194, 196], "890": [188, 190, 194], "931": [188, 190, 196], "938": [188, 190], "945": [188, 190, 195], "952": [188, 190, 194], "959": [188, 190], "966": [188, 190, 196], "972": [188, 190, 191, 196], "979": [188, 196], "993": [188, 195], "006": [188, 196], "013": [188, 190], "946844466999168": 188, "9429197366921651": 188, "attr": [188, 189, 192, 193, 195, 197], "session_timestamp": [188, 189, 192, 195, 197], "20241217": 188, "115553": 188, "backend_configuration_nam": [188, 189, 192, 195, 197], "iqmfakeapollobackend": [188, 190, 191, 193, 197], "depth_1": 188, "time_circuit_gener": [188, 189, 192, 195, 197], "541001081466675": 188, "time_submit": [188, 195, 197], "0006990432739257812": 188, "time_retriev": [188, 195, 197], "22491073608398438": 188, "all_job_metadata": [188, 195, 197], "batch_job_1": [188, 195], "job_id": [188, 195], "8f305755": 188, "e038": 188, "4596": 188, "8617": 188, "d96ba3f42ca9": 188, "aer_simul": [188, 195], "statu": [188, 195], "circuits_in_batch": [188, 195], "depth_3": 188, "05647683143615723": 188, "0005230903625488281": 188, "2fe0b406": 188, "8977": 188, "4567": 188, "bba0": 188, "d4168f0883ed": 188, "depth_7": 188, "19257187843322754": 188, "0004839897155761719": 188, "8299918c": 188, "be26": 188, "40d5": 188, "8778": 188, "9ea4468a1df2": 188, "depth_15": 188, "05831408500671387": 188, "0004811286926269531": 188, "174640c4": 188, "9ff3": 188, "4ca3": 188, "9ffc": 188, "d6aa5be304f3": 188, "depth_31": 188, "1564040184020996": 188, "0006189346313476562": 188, "7bb739f2": 188, "31bc": 188, "40af": 188, "8dbf": 188, "1d60a9310391": 188, "depth_63": 188, "08135986328125": 188, "0004200935363769531": 188, "f414a2c1": 188, "75c8": 188, "4d5a": 188, "9e4b": 188, "ccce29903f5f": 188, "147684812545776": 188, "0005502700805664062": 188, "00039887428283691406": 188, "8832576a": 188, "6d6e": 188, "4abe": 188, "8cfa": 188, "5001e6bb98e": 188, "08015298843383789": 188, "00039315223693847656": 188, "ecc1bcea": 188, "ef4c": 188, "4f35": 188, "9284": 188, "ab49af0c5b9f": 188, "16936397552490234": 188, "0003960132598876953": 188, "5582c842": 188, "0f07": 188, "46b6": 188, "96be": 188, "2fb3925b19d9": 188, "20774221420288086": 188, "0004191398620605469": 188, "6423b02b": 188, "8417": 188, "4300": 188, "b7ac": 188, "84d59f87a51f": 188, "0635080337524414": 188, "0004169940948486328": 188, "0b324804": 188, "44fe": 188, "4c16": 188, "83eb": 188, "08e5cd67aa79": 188, "20784401893615723": 188, "0004961490631103516": 188, "6c633640": 188, "d4b4": 188, "47de": 188, "a46d": 188, "d3ae4c84d212": 188, "avg_gate_fidel": [188, 195], "0012220693932290373": 188, "001545469960991071": 188, "xxxxxxxxxxxxxxx": 189, "example_clop": [189, 190], "33": [189, 190, 192, 195, 196], "57": [189, 190, 192, 194, 196], "096": [189, 195], "097": [189, 190, 195], "305": [189, 190], "306": [189, 190], "479": [189, 190, 196], "480": [189, 190, 196], "564": [189, 190, 191, 196], "pedrofigueroaromero": [189, 192], "anaconda3": [189, 192], "bench": [189, 192], "iqm_provid": [189, 190, 192], "177": [189, 190, 192, 195, 196], "unknown": [189, 192], "unknown_opt": [189, 192], "09": [189, 190, 192, 194, 197, 199], "253": [189, 190, 196], "254": 189, "941": [189, 190], "830": [189, 190, 196], "27": [189, 190, 191, 192, 193, 194, 196], "704": [189, 190, 192, 194], "276": 189, "052": [189, 190, 196], "053": [189, 190, 196], "793": [189, 190, 196], "794": 189, "249": [189, 190], "35": [189, 190, 192, 196], "170": [189, 190, 196], "01": [189, 190, 192, 193, 194, 195, 196, 197], "790": [189, 190, 194, 195], "791": [189, 190, 195, 196], "669": [189, 190, 196], "287": [189, 190, 194], "288": [189, 190], "973": 189, "974": [189, 190, 196], "363": [189, 190, 196], "37": [189, 190, 192, 196], "232": [189, 196], "233": [189, 190], "38": [189, 190, 192, 194, 196], "853": 189, "51": [189, 190, 191, 192, 193, 194, 196], "54": [189, 190, 192, 194, 196], "55": [189, 190, 192, 193, 195, 196], "923": [189, 190], "924": [189, 190, 196], "08": [189, 190, 192, 193, 194, 195, 196], "405": [189, 190, 192], "032": [189, 190, 196, 197], "630": [189, 190], "631": [189, 190, 194], "126": [189, 190, 191], "926": [189, 190, 196], "927": [189, 190], "29": [189, 190, 192, 194, 196, 197], "607": [189, 190, 194], "608": [189, 190], "708": [189, 190, 192], "709": [189, 190, 196], "235": [189, 190, 196], "236": [189, 196], "247": [189, 190], "248": 189, "job_tot": 189, "compile_tot": 189, "86": [189, 192], "sec": 189, "submit_tot": 189, "250": [189, 190, 193], "execution_tot": 189, "82": [189, 192, 193], "all_times_parameter_assign": 189, "all_times_retriev": 189, "all_times_submit": 189, "assign_parameters_tot": 189, "clops_tim": 189, "counts_per_upd": 189, "job_meta_per_upd": 189, "num_paramet": 189, "operation_count": [189, 197], "parallel_2q_lay": 189, "parameters_per_upd": 189, "time_count_lay": 189, "time_sort_batch": 189, "time_transpil": [189, 197], "u_per_lay": 189, "user_retrieve_tot": 189, "user_submit_tot": 189, "std": 189, "9504950495049505": 189, "4950495049504951": 189, "409": [189, 190], "56435643564356": 189, "9997381883899": 189, "53465346534654": 189, "7852354032651045": 189, "9900990099009901": 189, "09900990099009897": 189, "3410": 189, "breakdown": 189, "unit": 189, "remot": 189, "aspect": 189, "wall": 189, "experienc": 189, "encompass": 189, "compris": 189, "latenc": 189, "vari": 189, "significantli": 189, "extern": 189, "circumst": 189, "aggreg": 189, "finish": 189, "receiv": [189, 200], "877": [190, 194], "127": [190, 194], "091": 190, "517": [190, 196], "508": [190, 192], "507": [190, 192, 196], "168": [190, 194], "188": [190, 194, 196], "721": [190, 192, 196], "754": [190, 196], "946": [190, 196], "357": [190, 195, 196], "920": [190, 196], "807": [190, 196], "227": 190, "932": [190, 194], "036": [190, 196], "447": 190, "448": [190, 195, 196], "707": 190, "967": 190, "282": [190, 194], "284": [190, 196], "576": [190, 196], "578": 190, "_depth_127": [190, 194], "324": [190, 192, 194, 196], "557": [190, 195], "567": 190, "590": [190, 192, 196], "602": [190, 196], "611": [190, 196], "626": [190, 192, 195], "example_irb_1q": [190, 194], "rgate": [190, 193, 194], "benchmark_irb_1q": [190, 194], "run_irb_1q": [190, 194], "021": [190, 197], "599": [190, 196], "wxecut": 190, "255": [190, 194], "694": 190, "047": [190, 196], "588": 190, "52": [190, 191, 192, 193, 194, 195, 196], "423": [190, 196], "401": [190, 196], "58": [190, 191, 192, 194, 196], "054": 190, "348": [190, 194], "427": 190, "571": [190, 196], "805": [190, 196], "491": [190, 194], "445": [190, 196], "219": 190, "482": [190, 192, 196], "550": [190, 196], "589": [190, 191, 195], "623": [190, 194, 196], "558": [190, 192], "218": 190, "328": 190, "810": [190, 196], "871": [190, 196], "340": [190, 196], "53": [190, 191, 192, 194, 196], "411": [190, 196], "453": [190, 196, 197], "876": [190, 194, 196], "904": [190, 196], "02": [190, 192, 193, 195, 196], "909": 190, "430": [190, 193, 196], "519": 190, "530": [190, 194, 196], "187": 190, "154": 190, "635": [190, 194], "783": [190, 196, 197], "829": [190, 194, 196], "933": [190, 194], "049": [190, 194], "437": 190, "59": [190, 192, 194, 195, 196], "019": 190, "778": [190, 196], "334": [190, 192], "913": [190, 196], "008": [190, 194, 196], "095": [190, 194], "260": 190, "881": [190, 194, 196], "819": [190, 192, 194, 195], "153": 190, "883": [190, 194, 195, 196], "330": [190, 192, 195], "579": 190, "620": [190, 196], "133": [190, 194, 195], "210": [190, 196, 197], "358": 190, "49": [190, 192, 193, 194, 196], "382": 190, "649": [190, 196], "549": [190, 196], "471": [190, 196], "529": [190, 191, 195, 196], "679": [190, 194, 195, 196], "515": 190, "169": [190, 196], "083": [190, 196], "161": 190, "779": [190, 194, 196], "009": 190, "732": 190, "560": [190, 196], "943": 190, "071": 190, "182": 190, "976": 190, "553": [190, 194], "781": [190, 194, 197], "703": [190, 194], "290": [190, 194, 197], "639": [190, 191], "823": [190, 192, 196], "179": [190, 196], "859": 190, "175": 190, "114": 190, "338": [190, 193, 194, 196], "425": 190, "821": [190, 192, 194, 196], "900": 190, "070": [190, 191, 196], "475": [190, 194], "000": [190, 194, 196], "120": [190, 194, 196], "775": 190, "259": [190, 193], "598": [190, 195, 196], "178": 190, "352": [190, 196], "648": [190, 196], "412": [190, 192], "044": 190, "874": [190, 194, 196], "229": 190, "690": 190, "149": [190, 195], "011": [190, 192, 193], "861": [190, 194], "770": 190, "782": [190, 191], "955": 190, "059": 190, "455": 190, "888": 190, "689": [190, 196], "739": [190, 194, 196], "199": [190, 192], "346": [190, 194, 196], "28": [190, 192, 194, 196, 197], "024": 190, "850": [190, 196], "clifford_qubits_": [190, 194], "460": 190, "299": 190, "570": [190, 196], "088": [190, 197], "377": 190, "379": 190, "698": 190, "700": 190, "150": [190, 192, 195, 196], "_depth_255": [190, 194], "593": [190, 194, 196], "594": [190, 196], "388": [190, 196], "389": 190, "659": [190, 192], "110": 190, "118": [190, 194, 196], "369": 190, "371": 190, "058": [190, 194, 196], "650": [190, 194], "490": [190, 194, 196], "834": 190, "682": [190, 194], "450": [190, 195, 196], "240": [190, 196], "189": [190, 196], "231": 190, "660": 190, "939": [190, 194, 196], "755": [190, 192], "759": [190, 196], "484": 190, "487": [190, 192, 196], "164": [190, 196], "970": [190, 195], "760": [190, 196], "interleaved_qubits_": [190, 194], "109": [190, 201], "720": [190, 196], "726": 190, "498": 190, "504": [190, 191], "329": 190, "937": [190, 196], "320": 190, "270": 190, "702": [190, 195], "181": [190, 195], "185": 190, "683": [190, 192, 196], "687": [190, 196], "761": [190, 191, 192], "148": [190, 193, 194, 196], "136": 190, "010": [190, 196], "205": [190, 192, 194, 196], "468": [190, 196], "919": 190, "562": [190, 192], "370": [190, 196], "884": [190, 195], "172": 190, "857": [190, 196], "873": 190, "075": [190, 193, 196], "609": [190, 195, 196], "983": [190, 195], "076": [190, 196], "342": [190, 195], "849": [190, 195, 196], "788": [190, 194], "817": 190, "result_irb_1q": [190, 194], "894": 190, "452": [190, 191, 196], "677": [190, 196], "772": [190, 196], "996": [190, 195], "108": [190, 196], "203": [190, 196], "538": [190, 194, 196], "969": 190, "080": 190, "208": [190, 192, 194], "528": [190, 196], "627": 190, "734": [190, 194, 196], "942": 190, "165": 190, "272": [190, 195], "580": 190, "675": [190, 194], "882": [190, 194], "977": 190, "106": [190, 196], "201": [190, 195, 196], "321": 190, "431": 190, "666": [190, 196], "776": 190, "887": [190, 195, 196], "985": 190, "206": [190, 194, 196], "318": [190, 196], "545": [190, 195], "653": [190, 195, 196], "766": [190, 195, 196], "989": [190, 193, 194, 196], "221": [190, 196], "335": [190, 196], "691": [190, 194], "809": [190, 196], "286": [190, 194], "398": [190, 192], "525": [190, 192], "780": [190, 194, 195, 197], "892": [190, 195], "147": [190, 193, 195], "612": 190, "9979183032433894": 190, "144505494191281e": 190, "avg_gate_fidelity_clifford": [190, 194], "9958115103388792": 190, "17823609003449e": 190, "avg_gate_fidelity_n": 190, "9977661388474022": 190, "361722520237145e": 190, "997958281196824": 190, "00010535448906517988": 190, "996185705320257": 190, "354178172452585e": 190, "9979657095041371": 190, "9888883256457185e": 190, "9976806659229207": 190, "00010662386983132284": 190, "9958525686447902": 190, "031666798234228e": 190, "9977880366105548": 190, "816884091625878e": 190, "9977658880315101": 190, "00013395088590563366": 190, "996010014510697": 190, "00011462572813413851": 190, "9978720077390384": 190, "113374307582606e": 190, "9978184054322468": 190, "00011216064141600791": 190, "9957406711482065": 190, "837832701601442e": 190, "9977283579457101": 190, "246845828393341e": 190, "example_irb_2q": [190, 194], "benchmark_irb_2q": [190, 194], "run_irb_2q": [190, 194], "304": [190, 196], "543": 190, "034": [190, 193, 194], "129": [190, 196, 201], "729": 190, "454": 190, "930": [190, 192, 196], "243": [190, 196], "081": [190, 196], "139": [190, 196], "160": 190, "277": [190, 196], "514": [190, 192], "728": 190, "273": [190, 196], "824": [190, 192, 196], "951": [190, 194, 196], "131": [190, 194, 196], "585": [190, 191, 192, 196], "633": [190, 196], "568": [190, 196], "392": [190, 196], "835": 190, "138": [190, 196], "572": [190, 192, 196], "897": [190, 196], "039": [190, 194, 196], "407": 190, "439": [190, 192], "555": [190, 196], "003": [190, 193, 194], "668": 190, "656": [190, 196], "752": [190, 194, 196], "180": [190, 195], "743": [190, 196], "730": 190, "403": 190, "826": [190, 196], "337": [190, 196], "134": [190, 195], "303": [190, 192], "676": [190, 195], "093": 190, "800": [190, 193, 201], "394": [190, 194], "860": [190, 194], "269": 190, "368": 190, "575": 190, "846": 190, "995": [190, 193, 196], "477": [190, 192], "016": [190, 196], "078": 190, "158": [190, 194, 196], "614": 190, "395": [190, 192, 194, 196], "035": 190, "738": 190, "213": [190, 196], "419": [190, 196], "815": [190, 196], "838": [190, 196], "478": [190, 196], "574": 190, "144": 190, "744": [190, 194, 196], "279": 190, "499": [190, 192], "803": [190, 193], "261": 190, "796": 190, "713": 190, "844": [190, 196], "073": 190, "271": [190, 195, 196], "547": 190, "852": [190, 192], "736": [190, 196], "196": [190, 194, 196, 197], "198": [190, 196], "901": 190, "652": [190, 194, 195], "912": 190, "896": 190, "007": [190, 194], "152": [190, 195, 196], "060": 190, "062": [190, 196], "610": 190, "084": 190, "456": [190, 195], "026": 190, "117": [190, 195], "141": [190, 196], "742": [190, 196], "278": [190, 196], "714": [190, 192], "079": [190, 195, 196], "617": [190, 196], "190": 190, "678": [190, 195, 196], "432": [190, 194], "285": [190, 194], "228": [190, 196], "result_irb_2q": [190, 194], "481": 190, "813": 190, "971": 190, "050": [190, 195, 196, 197], "130": 190, "209": [190, 196], "510": [190, 196], "629": 190, "685": [190, 194, 196], "764": [190, 194, 196], "907": [190, 196], "987": [190, 192, 196], "067": [190, 191, 194], "353": [190, 196], "512": [190, 192, 195], "591": [190, 196], "686": [190, 196], "797": 190, "162": [190, 196], "289": [190, 194, 196], "606": [190, 195], "928": [190, 196], "176": [190, 191, 195, 196], "333": [190, 194, 196], "492": [190, 192, 194], "example_irb_iswap": [190, 194], "iswapg": [190, 194, 195, 201], "benchmark_irb_iswap": [190, 194], "run_irb_iswap": [190, 194], "166": [190, 194, 196], "156": [190, 196], "077": 190, "539": [190, 196], "820": [190, 194, 196], "751": [190, 194, 196], "735": 190, "068": 190, "918": 190, "325": [190, 196], "234": [190, 196], "531": 190, "688": [190, 194, 197], "811": 190, "163": [190, 194], "226": [190, 196], "322": 190, "074": [190, 191, 194, 196], "263": 190, "641": 190, "673": 190, "833": [190, 196], "002": [190, 193, 194, 196], "327": [190, 196], "577": [190, 194], "015": 190, "099": 190, "965": 190, "029": 190, "045": 190, "827": [190, 196], "296": [190, 195, 196], "911": 190, "313": 190, "664": [190, 194], "113": 190, "532": 190, "451": 190, "262": 190, "982": [190, 194, 195], "595": [190, 194, 196], "336": [190, 196], "result_irb_iswap": [190, 194], "953": [190, 196], "191": 190, "223": [190, 194, 196], "355": [190, 194, 196], "462": [190, 193, 196], "516": [190, 192, 196], "621": 190, "667": [190, 196], "701": 190, "747": [190, 192], "795": 190, "843": 190, "041": [190, 196], "mirror_rb": [190, 195, 201], "example_mrb": [190, 195, 201], "benchmark_mrb": [190, 195], "run_mrb": [190, 195], "367": [190, 196], "10x5": [190, 195], "64": [190, 192, 193, 195], "128": [190, 195, 196], "622": [190, 196], "865": [190, 191, 196], "671": [190, 194], "055": 190, "485": [190, 194], "692": [190, 194], "391": [190, 193, 196], "584": [190, 192], "230": 190, "449": [190, 195, 196], "242": 190, "472": [190, 196], "509": [190, 192, 194], "022": [190, 194], "436": [190, 194, 196], "628": 190, "980": [190, 196], "418": 190, "603": [190, 196], "808": [190, 196], "051": 190, "293": [190, 196], "769": [190, 191, 196], "917": [190, 196], "157": [190, 194], "268": 190, "858": [190, 196], "527": [190, 192, 196], "785": [190, 194], "252": [190, 197], "486": 190, "898": [190, 196], "107": [190, 194], "540": [190, 196], "244": [190, 195], "661": 190, "885": [190, 194, 196], "765": [190, 194, 196], "193": [190, 196], "465": 190, "672": 190, "910": [190, 196], "246": 190, "643": [190, 196], "104": [190, 192, 196], "438": [190, 191, 196], "613": 190, "470": 190, "581": 190, "693": [190, 196], "266": 190, "488": 190, "662": 190, "870": 190, "506": [190, 196], "207": [190, 194], "638": [190, 196], "245": 190, "872": 190, "046": 190, "963": [190, 196], "224": 190, "426": [190, 196], "308": 190, "975": 190, "878": 190, "275": [190, 196], "251": [190, 196], "440": [190, 194], "964": [190, 192, 194], "922": [190, 196], "309": 190, "981": [190, 194], "583": [190, 194], "998": [190, 193], "906": [190, 194, 196], "173": [190, 194], "444": 190, "891": 190, "217": [190, 197], "457": 190, "311": 190, "446": [190, 196], "695": 190, "812": 190, "816": [190, 192], "625": [190, 192, 196, 197], "727": [190, 196], "184": [190, 195], "012": [190, 192], "090": [190, 194, 196], "372": 190, "642": [190, 191], "202": [190, 192], "489": 190, "696": [190, 196], "949": [190, 196], "523": [190, 195], "914": [190, 196], "238": 190, "839": 190, "596": [190, 194, 195, 196], "684": [190, 196], "753": [190, 192], "535": [190, 196], "415": 190, "354": 190, "345": 190, "604": 190, "968": [190, 191, 194], "502": [190, 196], "768": [190, 196], "380": [190, 194], "220": 190, "632": [190, 196], "031": 190, "283": [190, 197], "773": [190, 194], "142": [190, 196], "867": [190, 195, 196], "123": 190, "381": [190, 194], "767": [190, 195], "072": [190, 191, 196], "551": [190, 196], "893": 190, "741": 190, "526": 190, "958": 190, "845": [190, 192, 194], "222": 190, "239": 190, "065": [190, 194], "903": [190, 196], "869": [190, 196], "552": 190, "757": [190, 197], "832": 190, "280": 190, "915": [190, 194], "043": 190, "125": [190, 192, 195, 196], "984": [190, 196], "618": 190, "344": 190, "663": 190, "216": [190, 194], "717": [190, 194, 196], "258": [190, 196], "421": [190, 196], "647": 190, "420": [190, 196], "410": [190, 196], "390": 190, "566": [190, 192, 194], "718": 190, "645": [190, 196], "587": [190, 192], "204": [190, 194, 197], "281": [190, 196], "397": [190, 191, 196], "017": [190, 192, 196], "592": [190, 192, 196], "122": 190, "362": 190, "862": [190, 196], "082": [190, 197], "784": [190, 194, 196], "483": 190, "350": [190, 192, 196], "339": [190, 194], "257": [190, 192], "383": [190, 194], "619": 190, "822": 190, "886": 190, "063": [190, 196], "404": [190, 196], "836": [190, 194, 196], "111": [190, 196, 197], "573": [190, 196], "424": [190, 192, 196], "855": 190, "085": 190, "298": 190, "644": [190, 193], "902": [190, 196], "461": [190, 192], "563": [190, 196], "522": [190, 194, 195], "723": [190, 196], "957": [190, 196], "908": 190, "195": [190, 192], "505": [190, 192, 196], "294": [190, 194], "458": 190, "317": [190, 196], "802": [190, 196], "089": 190, "360": [190, 196], "745": [190, 194], "559": [190, 191, 192, 196], "399": [190, 196], "159": [190, 192, 196], "103": [190, 194, 196], "119": [190, 195], "994": [190, 193, 196], "496": [190, 192, 194], "057": [190, 196], "001": [190, 193, 196], "848": 190, "435": 190, "101": 190, "725": [190, 196], "094": [190, 194, 196], "197": [190, 192, 194], "023": 190, "818": [190, 194], "151": [190, 192, 196], "014": 190, "473": [190, 192, 196], "854": 190, "680": [190, 196], "442": [190, 194], "841": 190, "724": 190, "374": [190, 196], "533": 190, "605": [190, 195], "086": [190, 196], "211": 190, "828": [190, 194], "792": [190, 196], "712": [190, 196], "302": [190, 196], "921": 190, "719": [190, 192], "548": 190, "895": 190, "997": 190, "534": [190, 196], "916": [190, 191, 194], "375": [190, 195, 196], "_depth_2": [190, 195], "_depth_4": [190, 195], "763": 190, "_depth_8": [190, 195], "_depth_16": [190, 195], "_depth_32": [190, 195], "_depth_64": [190, 195], "_depth_128": [190, 195], "_depth_256": [190, 195], "_depth_512": [190, 195], "681": [190, 194], "295": [190, 196], "674": [190, 196], "result_mrb": [190, 195], "061": [190, 196], "597": [190, 195, 196], "145": 190, "1600x1200": 190, "ax": 190, "all_qubit_layout": [190, 195], "key_mrb_plot": [190, 195], "example_qv": [190, 197, 201], "run0_qv": [190, 197], "637": 190, "264": [190, 195, 196], "387": [190, 194, 195], "result0_qv": [190, 197], "722": 190, "run1_qv": [190, 197], "result1_qv": [190, 197], "241": [190, 196], "466": 190, "422": [190, 195, 196], "636": [190, 194, 196], "948": [190, 195], "733": [190, 196], "798": [190, 192, 196], "493": [190, 196], "There": 190, "6353": 190, "19060": 190, "minimal_ghz": [190, 191], "237": 190, "183": [190, 191, 196], "example_qscor": [190, 196], "880": [190, 196], "4721": 190, "1866": 190, "301": [190, 195, 196], "5760": 190, "3202": 190, "5666": 190, "6277": 190, "5362": 190, "1528": 190, "4720649335834727": 190, "264883828589849": 190, "is_succes": [190, 196, 197], "qscore_result": [190, 196], "5759620786516855": 190, "13942395641806907": 190, "5666397249858852": 190, "09938021346738757": 190, "536231071484655": 190, "13823427614487907": 190, "multipartit": 191, "One": [191, 197], "larger": [191, 193], "leibfri": 191, "et": 191, "al": 191, "six": 191, "atom": 191, "schr\u00f6dinger": 191, "cat": 191, "natur": 191, "2005": 191, "offer": [191, 200], "verif": [191, 199, 201], "superconduct": 191, "phy": [191, 201], "commun": [191, 200], "095004": 191, "elben": 191, "statist": 191, "toolbox": 191, "probe": 191, "bodi": 191, "rev": [191, 201], "99": 191, "052323": 191, "ciruit": 191, "hadamrd": 191, "addit": [191, 193, 200, 201], "log_depth": 191, "cruz": 191, "yield": 191, "lower": [191, 193], "hous": 191, "reli": 191, "dai": 191, "thu": 191, "comparison": 191, "gme": 191, "prefer": [191, 200], "whenev": 191, "mitgat": 191, "arang": 191, "think": 191, "help": 191, "your_token": [191, 201], "mark": [191, 200], "w_": 191, "ij": [191, 193], "mathcal": 191, "grid": 191, "until": 191, "nice": 191, "utils_plot": 191, "plot_layout_fidelity_graph": 191, "464": [191, 196], "646": [191, 195], "962": 191, "212": 191, "fidelitii": 191, "filter": 191, "descript": [191, 200], "l0": 191, "l1": 191, "xxxxxxxxxxxxxxxx": 192, "get_iqm_backend": 192, "rcparam": 192, "dpi": 192, "300": [192, 193, 196], "graph_stat": 192, "40_000": 192, "benchmark_graphst": 192, "run_graphst": 192, "748": 192, "749": 192, "396": [192, 194, 196], "402": [192, 196], "332": [192, 196], "020": 192, "155": [192, 196], "705": 192, "711": [192, 196], "result_graphst": 192, "042": 192, "fetch": 192, "ok": 192, "font_manag": 192, "findfont": 192, "famili": 192, "stixgener": 192, "fall": 192, "back": 192, "dejavu": 192, "san": 192, "stixnonunicod": 192, "494": [192, 196], "stixsizeonesym": 192, "stixsizetwosym": 192, "stixsizethreesym": 192, "stixsizefoursym": 192, "stixsizefivesym": 192, "cmsy10": 192, "cmr10": 192, "cmtt10": 192, "518": 192, "cmmi10": 192, "521": 192, "cmb10": 192, "524": 192, "cmss10": 192, "cmex10": 192, "537": 192, "mono": 192, "351": 192, "percentag": 192, "idx": 192, "2f": 192, "max_neg": 192, "95": 192, "70": 192, "84": 192, "77": 192, "60": 192, "87": 192, "81": 192, "74": 192, "79": 192, "73": 192, "66": 192, "65": 192, "71": 192, "61": [192, 193], "75": [192, 197], "83": 192, "69": 192, "94": 192, "76": 192, "68": 192, "80": 192, "91": 192, "dict_kei": [192, 193], "max_negativities_iqm_backend_20250325": 192, "160833": 192, "max_negativities_graph_20250325": 192, "lowest": 192, "highest": 192, "resconstruct": 192, "observation_dict": 192, "ob": 192, "argsort": 192, "lowest_negativity_pair": 192, "highest_negativity_pair": 192, "all_projected_qubit": 192, "all_pair_group": 192, "all_neighbor_group": 192, "all_tomography_st": 192, "all_neg": 192, "bootstrapped_averag": 192, "2e": 192, "adjust": 192, "06e": 192, "3206842864916416": 192, "31010765308352356": 192, "93e": 192, "3542183495445777": 192, "3539253716950112": 192, "53e": 192, "3888948376922817": 192, "38736774049571426": 192, "40e": 192, "43361445043616353": 192, "4196633945881397": 192, "41e": 192, "43662497937638245": 192, "42249850678510703": 192, "90e": 192, "37169789059353975": 192, "36979367489991855": 192, "54e": 192, "38686144121566973": 192, "379324805728086": 192, "79e": 192, "39594160382229693": 192, "3931510385413373": 192, "97e": 192, "4092514317610637": 192, "4086540198375821": 192, "50e": 192, "36885658775672914": 192, "35382192582939426": 192, "08e": 192, "33451241682265326": 192, "32543228989306544": 192, "36671508133810615": 192, "36709383454659233": 192, "77e": 192, "32608570801001885": 192, "3213134253456277": 192, "29e": 192, "3566393931240753": 192, "3543493221398908": 192, "81e": 192, "3767486702923495": 192, "35860149933340935": 192, "3341624640356816": 192, "33262962066733953": 192, "00e": 192, "3486521211655147": 192, "3186675847362068": 192, "71e": 192, "39469814069723197": 192, "39099102345993036": 192, "13e": 192, "32804598413012276": 192, "3219124989220279": 192, "24e": 192, "3668085274286376": 192, "36257096650435117": 192, "62e": 192, "3732632016003694": 192, "35702785889177086": 192, "91e": 192, "3465755742920084": 192, "3416698385772142": 192, "17e": 192, "32654059296341725": 192, "30487999669484334": 192, "35e": 192, "39553971118808906": 192, "38203311102738585": 192, "3803202427020316": 192, "37715389665511634": 192, "76e": 192, "37343498488547655": 192, "35586222167388737": 192, "60e": 192, "41534546787652044": 192, "3993565114966017": 192, "45e": 192, "4134082416427767": 192, "398899780892523": 192, "55e": 192, "3810499300589416": 192, "3755024431288029": 192, "34e": 192, "37452627891460544": 192, "3671820250131137": 192, "q_0": 192, "\u03c0": [192, 193], "q_1": 192, "q_2": 192, "q_3": 192, "q_4": 192, "q_5": 192, "q_6": 192, "q_7": 192, "q_8": 192, "q_9": 192, "q_10": 192, "q_11": 192, "q_12": 192, "q_13": 192, "q_14": 192, "q_15": 192, "q_16": 192, "q_17": 192, "q_18": 192, "q_19": 192, "tomo_qubit": 192, "introduct": 193, "what": [193, 194], "background": 193, "journal": 193, "prxquantum": 193, "1103": 193, "010325": [193, 201], "compressive_gst": 193, "iqmfakeadoni": 193, "iqmfakeapollo": 193, "k_i": 193, "trigger": 193, "benefit": 193, "less": [193, 195], "captur": 193, "domin": 193, "trustworthi": 193, "veri": 193, "consum": 193, "minimal_1q_gst": 193, "minimal_2q_gst": 193, "Be": 193, "extra": 193, "434": [193, 196], "20it": 193, "criterion": 193, "56e": 193, "deepcopi": 193, "benchmark_rk1": 193, "result_rk1": 193, "83it": 193, "99e": 193, "uncertaintit": 193, "restult": 193, "idl": 193, "qb1": 193, "99693": 193, "nan": 193, "00703": 193, "unitar": 193, "98781": 193, "rx": 193, "99918": 193, "0013": 193, "99674": 193, "ry": 193, "99509": 193, "01332": 193, "98074": 193, "tvd": 193, "00698": 193, "03296": 193, "dist": 193, "00601": 193, "04366": 193, "results_layout_": 193, "raw_kraus_oper": 193, "raw_gat": 193, "raw_povm": 193, "raw_stat": 193, "gauge_opt_g": 193, "gauge_opt_gates_pauli_basi": 193, "gauge_opt_povm": 193, "gauge_opt_st": 193, "main_mgst_tim": 193, "gauge_optimization_tim": 193, "choi_ev": 193, "full_metr": 193, "raw": 193, "raw_result": 193, "array_str": 193, "precis": 193, "suppress_smal": 193, "002j": 193, "005": [193, 194, 196], "003j": 193, "004j": 193, "These": 193, "diplai": 193, "disc": 193, "represent": 193, "sinlg": 193, "g_": 193, "p_i": 193, "p_j": 193, "layout_": 193, "_gate_metr": 193, "_choi_eigenvalu": 193, "_other_metr": 193, "_process_matrix_0": 193, "_process_matrix_1": 193, "_process_matrix_2": 193, "_spam_matrices_r": 193, "_spam_matrices_imag": 193, "_hamiltonian_paramet": 193, "altern": 193, "ourselv": 193, "xyi": 193, "instruct": 193, "gate_list": 193, "indentif": 193, "custom_1q_gst": 193, "verbos": 193, "806": [193, 197], "408": [193, 196], "42e": 193, "008j": 193, "001j": 193, "064": 194, "121": [194, 196], "146": 194, "954": [194, 196], "376": [194, 196], "9975073376613797": 194, "9957157328789242": 194, "9976959612386156": 194, "9957310522299055": 194, "752861001879659e": 194, "028839025109517e": 194, "64196778583225e": 194, "243656712565855e": 194, "know": 194, "640": [194, 196], "842": [194, 195], "740": 194, "950": 194, "9798030906041997": 194, "9431232937255942": 194, "9840858225184934": 194, "945382422883015": 194, "174": 194, "038": 194, "215": [194, 195], "706": 194, "441": 194, "546": [194, 195], "9344679810705316": 194, "9463377694591251": 194, "9267928870925659": 194, "943379008472002": 194, "947": 195, "365": [195, 196], "428": [195, 196], "940": 195, "944": [195, 196], "331": [195, 196], "889": 195, "651": [195, 196], "343": 195, "214": 195, "attr_kei": [195, 197], "depth_2": 195, "14302134513855": 195, "007565975189208984": 195, "06883907318115234": 195, "f8d9d789": 195, "0e9a": 195, "4086": 195, "ab36": 195, "685064a7b66": 195, "depth_4": 195, "0004930496215820312": 195, "0007040500640869141": 195, "87e367b7": 195, "c3ae": 195, "4457": 195, "8a2d": 195, "7b169c528033": 195, "depth_8": 195, "0004889965057373047": 195, "0005979537963867188": 195, "d84330c9": 195, "101f": 195, "40ff": 195, "bea8": 195, "f5e4c0b41527": 195, "depth_16": 195, "0004627704620361328": 195, "0006148815155029297": 195, "1f58b4a0": 195, "fb16": 195, "4d12": 195, "a9e8": 195, "c9263da52418": 195, "depth_32": 195, "00047278404235839844": 195, "0005419254302978516": 195, "4e43834b": 195, "5694": 195, "4c6d": 195, "8a83": 195, "796913d67e40": 195, "depth_64": 195, "000469207763671875": 195, "0005609989166259766": 195, "036e1dd": 195, "ca95": 195, "42a1": 195, "ab68": 195, "30a243f6b4ba": 195, "depth_128": 195, "0004668235778808594": 195, "0005328655242919922": 195, "13a59ca8": 195, "2ab0": 195, "4de8": 195, "a643": 195, "5b3f318f03d4": 195, "depth_256": 195, "0004749298095703125": 195, "e673defd": 195, "039c": 195, "4c37": 195, "9ef3": 195, "d4734436f39a": 195, "depth_512": 195, "0005099773406982422": 195, "0005548000335693359": 195, "d83ac439": 195, "2929": 195, "4d78": 195, "b52b": 195, "f297873c3e44": 195, "9710221314803044": 195, "001462493086363885": 195, "9473471466489307": 195, "00285118172031131": 195, "xxxxxxxxxxxxxx": 196, "put": 196, "run0_qscor": 196, "801": 196, "433": 196, "027": 196, "194": 196, "167": 196, "851": 196, "929": 196, "978": 196, "115": 196, "463": 196, "495": 196, "715": 196, "378": 196, "056": 196, "135": 196, "511": 196, "586": 196, "274": 196, "716": 196, "467": 196, "847": 196, "474": 196, "105": 196, "503": 196, "634": 196, "406": 196, "934": 196, "699": 196, "087": 196, "556": 196, "030": 196, "092": 196, "124": 196, "601": 196, "956": 196, "361": 196, "result0_qscor": 196, "4370": 196, "4700": 196, "6695": 196, "3692": 196, "5902": 196, "3404": 196, "5068": 196, "5085": 196, "4374": 196, "8942": 196, "43697610073325965": 196, "09963324394097106": 196, "6694825328517715": 196, "07553199096996285": 196, "5901951757699432": 196, "04806723107119834": 196, "5067731707198324": 196, "03884606517763287": 196, "4373922810576933": 196, "034249084355823": 196, "rem_quasidistribut": 197, "time_batch": 197, "cumulative_average_heavy_output_prob": 197, "cumulative_stddev_heavy_output_prob": 197, "rem_cumulative_average_heavy_output_prob": 197, "rem_cumulative_stddev_heavy_output_prob": 197, "rem_heavy_output_prob": 197, "60546875": 197, "71875": 197, "578125": 197, "74609375": 197, "6328125": 197, "546875": 197, "56640625": 197, "76953125": 197, "75390625": 197, "67578125": 197, "6171875": 197, "55078125": 197, "64453125": 197, "6875": 197, "7109375": 197, "82421875": 197, "76171875": 197, "6484375": 197, "6015625": 197, "73828125": 197, "63671875": 197, "69140625": 197, "61328125": 197, "734375": 197, "57421875": 197, "6953125": 197, "55859375": 197, "69921875": 197, "609375": 197, "671875": 197, "77734375": 197, "6796875": 197, "62890625": 197, "6640625": 197, "66796875": 197, "62109375": 197, "703125": 197, "68359375": 197, "58984375": 197, "71484375": 197, "59375": 197, "79296875": 197, "66015625": 197, "65234375": 197, "59765625": 197, "65625": 197, "84765625": 197, "5859375": 197, "5625": 197, "72265625": 197, "640625": 197, "58203125": 197, "54296875": 197, "8203125": 197, "78515625": 197, "7265625": 197, "53515625": 197, "5703125": 197, "5546875": 197, "5390625": 197, "828125": 197, "80859375": 197, "765625": 197, "81640625": 197, "5234375": 197, "73046875": 197, "87890625": 197, "7890625": 197, "7734375": 197, "7421875": 197, "70703125": 197, "50390625": 197, "7578125": 197, "52734375": 197, "78125": 197, "8125": 197, "average_heavy_output_prob": 197, "649203125": 197, "021341903733745705": 197, "672703125": 197, "020984452845629994": 197, "rem_average_heavy_output_prob": 197, "67954478782619": 197, "020869291754367154": 197, "rem_is_succes": 197, "rem_qv_result": 197, "710149650958595": 197, "020289757228807877": 197, "vanilla_4_qubits_": 197, "vanilla_rem_4_qubits_": 197, "Or": 197, "onc": [197, 201], "collect": 198, "demonstr": 198, "rest": 198, "summari": [198, 199], "releas": 199, "date": [199, 200], "finland": 199, "tool": [199, 201], "changelog": 199, "search": 199, "januari": 200, "2004": 200, "AND": 200, "FOR": 200, "reproduct": 200, "shall": 200, "licensor": 200, "owner": 200, "entiti": 200, "author": 200, "grant": 200, "legal": 200, "power": 200, "direct": 200, "indirect": 200, "caus": 200, "contract": 200, "ownership": 200, "fifti": 200, "percent": 200, "outstand": 200, "iii": 200, "benefici": 200, "exercis": 200, "mechan": 200, "transform": 200, "translat": 200, "media": 200, "authorship": 200, "attach": 200, "appendix": 200, "editori": 200, "revis": 200, "elabor": 200, "whole": 200, "remain": 200, "link": 200, "bind": 200, "interfac": 200, "thereof": 200, "contribut": 200, "intention": 200, "inclus": 200, "behalf": 200, "electron": 200, "verbal": 200, "mail": 200, "track": 200, "discuss": 200, "exclud": 200, "conspicu": 200, "Not": 200, "contributor": 200, "whom": 200, "been": 200, "incorpor": 200, "subject": 200, "herebi": 200, "perpetu": 200, "worldwid": 200, "charg": 200, "royalti": 200, "irrevoc": 200, "reproduc": 200, "publicli": 200, "sublicens": 200, "patent": 200, "sell": 200, "transfer": 200, "claim": 200, "necessarili": 200, "infring": 200, "alon": 200, "institut": 200, "litig": 200, "counterclaim": 200, "lawsuit": 200, "alleg": 200, "contributori": 200, "redistribut": 200, "medium": 200, "meet": 200, "recipi": 200, "carri": 200, "promin": 200, "retain": 200, "trademark": 200, "pertain": 200, "readabl": 200, "wherev": 200, "third": 200, "parti": 200, "appear": 200, "content": 200, "alongsid": 200, "addendum": 200, "constru": 200, "compli": 200, "explicitli": 200, "notwithstand": 200, "noth": 200, "herein": 200, "supersed": 200, "agreement": 200, "regard": 200, "trade": 200, "servic": [200, 201], "reason": 200, "customari": 200, "disclaim": 200, "merchant": 200, "particular": 200, "respons": 200, "appropri": 200, "risk": 200, "liabil": 200, "event": 200, "tort": 200, "neglig": 200, "deliber": [200, 201], "grossli": 200, "liabl": 200, "damag": 200, "special": 200, "incident": 200, "consequenti": 200, "aris": 200, "inabl": 200, "loss": 200, "goodwil": 200, "stoppag": 200, "failur": 200, "malfunct": 200, "commerci": 200, "even": 200, "advis": 200, "fee": 200, "indemn": 200, "oblig": 200, "indemnifi": 200, "defend": 200, "hold": 200, "harmless": 200, "incur": 200, "assert": 200, "boilerpl": 200, "enclos": 200, "bracket": 200, "comment": 200, "syntax": 200, "easier": 200, "archiv": 200, "repositori": [200, 201], "licenc": 200, "src": 200, "raphael": 200, "brieger": 200, "ingo": 200, "roth": 200, "martin": 200, "kliesch": 200, "comprehens": 201, "modular": 201, "easi": 201, "042311": 201, "lett": 201, "080505": 201, "prx": 201, "2023": 201, "150502": 201, "2022": 201, "holist": 201, "032328": 201, "0712": 201, "0921": 201, "2007": 201, "adv": 201, "technol": 201, "2100061": 201, "ieee": 201, "tran": 201, "eng": 201, "legaci": 201, "wrap": 201, "benchmarkexperi": 201, "uv": 201, "highli": 201, "With": 201, "machin": 201, "venv": 201, "read": 201, "prompt": 201, "suppli": 201, "txt": 201, "lock": 201, "directli": 201, "repo": 201, "pypi": 201, "lint": 201, "cicd": 201, "clone": 201, "directori": 201, "edit": 201, "docbuild": 201, "pyproject": 201, "toml": 201, "commit": 201, "upgrad": 201, "transit": 201, "cloud": 201, "prem": 201, "platform": 201, "authent": 201, "example_irb": 201, "example_experi": 201, "setup": 201, "weekli": 201, "daili": 201, "gitlab": 201, "scheduled_experi": 201}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "compressive_gst"], [38, 0, 0, "-", "entanglement"], [66, 0, 0, "-", "logging_config"], [67, 0, 0, "-", "optimization"], [80, 0, 0, "-", "quantum_volume"], [99, 0, 0, "-", "randomized_benchmarking"], [143, 0, 0, "-", "readout_mitigation"], [147, 0, 0, "-", "utils"], [172, 0, 0, "-", "utils_plots"], [176, 0, 0, "-", "utils_shadows"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_circuits_per_batch"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"], [4, 3, 1, "", "use_dd"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[20, 0, 0, "-", "compressive_gst"], [26, 0, 0, "-", "gst_analysis"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[21, 1, 1, "", "CompressiveGST"], [22, 1, 1, "", "GSTConfiguration"], [23, 5, 1, "", "create_predefined_gate_set"], [24, 5, 1, "", "parse_gate_set"], [25, 5, 1, "", "parse_layouts"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_meas_circuits"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, 3, 1, "", "batch_size"], [22, 3, 1, "", "benchmark"], [22, 3, 1, "", "bootstrap_samples"], [22, 3, 1, "", "convergence_criteria"], [22, 3, 1, "", "from_init"], [22, 3, 1, "", "gate_labels"], [22, 3, 1, "", "gate_set"], [22, 3, 1, "", "max_inits"], [22, 3, 1, "", "max_iterations"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_circuits"], [22, 3, 1, "", "opt_method"], [22, 3, 1, "", "parallel_execution"], [22, 3, 1, "", "qubit_layouts"], [22, 3, 1, "", "rank"], [22, 3, 1, "", "seq_len_list"], [22, 3, 1, "", "shots"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[27, 5, 1, "", "bootstrap_errors"], [28, 5, 1, "", "dataframe_to_figure"], [29, 5, 1, "", "dataset_counts_to_mgst_format"], [30, 5, 1, "", "generate_basis_labels"], [31, 5, 1, "", "generate_gate_results"], [32, 5, 1, "", "generate_non_gate_results"], [33, 5, 1, "", "generate_unit_rank_gate_results"], [34, 5, 1, "", "mgst_analysis"], [35, 5, 1, "", "pandas_results_to_observations"], [36, 5, 1, "", "result_str_to_floats"], [37, 5, 1, "", "run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[39, 0, 0, "-", "ghz"], [53, 0, 0, "-", "graph_states"]], "iqm.benchmarks.entanglement.ghz": [[40, 1, 1, "", "GHZBenchmark"], [41, 1, 1, "", "GHZConfiguration"], [42, 5, 1, "", "fidelity_analysis"], [43, 5, 1, "", "fidelity_ghz_coherences"], [44, 5, 1, "", "fidelity_ghz_randomized_measurements"], [45, 5, 1, "", "generate_ghz_linear"], [46, 5, 1, "", "generate_ghz_log_cruz"], [47, 5, 1, "", "generate_ghz_log_mooney"], [48, 5, 1, "", "generate_ghz_spanning_tree"], [49, 5, 1, "", "generate_ghz_star"], [50, 5, 1, "", "get_cx_map"], [51, 5, 1, "", "get_edges"], [52, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, 2, 1, "", "add_configuration_to_dataset"], [40, 2, 1, "", "analysis_function"], [40, 2, 1, "", "append_rms"], [40, 2, 1, "", "execute"], [40, 2, 1, "", "generate_coherence_meas_circuits"], [40, 2, 1, "", "generate_native_ghz"], [40, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, 3, 1, "", "benchmark"], [41, 3, 1, "", "cal_url"], [41, 3, 1, "", "custom_qubits_array"], [41, 3, 1, "", "fidelity_routine"], [41, 3, 1, "", "mit_shots"], [41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "num_RMs"], [41, 3, 1, "", "optimize_sqg"], [41, 3, 1, "", "qiskit_optim_level"], [41, 3, 1, "", "qubit_counts"], [41, 3, 1, "", "rem"], [41, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[41, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.entanglement.graph_states": [[54, 1, 1, "", "GraphStateBenchmark"], [55, 1, 1, "", "GraphStateConfiguration"], [56, 5, 1, "", "find_edges_with_disjoint_neighbors"], [57, 5, 1, "", "generate_graph_state"], [58, 5, 1, "", "generate_minimal_edge_layers"], [59, 5, 1, "", "negativity_analysis"], [60, 5, 1, "", "plot_density_matrix"], [61, 5, 1, "", "plot_max_negativities"], [62, 5, 1, "", "plot_max_negativities_graph"], [63, 5, 1, "", "shadow_tomography_analysis"], [64, 5, 1, "", "state_tomography_analysis"], [65, 5, 1, "", "update_pauli_expectations"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[54, 2, 1, "", "add_all_circuits_to_dataset"], [54, 2, 1, "", "add_all_meta_to_dataset"], [54, 2, 1, "", "analysis_function"], [54, 2, 1, "", "execute"], [54, 2, 1, "", "generate_all_circuit_info_for_graph_state_benchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[55, 3, 1, "", "benchmark"], [55, 3, 1, "", "model_computed_fields"], [55, 3, 1, "", "model_config"], [55, 3, 1, "", "model_fields"], [55, 3, 1, "", "n_median_of_means"], [55, 3, 1, "", "n_random_unitaries"], [55, 3, 1, "", "num_bootstraps"], [55, 3, 1, "", "qubits"], [55, 3, 1, "", "tomography"]], "iqm.benchmarks.optimization": [[68, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[69, 1, 1, "", "QScoreBenchmark"], [70, 1, 1, "", "QScoreConfiguration"], [71, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [72, 5, 1, "", "compute_expectation_value"], [73, 5, 1, "", "create_objective_function"], [74, 5, 1, "", "cut_cost_function"], [75, 5, 1, "", "get_optimal_angles"], [76, 5, 1, "", "is_successful"], [77, 5, 1, "", "plot_approximation_ratios"], [78, 5, 1, "", "qscore_analysis"], [79, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[69, 2, 1, "", "add_all_meta_to_dataset"], [69, 2, 1, "", "analysis_function"], [69, 2, 1, "", "choose_qubits_custom"], [69, 2, 1, "", "choose_qubits_naive"], [69, 2, 1, "", "execute"], [69, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[70, 3, 1, "", "REM"], [70, 3, 1, "", "benchmark"], [70, 3, 1, "", "choose_qubits_routine"], [70, 3, 1, "", "custom_qubits_array"], [70, 3, 1, "", "max_num_nodes"], [70, 3, 1, "", "min_num_nodes"], [70, 3, 1, "", "min_num_qubits"], [70, 3, 1, "", "mit_shots"], [70, 3, 1, "", "model_computed_fields"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "model_fields"], [70, 3, 1, "", "num_instances"], [70, 3, 1, "", "num_qaoa_layers"], [70, 3, 1, "", "optimize_sqg"], [70, 3, 1, "", "qiskit_optim_level"], [70, 3, 1, "", "qpu_topology"], [70, 3, 1, "", "seed"], [70, 3, 1, "", "use_classically_optimized_angles"], [70, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[81, 0, 0, "-", "clops"], [87, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[82, 1, 1, "", "CLOPSBenchmark"], [83, 1, 1, "", "CLOPSConfiguration"], [84, 5, 1, "", "clops_analysis"], [85, 5, 1, "", "plot_times"], [86, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[82, 2, 1, "", "add_all_meta_to_dataset"], [82, 2, 1, "", "analysis_function"], [82, 2, 1, "", "append_parameterized_unitary"], [82, 2, 1, "", "assign_random_parameters_to_all"], [82, 2, 1, "", "clops_cycle"], [82, 2, 1, "", "execute"], [82, 2, 1, "", "generate_circuit_list"], [82, 2, 1, "", "generate_random_parameters"], [82, 2, 1, "", "generate_single_circuit"], [82, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[83, 3, 1, "", "benchmark"], [83, 3, 1, "", "clops_h_bool"], [83, 3, 1, "", "model_computed_fields"], [83, 3, 1, "", "model_config"], [83, 3, 1, "", "model_fields"], [83, 3, 1, "", "num_circuits"], [83, 3, 1, "", "num_shots"], [83, 3, 1, "", "num_updates"], [83, 3, 1, "", "optimize_sqg"], [83, 3, 1, "", "physical_layout"], [83, 3, 1, "", "qiskit_optim_level"], [83, 3, 1, "", "qubits"], [83, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[88, 1, 1, "", "QuantumVolumeBenchmark"], [89, 1, 1, "", "QuantumVolumeConfiguration"], [90, 5, 1, "", "compute_heavy_output_probabilities"], [91, 5, 1, "", "cumulative_hop"], [92, 5, 1, "", "cumulative_std"], [93, 5, 1, "", "get_ideal_heavy_outputs"], [94, 5, 1, "", "get_rem_hops"], [95, 5, 1, "", "heavy_projector"], [96, 5, 1, "", "is_successful"], [97, 5, 1, "", "plot_hop_threshold"], [98, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[88, 2, 1, "", "add_all_circuits_to_dataset"], [88, 2, 1, "", "add_all_meta_to_dataset"], [88, 2, 1, "", "analysis_function"], [88, 2, 1, "", "execute"], [88, 2, 1, "", "generate_circuit_list"], [88, 2, 1, "", "generate_single_circuit"], [88, 2, 1, "", "get_rem_quasidistro"], [88, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[89, 3, 1, "", "benchmark"], [89, 3, 1, "", "choose_qubits_routine"], [89, 3, 1, "", "custom_qubits_array"], [89, 3, 1, "", "mit_shots"], [89, 3, 1, "", "model_computed_fields"], [89, 3, 1, "", "model_config"], [89, 3, 1, "", "model_fields"], [89, 3, 1, "", "num_circuits"], [89, 3, 1, "", "num_sigmas"], [89, 3, 1, "", "optimize_sqg"], [89, 3, 1, "", "physical_layout"], [89, 3, 1, "", "qiskit_optim_level"], [89, 3, 1, "", "rem"], [89, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[100, 0, 0, "-", "clifford_rb"], [105, 0, 0, "-", "interleaved_rb"], [110, 0, 0, "-", "mirror_rb"], [120, 0, 0, "-", "multi_lmfit"], [125, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[101, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[102, 1, 1, "", "CliffordRBConfiguration"], [103, 1, 1, "", "CliffordRandomizedBenchmarking"], [104, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[102, 3, 1, "", "benchmark"], [102, 3, 1, "", "model_computed_fields"], [102, 3, 1, "", "model_config"], [102, 3, 1, "", "model_fields"], [102, 3, 1, "", "num_circuit_samples"], [102, 3, 1, "", "parallel_execution"], [102, 3, 1, "", "qubits_array"], [102, 3, 1, "", "sequence_lengths"], [102, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[103, 2, 1, "", "add_all_circuits_to_dataset"], [103, 2, 1, "", "add_all_metadata_to_dataset"], [103, 2, 1, "", "analysis_function"], [103, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[106, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[107, 1, 1, "", "InterleavedRBConfiguration"], [108, 1, 1, "", "InterleavedRandomizedBenchmarking"], [109, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[107, 3, 1, "", "interleaved_gate"], [107, 3, 1, "", "interleaved_gate_params"], [107, 3, 1, "", "model_computed_fields"], [107, 3, 1, "", "model_config"], [107, 3, 1, "", "model_fields"], [107, 3, 1, "", "num_circuit_samples"], [107, 3, 1, "", "parallel_execution"], [107, 3, 1, "", "qubits_array"], [107, 3, 1, "", "sequence_lengths"], [107, 3, 1, "", "shots"], [107, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[108, 2, 1, "", "add_all_circuits_to_dataset"], [108, 2, 1, "", "add_all_meta_to_dataset"], [108, 2, 1, "", "analysis_function"], [108, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[111, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[112, 1, 1, "", "MirrorRBConfiguration"], [113, 1, 1, "", "MirrorRandomizedBenchmarking"], [114, 5, 1, "", "compute_polarizations"], [115, 5, 1, "", "edge_grab"], [116, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [117, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [118, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [119, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[112, 3, 1, "", "benchmark"], [112, 3, 1, "", "density_2q_gates"], [112, 3, 1, "", "depths_array"], [112, 3, 1, "", "model_computed_fields"], [112, 3, 1, "", "model_config"], [112, 3, 1, "", "model_fields"], [112, 3, 1, "", "num_circuit_samples"], [112, 3, 1, "", "num_pauli_samples"], [112, 3, 1, "", "qiskit_optim_level"], [112, 3, 1, "", "qubits_array"], [112, 3, 1, "", "routing_method"], [112, 3, 1, "", "shots"], [112, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[113, 2, 1, "", "add_all_meta_to_dataset"], [113, 2, 1, "", "analysis_function"], [113, 2, 1, "", "execute"], [113, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[121, 5, 1, "", "create_multi_dataset_params"], [122, 5, 1, "", "eval_func_single_dataset"], [123, 5, 1, "", "get_param_names_from_func_signature"], [124, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[126, 5, 1, "", "compute_inverse_clifford"], [127, 5, 1, "", "estimate_survival_probabilities"], [128, 5, 1, "", "exponential_rb"], [129, 5, 1, "", "fit_decay_lmfit"], [130, 5, 1, "", "generate_all_rb_circuits"], [131, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [132, 5, 1, "", "generate_random_clifford_seq_circuits"], [133, 5, 1, "", "get_survival_probabilities"], [134, 5, 1, "", "import_native_gate_cliffords"], [135, 5, 1, "", "lmfit_minimizer"], [136, 5, 1, "", "plot_rb_decay"], [137, 5, 1, "", "relabel_qubits_array_from_zero"], [138, 5, 1, "", "submit_parallel_rb_job"], [139, 5, 1, "", "submit_sequential_rb_jobs"], [140, 5, 1, "", "survival_probabilities_parallel"], [141, 5, 1, "", "validate_irb_gate"], [142, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[144, 1, 1, "", "M3IQM"], [145, 5, 1, "", "apply_readout_error_mitigation"], [146, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[144, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[148, 5, 1, "", "bootstrap_counts"], [149, 5, 1, "", "count_2q_layers"], [150, 5, 1, "", "count_native_gates"], [151, 5, 1, "", "extract_fidelities"], [152, 5, 1, "", "generate_state_tomography_circuits"], [153, 5, 1, "", "get_Pauli_expectation"], [154, 5, 1, "", "get_active_qubits"], [155, 5, 1, "", "get_iqm_backend"], [156, 5, 1, "", "get_measurement_mapping"], [157, 5, 1, "", "get_neighbors_of_edges"], [158, 5, 1, "", "get_tomography_matrix"], [159, 5, 1, "", "marginal_distribution"], [160, 5, 1, "", "median_with_uncertainty"], [161, 5, 1, "", "perform_backend_transpilation"], [162, 5, 1, "", "reduce_to_active_qubits"], [163, 5, 1, "", "remove_directed_duplicates_to_list"], [164, 5, 1, "", "retrieve_all_counts"], [165, 5, 1, "", "retrieve_all_job_metadata"], [166, 5, 1, "", "set_coupling_map"], [167, 5, 1, "", "sort_batches_by_final_layout"], [168, 5, 1, "", "split_sequence_in_chunks"], [169, 5, 1, "", "submit_execute"], [170, 5, 1, "", "timeit"], [171, 5, 1, "", "xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[173, 1, 1, "", "GraphPositions"], [174, 5, 1, "", "plot_layout_fidelity_graph"], [175, 5, 1, "", "rx_to_nx_graph"]], "iqm.benchmarks.utils_plots.GraphPositions": [[173, 2, 1, "", "create_positions"], [173, 3, 1, "", "deneb_positions"], [173, 3, 1, "", "garnet_positions"], [173, 3, 1, "", "predefined_stations"]], "iqm.benchmarks.utils_shadows": [[177, 5, 1, "", "CUE"], [178, 5, 1, "", "get_local_shadow"], [179, 5, 1, "", "get_negativity"], [180, 5, 1, "", "local_shadow_tomography"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 195, 196, 197, 199, 201], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 199, 201], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 186, 187, 189], "compressive_gst": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "compressivegst": 21, "gstconfigur": 22, "create_predefined_gate_set": 23, "parse_gate_set": 24, "parse_layout": 25, "gst_analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "bootstrap_error": 27, "dataframe_to_figur": 28, "dataset_counts_to_mgst_format": 29, "generate_basis_label": 30, "generate_gate_result": 31, "generate_non_gate_result": 32, "generate_unit_rank_gate_result": 33, "mgst_analysi": 34, "pandas_results_to_observ": 35, "result_str_to_float": 36, "run_mgst_wrapp": 37, "entangl": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "ghz": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 186, 187, 190, 191], "ghzbenchmark": 40, "ghzconfigur": 41, "fidelity_analysi": 42, "fidelity_ghz_coher": 43, "fidelity_ghz_randomized_measur": 44, "generate_ghz_linear": 45, "generate_ghz_log_cruz": 46, "generate_ghz_log_moonei": 47, "generate_ghz_spanning_tre": 48, "generate_ghz_star": 49, "get_cx_map": 50, "get_edg": 51, "plot_fidel": 52, "graph_stat": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "graphstatebenchmark": 54, "graphstateconfigur": 55, "find_edges_with_disjoint_neighbor": 56, "generate_graph_st": 57, "generate_minimal_edge_lay": 58, "negativity_analysi": 59, "plot_density_matrix": 60, "plot_max_neg": 61, "plot_max_negativities_graph": 62, "shadow_tomography_analysi": 63, "state_tomography_analysi": 64, "update_pauli_expect": 65, "logging_config": 66, "optim": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "qscore": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 190, 196], "qscorebenchmark": 69, "qscoreconfigur": 70, "calculate_optimal_angles_for_qaoa_p1": 71, "compute_expectation_valu": 72, "create_objective_funct": 73, "cut_cost_funct": 74, "get_optimal_angl": 75, "is_success": [76, 96], "plot_approximation_ratio": 77, "qscore_analysi": 78, "run_qaoa": 79, "quantum_volum": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "clop": [81, 82, 83, 84, 85, 86, 186, 187, 189, 190], "clopsbenchmark": 82, "clopsconfigur": 83, "clops_analysi": 84, "plot_tim": 85, "retrieve_clops_elapsed_tim": 86, "quantumvolumebenchmark": 88, "quantumvolumeconfigur": 89, "compute_heavy_output_prob": 90, "cumulative_hop": 91, "cumulative_std": 92, "get_ideal_heavy_output": 93, "get_rem_hop": 94, "heavy_projector": 95, "plot_hop_threshold": 97, "qv_analysi": 98, "randomized_benchmark": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "clifford_rb": [100, 101, 102, 103, 104], "cliffordrbconfigur": 102, "cliffordrandomizedbenchmark": 103, "clifford_rb_analysi": 104, "interleaved_rb": [105, 106, 107, 108, 109], "interleavedrbconfigur": 107, "interleavedrandomizedbenchmark": 108, "interleaved_rb_analysi": 109, "mirror_rb": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "mirrorrbconfigur": 112, "mirrorrandomizedbenchmark": 113, "compute_polar": 114, "edge_grab": 115, "generate_fixed_depth_mrb_circuit": 116, "generate_pauli_dressed_mrb_circuit": 117, "list_to_numcircuit_times_numpauli_matrix": 118, "mrb_analysi": 119, "multi_lmfit": [120, 121, 122, 123, 124], "create_multi_dataset_param": 121, "eval_func_single_dataset": 122, "get_param_names_from_func_signatur": 123, "multi_dataset_residu": 124, "randomized_benchmarking_common": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "compute_inverse_clifford": 126, "estimate_survival_prob": 127, "exponential_rb": 128, "fit_decay_lmfit": 129, "generate_all_rb_circuit": 130, "generate_fixed_depth_parallel_rb_circuit": 131, "generate_random_clifford_seq_circuit": 132, "get_survival_prob": 133, "import_native_gate_clifford": 134, "lmfit_minim": 135, "plot_rb_decai": 136, "relabel_qubits_array_from_zero": 137, "submit_parallel_rb_job": 138, "submit_sequential_rb_job": 139, "survival_probabilities_parallel": 140, "validate_irb_g": 141, "validate_rb_qubit": 142, "readout_mitig": [143, 144, 145, 146], "m3iqm": 144, "apply_readout_error_mitig": 145, "readout_error_m3": 146, "util": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "bootstrap_count": 148, "count_2q_lay": 149, "count_native_g": 150, "extract_fidel": 151, "generate_state_tomography_circuit": 152, "get_pauli_expect": 153, "get_active_qubit": 154, "get_iqm_backend": 155, "get_measurement_map": 156, "get_neighbors_of_edg": 157, "get_tomography_matrix": 158, "marginal_distribut": 159, "median_with_uncertainti": 160, "perform_backend_transpil": 161, "reduce_to_active_qubit": 162, "remove_directed_duplicates_to_list": 163, "retrieve_all_count": 164, "retrieve_all_job_metadata": 165, "set_coupling_map": 166, "sort_batches_by_final_layout": 167, "split_sequence_in_chunk": 168, "submit_execut": 169, "timeit": 170, "xrvariable_to_count": 171, "utils_plot": [172, 173, 174, 175], "graphposit": 173, "plot_layout_fidelity_graph": 174, "rx_to_nx_graph": 175, "utils_shadow": [176, 177, 178, 179, 180], "cue": 177, "get_local_shadow": 178, "get_neg": 179, "local_shadow_tomographi": 180, "changelog": 181, "version": 181, "2": [181, 183], "32": 181, "31": 181, "30": 181, "29": 181, "28": 181, "27": 181, "26": 181, "25": 181, "24": 181, "23": 181, "22": 181, "21": 181, "20": 181, "19": 181, "18": 181, "17": 181, "16": 181, "15": 181, "14": 181, "13": 181, "12": 181, "11": 181, "10": 181, "9": 181, "8": 181, "7": 181, "6": 181, "5": 181, "4": 181, "3": 181, "1": 181, "0": 181, "develop": [182, 201], "qubit": [183, 192], "clifford": [183, 186, 188, 190], "group": 183, "decomposit": 183, "gener": [183, 189, 195, 197], "1q": [183, 194], "2q": [183, 194], "dump": 183, "pickl": 183, "file": 183, "load": 183, "count": 183, "element": 183, "A": 183, "wai": 183, "work": 183, "out": [183, 193], "invers": 183, "sequenc": 183, "design": 183, "condit": 183, "how": 184, "make": 184, "your": 184, "own": 184, "devic": 185, "spark": 186, "connect": [186, 187], "backend": [186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197], "state": [186, 187, 190, 191, 192], "fidel": [186, 187, 190, 191], "quantum": [186, 187, 190, 197], "volum": [186, 187, 190, 197], "layer": [186, 187, 189], "oper": [186, 187, 189], "per": [186, 187, 189], "second": [186, 187, 189], "random": [186, 188, 190, 194, 195], "interleav": [186, 190, 194], "irb": [186, 194], "q": [186, 187, 196], "score": [186, 187, 196], "summari": [186, 187, 190], "star": 187, "rb": [188, 195], "choos": [188, 189, 190, 192, 193, 194, 195, 196, 197], "defin": [188, 189, 190, 192, 193, 194, 195, 196, 197], "set": [188, 189, 190, 193, 195, 196, 197], "token": [188, 189, 190, 195, 196, 197], "us": [188, 189, 190, 192, 195, 196, 197, 201], "reson": [188, 189, 190, 195, 196, 197], "configur": [188, 189, 191, 192, 193, 194, 195, 196, 197], "run": [188, 189, 191, 192, 194, 195, 196, 197], "experi": [188, 189, 192, 193, 194, 195, 196, 197], "perform": [188, 189, 192, 196, 197], "analysi": [188, 189, 192, 196, 197], "list": [189, 195], "all": [189, 192, 193, 195], "kei": [189, 195], "attribut": [189, 192, 195], "dataset": [189, 192, 195], "The": [189, 195], "observ": [189, 193, 195], "object": [189, 195], "contain": [189, 195], "result": [189, 191, 193, 194, 195], "plot": [189, 192, 193, 195, 197], "notebook": [190, 201], "mirror": [190, 195], "greenberg": 191, "horn": 191, "zeiling": 191, "definit": 191, "access": [191, 193], "graph": 192, "exampl": [192, 198], "displai": 192, "maximum": 192, "neg": 192, "pair": 192, "inspect": 192, "avail": 192, "If": 192, "tomographi": [192, 193], "bootstrap": 192, "bia": 192, "differ": 192, "between": 192, "each": 192, "mean": 192, "measur": 192, "sampl": 192, "some": 192, "particular": 192, "pauli": 192, "compress": 193, "gate": [193, 194], "gst": 193, "minim": 193, "execut": 193, "": 193, "examin": 193, "high": 193, "level": 193, "store": 193, "final": 193, "estim": 193, "further": 193, "process": 193, "creat": 193, "custom": 193, "check": 193, "matrix": 193, "correspond": 193, "pi": 193, "rotat": 193, "around": 193, "y": 193, "axi": 193, "analyz": [194, 195], "non": 194, "nativ": 194, "mrb": 195, "qv": 197, "content": 199, "indic": 199, "tabl": 199, "licens": 200, "instal": 201, "latest": 201, "releas": 201, "option": 201, "depend": 201, "chang": 201, "character": 201, "physic": 201, "hardwar": 201, "jupyt": 201, "python": 201, "script": 201, "schedul": 201, "ci": 201, "cd": 201, "pipelin": 201}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, "iqm-benchmarks-compressive-gst-compressive-gst-compressivegst"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, "iqm-benchmarks-compressive-gst-compressive-gst-gstconfiguration"]], "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set": [[23, "iqm-benchmarks-compressive-gst-compressive-gst-create-predefined-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set": [[24, "iqm-benchmarks-compressive-gst-compressive-gst-parse-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts": [[25, "iqm-benchmarks-compressive-gst-compressive-gst-parse-layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors": [[27, "iqm-benchmarks-compressive-gst-gst-analysis-bootstrap-errors"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure": [[28, "iqm-benchmarks-compressive-gst-gst-analysis-dataframe-to-figure"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format": [[29, "iqm-benchmarks-compressive-gst-gst-analysis-dataset-counts-to-mgst-format"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels": [[30, "iqm-benchmarks-compressive-gst-gst-analysis-generate-basis-labels"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results": [[31, "iqm-benchmarks-compressive-gst-gst-analysis-generate-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results": [[32, "iqm-benchmarks-compressive-gst-gst-analysis-generate-non-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results": [[33, "iqm-benchmarks-compressive-gst-gst-analysis-generate-unit-rank-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis": [[34, "iqm-benchmarks-compressive-gst-gst-analysis-mgst-analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations": [[35, "iqm-benchmarks-compressive-gst-gst-analysis-pandas-results-to-observations"]], "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats": [[36, "iqm-benchmarks-compressive-gst-gst-analysis-result-str-to-floats"]], "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper": [[37, "iqm-benchmarks-compressive-gst-gst-analysis-run-mgst-wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[42, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[43, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[44, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[45, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[46, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[47, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[48, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[49, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[50, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[51, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[52, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[53, "module-iqm.benchmarks.entanglement.graph_states"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[54, "iqm-benchmarks-entanglement-graph-states-graphstatebenchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[55, "iqm-benchmarks-entanglement-graph-states-graphstateconfiguration"]], "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors": [[56, "iqm-benchmarks-entanglement-graph-states-find-edges-with-disjoint-neighbors"]], "iqm.benchmarks.entanglement.graph_states.generate_graph_state": [[57, "iqm-benchmarks-entanglement-graph-states-generate-graph-state"]], "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers": [[58, "iqm-benchmarks-entanglement-graph-states-generate-minimal-edge-layers"]], "iqm.benchmarks.entanglement.graph_states.negativity_analysis": [[59, "iqm-benchmarks-entanglement-graph-states-negativity-analysis"]], "iqm.benchmarks.entanglement.graph_states.plot_density_matrix": [[60, "iqm-benchmarks-entanglement-graph-states-plot-density-matrix"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities": [[61, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph": [[62, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities-graph"]], "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis": [[63, "iqm-benchmarks-entanglement-graph-states-shadow-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis": [[64, "iqm-benchmarks-entanglement-graph-states-state-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations": [[65, "iqm-benchmarks-entanglement-graph-states-update-pauli-expectations"]], "iqm.benchmarks.logging_config": [[66, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[67, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[68, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[69, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[70, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[71, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[72, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[73, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[74, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[75, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[76, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[77, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[78, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[79, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[80, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[81, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[82, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[83, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[84, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[85, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[86, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[87, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[88, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[89, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[90, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[91, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[92, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[93, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[94, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[95, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[96, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[97, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[98, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[99, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[100, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[101, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[102, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[103, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[104, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[105, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[106, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[107, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[108, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[109, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[110, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[111, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[112, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[113, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[114, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[115, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[116, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[117, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[118, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[119, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[120, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[121, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[122, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[123, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[124, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[125, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[126, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[127, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[128, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[129, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[130, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[131, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[132, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[133, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[134, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[135, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[136, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[137, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[138, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[139, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[140, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[141, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[142, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[143, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[144, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[145, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[146, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[147, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.bootstrap_counts": [[148, "iqm-benchmarks-utils-bootstrap-counts"]], "iqm.benchmarks.utils.count_2q_layers": [[149, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[150, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.extract_fidelities": [[151, "iqm-benchmarks-utils-extract-fidelities"]], "iqm.benchmarks.utils.generate_state_tomography_circuits": [[152, "iqm-benchmarks-utils-generate-state-tomography-circuits"]], "iqm.benchmarks.utils.get_Pauli_expectation": [[153, "iqm-benchmarks-utils-get-pauli-expectation"]], "iqm.benchmarks.utils.get_active_qubits": [[154, "iqm-benchmarks-utils-get-active-qubits"]], "iqm.benchmarks.utils.get_iqm_backend": [[155, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.get_measurement_mapping": [[156, "iqm-benchmarks-utils-get-measurement-mapping"]], "iqm.benchmarks.utils.get_neighbors_of_edges": [[157, "iqm-benchmarks-utils-get-neighbors-of-edges"]], "iqm.benchmarks.utils.get_tomography_matrix": [[158, "iqm-benchmarks-utils-get-tomography-matrix"]], "iqm.benchmarks.utils.marginal_distribution": [[159, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.median_with_uncertainty": [[160, "iqm-benchmarks-utils-median-with-uncertainty"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[161, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[162, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.remove_directed_duplicates_to_list": [[163, "iqm-benchmarks-utils-remove-directed-duplicates-to-list"]], "iqm.benchmarks.utils.retrieve_all_counts": [[164, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[165, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[166, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[167, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.split_sequence_in_chunks": [[168, "iqm-benchmarks-utils-split-sequence-in-chunks"]], "iqm.benchmarks.utils.submit_execute": [[169, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[170, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[171, "iqm-benchmarks-utils-xrvariable-to-counts"]], "iqm.benchmarks.utils_plots": [[172, "module-iqm.benchmarks.utils_plots"]], "iqm.benchmarks.utils_plots.GraphPositions": [[173, "iqm-benchmarks-utils-plots-graphpositions"]], "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph": [[174, "iqm-benchmarks-utils-plots-plot-layout-fidelity-graph"]], "iqm.benchmarks.utils_plots.rx_to_nx_graph": [[175, "iqm-benchmarks-utils-plots-rx-to-nx-graph"]], "iqm.benchmarks.utils_shadows": [[176, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.utils_shadows.CUE": [[177, "iqm-benchmarks-utils-shadows-cue"]], "iqm.benchmarks.utils_shadows.get_local_shadow": [[178, "iqm-benchmarks-utils-shadows-get-local-shadow"]], "iqm.benchmarks.utils_shadows.get_negativity": [[179, "iqm-benchmarks-utils-shadows-get-negativity"]], "iqm.benchmarks.utils_shadows.local_shadow_tomography": [[180, "iqm-benchmarks-utils-shadows-local-shadow-tomography"]], "Changelog": [[181, "changelog"]], "Version 2.32": [[181, "version-2-32"]], "Version 2.31": [[181, "version-2-31"]], "Version 2.30": [[181, "version-2-30"]], "Version 2.29": [[181, "version-2-29"]], "Version 2.28": [[181, "version-2-28"]], "Version 2.27": [[181, "version-2-27"]], "Version 2.26": [[181, "version-2-26"]], "Version 2.25": [[181, "version-2-25"]], "Version 2.24": [[181, "version-2-24"]], "Version 2.23": [[181, "version-2-23"]], "Version 2.22": [[181, "version-2-22"]], "Version 2.21": [[181, "version-2-21"]], "Version 2.20": [[181, "version-2-20"]], "Version 2.19": [[181, "version-2-19"]], "Version 2.18": [[181, "version-2-18"]], "Version 2.17": [[181, "version-2-17"]], "Version 2.16": [[181, "version-2-16"]], "Version 2.15": [[181, "version-2-15"]], "Version 2.14": [[181, "version-2-14"]], "Version 2.13": [[181, "version-2-13"]], "Version 2.12": [[181, "version-2-12"]], "Version 2.11": [[181, "version-2-11"]], "Version 2.10": [[181, "version-2-10"]], "Version 2.9": [[181, "version-2-9"]], "Version 2.8": [[181, "version-2-8"]], "Version 2.7": [[181, "version-2-7"]], "Version 2.6": [[181, "version-2-6"]], "Version 2.5": [[181, "version-2-5"]], "Version 2.4": [[181, "version-2-4"]], "Version 2.3": [[181, "version-2-3"]], "Version 2.2": [[181, "version-2-2"]], "Version 2.1": [[181, "version-2-1"]], "Version 2.0": [[181, "version-2-0"]], "Version 1.12": [[181, "version-1-12"]], "Version 1.11": [[181, "version-1-11"]], "Version 1.10": [[181, "version-1-10"]], "Version 1.9": [[181, "version-1-9"]], "Version 1.8": [[181, "version-1-8"]], "Version 1.7": [[181, "version-1-7"]], "Version 1.6": [[181, "version-1-6"]], "Version 1.5": [[181, "version-1-5"]], "Version 1.4": [[181, "version-1-4"]], "Version 1.3": [[181, "version-1-3"]], "Version 1.2": [[181, "version-1-2"]], "Version 1.1": [[181, "version-1-1"]], "Version 1.0": [[181, "version-1-0"]], "Development": [[182, "development"]], "2-Qubit Clifford Group Decomposition": [[183, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[183, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[183, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[183, "dump-on-a-pickle-file"]], "Load": [[183, "load"]], "Count elements": [[183, "count-elements"]], "2Q": [[183, "q"]], "1Q": [[183, "id1"]], "A way to work out the inverse of sequences": [[183, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[183, "design-condition"]], "How to make your own benchmark?": [[184, "how-to-make-your-own-benchmark"]], "Devices": [[185, "devices"]], "Benchmarking IQM Spark": [[186, "benchmarking-iqm-spark"]], "Connect to the backend": [[186, "connect-to-the-backend"], [187, "connect-to-the-backend"]], "GHZ state fidelity": [[186, "ghz-state-fidelity"], [187, "ghz-state-fidelity"], [190, "ghz-state-fidelity"]], "Quantum Volume": [[186, "quantum-volume"], [187, "quantum-volume"], [190, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[186, "circuit-layer-operations-per-second-clops"], [187, "circuit-layer-operations-per-second-clops"], [189, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[186, "clifford-randomized-benchmarking"], [190, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[186, "interleaved-randomized-benchmarking-irb"], [194, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[186, "q-score"], [187, "q-score"], [196, "q-score"]], "Summary": [[186, "summary"], [187, "summary"]], "Benchmarking IQM Star": [[187, "benchmarking-iqm-star"]], "Clifford Randomized Benchmarking (RB)": [[188, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[188, "choose-or-define-a-backend"], [189, "choose-or-define-a-backend"], [190, "choose-or-define-a-backend"], [192, "choose-or-define-a-backend"], [193, "choose-or-define-a-backend"], [194, "choose-or-define-a-backend"], [195, "choose-or-define-a-backend"], [196, "choose-or-define-a-backend"], [197, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[188, "set-iqm-token-if-using-resonance"], [190, "set-iqm-token-if-using-resonance"], [195, "set-iqm-token-if-using-resonance"], [196, "set-iqm-token-if-using-resonance"], [197, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[188, "randomized-benchmarking-configuration"]], "Run the experiment": [[188, "run-the-experiment"], [189, "run-the-experiment"], [192, "run-the-experiment"], [195, "run-the-experiment"], [196, "run-the-experiment"], [197, "run-the-experiment"]], "Perform the analysis": [[188, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[189, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[189, "clops-configuration"]], "Perform Analysis": [[189, "perform-analysis"], [192, "perform-analysis"], [196, "perform-analysis"], [197, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[189, "list-all-the-keys-in-the-attributes-of-the-dataset"], [195, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[189, "the-observation-object-contains-the-benchmark-results"], [195, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[189, "generate-plots"], [195, "generate-plots"], [197, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[190, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[190, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[190, "mirror-randomized-benchmarking"]], "CLOPS": [[190, "clops"]], "QScore": [[190, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[191, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[191, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[191, "running-the-benchmark"]], "Accessing the results": [[191, "accessing-the-results"]], "Graph State Benchmark Example": [[192, "graph-state-benchmark-example"]], "Graph State Configuration": [[192, "graph-state-configuration"]], "Display the maximum negativity for all qubit pairs": [[192, "display-the-maximum-negativity-for-all-qubit-pairs"]], "Inspect the available plots": [[192, "inspect-the-available-plots"]], "Display all available dataset attributes": [[192, "display-all-available-dataset-attributes"]], "If using state tomography: inspect the bootstrap bias (difference between each bootstrap mean and the measured sample)": [[192, "if-using-state-tomography-inspect-the-bootstrap-bias-difference-between-each-bootstrap-mean-and-the-measured-sample"]], "Inspect a graph state for some particular Pauli measurement": [[192, "inspect-a-graph-state-for-some-particular-pauli-measurement"]], "Compressive Gate Set Tomography (GST)": [[193, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[193, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[193, "execute-gst-experiment-s"]], "Examine the results": [[193, "examine-the-results"]], "High level results stored at result.observations": [[193, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[193, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[193, "plots"]], "Creating a custom gate set": [[193, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[193, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[193, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[194, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[194, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[194, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[194, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[194, "id1"]], "Run the experiment - 2Q gate IRB": [[194, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[194, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[194, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[195, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[195, "mirror-rb-configuration"]], "Analyze the results": [[195, "analyze-the-results"]], "Qscore Configuration": [[196, "qscore-configuration"]], "Quantum Volume (QV)": [[197, "quantum-volume-qv"]], "Quantum Volume Configuration": [[197, "quantum-volume-configuration"]], "Examples": [[198, "examples"]], "IQM Benchmarks": [[199, "iqm-benchmarks"], [201, "iqm-benchmarks"]], "Contents": [[199, "contents"]], "Indices and tables": [[199, "indices-and-tables"]], "License": [[200, "license"]], "Installation (latest release)": [[201, "installation-latest-release"]], "Optional dependencies": [[201, "optional-dependencies"]], "Development installation (latest changes)": [[201, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[201, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[201, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[201, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.compressive_gst"], [20, "module-iqm.benchmarks.compressive_gst.compressive_gst"], [26, "module-iqm.benchmarks.compressive_gst.gst_analysis"], [38, "module-iqm.benchmarks.entanglement"], [39, "module-iqm.benchmarks.entanglement.ghz"], [53, "module-iqm.benchmarks.entanglement.graph_states"], [66, "module-iqm.benchmarks.logging_config"], [67, "module-iqm.benchmarks.optimization"], [68, "module-iqm.benchmarks.optimization.qscore"], [80, "module-iqm.benchmarks.quantum_volume"], [81, "module-iqm.benchmarks.quantum_volume.clops"], [87, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [99, "module-iqm.benchmarks.randomized_benchmarking"], [100, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [101, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [105, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [106, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [110, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [111, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [120, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [125, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [143, "module-iqm.benchmarks.readout_mitigation"], [147, "module-iqm.benchmarks.utils"], [172, "module-iqm.benchmarks.utils_plots"], [176, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_circuits_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_circuits_per_batch"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "use_dd (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.use_dd"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "compressivegst (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST"]], "add_configuration_to_dataset() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst static method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.analysis_function"]], "execute() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.execute"]], "generate_meas_circuits() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.generate_meas_circuits"]], "gstconfiguration (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration"]], "batch_size (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.batch_size"]], "benchmark (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.benchmark"]], "bootstrap_samples (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.bootstrap_samples"]], "convergence_criteria (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.convergence_criteria"]], "from_init (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.from_init"]], "gate_labels (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_labels"]], "gate_set (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_set"]], "max_inits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_inits"]], "max_iterations (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_iterations"]], "model_computed_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_config"]], "model_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.num_circuits"]], "opt_method (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.opt_method"]], "parallel_execution (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.parallel_execution"]], "qubit_layouts (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.qubit_layouts"]], "rank (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rank"]], "seq_len_list (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.seq_len_list"]], "shots (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.shots"]], "create_predefined_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[23, "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set"]], "parse_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[24, "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set"]], "parse_layouts() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[25, "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "bootstrap_errors() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[27, "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors"]], "dataframe_to_figure() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[28, "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure"]], "dataset_counts_to_mgst_format() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[29, "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format"]], "generate_basis_labels() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[30, "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels"]], "generate_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[31, "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results"]], "generate_non_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[32, "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results"]], "generate_unit_rank_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[33, "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results"]], "mgst_analysis() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[34, "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis"]], "pandas_results_to_observations() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[35, "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations"]], "result_str_to_floats() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[36, "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats"]], "run_mgst_wrapper() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[37, "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[42, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[43, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[44, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[45, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[46, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[47, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[48, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[49, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[50, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[51, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[52, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[53, "module-iqm.benchmarks.entanglement.graph_states"]], "graphstatebenchmark (class in iqm.benchmarks.entanglement.graph_states)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark static method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.execute"]], "generate_all_circuit_info_for_graph_state_benchmark() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[54, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.generate_all_circuit_info_for_graph_state_benchmark"]], "graphstateconfiguration (class in iqm.benchmarks.entanglement.graph_states)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration"]], "benchmark (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.model_fields"]], "n_median_of_means (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_median_of_means"]], "n_random_unitaries (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_random_unitaries"]], "num_bootstraps (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.num_bootstraps"]], "qubits (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.qubits"]], "tomography (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[55, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.tomography"]], "find_edges_with_disjoint_neighbors() (in module iqm.benchmarks.entanglement.graph_states)": [[56, "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors"]], "generate_graph_state() (in module iqm.benchmarks.entanglement.graph_states)": [[57, "iqm.benchmarks.entanglement.graph_states.generate_graph_state"]], "generate_minimal_edge_layers() (in module iqm.benchmarks.entanglement.graph_states)": [[58, "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers"]], "negativity_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[59, "iqm.benchmarks.entanglement.graph_states.negativity_analysis"]], "plot_density_matrix() (in module iqm.benchmarks.entanglement.graph_states)": [[60, "iqm.benchmarks.entanglement.graph_states.plot_density_matrix"]], "plot_max_negativities() (in module iqm.benchmarks.entanglement.graph_states)": [[61, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities"]], "plot_max_negativities_graph() (in module iqm.benchmarks.entanglement.graph_states)": [[62, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph"]], "shadow_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[63, "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis"]], "state_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[64, "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis"]], "update_pauli_expectations() (in module iqm.benchmarks.entanglement.graph_states)": [[65, "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations"]], "iqm.benchmarks.logging_config": [[66, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[67, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[68, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[69, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "qpu_topology (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qpu_topology"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[70, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[71, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[72, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[73, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[74, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[75, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[76, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[77, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[78, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[79, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[80, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[81, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[82, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[83, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[84, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[85, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[86, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[87, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[88, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[89, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[90, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[91, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[92, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[93, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[94, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[95, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[96, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[97, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[98, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[99, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[100, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[101, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[102, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[103, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[104, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[105, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[106, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[107, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[108, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[108, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[108, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[108, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[108, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[109, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[110, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[111, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[112, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[113, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[113, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[113, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[113, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[113, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[114, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[115, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[116, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[117, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[118, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[119, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[120, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[121, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[122, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[123, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[124, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[125, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[126, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[127, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[128, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[129, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[130, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[131, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[132, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[133, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[134, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[135, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[136, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[137, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[138, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[139, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[140, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[141, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[142, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[143, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[144, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[144, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[145, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[146, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[147, "module-iqm.benchmarks.utils"]], "bootstrap_counts() (in module iqm.benchmarks.utils)": [[148, "iqm.benchmarks.utils.bootstrap_counts"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[149, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[150, "iqm.benchmarks.utils.count_native_gates"]], "extract_fidelities() (in module iqm.benchmarks.utils)": [[151, "iqm.benchmarks.utils.extract_fidelities"]], "generate_state_tomography_circuits() (in module iqm.benchmarks.utils)": [[152, "iqm.benchmarks.utils.generate_state_tomography_circuits"]], "get_pauli_expectation() (in module iqm.benchmarks.utils)": [[153, "iqm.benchmarks.utils.get_Pauli_expectation"]], "get_active_qubits() (in module iqm.benchmarks.utils)": [[154, "iqm.benchmarks.utils.get_active_qubits"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[155, "iqm.benchmarks.utils.get_iqm_backend"]], "get_measurement_mapping() (in module iqm.benchmarks.utils)": [[156, "iqm.benchmarks.utils.get_measurement_mapping"]], "get_neighbors_of_edges() (in module iqm.benchmarks.utils)": [[157, "iqm.benchmarks.utils.get_neighbors_of_edges"]], "get_tomography_matrix() (in module iqm.benchmarks.utils)": [[158, "iqm.benchmarks.utils.get_tomography_matrix"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[159, "iqm.benchmarks.utils.marginal_distribution"]], "median_with_uncertainty() (in module iqm.benchmarks.utils)": [[160, "iqm.benchmarks.utils.median_with_uncertainty"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[161, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[162, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "remove_directed_duplicates_to_list() (in module iqm.benchmarks.utils)": [[163, "iqm.benchmarks.utils.remove_directed_duplicates_to_list"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[164, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[165, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[166, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[167, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "split_sequence_in_chunks() (in module iqm.benchmarks.utils)": [[168, "iqm.benchmarks.utils.split_sequence_in_chunks"]], "submit_execute() (in module iqm.benchmarks.utils)": [[169, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[170, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[171, "iqm.benchmarks.utils.xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[172, "module-iqm.benchmarks.utils_plots"]], "graphpositions (class in iqm.benchmarks.utils_plots)": [[173, "iqm.benchmarks.utils_plots.GraphPositions"]], "create_positions() (iqm.benchmarks.utils_plots.graphpositions static method)": [[173, "iqm.benchmarks.utils_plots.GraphPositions.create_positions"]], "deneb_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[173, "iqm.benchmarks.utils_plots.GraphPositions.deneb_positions"]], "garnet_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[173, "iqm.benchmarks.utils_plots.GraphPositions.garnet_positions"]], "predefined_stations (iqm.benchmarks.utils_plots.graphpositions attribute)": [[173, "iqm.benchmarks.utils_plots.GraphPositions.predefined_stations"]], "plot_layout_fidelity_graph() (in module iqm.benchmarks.utils_plots)": [[174, "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph"]], "rx_to_nx_graph() (in module iqm.benchmarks.utils_plots)": [[175, "iqm.benchmarks.utils_plots.rx_to_nx_graph"]], "iqm.benchmarks.utils_shadows": [[176, "module-iqm.benchmarks.utils_shadows"]], "cue() (in module iqm.benchmarks.utils_shadows)": [[177, "iqm.benchmarks.utils_shadows.CUE"]], "get_local_shadow() (in module iqm.benchmarks.utils_shadows)": [[178, "iqm.benchmarks.utils_shadows.get_local_shadow"]], "get_negativity() (in module iqm.benchmarks.utils_shadows)": [[179, "iqm.benchmarks.utils_shadows.get_negativity"]], "local_shadow_tomography() (in module iqm.benchmarks.utils_shadows)": [[180, "iqm.benchmarks.utils_shadows.local_shadow_tomography"]]}})