Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "api/iqm.benchmarks.compressive_gst.gst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.append_rms", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "example_clifford_rb", "examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.append_rms.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "example_clifford_rb.ipynb", "examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "iqm.benchmarks.compressive_gst.gst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.append_rms", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Clifford Randomized Benchmarking (RB) Example", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 20, 70, 115, 121, 129, 131, 140, 153, 154], "python": 1, "librari": [1, 95, 100, 129], "suit": [1, 154], "qcvv": [1, 28, 152, 154], "subpackag": [1, 19, 38, 55, 68, 87, 88, 93, 98], "modul": [1, 5, 15, 19, 38, 54, 55, 68, 87, 88, 93, 98, 152], "gener": [2, 3, 18, 20, 21, 22, 30, 33, 38, 40, 41, 47, 48, 49, 50, 51, 57, 65, 70, 73, 76, 85, 91, 95, 96, 100, 103, 104, 105, 108, 109, 118, 119, 120, 135, 149, 150, 153], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 24, 39, 40, 41, 56, 57, 58, 69, 70, 71, 75, 76, 77, 89, 90, 91, 94, 95, 96, 99, 100, 101, 118, 131, 132, 149, 153, 154], "inherit": [2, 3, 5, 15, 20, 39, 56, 69, 75, 89, 94, 99, 131], "benchmarkbas": [2, 4, 154], "abc": [2, 3, 5, 6, 20, 39, 56, 69, 75, 89, 94, 99], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 24, 39, 41, 56, 58, 69, 71, 75, 77, 89, 90, 94, 95, 99, 100, 154], "pydant": [2, 4, 20, 22, 39, 41, 56, 58, 69, 71, 75, 77, 89, 90, 94, 95, 99, 100], "main": [2, 7, 8, 20, 21, 39, 56, 69, 75, 89, 94, 99], "basemodel": [2, 4, 20, 39, 56, 69, 75, 89, 94, 99], "backend": [3, 6, 20, 21, 23, 25, 29, 40, 41, 42, 43, 50, 57, 65, 70, 71, 76, 77, 85, 91, 96, 101, 103, 104, 105, 118, 119, 126, 127, 129, 130, 132, 133, 134, 137, 138, 140, 141, 144, 145, 146, 149, 154], "iqmbackendbas": [3, 6, 21, 40, 42, 57, 70, 76, 91, 96, 101, 103, 104, 105, 118, 119, 120, 126, 127, 129, 130, 133, 137, 138, 140, 144, 146], "configur": [3, 4, 6, 21, 22, 24, 25, 27, 29, 32, 33, 35, 37, 40, 41, 57, 58, 70, 71, 76, 77, 84, 90, 91, 95, 96, 100, 101, 149, 153, 154], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 45, 51, 57, 58, 60, 70, 71, 76, 77, 90, 91, 95, 96, 100, 101, 113, 132, 149, 153], "The": [3, 6, 7, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 57, 58, 61, 67, 70, 71, 73, 76, 77, 79, 80, 82, 83, 90, 91, 95, 96, 100, 101, 102, 103, 104, 114, 124, 128, 134, 137, 138, 140, 141, 142, 143, 147, 150, 153, 154], "implement": [3, 5, 6, 40, 41, 46], "all": [3, 4, 6, 7, 16, 17, 18, 22, 27, 30, 31, 33, 41, 42, 51, 53, 57, 64, 70, 74, 76, 78, 79, 80, 83, 84, 90, 91, 95, 96, 101, 118, 124, 126, 127, 132, 142, 143, 149, 150, 153, 154], "from": [3, 4, 6, 7, 11, 21, 22, 27, 29, 32, 33, 35, 36, 37, 40, 41, 43, 50, 51, 52, 58, 61, 67, 71, 73, 74, 76, 77, 78, 83, 85, 90, 95, 100, 102, 111, 124, 125, 128, 132, 134, 138, 142, 143, 144, 148, 149, 150, 153, 154], "which": [3, 6, 7, 8, 19, 22, 24, 29, 30, 31, 37, 40, 41, 43, 50, 52, 57, 66, 68, 70, 71, 72, 76, 86, 90, 91, 92, 95, 96, 97, 100, 101, 107, 118, 124, 128, 132, 141, 153, 154], "thei": [3, 17, 32], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 19, 21, 22, 40, 41, 45, 57, 58, 70, 71, 76, 77, 90, 91, 95, 96, 100, 101, 132, 140, 149], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "abstract": [3, 6], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 23, 24, 41, 53, 58, 65, 71, 73, 77, 85, 90, 95, 100, 111, 117, 118, 134, 138, 141, 149, 150, 153], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 20, 21, 37, 40, 51, 55, 57, 65, 68, 70, 71, 76, 77, 78, 85, 90, 91, 95, 96, 100, 101, 102, 115, 121, 126, 127, 128, 140, 146, 147, 148, 149, 150, 153, 154], "full": [3, 19, 20, 22, 71, 77, 154], "given": [3, 6, 7, 11, 22, 30, 40, 41, 42, 50, 51, 52, 53, 55, 57, 63, 68, 70, 76, 83, 84, 93, 102, 119, 120, 145, 154], "static": [3, 6, 21, 40, 57, 70, 76, 91, 96, 101], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 22, 23, 24, 27, 28, 30, 36, 40, 41, 43, 45, 46, 58, 60, 61, 62, 65, 67, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 85, 90, 91, 95, 96, 100, 101, 102, 103, 104, 105, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 146, 148], "check": [3, 25, 64, 84], "whether": [3, 4, 22, 41, 42, 58, 64, 65, 67, 70, 71, 76, 77, 84, 85, 90, 95, 119, 124, 140, 153], "requir": [3, 4, 22, 41, 58, 71, 77, 90, 95, 100, 153, 154], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 23, 25, 27, 31, 32, 37, 41, 42, 51, 52, 76, 77, 105, 124, 130, 139, 141, 149, 153, 154], "met": 3, "valid": [3, 24, 129, 130, 152, 154], "dictionari": [3, 4, 7, 11, 22, 29, 35, 41, 58, 61, 70, 71, 74, 76, 77, 78, 81, 82, 83, 90, 95, 100, 101, 103, 104, 114, 118, 119, 120, 122, 126, 127, 133, 134, 137, 139, 145, 148, 150], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 153], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 21, 22, 28, 30, 41, 50, 52, 58, 65, 70, 71, 76, 77, 90, 95, 100, 103, 104, 105, 109, 114, 117, 118, 119, 120, 124, 126, 127, 129, 132, 140, 141, 142, 146, 150, 154], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 57, 58, 70, 71, 76, 77, 90, 91, 95, 96, 100, 101, 147, 153], "shot": [4, 22, 41, 58, 71, 76, 77, 90, 95, 100, 126, 127, 132, 133, 146, 150, 154], "int": [4, 9, 11, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 76, 77, 78, 81, 84, 85, 90, 95, 100, 101, 102, 103, 104, 105, 106, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 133, 136, 139, 140, 142, 144, 145, 146, 148], "256": [4, 58, 71, 77, 90, 95, 100, 150], "max_gates_per_batch": [4, 22, 41, 58, 71, 77, 90, 95, 100, 126, 127, 146, 150, 154], "calset_id": [4, 22, 41, 58, 71, 77, 90, 95, 100, 126, 127, 146, 150, 154], "routing_method": [4, 22, 41, 58, 71, 77, 90, 95, 100, 104, 105, 140, 150, 154], "liter": [4, 22, 41, 58, 71, 77, 90, 95, 100, 144], "basic": [4, 22, 41, 58, 71, 77, 90, 95, 100, 104, 105], "lookahead": [4, 22, 41, 58, 71, 77, 90, 95, 100], "stochast": [4, 22, 41, 58, 71, 77, 90, 95, 100], "sabr": [4, 22, 41, 58, 71, 77, 90, 95, 100, 140, 150, 154], "physical_layout": [4, 22, 41, 58, 71, 77, 90, 95, 100, 144, 150, 154], "fix": [4, 22, 29, 41, 58, 71, 77, 90, 95, 100, 101, 104, 119, 126, 128, 144, 149, 150, 154], "batch": [4, 17, 22, 41, 58, 71, 77, 90, 95, 100, 126, 127, 144, 145, 146, 150], "number": [4, 22, 23, 24, 27, 28, 31, 40, 41, 46, 47, 48, 49, 50, 51, 53, 55, 57, 60, 62, 63, 65, 67, 68, 71, 76, 77, 84, 85, 87, 90, 95, 100, 101, 102, 103, 104, 105, 106, 115, 118, 119, 120, 121, 126, 127, 132, 133, 136, 137, 146], "us": [4, 6, 9, 16, 19, 20, 21, 22, 27, 28, 29, 32, 33, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 65, 67, 70, 71, 77, 100, 102, 117, 124, 132, 134, 146, 149, 153], "circuit": [4, 7, 10, 15, 16, 17, 20, 21, 22, 23, 24, 27, 37, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 57, 61, 68, 70, 71, 76, 77, 78, 81, 84, 85, 90, 91, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 114, 115, 118, 119, 120, 121, 126, 127, 129, 132, 133, 136, 137, 140, 141, 145, 146, 148, 149, 150], "default": [4, 6, 12, 22, 27, 30, 41, 58, 71, 76, 77, 85, 90, 95, 100, 120, 124, 132, 144, 150], "i": [4, 6, 7, 19, 21, 22, 23, 24, 27, 28, 29, 30, 33, 41, 43, 47, 50, 51, 53, 57, 58, 64, 66, 67, 70, 71, 72, 76, 77, 84, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 106, 107, 110, 125, 129, 132, 140, 144, 150, 153, 154], "2": [4, 22, 23, 24, 28, 52, 58, 64, 77, 84, 100, 119, 125, 136, 150, 152, 153, 154], "8": [4, 22, 125, 150, 153, 154], "maximum": [4, 31, 67, 126, 127, 146], "gate": [4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 35, 37, 40, 41, 42, 47, 51, 52, 58, 68, 70, 71, 77, 87, 88, 91, 93, 95, 96, 100, 103, 105, 114, 117, 118, 119, 120, 122, 124, 126, 127, 129, 136, 137, 140, 146, 149, 154], "per": [4, 22, 68, 71, 77, 90, 100, 102, 104, 105, 106, 126, 127, 132, 133, 146], "option": [4, 20, 41, 42, 52, 58, 65, 76, 77, 95, 104, 105, 114, 117, 119, 120, 124, 126, 127, 129, 140, 141, 142, 146, 149, 152], "calibr": [4, 6, 41, 43, 52, 76, 77, 126, 127, 132, 133, 146], "id": [4, 146], "last": [4, 22], "avail": [4, 33, 153, 154], "qiskit": [4, 6, 22, 29, 58, 71, 77, 95, 100, 129, 140, 149], "rout": [4, 71, 77, 100, 140], "transpil": [4, 16, 21, 40, 41, 45, 46, 58, 70, 71, 77, 100, 118, 119, 129, 133, 137, 140, 145, 149], "physic": [4, 22, 24, 30, 41, 58, 70, 71, 76, 77, 81, 95, 100, 104, 144, 152], "layout": [4, 8, 11, 16, 17, 22, 24, 41, 53, 58, 70, 71, 76, 77, 100, 101, 126, 127, 134, 144, 149], "constrain": [4, 144, 154], "dure": [4, 13, 23, 76, 91, 96], "select": [4, 22, 41, 58, 77, 83], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 24, 27, 29, 32, 33, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 61, 67, 68, 70, 71, 76, 77, 81, 85, 87, 90, 91, 95, 100, 101, 102, 103, 104, 105, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 132, 134, 136, 140, 141, 144, 145, 149, 150], "initi": [4, 6, 19, 20, 22, 27, 37, 41, 54, 134], "allow": [4, 149, 154], "ani": [4, 8, 22, 23, 27, 45, 46, 74, 76, 95, 101, 106, 124, 126, 127, 133, 141, 143, 153, 154], "other": [4, 21, 27, 41, 149, 153, 154], "accord": [4, 27, 40, 48, 49, 57, 103, 144, 145], "final": [4, 6, 32, 52, 71, 76, 77, 81, 100, 140, 144, 145], "measur": [4, 19, 20, 22, 27, 29, 33, 35, 40, 41, 45, 57, 60, 70, 71, 76, 77, 81, 90, 95, 100, 128, 133, 137, 144, 145], "model_computed_field": [4, 22, 41, 58, 71, 77, 90, 95, 100], "classvar": [4, 22, 41, 58, 71, 77, 90, 95, 100], "dict": [4, 7, 11, 22, 23, 24, 41, 45, 46, 58, 60, 61, 67, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 90, 95, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 120, 121, 122, 124, 126, 127, 128, 133, 134, 137, 139, 142, 143, 145, 146, 148], "computedfieldinfo": [4, 22, 41, 58, 71, 77, 90, 95, 100], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 47, 48, 49, 50, 51, 52, 53, 57, 58, 66, 70, 71, 72, 74, 76, 77, 82, 83, 86, 90, 91, 92, 95, 100, 101, 103, 104, 107, 114, 117, 119, 120, 126, 127, 139, 140, 141, 144, 148, 153, 154], "comput": [4, 22, 27, 33, 40, 41, 44, 50, 58, 60, 61, 71, 76, 77, 78, 79, 80, 82, 90, 95, 100, 114, 115, 121, 139, 152, 153, 154], "field": [4, 6, 22, 41, 58, 71, 77, 90, 95, 100, 153], "correspond": [4, 22, 23, 30, 41, 57, 58, 66, 68, 70, 71, 72, 76, 77, 81, 85, 86, 90, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 107, 124, 128, 133, 145, 150], "object": [4, 7, 8, 9, 10, 16, 17, 18, 22, 24, 27, 28, 35, 40, 41, 44, 53, 58, 71, 76, 77, 90, 95, 100, 101, 109, 126, 127, 138, 142, 143, 146, 153], "model_config": [4, 22, 41, 58, 71, 77, 90, 95, 100], "configdict": [4, 22, 41, 58, 71, 77, 90, 95, 100], "model": [4, 22, 27, 41, 58, 71, 77, 90, 95, 100, 117, 123, 124], "should": [4, 6, 8, 10, 22, 40, 41, 50, 54, 58, 71, 77, 90, 95, 100, 119, 149, 153], "conform": [4, 22, 28, 41, 58, 71, 77, 90, 95, 100], "config": [4, 22, 41, 58, 71, 77, 90, 95, 100], "model_field": [4, 22, 41, 58, 71, 77, 90, 95, 100], "fieldinfo": [4, 22, 41, 58, 71, 77, 90, 95, 100], "annot": [4, 22, 41, 58, 71, 77, 90, 95, 100, 134, 153], "true": [4, 22, 27, 41, 45, 58, 71, 76, 77, 90, 95, 100, 124, 140, 154], "union": [4, 22, 41, 58, 71, 77, 90, 95, 100, 134, 153], "nonetyp": [4, 22, 41, 58, 71, 77, 90, 95, 100], "fals": [4, 22, 27, 41, 58, 71, 77, 85, 90, 95, 100, 124, 132, 140, 150], "metadata": [4, 21, 22, 40, 41, 53, 57, 58, 70, 71, 74, 76, 77, 90, 91, 95, 96, 100, 101, 143], "about": [4, 22, 41, 58, 71, 77, 90, 95, 100, 149], "defin": [4, 5, 6, 7, 22, 24, 25, 41, 50, 51, 58, 71, 77, 90, 95, 100, 118, 141, 153, 154], "map": [4, 7, 21, 22, 41, 50, 52, 58, 60, 61, 71, 77, 90, 95, 100, 140, 144, 145, 149], "thi": [4, 5, 6, 15, 16, 22, 23, 28, 33, 40, 41, 50, 53, 58, 64, 71, 77, 84, 90, 95, 100, 125, 134, 153, 154], "replac": [4, 22, 41, 58, 71, 77, 90, 95, 100, 153], "__fields__": [4, 22, 41, 58, 71, 77, 90, 95, 100], "v1": [4, 22, 41, 58, 71, 77, 90, 95, 100], "function": [5, 6, 20, 21, 22, 26, 34, 37, 39, 56, 57, 61, 66, 69, 70, 72, 75, 76, 86, 89, 91, 92, 94, 96, 97, 99, 101, 107, 108, 110, 111, 113, 114, 116, 117, 123, 125, 131, 135, 147, 149], "benchmarkobservationidentifi": [5, 8, 35, 149, 150], "benchmarkobserv": [5, 7, 35, 53, 149, 150], "benchmarkrunresult": [5, 6, 7, 12, 21, 34, 40, 44, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 149], "benchmarkanalysisresult": [5, 6, 12, 21, 34, 40, 44, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 149], "kwarg": 6, "run": [6, 7, 8, 10, 20, 21, 22, 24, 27, 34, 35, 40, 41, 44, 57, 61, 66, 70, 71, 72, 76, 86, 91, 92, 96, 97, 101, 107, 154], "cortex": [6, 11], "experi": [6, 27, 29, 32, 33, 35, 37, 53, 57, 65, 66, 70, 72, 73, 76, 77, 79, 80, 86, 91, 92, 96, 97, 101, 107, 116, 123, 124, 128, 130], "In": [6, 153, 154], "order": [6, 22, 27, 43, 52, 53, 117, 125, 154], "write": [6, 132, 153], "new": [6, 7, 11, 141, 149, 154], "recommend": [6, 153, 154], "deriv": [6, 153], "baseclass": 6, "addition": 6, "custom": [6, 58, 77, 154], "analysi": [6, 7, 12, 21, 22, 26, 34, 57, 66, 70, 72, 73, 76, 86, 91, 92, 96, 97, 101, 107, 149], "can": [6, 10, 16, 22, 30, 32, 41, 43, 55, 57, 68, 76, 134, 149, 154], "give": [6, 21, 61, 149, 153], "pointer": 6, "analysis_funct": [6, 21, 40, 57, 70, 76, 91, 96, 101], "accept": [6, 22, 65, 149, 153], "analysisresult": [6, 7, 40, 44, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 149], "its": [6, 111, 141, 149, 153], "input": [6, 11, 24, 71, 77, 106, 125, 129, 130, 134, 144], "result": [6, 7, 8, 10, 11, 12, 20, 21, 22, 27, 28, 31, 32, 33, 34, 35, 36, 53, 55, 57, 60, 66, 67, 68, 70, 72, 76, 77, 84, 85, 86, 91, 92, 96, 97, 101, 107, 115, 121, 123, 144, 149, 153, 154], "onli": [6, 12, 23, 71, 77, 141, 153], "pass": [6, 12, 106, 134, 140], "through": [6, 12, 46, 153], "iqmbackend": [6, 76, 101, 126, 127], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 27, 29, 31, 32, 33, 34, 35, 37, 40, 44, 45, 46, 53, 57, 70, 73, 76, 91, 96, 101, 108, 110, 124, 148, 149, 150], "overridden": 6, "an": [6, 16, 17, 19, 20, 21, 22, 31, 34, 35, 37, 40, 41, 44, 45, 57, 70, 96, 97, 125, 129, 133, 134, 149, 153, 154], "xarrai": [6, 7, 11, 13, 21, 27, 29, 33, 35, 37, 40, 45, 57, 70, 76, 91, 96, 101, 148, 149], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 24, 27, 28, 29, 31, 32, 33, 35, 37, 40, 43, 44, 45, 46, 53, 101, 103, 126, 127, 141, 149, 153, 154], "inform": [6, 10, 52, 54, 153], "necessari": [6, 154], "analys": 6, "calibration_set_id": 6, "uuid": 6, "calibrationsetid": 6, "latest": [6, 146, 152], "set": [6, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 37, 40, 71, 77, 103, 104, 106, 112, 124, 137, 144, 146, 154], "runresult": [6, 7, 10, 40, 44, 57, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 149], "analyz": [6, 10, 40, 44, 136, 150, 154], "run_index": 6, "1": [6, 22, 33, 58, 62, 83, 100, 104, 105, 116, 119, 125, 140, 150, 153, 154], "intern": [6, 17], "perform": [6, 21, 33, 58, 71, 77, 117, 128, 140, 153, 154], "make": [6, 76, 146, 153, 154], "shallow": 6, "copi": [6, 153], "produc": [6, 20, 24, 31, 33, 52, 77, 154], "therefor": [6, 64, 84], "chang": [6, 22, 149, 152, 153], "data": [6, 7, 11, 20, 21, 22, 26, 27, 33, 40, 41, 43, 45, 52, 73, 85, 109, 112, 117, 123, 132], "just": 6, "structur": 6, "arrai": [6, 20, 27, 29, 31, 33, 37, 70, 90, 95, 100, 124, 125, 130, 134], "index": [6, 40, 43, 50, 51, 52, 70, 76, 104, 152], "construct": [6, 19, 41, 47], "updat": [6, 21, 34, 70, 71, 149, 154], "core": 7, "circuit_contain": 7, "plot": [7, 20, 21, 22, 34, 40, 44, 53, 85, 124, 149, 150, 154], "matplotlib": [7, 28], "figur": [7, 14, 28, 31, 32, 33, 53, 65, 73, 85, 124], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 34, 35, 40, 44, 53, 73, 124, 149, 150], "list": [7, 9, 11, 13, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 57, 59, 60, 61, 63, 65, 67, 70, 71, 76, 78, 79, 80, 81, 82, 84, 85, 100, 101, 102, 103, 104, 105, 106, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 139, 140, 142, 143, 144, 145, 146, 148, 149, 153, 154], "dataclass": [7, 8, 10], "store": [7, 8, 10, 21, 34, 53, 149, 154], "consist": [7, 19, 153], "kei": [7, 60, 67, 70, 76, 81, 100, 103, 137, 139, 145], "valu": [7, 8, 22, 36, 40, 41, 46, 50, 60, 61, 67, 70, 71, 100, 103, 116, 137, 139, 140, 145, 150], "pair": [7, 36, 43, 52, 70, 130], "plot_nam": 7, "plot_al": 7, "from_run_result": 7, "creat": [7, 21, 23, 27, 32, 40, 41, 50, 57, 61, 66, 70, 72, 76, 86, 91, 92, 96, 97, 101, 107, 154], "identifi": [8, 9, 11, 27, 35, 76, 101, 117, 124, 126, 127, 129, 142, 148, 150, 153], "uncertainti": [8, 22, 36, 46, 150], "singl": [8, 10, 13, 16, 18, 22, 36, 41, 53, 58, 59, 70, 71, 76, 77, 103, 110, 149, 154], "string": [8, 9, 11, 17, 18, 27, 30, 36, 142, 154], "qubit_indic": [9, 16, 150], "eas": 9, "indic": [9, 76, 81, 139, 145, 153], "wa": [9, 25, 32, 64, 84, 128, 153], "properti": [9, 16, 17], "string_identifi": 9, "version": [9, 108, 153, 154], "enough": 10, "those": [10, 76, 81, 144, 153], "count": [11, 22, 27, 29, 32, 33, 35, 37, 40, 41, 44, 60, 61, 67, 76, 78, 102, 115, 121, 128, 133, 134, 137, 142, 143, 148, 150], "add": [11, 17, 21, 40, 51, 57, 70, 76, 91, 96, 101, 103, 147, 149, 153, 154], "job": [11, 70, 74, 76, 101, 126, 127, 142, 150], "If": [11, 22, 27, 33, 41, 100, 153], "same": [11, 17, 43, 52, 100, 153], "alreadi": [11, 150], "present": 11, "old": 11, "both": [11, 21, 77, 154], "ad": [11, 149, 150], "togeth": [11, 154], "bitstr": [11, 60, 61, 62, 67, 83, 128, 139], "current": [11, 27, 29, 30, 32, 33, 35, 37, 41, 70, 132, 154], "instanc": [11, 16, 17, 21, 34, 45, 46, 65, 149], "xr": [11, 13, 32, 40, 45, 46, 53, 57, 70, 73, 76, 91, 96, 101, 124, 148], "merg": [11, 13], "where": [11, 16, 17, 22, 24, 25, 27, 37, 41, 105, 149, 153], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 41, 50, 51, 123], "size": [13, 22, 28, 41, 50, 55, 57, 65, 67], "dateset": 13, "fig": [14, 53], "show": 14, "close": [14, 22], "easili": [15, 149, 154], "interact": [15, 149], "quantum": [15, 21, 22, 23, 24, 40, 41, 45, 47, 48, 49, 50, 57, 68, 70, 71, 75, 76, 77, 78, 81, 84, 86, 103, 104, 115, 119, 120, 121, 132, 133, 136, 137, 140, 141, 146, 149, 152, 154], "circuitgroup": [15, 16, 40, 149], "benchmarkcircuit": [15, 18, 149], "circuit_group": 16, "group": [16, 17, 91], "purpos": [16, 17, 153], "typic": [16, 17], "repres": [16, 17, 23, 28, 73, 85, 139, 153], "exampl": [16, 108, 149, 152, 153, 154], "insid": [16, 149], "get_circuit_group_by_nam": 16, "get": [16, 20, 22, 111, 138], "desir": [16, 17, 21], "doe": [16, 41, 153], "exist": [16, 18, 149, 154], "group_nam": 16, "integ": [16, 17, 22, 24, 41, 76, 81, 104], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 23, 24, 27, 31, 32, 33, 36, 37, 41, 43, 46, 50, 60, 61, 65, 67, 70, 71, 73, 76, 81, 85, 101, 117, 118, 119, 120, 122, 124, 126, 133, 140, 145, 146], "qubit_layout": [16, 17, 22, 23, 24, 25, 27, 29, 31, 32, 33, 35, 40, 43, 45, 46, 50, 51, 52, 53], "qiskit_iqm": [17, 41, 149], "iqm_circuit": 17, "iqmcircuit": [17, 23, 24, 40, 42, 47, 48, 49, 50, 70, 76, 81, 101, 103, 104, 105, 114, 118, 119, 120, 122, 126, 127, 129, 133, 136, 137, 140, 141, 145, 146, 149], "It": [17, 154], "common": [17, 113, 153], "activ": [17, 141, 154], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 153, 154], "found": [17, 43, 154], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 153], "compress": [19, 20, 21, 22, 26, 34, 149, 154], "gst": [19, 21, 22, 27, 28, 29, 32, 33, 34, 35, 149], "self": [19, 21, 120], "character": [19, 21, 152], "process": [19, 20, 27, 77, 150], "matric": [19, 31], "well": [19, 21, 33, 34], "parametr": [19, 27, 61, 68, 70, 71], "state": [19, 22, 27, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 115, 121, 149, 153, 154], "povm": [19, 27, 31, 37], "low": 19, "rank": [19, 22, 31, 33, 149], "matrix": [19, 20, 31, 106], "reduc": [19, 22, 41, 141], "post": [19, 77, 150], "overhead": 19, "tomographi": [20, 26, 154], "follow": [20, 153, 154], "step": 20, "said": 20, "convers": [20, 153], "ideal": [20, 78, 102], "numpi": [20, 29, 31, 33], "mgst": [20, 22, 29, 36, 37, 149, 153, 154], "first": [20, 22, 27, 37, 51, 57, 70, 100], "estim": [20, 22, 27, 31, 33, 37, 40, 41, 45, 46, 55, 57, 71, 76, 91, 96, 101, 102, 128, 149], "gaug": [20, 31, 33], "optim": [20, 22, 31, 33, 41, 70, 71, 77, 100, 140, 154], "target": [20, 22, 27, 33, 37, 140], "pygsti": [20, 27], "rerun": 20, "bootstrap": [20, 22, 27, 32, 33], "error": [20, 22, 25, 27, 31, 32, 33, 35, 36, 41, 45, 76, 77, 82, 124, 134, 149], "bar": [20, 27, 32, 33, 124], "tabl": [20, 22, 28, 31, 32, 33], "reconstruct": [20, 22, 27, 37], "compressivegst": [20, 22], "benchmark_definit": [20, 22, 39, 41, 56, 58, 69, 71, 75, 77, 89, 90, 94, 95, 99, 100], "gstconfigur": [20, 21, 24], "spam": [21, 27, 32, 35], "robust": 21, "generate_meas_circuit": 21, "random": [21, 22, 41, 42, 58, 70, 87, 89, 94, 95, 99, 100, 103, 105, 113, 119, 120, 149, 151, 152, 154], "distribut": [21, 82, 83, 139, 153], "among": [21, 154], "differ": [21, 24, 27, 40, 73, 100, 153, 154], "depth": [21, 22, 41, 47, 48, 49, 50, 76, 85, 100, 101, 104, 105, 116, 119, 123, 126, 128, 150], "rang": [21, 148, 149, 150, 154], "l_min": 21, "l_max": 21, "seq_len_list": [21, 22], "No": 21, "than": [21, 41], "need": [21, 22, 28, 40, 70, 134, 154], "axactli": 21, "describ": [21, 153], "meaning": [21, 55, 57, 68, 76, 77], "float": [21, 22, 28, 36, 43, 52, 57, 59, 60, 62, 63, 64, 65, 67, 70, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 95, 100, 102, 103, 104, 105, 115, 116, 117, 121, 124, 128, 129, 132, 134, 137, 139], "time": [21, 22, 27, 70, 73, 74, 76, 101, 126, 127, 147], "took": 21, "circuit_gen_transp_tim": 21, "add_configuration_to_dataset": [21, 40], "sourc": [21, 152, 153], "further": [21, 40, 149], "storag": [21, 40, 149], "routin": [21, 28, 40, 41, 58, 77, 117], "1024": [22, 41], "gate_set": [22, 23, 24], "num_circuit": [22, 27, 37, 71, 77, 154], "gate_label": 22, "14": [22, 150, 154], "from_init": 22, "bool": [22, 27, 41, 58, 64, 65, 67, 70, 71, 76, 77, 84, 85, 90, 95, 124, 132, 140], "max_init": 22, "20": [22, 149, 150], "opt_method": 22, "auto": 22, "max_iter": 22, "convergence_criteria": 22, "4": [22, 70, 125, 150, 153, 154], "0": [22, 40, 43, 50, 51, 52, 57, 64, 77, 100, 103, 104, 105, 125, 150, 153, 154], "0001": 22, "batch_siz": 22, "bootstrap_sampl": 22, "test": [22, 154], "ghzbenchmark": [22, 39, 41], "sequenc": [22, 29, 41, 58, 71, 76, 77, 90, 95, 100, 101, 102, 115, 118, 119, 120, 121, 140, 144, 150], "e": [22, 23, 24, 27, 37, 41, 95, 100, 125, 148], "g": [22, 41, 95, 100, 125, 148], "specifi": [22, 23, 24, 27, 37, 41, 71, 76, 77, 95, 101, 103, 104, 126, 127, 130, 137, 139, 144, 146, 154], "label": [22, 23, 24, 28, 30, 41, 71, 85, 95, 104, 114, 120, 124, 149], "meant": [22, 24, 41], "either": [22, 117, 134, 137, 153, 154], "cirucuit": 22, "one": [22, 71, 125, 146, 153, 154], "predefin": [22, 23], "1qxyi": 22, "2qxycz": 22, "2qxycz_extend": 22, "3qxycz": 22, "tomograph": 22, "complet": 22, "mean": [22, 64, 137, 153], "vacuum": 22, "abl": 22, "prepar": [22, 37, 40, 153], "form": [22, 103, 153], "frame": 22, "space": 22, "practic": [22, 154], "suffici": 22, "condit": [22, 64, 84, 153], "combin": [22, 30, 153], "local": 22, "pauli": [22, 30, 33, 100, 102, 104, 105, 106], "eigenst": 22, "quantumcircuit": [22, 23, 24, 40, 42, 50, 57, 70, 76, 81, 101, 103, 114, 118, 119, 120, 126, 127, 133, 136, 140, 141, 145, 146, 149], "how": [22, 153, 154], "mani": [22, 70, 149], "guidelin": 22, "choos": [22, 30, 41, 57, 153], "At": 22, "least": [22, 77, 153], "50": [22, 153], "3": [22, 41, 58, 71, 77, 84, 125, 150, 153, 154], "400": [22, 150], "two": [22, 100, 103], "6": [22, 31, 150, 153, 154], "2000": 22, "three": 22, "9": [22, 150, 153, 154], "expect": [22, 60, 61, 67, 100, 103, 105, 149], "grow": 22, "linearli": [22, 41], "exponenti": [22, 116], "krau": [22, 27, 31, 33, 37], "coher": [22, 40, 41, 45], "dim": 22, "control": [22, 28, 153], "maxim": 22, "middl": 22, "cutoff": 22, "below": [22, 153, 154], "possibl": [22, 41, 153], "algorithm": [22, 37, 41, 51, 103], "point": [22, 124], "tri": 22, "limit": [22, 153], "amount": [22, 147, 148], "retri": 22, "gd": 22, "sfn": 22, "gradient": 22, "descent": 22, "saddl": 22, "free": [22, 153], "newton": 22, "respect": [22, 41, 100, 102], "automat": [22, 32, 154], "iter": [22, 134, 139], "while": [22, 132, 153], "second": [22, 27, 37, 68, 70], "determin": [22, 41, 153], "when": [22, 77, 149, 154], "termin": [22, 153, 154], "multipli": [22, 62], "cost": 22, "threshold": [22, 64, 65, 77, 84, 85], "nois": 22, "consid": [22, 71, 77, 144], "success": [22, 64, 84], "10": [22, 71, 150, 154], "usual": [22, 33], "sensibl": 22, "rel": 22, "between": [22, 51, 105, 132], "consecut": [22, 41], "1e": 22, "hyperparamt": 22, "converg": 22, "behaviour": 22, "smaller": [22, 40, 41, 50], "runtim": 22, "lead": [22, 149], "errat": 22, "jump": 22, "lack": 22, "repeat": 22, "fake": 22, "via": [22, 40, 41], "num_qubit": [23, 24, 46, 47, 48, 49, 57, 76, 102, 115, 121], "assign": [23, 70, 71, 100], "transipil": 23, "so": [23, 32, 149], "stage": [23, 149], "mai": [23, 153], "actual": 23, "gate_labels_dict": [23, 24], "rx": [23, 24], "pi": [23, 24], "rotat": [23, 24, 33], "around": [23, 24], "x": [23, 24, 27, 37, 62, 110, 112, 124, 149], "axi": [23, 24, 27, 37, 124, 149], "num_gat": [23, 24], "handl": [24, 154], "variabl": [24, 57, 70, 76, 91, 96, 101, 117, 154], "correct": [25, 85, 102, 132, 133], "properli": [25, 31, 33, 35], "rais": [25, 103, 106, 130, 132], "code": [26, 152, 153, 154], "y": [27, 29, 37], "ndarrai": [27, 29, 31, 33, 37, 70, 116, 117, 123], "k": [27, 37], "rho": [27, 37], "target_mdl": 27, "resampl": 27, "outcom": [27, 29, 37, 133], "each": [27, 29, 37, 43, 51, 53, 65, 79, 80, 81, 85, 95, 100, 102, 105, 109, 128, 133, 137, 150, 153, 154], "repetit": 27, "newli": 27, "sampl": [27, 42, 61, 67, 77, 83, 95, 100, 102, 103, 104, 105, 106, 118, 119, 120], "non": [27, 32, 35, 116, 153], "corresp": 27, "probabl": [27, 29, 37, 79, 80, 82, 83, 100, 103, 115, 121, 128, 139, 154], "save": [27, 28, 32], "num_povm": [27, 37], "subarrai": [27, 37], "along": [27, 37, 153], "oper": [27, 33, 37, 68, 87, 129, 137, 149], "enumer": [27, 37], "3d": [27, 31, 33], "cpt": [27, 37], "superoper": [27, 37], "standard": [27, 28, 30, 31, 33, 37, 65, 77, 80, 89, 124, 137, 154], "basi": [27, 30, 33, 37, 129, 140, 153], "stack": [27, 37], "els": 27, "x_arrai": 27, "tensor": 27, "e_arrai": 27, "rho_arrai": 27, "df_g_arrai": 27, "qualiti": [27, 32, 35, 40], "df_o_arrai": 27, "df": 28, "datafram": [28, 31, 32, 33, 35], "row_label": 28, "col_width": 28, "fontsiz": 28, "12": [28, 150], "turn": [28, 29, 31, 32, 33], "panda": [28, 31, 32, 33, 35], "file": [28, 153, 154], "row": 28, "cell": 28, "width": 28, "font": 28, "text": [28, 153], "obtain": [29, 153, 154], "format": [29, 31, 32, 33, 35, 36, 153], "2d": [29, 31], "j": 29, "column": 29, "pdim": 30, "dimens": 30, "like": [30, 35, 134, 154], "ii": [30, 153], "ix": 30, "xx": 30, "df_g": [31, 33, 35], "x_opt": [31, 33], "e_opt": 31, "rho_opt": 31, "max_ev": 31, "arbitrari": 31, "them": [31, 33, 51, 154], "after": [31, 33, 119, 154], "conta": 31, "element": [31, 57], "densiti": [31, 100, 103, 105, 124], "optmiz": 31, "eigenvalu": 31, "choi": 31, "df_g_evals_fin": 31, "fig_g": [31, 33], "fidel": [31, 33, 40, 41, 43, 44, 45, 46, 51, 52, 53, 71, 87, 88, 91, 93, 96, 98, 101, 102, 117, 124, 149, 154], "etc": [31, 33], "fig_choi": 31, "df_g_final": [31, 33], "df_o": [32, 35], "also": [32, 33, 134, 149, 153, 154], "metric": [32, 33, 71], "fit": [32, 35, 95, 108, 109, 110, 112, 116, 117, 123, 124, 149, 153], "df_o_fin": 32, "k_target": [33, 37], "includ": [33, 65, 73, 149, 153], "hamiltonian": [33, 149], "diamond": 33, "distanc": [33, 41, 51], "4d": 33, "df_g_rotat": 33, "fig_rot": 33, "convert": [35, 36, 106], "high": [35, 41], "level": [35, 41, 58, 71, 77, 100], "simpl": [35, 154], "observation_list": 35, "result_str": 36, "err": 36, "interv": 36, "floar": 36, "wrapper": [37, 40], "alg": 37, "x_target": 37, "e_target": 37, "rho_target": 37, "ghz": [38, 149, 154], "verifi": [38, 129], "greenberg": [38, 40], "horn": [38, 40], "zeiling": [38, 40], "ghzconfigur": [39, 40], "generate_native_ghz": 40, "qubit_count": [40, 41], "nativ": [40, 52, 119, 120, 122, 129, 137, 149], "topologi": 40, "subset": [40, 43, 45, 46, 50, 51, 52], "system": [40, 41, 43, 45, 46, 50, 51, 52, 132, 153, 154], "protocol": [40, 43, 45, 46, 50, 51, 52], "equal": [40, 50, 76, 149], "generate_coherence_meas_circuit": 40, "take": [40, 41, 140, 147, 149, 154], "output": [40, 54, 78, 79, 80, 81, 82, 83, 84, 132, 149, 154], "mult": 40, "q": [40, 55, 57, 58, 64, 154], "qc_list_transpil": 40, "generate_readout_circuit": 40, "creation": 40, "all_circuits_list": 40, "state_generation_routin": 41, "tree": [41, 50, 51], "custom_qubits_arrai": [41, 57, 58, 77, 154], "qiskit_optim_level": [41, 58, 71, 77, 100, 104, 105, 140, 154], "optimize_sqg": [41, 58, 70, 71, 77, 140, 154], "fidelity_routin": 41, "num_rm": [41, 42], "100": [41, 71, 77, 154], "rem": [41, 45, 77, 85, 133, 154], "mit_shot": [41, 76, 77, 133, 154], "1000": [41, 77, 133], "cal_url": [41, 43], "log": [41, 48, 49, 50, 51], "coupl": [41, 43, 50, 52, 71, 77, 140, 144], "cz": [41, 43, 51, 52, 119, 137, 140], "account": [41, 140, 154], "span": [41, 50, 51], "largest": 41, "weight": [41, 51, 52, 83], "parallel": [41, 51, 68, 90, 95, 119, 126, 128, 136], "applic": [41, 51, 103, 153], "cx": [41, 47, 51, 70], "scale": 41, "logarithm": 41, "connect": [41, 51, 130], "naiv": [41, 58], "appli": [41, 47, 51, 70, 77, 149, 153], "textbook": 41, "assum": [41, 53, 125, 153], "NOT": 41, "support": [41, 52, 153], "denot": 41, "provid": [41, 63, 153], "here": [41, 102], "ha": [41, 150, 153, 154], "small": [41, 149], "architectur": 41, "iqm_transpil": 41, "optimize_single_qubit_g": 41, "multipl": [41, 45, 108, 149], "moonei": [41, 45], "2021": [41, 45, 154], "randomized_measur": 41, "outlin": 41, "http": [41, 46, 48, 49, 108, 153, 154], "arxiv": [41, 46, 48, 49, 71, 103, 154], "org": [41, 46, 48, 49, 153], "ab": [41, 46, 48, 49], "1812": [41, 46], "02624": [41, 46], "chosen": 41, "boolean": 41, "flag": 41, "readout": [41, 45, 76, 77, 82, 131, 132, 134], "mitig": [41, 45, 76, 77, 82, 131, 132, 133, 134], "total": [41, 112], "url": [41, 43, 154], "retriev": [41, 70, 74, 142, 143, 148, 150], "priorit": 41, "append": [42, 70], "1q": [42, 122, 149], "clifford": [42, 88, 89, 90, 91, 92, 94, 95, 96, 103, 114, 118, 119, 120, 122, 129, 130, 149, 151, 152, 154], "uniformli": 42, "param": [42, 47, 48, 49, 70, 79, 91, 96, 106, 110, 112, 114, 115, 126, 127, 128, 130, 139, 142, 143], "decompos": [42, 70], "origin": [42, 76, 81, 140, 141, 153], "under": [43, 149, 153], "list_fid": 43, "wai": [43, 52, 149], "list_coupl": 43, "ideal_prob": 46, "cross": [46, 153], "correl": 46, "rm": 46, "eq": 46, "34": [46, 150], "hadamard": 47, "seri": 47, "linear": 47, "fashion": 47, "symmetr": 47, "halv": 47, "n": [47, 48, 49, 50, 91, 101], "1807": 48, "05572": 48, "2101": 49, "08946": 49, "graph": [50, 51, 52, 57, 59, 60, 61, 62, 64, 65, 67], "n_state": 50, "networkx": [50, 51, 52, 57, 59, 60, 61, 62], "participating_qubit": 50, "qc": [50, 70, 154], "calcul": [51, 59, 65, 81, 112, 136, 147, 149], "cx_map": 51, "particip": 51, "2qb": 51, "subgraph": 51, "edg": [51, 52, 60, 61, 62, 103], "Then": [51, 154], "find": 51, "most": 51, "central": 51, "posit": 51, "next": 51, "start": [51, 57, 125, 154], "smallest": 51, "layer": [51, 59, 63, 67, 68, 70, 71, 76, 100, 101, 103, 104, 105, 126, 136, 154], "coupling_map": [52, 140], "couplingmap": [52, 144], "edges_c": 52, "fidelities_c": 52, "have": [52, 119, 153, 154], "v": [53, 65, 70, 72], "user": [53, 154], "identif": [53, 153], "logger": [54, 147], "everi": 54, "warn": 54, "score": [55, 57, 58, 64, 154], "combinatori": [55, 57], "problem": [55, 57, 59, 60, 61, 62, 64, 65, 154], "qscorebenchmark": [56, 58], "qscoreconfigur": [56, 57], "backend_arg": [57, 70, 76, 91, 96, 101, 103, 104, 105, 118, 119, 120, 126, 127, 129, 130, 133, 137], "generate_maxcut_ansatz": 57, "theta": 57, "ansatz": [57, 59, 61, 63, 67], "qaoa": [57, 59, 63, 67], "maxcut": [57, 59, 60, 61, 62, 63, 67], "end": [57, 70, 76, 153], "variat": 57, "gamma": [57, 59], "beta": [57, 59, 64, 65], "add_all_meta_to_dataset": [57, 70, 76, 96, 101], "choose_qubits_na": 57, "sequenti": [57, 127, 150], "choose_qubits_custom": 57, "match": 57, "num_inst": [58, 65], "num_qaoa_lay": 58, "min_num_nod": 58, "max_num_nod": 58, "use_virtual_nod": [58, 65], "use_classically_optimized_angl": [58, 65], "choose_qubits_routin": [58, 77, 154], "min_num_qubit": 58, "seed": 58, "upon": [58, 71, 77], "angl": [59, 63, 65, 67], "qubit_to_nod": [60, 61], "virtual_nod": [60, 61, 67], "val": 60, "node": [60, 61, 65, 67], "virtual": [60, 61, 65, 67, 140], "cut": [60, 61, 62, 67], "avg": 60, "callabl": [61, 117, 123], "minu": 62, "sign": 62, "solut": 62, "obj": 62, "num_lay": 63, "approximation_ratio": 64, "approxim": [64, 65], "ratio": [64, 65], "abov": [64, 84, 153], "being": [64, 70, 76, 81, 84, 85, 102, 103, 115, 121, 137, 139], "beta_ratio": 65, "beta_std": 65, "backend_nam": [65, 85, 141, 150], "timestamp": [65, 85, 150], "deviat": [65, 77, 80, 124, 137], "classic": [65, 67, 76], "graph_phys": 67, "qubit_nod": 67, "use_classical_angl": 67, "qaoa_lay": 67, "solv": 67, "averag": [67, 79, 84, 85, 91, 96, 102, 117, 149], "presenc": 67, "volum": [68, 75, 76, 77, 86, 149, 154], "reflect": [68, 70, 76, 87, 88, 93, 98], "deepest": [68, 76], "clop": [68, 149, 154], "speed": [68, 70], "clops_v": 68, "qv": [68, 70, 71, 76, 77, 79, 80, 84, 85, 149], "clops_h": [68, 71], "squar": 68, "clopsbenchmark": [69, 71], "clopsconfigur": [69, 70], "h": [70, 72], "append_parameterized_unitari": 70, "q0": 70, "q1": 70, "su": 70, "involv": 70, "belong": 70, "generate_single_circuit": [70, 76], "generate_circuit_list": [70, 76], "generate_random_paramet": 70, "templat": 70, "np": [70, 116, 123], "float64": 70, "assign_random_parameters_to_al": 70, "dict_parametrized_circ": 70, "clops_cycl": 70, "sorted_transpiled_qc_list": [70, 76, 146], "cycl": 70, "elaps": [70, 73, 74, 147], "submiss": [70, 76, 101, 126, 127, 153], "generate_transpiled_clops_templ": 70, "num_upd": 71, "num_shot": 71, "clops_h_bool": 71, "establish": 71, "By": 71, "definit": [71, 153], "2110": [71, 154], "14108": [71, 154], "quant": [71, 103, 154], "ph": [71, 103, 154], "rigor": 71, "loos": 71, "www": [71, 153], "ibm": [71, 132], "com": 71, "blog": 71, "restrict": [71, 77, 144], "clops_data": 73, "job_meta": 74, "quantumvolumebenchmark": [75, 77], "quantumvolumeconfigur": [75, 76, 154], "add_all_circuits_to_dataset": [76, 91, 96], "classical_permut": 76, "permut": 76, "avoid": 76, "swap": 76, "get_rem_quasidistro": 76, "sorted_qc_list_indic": [76, 81], "execution_result": [76, 78], "quasicollect": [76, 82, 133], "quasiprob": [76, 82, 133, 134], "qubii": 76, "untranspil": [76, 81, 118, 140, 149], "submit_single_qv_job": 76, "submit": [76, 101, 126, 127, 146, 150, 153], "vanilla": [76, 85, 101, 126, 127], "dd": [76, 85, 101, 126, 127], "num_sigma": [77, 84, 85, 154], "criteria": 77, "consensu": 77, "unmitig": 77, "1_000": [77, 154], "ideal_heavy_output": [78, 82], "hop": [78, 79, 80, 84, 85, 149], "heavi": [78, 79, 80, 81, 82, 83, 84], "cumul": [79, 80], "individu": [79, 80, 124, 149, 153, 154], "trial": [79, 80], "qc_list": [81, 140], "bitrstr": 81, "all_rem_quasidistro": 82, "noiseless": 82, "project": [83, 154], "onto": 83, "associ": [83, 153], "heavy_output_prob": 84, "over": [84, 132, 139], "within": [84, 153, 154], "sigma": [84, 85], "qv_result": 85, "qv_results_typ": 85, "in_volumetr": 85, "plot_rem": 85, "come": [85, 102, 134], "context": 85, "volumetr": 85, "rb": [88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 115, 116, 117, 119, 121, 123, 124, 127, 128, 130, 149, 151, 152], "cliffordrandomizedbenchmark": [89, 90, 150], "cliffordrbconfigur": [89, 91, 150], "qubits_arrai": [90, 95, 100, 119, 124, 126, 128, 130, 150, 154], "sequence_length": [90, 95, 118, 119, 150, 154], "num_circuit_sampl": [90, 95, 100, 118, 150, 154], "parallel_execut": [90, 95, 150, 154], "length": [90, 95, 102, 106, 118, 119, 120, 150], "add_all_metadata_to_dataset": 91, "interleav": [93, 94, 95, 96, 97, 100, 105, 116, 117, 118, 119, 120, 124, 149, 150, 154], "interleavedrandomizedbenchmark": [94, 95], "interleavedrbconfigur": [94, 96, 154], "interleaved_g": [95, 118, 119, 120, 124, 154], "interleaved_gate_param": [95, 154], "simultaneous_fit": [95, 154], "amplitud": [95, 116, 154], "offset": [95, 116, 154], "irb": [95, 117, 149], "ygate": 95, "czgate": [95, 100, 154], "enter": [95, 117, 119], "simultan": [95, 117], "specif": [96, 140, 153], "mirror": [98, 99, 100, 101, 105, 149, 154], "mirrorrandomizedbenchmark": [99, 100, 154], "mirrorrbconfigur": [99, 101, 154], "depths_arrai": [100, 154], "num_pauli_sampl": [100, 102, 106, 154], "two_qubit_gate_ensembl": [100, 103, 104, 105, 154], "density_2q_g": [100, 103, 104, 105, 154], "25": [100, 103, 104, 105, 150, 154], "mrb": [100, 101, 104, 107, 117, 124, 126, 127, 149], "len": 100, "ensembl": [100, 101, 103, 124], "cxgate": 100, "submit_single_mrb_job": 101, "sorted_transpiled_circuit_dict": [101, 126], "canon": [101, 104, 105, 126], "noisy_count": 102, "ideal_count": 102, "num_circ_sampl": [102, 106, 120], "polar": [102, 117], "noisi": 102, "rescal": 102, "few": 102, "effect": 102, "real": [102, 154], "simul": [102, 132, 149], "qubit_set": [103, 117], "n_layer": 103, "grab": [103, 132], "see": [103, 153], "2204": 103, "07568": 103, "2q": [103, 105, 122, 124], "subsequ": [103, 153], "valueerror": [103, 106, 130], "do": [103, 132, 153], "up": [103, 154], "uniti": 103, "circ_sampl": 104, "pauli_samples_per_circ": [104, 105], "dress": [104, 105, 106], "input_list": 106, "flat": 106, "shape": 106, "lmfit": [108, 109, 117], "extend": 108, "shown": 108, "document": [108, 153, 154], "github": [108, 154], "io": 108, "py": [108, 154], "example_fit_multi_dataset": 108, "html": [108, 154], "sphx": 108, "glr": 108, "multi": 108, "func": [109, 110, 111, 112, 117, 123], "initial_guess": 109, "constraint": [109, 154], "simultaneously_fit_var": 109, "line": 109, "evalu": 110, "signatur": 111, "residu": 112, "sever": 112, "techniqu": 113, "qc_inv": 114, "clifford_dictionari": 114, "invers": 114, "invert": 114, "de": [114, 120], "stabil": [114, 120, 149], "ground": [115, 121], "depolarization_prob": 116, "depolar": 116, "p": 116, "decai": [116, 124, 149], "rb_identifi": 117, "simultaneous_fit_var": 117, "interleaved_gate_str": 117, "0th": 117, "ap": 117, "m": [117, 150, 154], "b": [117, 153], "stdrb": 117, "clifford_dict": [118, 120], "fir": 118, "cliffords_1q": 119, "cliffords_2q": 119, "num_sampl": [119, 120], "befor": 119, "term": [119, 153], "r": [119, 137, 140], "seq_length": 120, "import": [122, 149, 150, 153, 154], "fit_paramet": 123, "fit_data": 123, "minimizerresult": 123, "violin": 124, "scatter": 124, "shade_stdev": 124, "shade_meanerror": 124, "logscal": 124, "mrb_2q_densiti": 124, "mrb_2q_ensembl": 124, "shade": 124, "titl": [124, 153], "arr": 125, "helper": 125, "relabel": 125, "increasingli": 125, "zero": [125, 149], "5": [125, 150, 153, 154], "7": [125, 150, 153, 154], "note": [125, 134, 149, 154], "sort": [125, 145], "increas": 125, "transpiled_circuit": [127, 133], "margin": [128, 132, 139], "surviv": 128, "gate_id": 129, "gate_param": 129, "m3": [131, 132, 133], "modif": [131, 153], "qpu": 131, "m3iqm": [131, 134], "mthree": [131, 134], "m3mitig": [131, 132], "iter_threshold": 132, "4096": 132, "modifi": [132, 149, 153], "work": [132, 134, 153, 154], "devic": [132, 154], "cals_from_system": 132, "initial_reset": 132, "rep_delai": 132, "cals_fil": 132, "async_c": 132, "cal_id": 132, "array_lik": 132, "min": 132, "1e4": 132, "max_shot": 132, "balanc": 132, "hardwar": [132, 152], "independ": 132, "reset": 132, "begin": 132, "delai": 132, "path": 132, "json": 132, "async": 132, "separ": [132, 149, 153], "thread": 132, "m3error": 132, "call": [132, 149], "progress": 132, "against": [133, 153], "mit": [134, 153], "processor": 134, "argument": [134, 149, 154], "util": 134, "final_measurement_map": 134, "qubit_name_to_index": 134, "quasiprobabilti": 134, "we": [134, 153], "could": 134, "would": 134, "out": [134, 153], "box": 134, "u": 134, "sinc": 134, "circuit_list": 136, "transpiled_qc_list": 137, "barrier": 137, "outermost": 137, "backend_label": 138, "prob_dist": 139, "bit": 139, "basis_g": 140, "drop_final_rz": 140, "optimization_level": 140, "sqg": 140, "z": 140, "drop": 140, "rz": 140, "emploi": 140, "iqm_job": [142, 143], "iqmjob": [142, 143, 146], "relev": 143, "transpiled_circuit_list": 145, "sorted_indic": 145, "sorted_circuit": 145, "sent": [146, 153], "manag": [146, 153, 154], "f": 147, "decor": 147, "statement": [147, 153], "counts_rang": 148, "extract": [148, 154], "were": [148, 149], "report": 149, "displai": [149, 150, 153], "doc": [149, 154], "publish": 149, "ci": 149, "secur": [149, 154], "scan": [149, 154], "lockfil": [149, 154], "bug": 149, "depend": [149, 152], "relat": 149, "benchmark": [149, 151], "modulenotfounderror": 149, "qscore": 149, "enabl": 149, "pyrit": 149, "wrong": 149, "incorrect": 149, "improv": [149, 153], "compil": [149, 153], "revert": 149, "ones": [149, 154], "notebook": 149, "now": [149, 150], "instead": [149, 154], "port": 149, "subclass": 149, "usag": 149, "iqm": [149, 153], "place": [149, 153], "miscellan": 149, "relax": 149, "api": [149, 152, 154], "build": [149, 154], "overwrit": 149, "tutori": 149, "remov": 149, "explicit": 149, "minor": 149, "compat": 149, "longer": 149, "move": 149, "renam": 149, "rebas": 149, "randomizedbenchmark": 149, "quantumvolum": 149, "serial": 149, "some": 149, "available_benchmark": 149, "__init__": 149, "public": 149, "hint": 149, "docstr": 149, "messag": 149, "prevent": 149, "exclus": [149, 153], "jupyt": 149, "load_ext": 150, "autoreload": 150, "extens": 150, "load": 150, "To": [150, 153, 154], "reload": 150, "reload_ext": 150, "fakeadoni": 150, "fakeapollo": 150, "garnet": [150, 154], "deneb": 150, "o": [150, 154], "environ": [150, 154], "iqm_token": [150, 154], "nb": 150, "randomized_benchmark": [150, 154], "clifford_rb": 150, "example_crb": 150, "13": [150, 154], "17": [150, 152, 154], "18": [150, 154], "11": [150, 152, 154], "15": 150, "16": 150, "benchmark_clifford_rb": 150, "run_clifford_rb": 150, "2024": [150, 153], "56": 150, "750": 150, "logging_config": 150, "info": 150, "successfulli": 150, "Will": 150, "31": 150, "63": 150, "831": 150, "992": 150, "341": 150, "040": 150, "469": 150, "23": 150, "291": 150, "292": 150, "349": 150, "541": 150, "600": 150, "756": 150, "837": 150, "24": 150, "025": 150, "30": [150, 154], "171": 150, "905": 150, "544": 150, "899": 150, "32": 150, "624": 150, "004": 150, "43": 150, "319": 150, "569": 150, "777": 150, "840": 150, "44": 150, "048": 150, "098": 150, "qubits_": 150, "_depth_1": 150, "323": 150, "45": 150, "186": 150, "_depth_3": 150, "225": 150, "_depth_7": 150, "267": 150, "_depth_15": 150, "314": 150, "_depth_31": 150, "315": 150, "364": 150, "_depth_63": 150, "416": 150, "417": 150, "476": 150, "542": 150, "615": 150, "616": 150, "697": 150, "789": 150, "890": 150, "conclud": 150, "result_clifford_rb": 150, "931": 150, "938": 150, "945": 150, "952": 150, "959": 150, "966": 150, "972": 150, "979": 150, "986": 150, "993": 150, "999": 150, "46": 150, "006": 150, "013": 150, "946844466999168": 150, "9429197366921651": 150, "attr": 150, "session_timestamp": 150, "20241217": 150, "115553": 150, "execution_timestamp": 150, "backend_configuration_nam": 150, "iqmfakeapollobackend": 150, "depth_1": 150, "time_circuit_gener": 150, "541001081466675": 150, "time_submit": 150, "0006990432739257812": 150, "time_retriev": 150, "22491073608398438": 150, "all_job_metadata": 150, "batch_job_1": 150, "job_id": 150, "8f305755": 150, "e038": 150, "4596": 150, "8617": 150, "d96ba3f42ca9": 150, "aer_simul": 150, "statu": 150, "circuits_in_batch": 150, "depth_3": 150, "05647683143615723": 150, "0005230903625488281": 150, "2fe0b406": 150, "8977": 150, "4567": 150, "bba0": 150, "d4168f0883ed": 150, "depth_7": 150, "19257187843322754": 150, "0004839897155761719": 150, "8299918c": 150, "be26": 150, "40d5": 150, "8778": 150, "9ea4468a1df2": 150, "depth_15": 150, "05831408500671387": 150, "0004811286926269531": 150, "174640c4": 150, "9ff3": 150, "4ca3": 150, "9ffc": 150, "d6aa5be304f3": 150, "depth_31": 150, "1564040184020996": 150, "0006189346313476562": 150, "7bb739f2": 150, "31bc": 150, "40af": 150, "8dbf": 150, "1d60a9310391": 150, "depth_63": 150, "08135986328125": 150, "0004200935363769531": 150, "f414a2c1": 150, "75c8": 150, "4d5a": 150, "9e4b": 150, "ccce29903f5f": 150, "147684812545776": 150, "0005502700805664062": 150, "00039887428283691406": 150, "8832576a": 150, "6d6e": 150, "4abe": 150, "8cfa": 150, "5001e6bb98e": 150, "08015298843383789": 150, "00039315223693847656": 150, "ecc1bcea": 150, "ef4c": 150, "4f35": 150, "9284": 150, "ab49af0c5b9f": 150, "16936397552490234": 150, "0003960132598876953": 150, "5582c842": 150, "0f07": 150, "46b6": 150, "96be": 150, "2fb3925b19d9": 150, "20774221420288086": 150, "0004191398620605469": 150, "6423b02b": 150, "8417": 150, "4300": 150, "b7ac": 150, "84d59f87a51f": 150, "0635080337524414": 150, "0004169940948486328": 150, "0b324804": 150, "44fe": 150, "4c16": 150, "83eb": 150, "08e5cd67aa79": 150, "20784401893615723": 150, "0004961490631103516": 150, "6c633640": 150, "d4b4": 150, "47de": 150, "a46d": 150, "d3ae4c84d212": 150, "avg_gate_fidel": 150, "0012220693932290373": 150, "001545469960991071": 150, "releas": 152, "date": [152, 153], "2025": 152, "01": 152, "finland": 152, "verif": [152, 154], "tool": [152, 154], "develop": 152, "instal": 152, "refer": [152, 154], "licens": 152, "changelog": 152, "search": 152, "page": [152, 153], "apach": 153, "januari": 153, "2004": 153, "AND": 153, "FOR": 153, "reproduct": 153, "shall": 153, "section": 153, "licensor": 153, "copyright": 153, "owner": 153, "entiti": 153, "author": 153, "grant": 153, "legal": 153, "act": 153, "For": [153, 154], "power": 153, "direct": 153, "indirect": 153, "caus": 153, "contract": 153, "ownership": 153, "fifti": 153, "percent": 153, "more": [153, 154], "outstand": 153, "iii": 153, "benefici": 153, "you": [153, 154], "your": [153, 154], "exercis": 153, "permiss": 153, "prefer": 153, "softwar": 153, "mechan": 153, "transform": 153, "translat": 153, "media": 153, "authorship": 153, "made": 153, "notic": 153, "attach": 153, "appendix": 153, "editori": 153, "revis": 153, "elabor": 153, "whole": 153, "remain": 153, "mere": 153, "link": 153, "bind": 153, "interfac": 153, "thereof": 153, "contribut": 153, "addit": [153, 154], "intention": 153, "inclus": 153, "behalf": 153, "electron": 153, "verbal": 153, "written": 153, "commun": 153, "mail": 153, "issu": 153, "track": 153, "discuss": 153, "exclud": 153, "conspicu": 153, "mark": 153, "design": [153, 154], "Not": 153, "contributor": 153, "whom": 153, "been": 153, "receiv": 153, "incorpor": 153, "subject": 153, "herebi": 153, "perpetu": 153, "worldwid": 153, "charg": 153, "royalti": 153, "irrevoc": 153, "reproduc": 153, "publicli": 153, "sublicens": 153, "patent": 153, "except": 153, "offer": 153, "sell": 153, "transfer": 153, "claim": 153, "necessarili": 153, "infring": 153, "alon": 153, "institut": 153, "litig": 153, "counterclaim": 153, "lawsuit": 153, "alleg": 153, "constitut": 153, "contributori": 153, "redistribut": 153, "medium": 153, "without": 153, "meet": 153, "must": [153, 154], "recipi": 153, "carri": 153, "promin": 153, "c": 153, "retain": 153, "trademark": 153, "pertain": 153, "part": 153, "d": 153, "readabl": 153, "wherev": 153, "third": 153, "parti": 153, "normal": 153, "appear": 153, "content": 153, "own": [153, 154], "alongsid": 153, "addendum": 153, "cannot": 153, "constru": 153, "compli": 153, "unless": 153, "explicitli": 153, "notwithstand": 153, "noth": 153, "herein": 153, "supersed": 153, "agreement": 153, "regard": 153, "trade": 153, "servic": [153, 154], "product": 153, "reason": 153, "customari": 153, "disclaim": 153, "warranti": 153, "law": 153, "agre": 153, "AS": 153, "OR": 153, "OF": 153, "kind": 153, "express": 153, "impli": 153, "merchant": 153, "particular": 153, "sole": 153, "respons": 153, "appropri": 153, "risk": 153, "liabil": 153, "event": 153, "theori": 153, "tort": 153, "neglig": 153, "deliber": [153, 154], "grossli": 153, "liabl": 153, "damag": 153, "special": 153, "incident": 153, "consequenti": 153, "charact": 153, "aris": 153, "inabl": 153, "loss": 153, "goodwil": 153, "stoppag": 153, "failur": 153, "malfunct": 153, "commerci": 153, "even": 153, "advis": 153, "fee": 153, "indemn": 153, "oblig": 153, "right": 153, "howev": [153, 154], "indemnifi": 153, "defend": 153, "hold": 153, "harmless": 153, "incur": 153, "assert": 153, "boilerpl": 153, "enclos": 153, "bracket": 153, "don": 153, "t": 153, "comment": 153, "syntax": 153, "descript": 153, "print": 153, "easier": 153, "archiv": 153, "complianc": 153, "languag": 153, "govern": 153, "repositori": [153, 154], "licenc": 153, "src": 153, "raphael": 153, "brieger": 153, "ingo": 153, "roth": 153, "martin": 153, "kliesch": 153, "folder": [153, 154], "comprehens": 154, "modular": 154, "easi": 154, "command": 154, "phy": 154, "rev": 154, "85": 154, "042311": 154, "2012": 154, "lett": 154, "109": 154, "080505": 154, "prx": 154, "010325": 154, "2023": 154, "129": 154, "150502": 154, "2022": 154, "holist": 154, "032328": 154, "2019": 154, "entangl": 154, "0712": 154, "0921": 154, "2007": 154, "ieee": 154, "tran": 154, "eng": 154, "split": 154, "legaci": 154, "onc": 154, "wrap": 154, "benchmarkexperi": 154, "uv": 154, "highli": 154, "packag": 154, "With": 154, "machin": 154, "venv": 154, "read": 154, "sure": 154, "prompt": 154, "pip": 154, "suppli": 154, "txt": 154, "lock": 154, "directli": 154, "repo": 154, "pypi": 154, "lint": 154, "cicd": 154, "mode": 154, "clone": 154, "directori": 154, "docbuild": 154, "pyproject": 154, "toml": 154, "commit": 154, "upgrad": 154, "transit": 154, "access": 154, "reson": 154, "cloud": 154, "prem": 154, "adapt": 154, "platform": 154, "token": 154, "authent": 154, "your_token": 154, "interleaved_rb": 154, "mirror_rb": 154, "quantum_volum": 154, "example_irb": 154, "iswapg": 154, "example_mrb": 154, "example_qv": 154, "500": 154, "60_000": 154, "want": 154, "iqmprovid": 154, "station": 154, "fi": 154, "coco": 154, "get_backend": 154, "example_experi": 154, "setup": 154, "weekli": 154, "daili": 154, "gitlab": 154, "scheduled_experi": 154}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "compressive_gst"], [38, 0, 0, "-", "entanglement"], [54, 0, 0, "-", "logging_config"], [55, 0, 0, "-", "optimization"], [68, 0, 0, "-", "quantum_volume"], [87, 0, 0, "-", "randomized_benchmarking"], [131, 0, 0, "-", "readout_mitigation"], [135, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[20, 0, 0, "-", "compressive_gst"], [26, 0, 0, "-", "gst_analysis"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[21, 1, 1, "", "CompressiveGST"], [22, 1, 1, "", "GSTConfiguration"], [23, 5, 1, "", "create_predefined_gate_set"], [24, 5, 1, "", "parse_gate_set"], [25, 5, 1, "", "parse_layouts"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_meas_circuits"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, 3, 1, "", "batch_size"], [22, 3, 1, "", "benchmark"], [22, 3, 1, "", "bootstrap_samples"], [22, 3, 1, "", "convergence_criteria"], [22, 3, 1, "", "from_init"], [22, 3, 1, "", "gate_labels"], [22, 3, 1, "", "gate_set"], [22, 3, 1, "", "max_inits"], [22, 3, 1, "", "max_iterations"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_circuits"], [22, 3, 1, "", "opt_method"], [22, 3, 1, "", "qubit_layouts"], [22, 3, 1, "", "rank"], [22, 3, 1, "", "seq_len_list"], [22, 3, 1, "", "shots"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[27, 5, 1, "", "bootstrap_errors"], [28, 5, 1, "", "dataframe_to_figure"], [29, 5, 1, "", "dataset_counts_to_mgst_format"], [30, 5, 1, "", "generate_basis_labels"], [31, 5, 1, "", "generate_gate_results"], [32, 5, 1, "", "generate_non_gate_results"], [33, 5, 1, "", "generate_unit_rank_gate_results"], [34, 5, 1, "", "mgst_analysis"], [35, 5, 1, "", "pandas_results_to_observations"], [36, 5, 1, "", "result_str_to_floats"], [37, 5, 1, "", "run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[39, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[40, 1, 1, "", "GHZBenchmark"], [41, 1, 1, "", "GHZConfiguration"], [42, 5, 1, "", "append_rms"], [43, 5, 1, "", "extract_fidelities"], [44, 5, 1, "", "fidelity_analysis"], [45, 5, 1, "", "fidelity_ghz_coherences"], [46, 5, 1, "", "fidelity_ghz_randomized_measurements"], [47, 5, 1, "", "generate_ghz_linear"], [48, 5, 1, "", "generate_ghz_log_cruz"], [49, 5, 1, "", "generate_ghz_log_mooney"], [50, 5, 1, "", "generate_ghz_spanning_tree"], [51, 5, 1, "", "get_cx_map"], [52, 5, 1, "", "get_edges"], [53, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, 2, 1, "", "add_configuration_to_dataset"], [40, 2, 1, "", "analysis_function"], [40, 2, 1, "", "execute"], [40, 2, 1, "", "generate_coherence_meas_circuits"], [40, 2, 1, "", "generate_native_ghz"], [40, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, 3, 1, "", "benchmark"], [41, 3, 1, "", "cal_url"], [41, 3, 1, "", "custom_qubits_array"], [41, 3, 1, "", "fidelity_routine"], [41, 3, 1, "", "mit_shots"], [41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "num_RMs"], [41, 3, 1, "", "optimize_sqg"], [41, 3, 1, "", "qiskit_optim_level"], [41, 3, 1, "", "qubit_counts"], [41, 3, 1, "", "rem"], [41, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[41, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[56, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[57, 1, 1, "", "QScoreBenchmark"], [58, 1, 1, "", "QScoreConfiguration"], [59, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [60, 5, 1, "", "compute_expectation_value"], [61, 5, 1, "", "create_objective_function"], [62, 5, 1, "", "cut_cost_function"], [63, 5, 1, "", "get_optimal_angles"], [64, 5, 1, "", "is_successful"], [65, 5, 1, "", "plot_approximation_ratios"], [66, 5, 1, "", "qscore_analysis"], [67, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[57, 2, 1, "", "add_all_meta_to_dataset"], [57, 2, 1, "", "analysis_function"], [57, 2, 1, "", "choose_qubits_custom"], [57, 2, 1, "", "choose_qubits_naive"], [57, 2, 1, "", "execute"], [57, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[58, 3, 1, "", "benchmark"], [58, 3, 1, "", "choose_qubits_routine"], [58, 3, 1, "", "custom_qubits_array"], [58, 3, 1, "", "max_num_nodes"], [58, 3, 1, "", "min_num_nodes"], [58, 3, 1, "", "min_num_qubits"], [58, 3, 1, "", "model_computed_fields"], [58, 3, 1, "", "model_config"], [58, 3, 1, "", "model_fields"], [58, 3, 1, "", "num_instances"], [58, 3, 1, "", "num_qaoa_layers"], [58, 3, 1, "", "optimize_sqg"], [58, 3, 1, "", "qiskit_optim_level"], [58, 3, 1, "", "seed"], [58, 3, 1, "", "use_classically_optimized_angles"], [58, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[69, 0, 0, "-", "clops"], [75, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[70, 1, 1, "", "CLOPSBenchmark"], [71, 1, 1, "", "CLOPSConfiguration"], [72, 5, 1, "", "clops_analysis"], [73, 5, 1, "", "plot_times"], [74, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[70, 2, 1, "", "add_all_meta_to_dataset"], [70, 2, 1, "", "analysis_function"], [70, 2, 1, "", "append_parameterized_unitary"], [70, 2, 1, "", "assign_random_parameters_to_all"], [70, 2, 1, "", "clops_cycle"], [70, 2, 1, "", "execute"], [70, 2, 1, "", "generate_circuit_list"], [70, 2, 1, "", "generate_random_parameters"], [70, 2, 1, "", "generate_single_circuit"], [70, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[71, 3, 1, "", "benchmark"], [71, 3, 1, "", "clops_h_bool"], [71, 3, 1, "", "model_computed_fields"], [71, 3, 1, "", "model_config"], [71, 3, 1, "", "model_fields"], [71, 3, 1, "", "num_circuits"], [71, 3, 1, "", "num_shots"], [71, 3, 1, "", "num_updates"], [71, 3, 1, "", "optimize_sqg"], [71, 3, 1, "", "physical_layout"], [71, 3, 1, "", "qiskit_optim_level"], [71, 3, 1, "", "qubits"], [71, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[76, 1, 1, "", "QuantumVolumeBenchmark"], [77, 1, 1, "", "QuantumVolumeConfiguration"], [78, 5, 1, "", "compute_heavy_output_probabilities"], [79, 5, 1, "", "cumulative_hop"], [80, 5, 1, "", "cumulative_std"], [81, 5, 1, "", "get_ideal_heavy_outputs"], [82, 5, 1, "", "get_rem_hops"], [83, 5, 1, "", "heavy_projector"], [84, 5, 1, "", "is_successful"], [85, 5, 1, "", "plot_hop_threshold"], [86, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[76, 2, 1, "", "add_all_circuits_to_dataset"], [76, 2, 1, "", "add_all_meta_to_dataset"], [76, 2, 1, "", "analysis_function"], [76, 2, 1, "", "execute"], [76, 2, 1, "", "generate_circuit_list"], [76, 2, 1, "", "generate_single_circuit"], [76, 2, 1, "", "get_rem_quasidistro"], [76, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[77, 3, 1, "", "benchmark"], [77, 3, 1, "", "choose_qubits_routine"], [77, 3, 1, "", "custom_qubits_array"], [77, 3, 1, "", "mit_shots"], [77, 3, 1, "", "model_computed_fields"], [77, 3, 1, "", "model_config"], [77, 3, 1, "", "model_fields"], [77, 3, 1, "", "num_circuits"], [77, 3, 1, "", "num_sigmas"], [77, 3, 1, "", "optimize_sqg"], [77, 3, 1, "", "physical_layout"], [77, 3, 1, "", "qiskit_optim_level"], [77, 3, 1, "", "rem"], [77, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[88, 0, 0, "-", "clifford_rb"], [93, 0, 0, "-", "interleaved_rb"], [98, 0, 0, "-", "mirror_rb"], [108, 0, 0, "-", "multi_lmfit"], [113, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[89, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[90, 1, 1, "", "CliffordRBConfiguration"], [91, 1, 1, "", "CliffordRandomizedBenchmarking"], [92, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[90, 3, 1, "", "benchmark"], [90, 3, 1, "", "model_computed_fields"], [90, 3, 1, "", "model_config"], [90, 3, 1, "", "model_fields"], [90, 3, 1, "", "num_circuit_samples"], [90, 3, 1, "", "parallel_execution"], [90, 3, 1, "", "qubits_array"], [90, 3, 1, "", "sequence_lengths"], [90, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[91, 2, 1, "", "add_all_circuits_to_dataset"], [91, 2, 1, "", "add_all_metadata_to_dataset"], [91, 2, 1, "", "analysis_function"], [91, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[94, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[95, 1, 1, "", "InterleavedRBConfiguration"], [96, 1, 1, "", "InterleavedRandomizedBenchmarking"], [97, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[95, 3, 1, "", "interleaved_gate"], [95, 3, 1, "", "interleaved_gate_params"], [95, 3, 1, "", "model_computed_fields"], [95, 3, 1, "", "model_config"], [95, 3, 1, "", "model_fields"], [95, 3, 1, "", "num_circuit_samples"], [95, 3, 1, "", "parallel_execution"], [95, 3, 1, "", "qubits_array"], [95, 3, 1, "", "sequence_lengths"], [95, 3, 1, "", "shots"], [95, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[96, 2, 1, "", "add_all_circuits_to_dataset"], [96, 2, 1, "", "add_all_meta_to_dataset"], [96, 2, 1, "", "analysis_function"], [96, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[99, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[100, 1, 1, "", "MirrorRBConfiguration"], [101, 1, 1, "", "MirrorRandomizedBenchmarking"], [102, 5, 1, "", "compute_polarizations"], [103, 5, 1, "", "edge_grab"], [104, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [105, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [106, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [107, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[100, 3, 1, "", "benchmark"], [100, 3, 1, "", "density_2q_gates"], [100, 3, 1, "", "depths_array"], [100, 3, 1, "", "model_computed_fields"], [100, 3, 1, "", "model_config"], [100, 3, 1, "", "model_fields"], [100, 3, 1, "", "num_circuit_samples"], [100, 3, 1, "", "num_pauli_samples"], [100, 3, 1, "", "qiskit_optim_level"], [100, 3, 1, "", "qubits_array"], [100, 3, 1, "", "routing_method"], [100, 3, 1, "", "shots"], [100, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[101, 2, 1, "", "add_all_meta_to_dataset"], [101, 2, 1, "", "analysis_function"], [101, 2, 1, "", "execute"], [101, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[109, 5, 1, "", "create_multi_dataset_params"], [110, 5, 1, "", "eval_func_single_dataset"], [111, 5, 1, "", "get_param_names_from_func_signature"], [112, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[114, 5, 1, "", "compute_inverse_clifford"], [115, 5, 1, "", "estimate_survival_probabilities"], [116, 5, 1, "", "exponential_rb"], [117, 5, 1, "", "fit_decay_lmfit"], [118, 5, 1, "", "generate_all_rb_circuits"], [119, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [120, 5, 1, "", "generate_random_clifford_seq_circuits"], [121, 5, 1, "", "get_survival_probabilities"], [122, 5, 1, "", "import_native_gate_cliffords"], [123, 5, 1, "", "lmfit_minimizer"], [124, 5, 1, "", "plot_rb_decay"], [125, 5, 1, "", "relabel_qubits_array_from_zero"], [126, 5, 1, "", "submit_parallel_rb_job"], [127, 5, 1, "", "submit_sequential_rb_jobs"], [128, 5, 1, "", "survival_probabilities_parallel"], [129, 5, 1, "", "validate_irb_gate"], [130, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[132, 1, 1, "", "M3IQM"], [133, 5, 1, "", "apply_readout_error_mitigation"], [134, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[132, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[136, 5, 1, "", "count_2q_layers"], [137, 5, 1, "", "count_native_gates"], [138, 5, 1, "", "get_iqm_backend"], [139, 5, 1, "", "marginal_distribution"], [140, 5, 1, "", "perform_backend_transpilation"], [141, 5, 1, "", "reduce_to_active_qubits"], [142, 5, 1, "", "retrieve_all_counts"], [143, 5, 1, "", "retrieve_all_job_metadata"], [144, 5, 1, "", "set_coupling_map"], [145, 5, 1, "", "sort_batches_by_final_layout"], [146, 5, 1, "", "submit_execute"], [147, 5, 1, "", "timeit"], [148, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": 18, "compressive_gst": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "compressivegst": 21, "gstconfigur": 22, "create_predefined_gate_set": 23, "parse_gate_set": 24, "parse_layout": 25, "gst_analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "bootstrap_error": 27, "dataframe_to_figur": 28, "dataset_counts_to_mgst_format": 29, "generate_basis_label": 30, "generate_gate_result": 31, "generate_non_gate_result": 32, "generate_unit_rank_gate_result": 33, "mgst_analysi": 34, "pandas_results_to_observ": 35, "result_str_to_float": 36, "run_mgst_wrapp": 37, "entangl": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "ghz": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "ghzbenchmark": 40, "ghzconfigur": 41, "append_rm": 42, "extract_fidel": 43, "fidelity_analysi": 44, "fidelity_ghz_coher": 45, "fidelity_ghz_randomized_measur": 46, "generate_ghz_linear": 47, "generate_ghz_log_cruz": 48, "generate_ghz_log_moonei": 49, "generate_ghz_spanning_tre": 50, "get_cx_map": 51, "get_edg": 52, "plot_fidel": 53, "logging_config": 54, "optim": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "qscore": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "qscorebenchmark": 57, "qscoreconfigur": 58, "calculate_optimal_angles_for_qaoa_p1": 59, "compute_expectation_valu": 60, "create_objective_funct": 61, "cut_cost_funct": 62, "get_optimal_angl": 63, "is_success": [64, 84], "plot_approximation_ratio": 65, "qscore_analysi": 66, "run_qaoa": 67, "quantum_volum": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "clop": [69, 70, 71, 72, 73, 74], "clopsbenchmark": 70, "clopsconfigur": 71, "clops_analysi": 72, "plot_tim": 73, "retrieve_clops_elapsed_tim": 74, "quantumvolumebenchmark": 76, "quantumvolumeconfigur": 77, "compute_heavy_output_prob": 78, "cumulative_hop": 79, "cumulative_std": 80, "get_ideal_heavy_output": 81, "get_rem_hop": 82, "heavy_projector": 83, "plot_hop_threshold": 85, "qv_analysi": 86, "randomized_benchmark": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "clifford_rb": [88, 89, 90, 91, 92], "cliffordrbconfigur": 90, "cliffordrandomizedbenchmark": 91, "clifford_rb_analysi": 92, "interleaved_rb": [93, 94, 95, 96, 97], "interleavedrbconfigur": 95, "interleavedrandomizedbenchmark": 96, "interleaved_rb_analysi": 97, "mirror_rb": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "mirrorrbconfigur": 100, "mirrorrandomizedbenchmark": 101, "compute_polar": 102, "edge_grab": 103, "generate_fixed_depth_mrb_circuit": 104, "generate_pauli_dressed_mrb_circuit": 105, "list_to_numcircuit_times_numpauli_matrix": 106, "mrb_analysi": 107, "multi_lmfit": [108, 109, 110, 111, 112], "create_multi_dataset_param": 109, "eval_func_single_dataset": 110, "get_param_names_from_func_signatur": 111, "multi_dataset_residu": 112, "randomized_benchmarking_common": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "compute_inverse_clifford": 114, "estimate_survival_prob": 115, "exponential_rb": 116, "fit_decay_lmfit": 117, "generate_all_rb_circuit": 118, "generate_fixed_depth_parallel_rb_circuit": 119, "generate_random_clifford_seq_circuit": 120, "get_survival_prob": 121, "import_native_gate_clifford": 122, "lmfit_minim": 123, "plot_rb_decai": 124, "relabel_qubits_array_from_zero": 125, "submit_parallel_rb_job": 126, "submit_sequential_rb_job": 127, "survival_probabilities_parallel": 128, "validate_irb_g": 129, "validate_rb_qubit": 130, "readout_mitig": [131, 132, 133, 134], "m3iqm": 132, "apply_readout_error_mitig": 133, "readout_error_m3": 134, "util": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "count_2q_lay": 136, "count_native_g": 137, "get_iqm_backend": 138, "marginal_distribut": 139, "perform_backend_transpil": 140, "reduce_to_active_qubit": 141, "retrieve_all_count": 142, "retrieve_all_job_metadata": 143, "set_coupling_map": 144, "sort_batches_by_final_layout": 145, "submit_execut": 146, "timeit": 147, "xrvariable_to_count": 148, "changelog": 149, "version": 149, "2": 149, "11": 149, "10": 149, "9": 149, "8": 149, "7": 149, "6": 149, "5": 149, "4": 149, "3": 149, "1": 149, "0": 149, "12": 149, "clifford": 150, "random": 150, "rb": 150, "exampl": [150, 151], "choos": 150, "defin": 150, "backend": 150, "set": 150, "token": 150, "us": [150, 154], "reson": 150, "configur": 150, "run": 150, "experi": 150, "perform": 150, "analysi": 150, "content": 152, "indic": 152, "tabl": 152, "licens": 153, "instal": 154, "latest": 154, "releas": 154, "option": 154, "depend": 154, "develop": 154, "chang": 154, "character": 154, "physic": 154, "hardwar": 154, "jupyt": 154, "notebook": 154, "python": 154, "script": 154, "schedul": 154, "ci": 154, "cd": 154, "pipelin": 154}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, "iqm-benchmarks-compressive-gst-compressive-gst-compressivegst"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, "iqm-benchmarks-compressive-gst-compressive-gst-gstconfiguration"]], "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set": [[23, "iqm-benchmarks-compressive-gst-compressive-gst-create-predefined-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set": [[24, "iqm-benchmarks-compressive-gst-compressive-gst-parse-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts": [[25, "iqm-benchmarks-compressive-gst-compressive-gst-parse-layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors": [[27, "iqm-benchmarks-compressive-gst-gst-analysis-bootstrap-errors"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure": [[28, "iqm-benchmarks-compressive-gst-gst-analysis-dataframe-to-figure"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format": [[29, "iqm-benchmarks-compressive-gst-gst-analysis-dataset-counts-to-mgst-format"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels": [[30, "iqm-benchmarks-compressive-gst-gst-analysis-generate-basis-labels"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results": [[31, "iqm-benchmarks-compressive-gst-gst-analysis-generate-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results": [[32, "iqm-benchmarks-compressive-gst-gst-analysis-generate-non-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results": [[33, "iqm-benchmarks-compressive-gst-gst-analysis-generate-unit-rank-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis": [[34, "iqm-benchmarks-compressive-gst-gst-analysis-mgst-analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations": [[35, "iqm-benchmarks-compressive-gst-gst-analysis-pandas-results-to-observations"]], "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats": [[36, "iqm-benchmarks-compressive-gst-gst-analysis-result-str-to-floats"]], "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper": [[37, "iqm-benchmarks-compressive-gst-gst-analysis-run-mgst-wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.append_rms": [[42, "iqm-benchmarks-entanglement-ghz-append-rms"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[43, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[44, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[45, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[46, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[47, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[48, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[49, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[50, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[51, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[52, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[53, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[54, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[55, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[56, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[57, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[58, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[59, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[60, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[61, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[62, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[63, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[64, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[65, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[66, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[67, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[69, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[70, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[71, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[72, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[73, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[74, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[75, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[76, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[77, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[78, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[79, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[80, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[81, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[82, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[83, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[84, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[85, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[86, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[87, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[89, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[90, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[91, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[92, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[94, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[95, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[96, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[97, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[99, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[100, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[101, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[102, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[103, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[104, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[105, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[106, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[107, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[108, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[109, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[110, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[111, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[112, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[113, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[114, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[115, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[116, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[117, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[118, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[119, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[120, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[121, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[122, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[123, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[124, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[125, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[126, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[127, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[128, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[129, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[130, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[131, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[132, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[133, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[134, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[135, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.count_2q_layers": [[136, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[137, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[138, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[139, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[140, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[141, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[142, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[143, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[144, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[145, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[146, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[147, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[148, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[149, "changelog"]], "Version 2.11": [[149, "version-2-11"]], "Version 2.10": [[149, "version-2-10"]], "Version 2.9": [[149, "version-2-9"]], "Version 2.8": [[149, "version-2-8"]], "Version 2.7": [[149, "version-2-7"]], "Version 2.6": [[149, "version-2-6"]], "Version 2.5": [[149, "version-2-5"]], "Version 2.4": [[149, "version-2-4"]], "Version 2.3": [[149, "version-2-3"]], "Version 2.2": [[149, "version-2-2"]], "Version 2.1": [[149, "version-2-1"]], "Version 2.0": [[149, "version-2-0"]], "Version 1.12": [[149, "version-1-12"]], "Version 1.11": [[149, "version-1-11"]], "Version 1.10": [[149, "version-1-10"]], "Version 1.9": [[149, "version-1-9"]], "Version 1.8": [[149, "version-1-8"]], "Version 1.7": [[149, "version-1-7"]], "Version 1.6": [[149, "version-1-6"]], "Version 1.5": [[149, "version-1-5"]], "Version 1.4": [[149, "version-1-4"]], "Version 1.3": [[149, "version-1-3"]], "Version 1.2": [[149, "version-1-2"]], "Version 1.1": [[149, "version-1-1"]], "Version 1.0": [[149, "version-1-0"]], "Clifford Randomized Benchmarking (RB) Example": [[150, "clifford-randomized-benchmarking-rb-example"]], "Choose (or define) a backend": [[150, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[150, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[150, "randomized-benchmarking-configuration"]], "Run the experiment": [[150, "run-the-experiment"]], "Perform the analysis": [[150, "perform-the-analysis"]], "Examples": [[151, "examples"]], "IQM Benchmarks": [[152, "iqm-benchmarks"], [154, "iqm-benchmarks"]], "Contents": [[152, "contents"]], "Indices and tables": [[152, "indices-and-tables"]], "License": [[153, "license"]], "Installation (latest release)": [[154, "installation-latest-release"]], "Optional dependencies": [[154, "optional-dependencies"]], "Development installation (latest changes)": [[154, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[154, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[154, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[154, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.compressive_gst"], [20, "module-iqm.benchmarks.compressive_gst.compressive_gst"], [26, "module-iqm.benchmarks.compressive_gst.gst_analysis"], [38, "module-iqm.benchmarks.entanglement"], [39, "module-iqm.benchmarks.entanglement.ghz"], [54, "module-iqm.benchmarks.logging_config"], [55, "module-iqm.benchmarks.optimization"], [56, "module-iqm.benchmarks.optimization.qscore"], [68, "module-iqm.benchmarks.quantum_volume"], [69, "module-iqm.benchmarks.quantum_volume.clops"], [75, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [87, "module-iqm.benchmarks.randomized_benchmarking"], [88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [89, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [94, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [99, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [108, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [113, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [131, "module-iqm.benchmarks.readout_mitigation"], [135, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "compressivegst (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST"]], "add_configuration_to_dataset() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst static method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.analysis_function"]], "execute() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.execute"]], "generate_meas_circuits() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.generate_meas_circuits"]], "gstconfiguration (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration"]], "batch_size (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.batch_size"]], "benchmark (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.benchmark"]], "bootstrap_samples (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.bootstrap_samples"]], "convergence_criteria (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.convergence_criteria"]], "from_init (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.from_init"]], "gate_labels (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_labels"]], "gate_set (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_set"]], "max_inits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_inits"]], "max_iterations (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_iterations"]], "model_computed_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_config"]], "model_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.num_circuits"]], "opt_method (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.opt_method"]], "qubit_layouts (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.qubit_layouts"]], "rank (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rank"]], "seq_len_list (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.seq_len_list"]], "shots (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.shots"]], "create_predefined_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[23, "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set"]], "parse_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[24, "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set"]], "parse_layouts() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[25, "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "bootstrap_errors() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[27, "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors"]], "dataframe_to_figure() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[28, "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure"]], "dataset_counts_to_mgst_format() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[29, "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format"]], "generate_basis_labels() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[30, "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels"]], "generate_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[31, "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results"]], "generate_non_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[32, "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results"]], "generate_unit_rank_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[33, "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results"]], "mgst_analysis() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[34, "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis"]], "pandas_results_to_observations() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[35, "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations"]], "result_str_to_floats() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[36, "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats"]], "run_mgst_wrapper() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[37, "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "append_rms() (in module iqm.benchmarks.entanglement.ghz)": [[42, "iqm.benchmarks.entanglement.ghz.append_rms"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[43, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[44, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[45, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[46, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[47, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[48, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[49, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[50, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[51, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[52, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[53, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[54, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[55, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[56, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[57, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[58, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[59, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[60, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[61, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[62, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[63, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[64, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[65, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[66, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[67, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[69, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[71, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[72, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[73, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[74, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[75, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[78, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[79, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[80, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[81, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[82, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[83, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[84, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[85, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[86, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[87, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[89, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[92, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[94, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[97, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[99, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[102, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[103, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[104, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[105, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[107, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[108, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[109, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[110, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[111, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[112, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[113, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[114, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[115, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[116, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[117, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[118, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[119, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[120, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[121, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[122, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[123, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[124, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[125, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[126, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[127, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[128, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[129, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[130, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[131, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[132, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[132, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[133, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[134, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[135, "module-iqm.benchmarks.utils"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[136, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[137, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[138, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[139, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[140, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[141, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[142, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[143, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[144, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[145, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[146, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[147, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[148, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})