Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "api/iqm.benchmarks.compressive_gst.gst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.GraphPositions", "api/iqm.benchmarks.utils.bootstrap_counts", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.extract_fidelities", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.plot_layout_fidelity_graph", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_ghz_deneb", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/example_quantum_volume_deneb", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set.rst", "api/iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats.rst", "api/iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.GraphPositions.rst", "api/iqm.benchmarks.utils.bootstrap_counts.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.extract_fidelities.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.plot_layout_fidelity_graph.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_ghz_deneb.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/example_quantum_volume_deneb.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst", "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST", "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration", "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set", "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts", "iqm.benchmarks.compressive_gst.gst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors", "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure", "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format", "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels", "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results", "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis", "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations", "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats", "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.GraphPositions", "iqm.benchmarks.utils.bootstrap_counts", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.extract_fidelities", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.plot_layout_fidelity_graph", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "QV on Deneb", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 20, 69, 114, 120, 128, 130, 136, 142, 157, 158, 163, 169, 172, 173], "python": 1, "librari": [1, 94, 99, 128, 154, 164], "suit": [1, 173], "qcvv": [1, 28, 155, 171, 173], "subpackag": [1, 19, 38, 54, 67, 86, 87, 92, 97], "modul": [1, 5, 15, 19, 38, 53, 54, 67, 86, 87, 92, 97, 171], "gener": [2, 3, 18, 20, 21, 22, 30, 33, 38, 40, 41, 45, 46, 47, 48, 49, 50, 56, 64, 69, 72, 75, 84, 90, 94, 95, 99, 102, 103, 104, 107, 108, 117, 118, 119, 134, 135, 136, 143, 152, 157, 158, 159, 161, 162, 163, 164, 165, 172], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 24, 39, 40, 41, 55, 56, 57, 68, 69, 70, 74, 75, 76, 88, 89, 90, 93, 94, 95, 98, 99, 100, 117, 130, 131, 134, 135, 152, 154, 155, 172, 173], "inherit": [2, 3, 5, 15, 20, 39, 55, 68, 74, 88, 93, 98, 130, 134], "benchmarkbas": [2, 4, 173], "abc": [2, 3, 5, 6, 20, 39, 55, 68, 74, 88, 93, 98], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 24, 39, 41, 55, 57, 68, 70, 74, 76, 88, 89, 93, 94, 98, 99, 173], "pydant": [2, 4, 20, 22, 39, 41, 55, 57, 68, 70, 74, 76, 88, 89, 93, 94, 98, 99], "main": [2, 7, 8, 20, 21, 39, 55, 68, 74, 88, 93, 98, 157], "basemodel": [2, 4, 20, 39, 55, 68, 74, 88, 93, 98], "backend": [3, 6, 20, 21, 22, 23, 25, 29, 40, 41, 48, 56, 64, 69, 70, 75, 76, 84, 90, 95, 100, 102, 103, 104, 117, 118, 125, 126, 128, 129, 131, 132, 133, 138, 139, 140, 142, 144, 147, 148, 149, 152, 155, 162, 163, 173], "iqmbackendbas": [3, 6, 21, 40, 56, 69, 75, 90, 95, 100, 102, 103, 104, 117, 118, 119, 125, 126, 128, 129, 132, 138, 140, 142, 147, 149], "configur": [3, 4, 6, 21, 22, 24, 25, 27, 29, 32, 33, 35, 37, 40, 41, 56, 57, 69, 70, 75, 76, 83, 89, 90, 94, 95, 99, 100, 152, 172, 173], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 43, 50, 56, 57, 59, 69, 70, 75, 76, 89, 90, 94, 95, 99, 100, 112, 131, 135, 152, 153, 157, 158, 172], "The": [3, 6, 7, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 56, 57, 60, 66, 69, 70, 72, 75, 76, 78, 79, 81, 82, 89, 90, 94, 95, 99, 100, 101, 102, 103, 113, 123, 127, 133, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 150, 157, 158, 159, 162, 163, 164, 168, 169, 170, 172, 173], "implement": [3, 5, 6, 40, 41, 44, 162, 163], "all": [3, 4, 6, 7, 16, 17, 18, 22, 27, 30, 31, 33, 40, 41, 50, 52, 56, 63, 69, 73, 75, 77, 78, 79, 82, 83, 89, 90, 94, 95, 100, 117, 123, 125, 126, 131, 145, 146, 152, 155, 157, 158, 159, 161, 162, 163, 165, 167, 168, 169, 170, 172, 173], "from": [3, 4, 6, 7, 11, 21, 22, 27, 29, 32, 33, 35, 36, 37, 40, 41, 48, 50, 51, 57, 60, 66, 70, 72, 73, 75, 76, 77, 82, 84, 89, 94, 99, 101, 110, 123, 124, 127, 131, 133, 136, 139, 140, 143, 145, 146, 147, 151, 152, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173], "which": [3, 6, 7, 8, 19, 22, 24, 29, 30, 31, 37, 40, 41, 48, 51, 56, 57, 65, 67, 69, 70, 71, 75, 85, 89, 90, 91, 94, 95, 96, 99, 100, 106, 117, 123, 127, 131, 139, 144, 157, 158, 162, 163, 164, 172, 173], "thei": [3, 17, 32, 164], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 19, 21, 22, 40, 41, 43, 56, 57, 69, 70, 75, 76, 89, 90, 94, 95, 99, 100, 131, 135, 142, 152, 157, 158, 160, 161, 162, 163, 164, 168, 169], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 160, 161, 162, 163, 164], "abstract": [3, 6, 164], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 23, 24, 41, 52, 57, 64, 70, 72, 76, 84, 89, 94, 99, 110, 116, 117, 133, 135, 139, 140, 143, 144, 152, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 172], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 95, 96, 100, 101, 102, 103, 104, 105, 106, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 20, 21, 37, 40, 50, 54, 56, 64, 67, 69, 70, 75, 76, 77, 84, 89, 90, 94, 95, 99, 100, 101, 114, 120, 125, 126, 127, 142, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 172, 173], "full": [3, 19, 20, 22, 70, 76, 164, 173], "given": [3, 6, 7, 11, 22, 30, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 62, 67, 69, 75, 82, 83, 92, 101, 118, 119, 135, 148, 157, 158, 162, 163, 164, 173], "static": [3, 6, 21, 40, 56, 69, 75, 90, 95, 100, 135], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 22, 23, 24, 27, 28, 30, 36, 40, 41, 43, 44, 57, 59, 60, 61, 64, 66, 69, 70, 72, 73, 75, 76, 77, 80, 81, 82, 84, 89, 90, 94, 95, 99, 100, 101, 102, 103, 104, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 154, 155, 157, 161, 162, 163, 164, 166, 168, 169], "check": [3, 25, 63, 83, 154, 157, 158, 162, 163], "whether": [3, 4, 22, 41, 57, 63, 64, 66, 69, 70, 75, 76, 83, 84, 89, 94, 118, 123, 136, 142, 162, 163, 165, 172], "requir": [3, 4, 22, 41, 57, 70, 76, 89, 94, 99, 154, 162, 163, 164, 172, 173], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 23, 25, 27, 31, 32, 37, 40, 41, 50, 51, 75, 76, 104, 123, 129, 141, 143, 144, 152, 154, 157, 158, 162, 163, 164, 170, 172, 173], "met": 3, "valid": [3, 24, 128, 129, 171, 173], "dictionari": [3, 4, 7, 11, 22, 29, 35, 41, 57, 60, 69, 70, 73, 75, 76, 77, 80, 81, 82, 89, 94, 99, 100, 102, 103, 113, 117, 118, 119, 121, 125, 126, 132, 133, 135, 136, 138, 141, 148, 151, 159, 161, 164, 165], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 157, 164, 172], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 28, 30, 41, 48, 51, 57, 64, 69, 70, 75, 76, 89, 94, 99, 102, 103, 104, 108, 113, 116, 117, 118, 119, 123, 125, 126, 128, 131, 135, 136, 142, 143, 144, 145, 149, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 173], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 40, 41, 56, 57, 69, 70, 75, 76, 89, 90, 94, 95, 99, 100, 135, 150, 164, 168, 169, 172], "shot": [4, 22, 41, 57, 70, 75, 76, 89, 94, 99, 125, 126, 131, 132, 149, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "int": [4, 9, 11, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 61, 62, 64, 66, 69, 70, 72, 75, 76, 77, 80, 83, 84, 89, 94, 99, 100, 101, 102, 103, 104, 105, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 131, 132, 135, 136, 137, 139, 141, 142, 143, 145, 147, 148, 149, 151, 162, 163, 164], "256": [4, 57, 70, 76, 89, 94, 99, 159, 161, 166, 167], "max_gates_per_batch": [4, 22, 41, 57, 70, 76, 89, 94, 99, 125, 126, 149, 157, 158, 159, 160, 161, 166, 168, 169, 173], "calset_id": [4, 22, 41, 57, 70, 76, 89, 94, 99, 125, 126, 149, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 173], "routing_method": [4, 22, 41, 57, 70, 76, 89, 94, 99, 103, 104, 142, 157, 158, 159, 160, 161, 166, 168, 169, 173], "liter": [4, 22, 41, 57, 70, 76, 89, 94, 99, 147], "basic": [4, 22, 41, 57, 70, 76, 89, 94, 99, 103, 104], "lookahead": [4, 22, 41, 57, 70, 76, 89, 94, 99], "stochast": [4, 22, 41, 57, 70, 76, 89, 94, 99], "sabr": [4, 22, 41, 57, 70, 76, 89, 94, 99, 142, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 173], "physical_layout": [4, 22, 41, 57, 70, 76, 89, 94, 99, 147, 157, 158, 159, 160, 161, 166, 168, 169, 173], "fix": [4, 22, 29, 41, 57, 70, 76, 89, 94, 99, 100, 103, 118, 125, 127, 147, 152, 157, 158, 159, 160, 161, 164, 168, 169, 173], "batch": [4, 17, 22, 41, 57, 70, 76, 89, 94, 99, 125, 126, 147, 148, 149, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169], "use_dd": [4, 22, 41, 57, 70, 76, 89, 94, 99, 163], "bool": [4, 22, 27, 41, 57, 63, 64, 66, 69, 70, 75, 76, 83, 84, 89, 94, 99, 123, 131, 136, 142], "fals": [4, 22, 27, 41, 57, 70, 76, 84, 89, 94, 99, 123, 131, 136, 142, 157, 159, 161, 168], "dd_strategi": [4, 22, 41, 57, 70, 76, 89, 94, 99], "ddstrategi": [4, 22, 41, 57, 70, 76, 89, 94, 99], "number": [4, 22, 23, 24, 27, 28, 31, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 59, 61, 62, 64, 66, 67, 70, 75, 76, 83, 84, 86, 89, 94, 99, 100, 101, 102, 103, 104, 105, 114, 117, 118, 119, 120, 125, 126, 131, 132, 136, 137, 138, 149, 157, 158, 160, 161, 162, 163, 164], "us": [4, 6, 9, 16, 19, 20, 21, 22, 27, 28, 29, 32, 33, 40, 41, 43, 44, 48, 50, 51, 52, 53, 57, 64, 66, 69, 70, 76, 99, 101, 116, 123, 131, 133, 143, 149, 152, 154, 155, 157, 158, 162, 164, 165, 170, 172], "circuit": [4, 7, 10, 15, 16, 17, 20, 21, 22, 23, 24, 27, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 60, 67, 69, 70, 75, 76, 77, 80, 83, 84, 89, 90, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 113, 114, 117, 118, 119, 120, 125, 126, 128, 131, 132, 137, 138, 142, 144, 148, 149, 151, 152, 154, 155, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171], "default": [4, 6, 12, 22, 27, 30, 41, 57, 70, 75, 76, 84, 89, 94, 99, 119, 123, 131, 136, 147, 157, 159, 161, 164, 165, 167, 169], "i": [4, 6, 7, 19, 21, 22, 23, 24, 27, 28, 29, 30, 33, 41, 45, 48, 50, 52, 56, 57, 63, 65, 66, 69, 70, 71, 75, 76, 83, 84, 85, 89, 90, 91, 94, 95, 96, 99, 100, 101, 105, 106, 109, 124, 128, 131, 136, 139, 142, 143, 147, 152, 154, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173], "2": [4, 22, 23, 24, 28, 51, 57, 63, 76, 83, 99, 118, 124, 137, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173], "8": [4, 22, 124, 154, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 172, 173], "maximum": [4, 31, 66, 125, 126, 149, 157, 158, 164], "gate": [4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 35, 37, 40, 41, 45, 49, 50, 51, 57, 67, 69, 70, 76, 86, 87, 90, 92, 94, 95, 99, 102, 104, 113, 116, 117, 118, 119, 121, 123, 125, 126, 128, 137, 138, 142, 143, 149, 152, 157, 162, 163, 166, 170, 171, 173], "per": [4, 22, 67, 70, 76, 89, 99, 101, 103, 104, 105, 125, 126, 131, 132, 149, 164, 170, 171], "option": [4, 20, 41, 51, 57, 64, 75, 76, 94, 103, 104, 113, 116, 118, 119, 123, 125, 126, 128, 136, 142, 144, 145, 149, 152, 155, 160, 161, 163, 164, 169, 171], "calibr": [4, 6, 41, 51, 75, 76, 125, 126, 131, 132, 139, 143, 149, 152, 161, 162, 163, 165, 167, 169], "id": [4, 149, 160, 161, 165, 167], "last": [4, 22], "avail": [4, 33, 172, 173], "qiskit": [4, 6, 22, 29, 57, 70, 76, 94, 99, 128, 142, 149, 152, 154, 155, 157, 164], "rout": [4, 70, 76, 99, 142, 160, 161, 162, 163, 164, 168, 169], "transpil": [4, 16, 21, 40, 41, 43, 44, 57, 69, 70, 76, 99, 117, 118, 128, 132, 138, 142, 148, 152, 155, 157, 160, 161, 162, 163, 164, 168, 169], "physic": [4, 22, 24, 30, 41, 57, 69, 70, 75, 76, 80, 94, 99, 103, 147, 160, 161, 164, 168, 169, 171], "layout": [4, 8, 11, 16, 17, 22, 24, 41, 52, 57, 69, 70, 75, 76, 99, 100, 125, 126, 133, 135, 139, 142, 143, 147, 152, 157, 160, 161, 162, 163, 164, 166, 168, 169], "constrain": [4, 147, 173], "dure": [4, 13, 23, 75, 90, 95], "select": [4, 22, 41, 57, 76, 82, 143, 152, 162, 163, 164], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 24, 27, 29, 32, 33, 35, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 66, 67, 69, 70, 75, 76, 80, 84, 86, 89, 90, 94, 99, 100, 101, 102, 103, 104, 114, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 129, 131, 133, 137, 139, 142, 143, 144, 147, 148, 152, 153, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171], "initi": [4, 6, 19, 20, 22, 27, 37, 41, 53, 133, 157, 164], "allow": [4, 152, 157, 158, 162, 163, 173], "ani": [4, 8, 22, 23, 27, 43, 44, 73, 75, 94, 100, 105, 123, 125, 126, 132, 144, 146, 154, 158, 172, 173], "other": [4, 21, 27, 41, 149, 152, 157, 158, 172, 173], "accord": [4, 27, 40, 46, 47, 56, 102, 147, 148, 154, 160, 161, 164, 168, 169], "final": [4, 6, 32, 51, 70, 75, 76, 80, 99, 142, 147, 148, 157], "measur": [4, 19, 20, 22, 27, 29, 33, 35, 40, 41, 43, 56, 59, 69, 70, 75, 76, 80, 89, 94, 99, 127, 132, 138, 147, 148, 155, 157, 158, 160, 162, 163, 164], "boolean": [4, 41, 162, 163], "flag": [4, 41], "determin": [4, 22, 41, 172], "dynam": [4, 149, 152], "decoupl": [4, 149, 152], "enabl": [4, 149, 152], "model_computed_field": [4, 22, 41, 57, 70, 76, 89, 94, 99], "classvar": [4, 22, 41, 57, 70, 76, 89, 94, 99], "dict": [4, 7, 11, 22, 23, 24, 41, 43, 44, 57, 59, 60, 66, 69, 70, 72, 73, 75, 76, 77, 80, 81, 82, 89, 94, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 119, 120, 121, 123, 125, 126, 127, 132, 133, 135, 136, 138, 141, 145, 146, 148, 149, 151, 155], "computedfieldinfo": [4, 22, 41, 57, 70, 76, 89, 94, 99], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 65, 69, 70, 71, 73, 75, 76, 81, 82, 85, 89, 90, 91, 94, 99, 100, 102, 103, 106, 113, 116, 118, 119, 125, 126, 135, 136, 139, 141, 142, 144, 147, 151, 157, 162, 163, 164, 172, 173], "comput": [4, 22, 27, 33, 40, 41, 42, 48, 57, 59, 60, 70, 75, 76, 77, 78, 79, 81, 89, 94, 99, 113, 114, 120, 141, 143, 154, 157, 158, 162, 163, 164, 171, 172, 173], "field": [4, 6, 22, 41, 57, 70, 76, 89, 94, 99, 172], "correspond": [4, 22, 23, 30, 41, 56, 57, 65, 67, 69, 70, 71, 75, 76, 80, 84, 85, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 106, 123, 127, 132, 148, 152, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169], "object": [4, 7, 8, 9, 10, 16, 17, 18, 22, 24, 27, 28, 35, 40, 41, 42, 52, 57, 70, 75, 76, 89, 94, 99, 100, 108, 125, 126, 135, 140, 143, 145, 146, 149, 164, 168, 169, 172], "model_config": [4, 22, 41, 57, 70, 76, 89, 94, 99], "configdict": [4, 22, 41, 57, 70, 76, 89, 94, 99], "model": [4, 22, 27, 41, 57, 70, 76, 89, 94, 99, 116, 122, 123, 157], "should": [4, 6, 8, 10, 22, 40, 41, 48, 53, 57, 70, 76, 89, 94, 99, 118, 152, 160, 161, 162, 163, 164, 172], "conform": [4, 22, 28, 41, 57, 70, 76, 89, 94, 99], "config": [4, 22, 41, 57, 70, 76, 89, 94, 99], "model_field": [4, 22, 41, 57, 70, 76, 89, 94, 99], "fieldinfo": [4, 22, 41, 57, 70, 76, 89, 94, 99], "annot": [4, 22, 41, 57, 70, 76, 89, 94, 99, 133, 172], "true": [4, 22, 27, 41, 43, 57, 70, 75, 76, 89, 94, 99, 123, 142, 154, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 173], "union": [4, 22, 41, 57, 70, 76, 89, 94, 99, 133, 164, 172], "nonetyp": [4, 22, 41, 57, 70, 76, 89, 94, 99], "metadata": [4, 21, 22, 40, 41, 52, 56, 57, 69, 70, 73, 75, 76, 89, 90, 94, 95, 99, 100, 146], "about": [4, 22, 41, 57, 70, 76, 89, 94, 99, 152, 162, 163], "defin": [4, 5, 6, 7, 22, 24, 25, 41, 48, 50, 57, 70, 76, 89, 94, 99, 117, 144, 155, 157, 162, 163, 172, 173], "map": [4, 7, 21, 22, 41, 48, 51, 57, 59, 60, 70, 76, 89, 94, 99, 135, 142, 147, 148, 152, 162, 163], "thi": [4, 5, 6, 15, 16, 22, 23, 28, 33, 40, 41, 48, 52, 57, 63, 70, 76, 83, 89, 94, 99, 124, 133, 135, 153, 154, 155, 156, 157, 158, 162, 163, 164, 170, 172, 173], "replac": [4, 22, 41, 57, 70, 76, 89, 94, 99, 172], "__fields__": [4, 22, 41, 57, 70, 76, 89, 94, 99], "v1": [4, 22, 41, 57, 70, 76, 89, 94, 99, 162, 163], "function": [5, 6, 20, 21, 22, 26, 34, 37, 39, 55, 56, 60, 65, 68, 69, 71, 74, 75, 85, 88, 90, 91, 93, 95, 96, 98, 100, 106, 107, 109, 110, 112, 113, 115, 116, 122, 124, 130, 134, 150, 152, 164], "benchmarkobservationidentifi": [5, 8, 35, 152, 159, 161, 165, 167, 168, 169], "benchmarkobserv": [5, 7, 35, 52, 152, 159, 161, 165, 167, 168, 169], "benchmarkrunresult": [5, 6, 7, 12, 21, 34, 40, 42, 56, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 152], "benchmarkanalysisresult": [5, 6, 12, 21, 34, 40, 42, 56, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 152], "kwarg": 6, "run": [6, 7, 8, 10, 20, 21, 22, 24, 27, 34, 35, 40, 41, 42, 56, 60, 65, 69, 70, 71, 75, 85, 90, 91, 95, 96, 100, 106, 152, 155, 157, 158, 161, 164, 170, 173], "cortex": [6, 11], "experi": [6, 27, 29, 32, 33, 35, 37, 52, 56, 64, 65, 69, 71, 72, 75, 76, 78, 79, 85, 90, 91, 95, 96, 100, 106, 115, 122, 123, 127, 129, 161, 170], "In": [6, 157, 158, 164, 172, 173], "order": [6, 22, 27, 51, 52, 116, 124, 139, 152, 162, 163, 173], "write": [6, 131, 154, 155, 172], "new": [6, 7, 11, 144, 152, 155, 157, 158, 164, 169, 173], "recommend": [6, 164, 172, 173], "deriv": [6, 172], "baseclass": 6, "addition": [6, 162, 163], "custom": [6, 57, 76, 157, 158, 161, 167, 168, 169, 173], "analysi": [6, 7, 12, 21, 22, 26, 34, 56, 65, 69, 71, 72, 75, 85, 90, 91, 95, 96, 100, 106, 152, 157], "can": [6, 10, 16, 22, 30, 32, 41, 54, 56, 67, 75, 133, 139, 152, 157, 162, 163, 164, 168, 169, 173], "give": [6, 21, 60, 152, 157, 162, 163, 164, 172], "pointer": 6, "analysis_funct": [6, 21, 40, 56, 69, 75, 90, 95, 100, 155], "accept": [6, 22, 64, 152, 172], "analysisresult": [6, 7, 40, 42, 56, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 152, 155], "its": [6, 110, 144, 152, 157, 158, 172], "input": [6, 11, 24, 70, 76, 105, 124, 128, 129, 133, 147, 160, 161, 164], "result": [6, 7, 8, 10, 11, 12, 20, 21, 22, 27, 28, 31, 32, 33, 34, 35, 36, 52, 54, 56, 59, 65, 66, 67, 69, 71, 75, 76, 83, 84, 85, 90, 91, 95, 96, 100, 106, 114, 120, 122, 147, 152, 155, 157, 158, 161, 168, 169, 172, 173], "onli": [6, 12, 23, 70, 76, 144, 157, 158, 162, 163, 164, 166, 172], "pass": [6, 12, 105, 126, 133, 142, 149, 155, 161, 167], "through": [6, 12, 44, 172], "iqmbackend": [6, 75, 100, 125, 126, 169], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 27, 29, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 52, 56, 69, 72, 75, 90, 95, 100, 107, 109, 123, 151, 152, 155, 157, 158, 159, 161, 164, 165, 168, 169], "overridden": 6, "an": [6, 16, 17, 19, 20, 21, 22, 31, 34, 35, 37, 40, 41, 42, 43, 56, 69, 95, 96, 124, 128, 132, 133, 152, 154, 155, 157, 158, 162, 163, 164, 172, 173], "xarrai": [6, 7, 11, 13, 21, 27, 29, 33, 35, 37, 40, 43, 56, 69, 75, 90, 95, 100, 151, 152, 155], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 24, 27, 28, 29, 31, 32, 33, 35, 37, 40, 42, 43, 44, 52, 100, 102, 125, 126, 135, 139, 143, 144, 152, 157, 158, 164, 168, 169, 170, 172, 173], "inform": [6, 10, 51, 53, 143, 172], "necessari": [6, 157, 162, 163, 173], "analys": 6, "calibration_set_id": [6, 163, 169], "uuid": 6, "calibrationsetid": 6, "latest": [6, 149, 162, 163, 171], "set": [6, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 37, 40, 57, 70, 76, 102, 103, 105, 111, 123, 138, 147, 149, 154, 157, 158, 162, 165, 170, 171, 173], "runresult": [6, 7, 10, 40, 42, 56, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 152, 155], "analyz": [6, 10, 40, 42, 137, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 173], "run_index": [6, 161, 168, 169], "1": [6, 22, 33, 57, 61, 82, 99, 103, 104, 115, 118, 124, 142, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173], "intern": [6, 17], "perform": [6, 21, 33, 57, 70, 76, 116, 127, 142, 157, 164, 170, 172, 173], "make": [6, 75, 149, 153, 157, 171, 172, 173], "shallow": 6, "copi": [6, 136, 154, 172], "produc": [6, 20, 24, 31, 33, 51, 76, 173], "therefor": [6, 63, 83], "chang": [6, 22, 152, 169, 171, 172], "data": [6, 7, 11, 20, 21, 22, 26, 27, 33, 40, 41, 43, 51, 72, 84, 108, 111, 116, 122, 131, 139, 143, 155, 160, 161, 162, 163, 164, 168, 169], "just": [6, 157], "structur": [6, 157, 158], "arrai": [6, 20, 27, 29, 31, 33, 37, 69, 89, 94, 99, 123, 124, 129, 133, 164], "index": [6, 40, 48, 50, 51, 69, 75, 103, 158, 168, 169, 171], "construct": [6, 19, 41, 45], "updat": [6, 21, 34, 69, 70, 152, 157, 158, 160, 161, 173], "core": 7, "circuit_contain": 7, "plot": [7, 20, 21, 22, 34, 40, 42, 52, 84, 123, 143, 152, 155, 157, 158, 159, 161, 162, 163, 165, 173], "matplotlib": [7, 28, 143, 155, 157, 158, 164], "figur": [7, 14, 28, 31, 32, 33, 52, 64, 72, 84, 123, 143, 155, 161, 164], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 34, 35, 40, 42, 52, 72, 123, 152, 157, 158, 159, 161, 162, 163, 165, 167, 168, 169], "list": [7, 9, 11, 13, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 43, 44, 48, 50, 51, 52, 56, 58, 59, 60, 62, 64, 66, 69, 70, 75, 77, 78, 79, 80, 81, 83, 84, 99, 100, 101, 102, 103, 104, 105, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 154, 158, 162, 163, 164, 168, 169, 172, 173], "dataclass": [7, 8, 10], "store": [7, 8, 10, 21, 34, 52, 135, 152, 173], "consist": [7, 19, 162, 163, 172], "kei": [7, 59, 66, 69, 75, 80, 99, 102, 138, 141, 148, 154, 164, 168, 169], "valu": [7, 8, 22, 36, 40, 41, 44, 48, 59, 60, 66, 69, 70, 99, 102, 115, 138, 141, 142, 148, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "pair": [7, 36, 49, 51, 69, 129, 139, 157], "plot_nam": 7, "plot_al": [7, 155, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169], "from_run_result": 7, "creat": [7, 21, 23, 27, 32, 40, 41, 48, 49, 56, 60, 65, 69, 71, 75, 85, 90, 91, 95, 96, 100, 106, 143, 153, 155, 163, 169, 173], "identifi": [8, 9, 11, 27, 35, 75, 100, 116, 123, 125, 126, 128, 145, 151, 157, 159, 161, 162, 163, 164, 165, 167, 168, 169, 172], "uncertainti": [8, 22, 36, 44, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "singl": [8, 10, 13, 16, 18, 22, 36, 41, 52, 57, 58, 69, 70, 75, 76, 102, 109, 152, 157, 158, 164, 173], "string": [8, 9, 11, 17, 18, 27, 30, 36, 145, 173], "qubit_indic": [9, 16, 159, 161, 165, 167, 168, 169], "eas": 9, "indic": [9, 75, 80, 135, 141, 143, 148, 162, 163, 172], "wa": [9, 25, 32, 63, 83, 127, 157, 158, 172], "properti": [9, 16, 17], "string_identifi": [9, 157, 161, 162, 163, 164], "version": [9, 107, 154, 157, 158, 172, 173], "enough": [10, 162, 163], "those": [10, 75, 80, 147, 157, 158, 164, 172], "count": [11, 22, 27, 29, 32, 33, 35, 37, 40, 41, 42, 59, 60, 66, 75, 77, 101, 114, 120, 127, 132, 133, 136, 138, 145, 146, 151, 152, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "add": [11, 17, 21, 40, 50, 56, 69, 75, 90, 95, 100, 102, 150, 152, 154, 172, 173], "job": [11, 69, 73, 75, 100, 125, 126, 145, 155, 159, 160, 161, 165, 166, 168, 169], "If": [11, 22, 27, 33, 41, 57, 99, 143, 157, 158, 162, 163, 164, 166, 172], "same": [11, 17, 51, 99, 139, 157, 158, 160, 161, 162, 163, 172], "alreadi": [11, 159], "present": 11, "old": 11, "both": [11, 21, 76, 157, 165, 173], "ad": [11, 152, 159, 161, 165, 166, 168, 169], "togeth": [11, 173], "bitstr": [11, 59, 60, 61, 66, 82, 127, 141], "current": [11, 27, 29, 30, 32, 33, 35, 37, 41, 69, 131, 139, 162, 163, 164, 173], "instanc": [11, 16, 17, 21, 34, 43, 44, 64, 152, 164], "xr": [11, 13, 32, 40, 43, 44, 52, 56, 69, 72, 75, 90, 95, 100, 123, 151, 155], "merg": [11, 13], "where": [11, 16, 17, 22, 24, 25, 27, 37, 41, 104, 143, 152, 157, 158, 162, 163, 164, 172], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 41, 48, 50, 122, 162, 163], "size": [13, 22, 28, 41, 48, 54, 56, 64, 66, 155, 157, 161, 167], "dateset": 13, "fig": [14, 52, 155, 162, 163], "show": [14, 143, 155, 157, 158, 161, 162, 163], "close": [14, 22, 155], "easili": [15, 152, 173], "interact": [15, 152], "quantum": [15, 21, 22, 23, 24, 40, 41, 43, 45, 46, 47, 48, 49, 56, 67, 69, 70, 74, 75, 76, 77, 80, 83, 85, 102, 103, 114, 118, 119, 120, 131, 132, 135, 137, 138, 142, 143, 144, 149, 152, 162, 163, 164, 170, 171, 173], "circuitgroup": [15, 16, 40, 152], "benchmarkcircuit": [15, 18, 21, 152], "circuit_group": 16, "group": [16, 17, 90, 153, 157, 171], "purpos": [16, 17, 172], "typic": [16, 17, 157, 158], "repres": [16, 17, 23, 28, 72, 84, 141, 143, 172], "exampl": [16, 107, 152, 153, 155, 156, 162, 163, 164, 171, 172, 173], "insid": [16, 152], "get_circuit_group_by_nam": 16, "get": [16, 20, 22, 110, 140, 161, 166], "desir": [16, 17, 21], "doe": [16, 41, 172], "exist": [16, 18, 152, 157, 158, 173], "group_nam": 16, "integ": [16, 17, 22, 24, 41, 75, 80, 103], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 21, 22, 23, 24, 27, 31, 32, 33, 36, 37, 41, 44, 48, 59, 60, 64, 66, 69, 70, 72, 75, 80, 84, 100, 116, 117, 118, 119, 121, 123, 125, 132, 135, 139, 142, 148, 149], "qubit_layout": [16, 17, 22, 23, 24, 25, 27, 29, 31, 32, 33, 35, 40, 43, 44, 48, 50, 51, 52, 143, 157, 161, 162, 163, 164], "qiskit_iqm": [17, 41, 152, 155, 157, 158, 161, 163, 169], "iqm_circuit": 17, "iqmcircuit": [17, 23, 24, 40, 45, 46, 47, 48, 49, 69, 75, 80, 100, 102, 103, 104, 113, 117, 118, 119, 121, 125, 126, 128, 132, 137, 138, 142, 144, 148, 149, 152], "It": [17, 154, 157, 158, 173], "common": [17, 112, 172], "activ": [17, 144, 173], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 172, 173], "found": [17, 139, 157, 158, 173], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 172], "compress": [19, 20, 21, 22, 26, 34, 152, 170, 171, 173], "gst": [19, 21, 22, 27, 28, 29, 32, 33, 34, 35, 152, 170, 171], "self": [19, 21, 119, 155], "character": [19, 21, 157, 171], "process": [19, 20, 27, 76, 157, 158, 159, 161, 165, 166, 168, 169], "matric": [19, 31, 164], "well": [19, 21, 33, 34], "parametr": [19, 27, 60, 67, 69, 70, 157, 158, 160, 161, 164], "state": [19, 22, 27, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 114, 120, 152, 155, 164, 170, 171, 172, 173], "povm": [19, 27, 31, 37, 164], "low": [19, 164], "rank": [19, 22, 31, 33, 152, 164], "matrix": [19, 20, 31, 105, 154, 157, 158], "reduc": [19, 22, 41, 144], "post": [19, 76, 159, 161, 165, 166, 168, 169], "overhead": 19, "tomographi": [20, 26, 170, 171, 173], "follow": [20, 157, 158, 162, 163, 164, 172, 173], "step": 20, "said": 20, "convers": [20, 172], "ideal": [20, 77, 101, 157, 158], "numpi": [20, 29, 31, 33, 136, 154, 157, 158, 161, 164, 165], "mgst": [20, 22, 29, 36, 37, 152, 164, 172, 173], "first": [20, 22, 27, 37, 50, 56, 69, 99, 162, 163, 164, 166, 168, 169, 170], "estim": [20, 22, 27, 31, 33, 37, 40, 41, 43, 44, 54, 56, 70, 75, 90, 95, 100, 101, 127, 152, 157, 158, 160, 161, 162, 163, 165], "gaug": [20, 31, 33, 164], "optim": [20, 22, 31, 33, 41, 69, 70, 76, 99, 142, 152, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 173], "target": [20, 22, 27, 33, 37, 142, 164], "pygsti": [20, 27], "rerun": 20, "bootstrap": [20, 22, 27, 32, 33, 136, 152, 164], "error": [20, 22, 25, 27, 31, 32, 33, 35, 36, 41, 43, 57, 75, 76, 81, 123, 133, 143, 152, 157, 161, 162, 163, 164], "bar": [20, 27, 32, 33, 123, 155, 164], "tabl": [20, 22, 28, 31, 32, 33, 157, 164], "reconstruct": [20, 22, 27, 37, 164], "compressivegst": [20, 22, 164], "benchmark_definit": [20, 22, 39, 41, 55, 57, 68, 70, 74, 76, 88, 89, 93, 94, 98, 99, 155], "gstconfigur": [20, 21, 24, 164], "spam": [21, 27, 32, 35, 157], "robust": [21, 157], "generate_meas_circuit": 21, "random": [21, 22, 40, 41, 57, 69, 86, 88, 93, 94, 98, 99, 102, 104, 112, 118, 119, 136, 152, 154, 158, 160, 162, 163, 164, 167, 170, 171, 173], "distribut": [21, 81, 82, 141, 154, 157, 158, 172], "among": [21, 149, 157, 173], "differ": [21, 24, 27, 40, 72, 99, 135, 157, 162, 163, 164, 168, 169, 170, 172, 173], "depth": [21, 22, 41, 45, 46, 47, 48, 57, 75, 84, 99, 100, 103, 104, 115, 118, 122, 125, 127, 157, 158, 159, 160, 161, 162, 163, 165, 166], "rang": [21, 151, 152, 154, 155, 157, 158, 159, 161, 163, 164, 165, 166, 173], "l_min": 21, "l_max": 21, "seq_len_list": [21, 22], "No": 21, "than": [21, 41, 157, 158, 162, 163, 166], "need": [21, 22, 28, 40, 69, 133, 157, 158, 162, 163, 164, 173], "axactli": 21, "describ": [21, 172], "meaning": [21, 54, 56, 67, 75, 76], "untranspiled_circuit": [21, 169], "untranspil": [21, 75, 80, 117, 142, 152], "circuit_gen_transp_tim": 21, "float": [21, 22, 28, 36, 51, 56, 58, 59, 61, 62, 63, 64, 66, 69, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 94, 99, 101, 102, 103, 104, 114, 115, 116, 120, 123, 127, 128, 131, 133, 135, 138, 139, 141], "time": [21, 22, 27, 69, 72, 73, 75, 100, 125, 126, 150, 157, 158, 160, 161, 163, 164], "took": 21, "transpiled_circuit": [21, 126, 132, 169], "add_configuration_to_dataset": [21, 40], "sourc": [21, 164, 171, 172], "further": [21, 40, 152], "storag": [21, 40, 152], "routin": [21, 28, 40, 41, 57, 76, 116], "1024": [22, 41], "iqm_client": [22, 41, 57, 70, 76, 89, 94, 99], "gate_set": [22, 23, 24, 164], "num_circuit": [22, 27, 37, 70, 76, 157, 158, 160, 161, 164, 168, 169, 173], "gate_label": [22, 164], "14": [22, 154, 159, 160, 161, 165, 166, 173], "from_init": 22, "max_init": 22, "20": [22, 154, 155, 159, 160, 161, 163, 165], "opt_method": 22, "auto": 22, "max_iter": 22, "convergence_criteria": 22, "4": [22, 69, 124, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173], "0": [22, 40, 48, 50, 51, 56, 63, 76, 99, 102, 103, 104, 124, 142, 147, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173], "0001": [22, 155], "batch_siz": 22, "bootstrap_sampl": [22, 164], "test": [22, 152, 157, 158, 173], "parallel_execut": [22, 89, 94, 157, 159, 161, 165, 173], "ghzbenchmark": [22, 39, 41, 157, 158, 161, 162, 163], "sequenc": [22, 29, 41, 57, 70, 75, 76, 89, 94, 99, 100, 101, 114, 117, 118, 119, 120, 142, 147, 157, 159, 161, 164, 165], "e": [22, 23, 24, 27, 37, 41, 94, 99, 124, 151, 152, 157, 158, 160, 161, 162, 163, 164, 168, 169], "g": [22, 41, 94, 99, 124, 151, 152, 154, 157, 158, 160, 161, 162, 163, 164, 168, 169], "specifi": [22, 23, 24, 27, 37, 41, 70, 75, 76, 94, 100, 102, 103, 125, 126, 129, 138, 141, 147, 149, 152, 157, 158, 166, 173], "label": [22, 23, 24, 28, 30, 41, 70, 84, 94, 103, 113, 119, 123, 142, 147, 152, 154, 155, 157, 162, 163], "meant": [22, 24, 41], "either": [22, 57, 116, 133, 135, 138, 139, 154, 162, 163, 164, 172, 173], "cirucuit": 22, "one": [22, 70, 124, 149, 155, 157, 162, 163, 164, 166, 172, 173], "predefin": [22, 23, 135, 143, 162, 163, 164], "1qxyi": [22, 164], "2qxycz": [22, 164], "2qxycz_extend": [22, 164], "3qxycz": [22, 164], "tomograph": 22, "complet": 22, "mean": [22, 63, 138, 143, 154, 157, 158, 160, 164, 172], "vacuum": 22, "abl": 22, "prepar": [22, 37, 40, 155, 157, 162, 163, 164, 172], "form": [22, 102, 172], "frame": [22, 164], "space": 22, "practic": [22, 173], "suffici": [22, 162, 163], "condit": [22, 63, 83, 162, 163, 172], "combin": [22, 30, 157, 158, 172], "local": [22, 162], "pauli": [22, 30, 33, 99, 101, 103, 104, 105, 154, 164], "eigenst": 22, "quantumcircuit": [22, 23, 24, 40, 45, 46, 47, 48, 49, 56, 69, 75, 80, 100, 102, 113, 117, 118, 119, 125, 126, 132, 137, 142, 144, 148, 149, 152, 154, 155, 164], "how": [22, 40, 153, 156, 164, 170, 171, 172, 173], "mani": [22, 40, 69, 152, 162], "guidelin": 22, "choos": [22, 30, 41, 56, 158, 162, 163, 172], "At": 22, "least": [22, 76, 157, 158, 164, 172], "50": [22, 155, 157, 158, 161, 164, 165, 166, 167, 169, 172], "3": [22, 41, 57, 70, 76, 83, 124, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173], "400": [22, 154, 159, 161, 167], "two": [22, 99, 102, 154, 155, 157, 162, 163, 164], "6": [22, 31, 154, 159, 160, 161, 162, 163, 165, 166, 167, 169, 172, 173], "2000": [22, 158, 164], "three": [22, 157, 158], "9": [22, 154, 155, 157, 159, 160, 161, 162, 163, 165, 166, 172, 173], "expect": [22, 59, 60, 66, 99, 102, 104, 152, 157], "grow": 22, "linearli": [22, 41], "exponenti": [22, 115, 157], "krau": [22, 27, 31, 33, 37, 164], "coher": [22, 40, 41, 43, 157, 158, 161, 162, 163], "dim": 22, "control": [22, 28, 162, 163, 172], "maxim": [22, 49, 157, 158], "middl": 22, "cutoff": 22, "below": [22, 157, 158, 162, 163, 164, 172, 173], "possibl": [22, 41, 162, 163, 168, 169, 172], "algorithm": [22, 37, 41, 50, 102, 143, 157, 158, 162, 163], "point": [22, 123, 162, 163], "tri": 22, "limit": [22, 154, 172], "amount": [22, 150, 151], "retri": 22, "gd": 22, "sfn": 22, "gradient": 22, "descent": 22, "saddl": 22, "free": [22, 172], "newton": 22, "respect": [22, 41, 99, 101, 157, 163], "automat": [22, 32, 162, 163, 173], "iter": [22, 133, 141], "while": [22, 131, 162, 163, 164, 172], "second": [22, 27, 37, 67, 69, 170, 171], "when": [22, 76, 152, 157, 162, 163, 173], "termin": [22, 172, 173], "multipli": [22, 61], "cost": [22, 157, 158], "threshold": [22, 63, 64, 76, 83, 84, 157, 158], "nois": [22, 157], "consid": [22, 70, 76, 147], "success": [22, 63, 83, 157, 158], "10": [22, 70, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173], "usual": [22, 33], "sensibl": 22, "rel": 22, "between": [22, 49, 50, 104, 131, 143, 157, 158, 162], "consecut": [22, 41], "1e": [22, 164], "hyperparamt": 22, "converg": [22, 164], "behaviour": 22, "smaller": [22, 40, 41, 48, 157], "runtim": [22, 152], "lead": [22, 152, 162, 163, 164], "errat": 22, "jump": 22, "lack": 22, "repeat": [22, 157, 158], "fake": [22, 152], "via": [22, 40, 41, 157, 158, 162, 163, 164], "parallel": [22, 41, 50, 67, 89, 94, 118, 125, 127, 137, 152, 157, 158, 160, 161, 162, 163, 165], "num_qubit": [23, 24, 44, 45, 46, 47, 49, 56, 57, 75, 101, 114, 120, 158, 160, 163], "assign": [23, 69, 70, 99, 136, 152, 157, 158, 160, 161], "transipil": 23, "so": [23, 32, 152, 157, 164], "stage": [23, 152], "mai": [23, 154, 157, 158, 172], "actual": [23, 157, 158], "gate_labels_dict": [23, 24], "rx": [23, 24, 164], "pi": [23, 24, 154, 161, 165], "rotat": [23, 24, 33, 154, 155], "around": [23, 24, 157, 158], "x": [23, 24, 27, 37, 61, 109, 111, 123, 135, 152, 154, 155, 163, 164, 166, 168, 169], "axi": [23, 24, 27, 37, 123, 152], "num_gat": [23, 24], "handl": [24, 173], "variabl": [24, 56, 69, 75, 90, 95, 100, 116, 155, 162, 163, 164, 173], "correct": [25, 84, 101, 131, 132, 157, 158, 164], "properli": [25, 31, 33, 35, 157, 158], "rais": [25, 102, 105, 129, 131, 142, 147], "code": [26, 157, 158, 164, 171, 172, 173], "y": [27, 29, 37, 135, 154], "ndarrai": [27, 29, 31, 33, 37, 69, 115, 116, 122], "k": [27, 37, 154, 157, 158, 160, 166, 168, 169], "rho": [27, 37, 164], "target_mdl": 27, "resampl": [27, 136], "outcom": [27, 29, 37, 132, 157, 158, 164], "each": [27, 29, 37, 50, 52, 64, 78, 79, 80, 84, 94, 99, 101, 104, 108, 127, 132, 138, 139, 143, 159, 160, 161, 162, 163, 164, 165, 166, 172, 173], "repetit": 27, "newli": 27, "sampl": [27, 40, 60, 66, 76, 82, 94, 99, 101, 102, 103, 104, 105, 117, 118, 119, 136, 164], "non": [27, 32, 35, 115, 157, 158, 172], "corresp": 27, "probabl": [27, 29, 37, 78, 79, 81, 82, 99, 102, 114, 120, 127, 141, 157, 158, 166, 173], "save": [27, 28, 32, 164], "num_povm": [27, 37], "subarrai": [27, 37], "along": [27, 37, 172], "oper": [27, 33, 37, 67, 86, 128, 138, 152, 154, 162, 163, 164, 170, 171], "enumer": [27, 37, 162, 163, 164], "3d": [27, 31, 33, 164], "cpt": [27, 37], "superoper": [27, 37, 164], "standard": [27, 28, 30, 31, 33, 37, 64, 76, 79, 88, 123, 138, 152, 164, 173], "basi": [27, 30, 33, 37, 128, 142, 154, 157, 158, 164, 172], "stack": [27, 37], "els": [27, 154], "x_arrai": 27, "tensor": [27, 152], "e_arrai": 27, "rho_arrai": 27, "df_g_arrai": 27, "qualiti": [27, 32, 35, 40, 157, 158], "df_o_arrai": 27, "df": 28, "datafram": [28, 31, 32, 33, 35], "row_label": 28, "col_width": 28, "fontsiz": 28, "12": [28, 154, 159, 160, 161, 164, 165, 166, 168, 169], "turn": [28, 29, 31, 32, 33, 157], "panda": [28, 31, 32, 33, 35], "file": [28, 152, 172, 173], "row": 28, "cell": [28, 157, 158], "width": [28, 157, 158, 162, 163], "font": 28, "text": [28, 157, 158, 164, 172], "obtain": [29, 154, 157, 158, 172, 173], "format": [29, 31, 32, 33, 35, 36, 157, 172], "2d": [29, 31], "j": [29, 154, 157, 158, 162, 163, 164], "column": 29, "pdim": 30, "dimens": [30, 155, 164], "like": [30, 35, 133, 154, 157, 158, 173], "ii": [30, 154, 155, 172], "ix": 30, "xx": 30, "df_g": [31, 33, 35], "x_opt": [31, 33], "e_opt": 31, "rho_opt": 31, "max_ev": 31, "arbitrari": 31, "them": [31, 33, 50, 155, 173], "after": [31, 33, 118, 173], "conta": 31, "element": [31, 56], "densiti": [31, 99, 102, 104, 123, 157, 158], "optmiz": 31, "eigenvalu": 31, "choi": 31, "df_g_evals_fin": 31, "fig_g": [31, 33], "fidel": [31, 33, 40, 41, 42, 43, 44, 50, 51, 52, 70, 86, 87, 90, 92, 95, 97, 100, 101, 116, 123, 139, 143, 152, 164, 170, 171, 173], "etc": [31, 33], "fig_choi": 31, "df_g_final": [31, 33], "df_o": [32, 35], "also": [32, 33, 133, 152, 162, 163, 164, 168, 169, 172, 173], "metric": [32, 33, 70, 157, 158, 164, 165], "fit": [32, 35, 94, 107, 108, 109, 111, 115, 116, 122, 123, 152, 164, 172], "df_o_fin": 32, "k_target": [33, 37], "includ": [33, 64, 72, 136, 152, 157, 158, 162, 163, 172], "hamiltonian": [33, 152, 164], "diamond": [33, 164], "distanc": [33, 41, 50, 164], "4d": 33, "df_g_rotat": 33, "fig_rot": 33, "convert": [35, 36, 105, 154], "high": [35, 41, 157, 158, 162, 163], "level": [35, 41, 57, 70, 76, 99, 157, 158, 160, 161, 162, 163, 168, 169], "simpl": [35, 155, 157, 173], "observation_list": 35, "result_str": 36, "err": 36, "interv": 36, "floar": 36, "wrapper": [37, 40], "alg": 37, "x_target": 37, "e_target": 37, "rho_target": 37, "ghz": [38, 152, 170, 171, 173], "verifi": [38, 128, 154], "greenberg": [38, 40, 157, 158, 170, 171], "horn": [38, 40, 157, 158, 170, 171], "zeiling": [38, 40, 157, 158, 170, 171], "ghzconfigur": [39, 40, 157, 158, 161, 162, 163], "generate_native_ghz": 40, "qubit_count": [40, 41], "nativ": [40, 51, 118, 119, 121, 128, 138, 152, 157], "topologi": [40, 57, 135, 139, 142, 143, 147, 152, 157, 158, 163], "subset": [40, 43, 44, 48, 50, 51], "system": [40, 41, 43, 44, 48, 50, 51, 131, 157, 158, 164, 172, 173], "protocol": [40, 43, 44, 48, 50, 51, 157, 158, 170], "equal": [40, 48, 75, 152, 157, 158], "generate_coherence_meas_circuit": 40, "take": [40, 41, 142, 150, 152, 157, 158, 164, 173], "output": [40, 53, 77, 78, 79, 80, 81, 82, 83, 131, 152, 154, 157, 158, 164, 168, 169, 173], "mult": 40, "q": [40, 54, 56, 57, 63, 161, 164, 170, 171, 173], "qc_list_transpil": 40, "append_rm": 40, "num_rm": [40, 41, 162, 163], "append": [40, 69, 154, 155, 164], "1q": [40, 121, 152, 157], "clifford": [40, 87, 88, 89, 90, 91, 93, 94, 95, 102, 113, 117, 118, 119, 121, 128, 129, 152, 153, 165, 170, 171, 173], "uniformli": [40, 157], "param": [40, 45, 46, 47, 49, 69, 78, 90, 95, 105, 109, 111, 113, 114, 125, 126, 127, 129, 141, 145, 146], "origin": [40, 75, 80, 136, 142, 144, 172], "generate_readout_circuit": 40, "creation": [40, 162], "all_circuits_list": 40, "state_generation_routin": [41, 157, 158, 161, 162, 163], "tree": [41, 48, 50, 157, 161, 162, 163], "custom_qubits_arrai": [41, 56, 57, 76, 152, 157, 158, 161, 162, 163, 167, 168, 169, 173], "qiskit_optim_level": [41, 57, 70, 76, 99, 103, 104, 142, 157, 158, 160, 161, 166, 168, 169, 173], "optimize_sqg": [41, 57, 69, 70, 76, 142, 157, 158, 160, 161, 168, 169, 173], "fidelity_routin": [41, 157, 158, 161, 162, 163], "100": [41, 70, 76, 136, 157, 158, 160, 161, 164, 167, 173], "rem": [41, 43, 57, 76, 84, 132, 152, 157, 158, 161, 162, 163, 167, 168, 169, 173], "mit_shot": [41, 57, 75, 76, 132, 157, 158, 161, 162, 163, 167, 168, 169, 173], "1000": [41, 57, 76, 132, 155, 157, 158, 161, 162, 163, 164, 167, 168, 169], "cal_url": [41, 139, 143, 162, 163], "log": [41, 46, 47, 48, 50, 162, 163], "coupl": [41, 48, 51, 70, 76, 139, 142, 147, 157, 162, 163], "cz": [41, 49, 50, 51, 118, 138, 139, 142, 154, 157, 160, 162, 163], "account": [41, 57, 142, 164, 173], "span": [41, 48, 50], "largest": [41, 157, 158, 162, 163], "weight": [41, 50, 51, 82], "applic": [41, 50, 102, 154, 162, 163, 172], "cx": [41, 45, 50, 69], "scale": [41, 157, 158], "logarithm": [41, 162, 163], "connect": [41, 50, 129, 143, 152, 162, 163], "naiv": [41, 57, 162, 163], "appli": [41, 45, 50, 69, 76, 152, 161, 162, 163, 166, 172], "textbook": [41, 162, 163], "assum": [41, 52, 124, 172], "NOT": 41, "support": [41, 51, 172], "denot": 41, "provid": [41, 62, 135, 153, 155, 156, 157, 158, 161, 162, 163, 172], "here": [41, 101, 155, 157, 158, 164], "ha": [41, 57, 157, 158, 159, 164, 166, 169, 172, 173], "small": [41, 152], "architectur": 41, "iqm_transpil": 41, "optimize_single_qubit_g": 41, "multipl": [41, 43, 107, 152, 157, 158, 162, 163], "moonei": [41, 43, 157, 158, 162, 163], "2021": [41, 43, 157, 158, 162, 163, 173], "randomized_measur": [41, 162, 163], "outlin": 41, "http": [41, 44, 46, 47, 107, 154, 155, 158, 161, 162, 163, 164, 172, 173], "arxiv": [41, 44, 46, 47, 70, 102, 154, 162, 163, 173], "org": [41, 44, 46, 47, 154, 162, 164, 172], "ab": [41, 44, 46, 47, 154, 162], "1812": [41, 44], "02624": [41, 44], "chosen": [41, 57, 157, 158, 162, 163, 164], "readout": [41, 43, 57, 75, 76, 81, 130, 131, 133, 152, 161, 162, 163], "mitig": [41, 43, 57, 75, 76, 81, 130, 131, 132, 133, 152, 161, 162, 163], "total": [41, 111, 154, 157, 158, 162, 163], "url": [41, 139, 143, 157, 173], "retriev": [41, 69, 73, 143, 145, 146, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "priorit": 41, "ideal_prob": 44, "cross": [44, 157, 158, 172], "correl": [44, 162], "rm": 44, "eq": [44, 154], "34": [44, 155, 159, 160, 161, 167, 168], "hadamard": [45, 154, 163], "seri": 45, "linear": [45, 163], "fashion": 45, "symmetr": 45, "halv": 45, "1807": [46, 162, 163], "05572": [46, 162, 163], "2101": [47, 162, 163], "08946": [47, 162, 163], "graph": [48, 50, 51, 56, 57, 58, 59, 60, 61, 63, 64, 66, 135, 143, 157, 158, 162, 163], "n_state": [48, 157], "networkx": [48, 50, 51, 56, 58, 59, 60, 61, 157, 158], "n": [48, 57, 90, 100, 154, 157, 158, 162, 163], "participating_qubit": 48, "qc": [48, 69, 154, 155, 173], "move": [49, 152, 169], "calcul": [50, 58, 64, 80, 111, 137, 150, 152, 157, 158], "cx_map": 50, "particip": 50, "2qb": 50, "subgraph": 50, "edg": [50, 51, 59, 60, 61, 102, 143, 152, 157, 158, 162, 163], "Then": [50, 173], "find": [50, 157, 158, 162, 163], "most": [50, 164], "central": 50, "posit": [50, 135, 143], "next": 50, "start": [50, 56, 124, 157, 160, 161, 162, 163, 164, 173], "smallest": 50, "layer": [50, 58, 62, 66, 67, 69, 70, 75, 99, 100, 102, 103, 104, 125, 137, 161, 170, 171, 173], "coupling_map": [51, 142, 157, 158], "couplingmap": [51, 147], "edges_c": 51, "fidelities_c": 51, "have": [51, 118, 157, 158, 172, 173], "wai": [51, 139, 152, 157, 158], "v": [52, 64, 69, 71, 157, 158, 161, 165], "user": [52, 163, 169, 173], "identif": [52, 172], "logger": [53, 150], "everi": 53, "warn": [53, 154, 157, 158, 163, 169], "score": [54, 56, 57, 63, 161, 170, 171, 173], "combinatori": [54, 56, 157, 158], "problem": [54, 56, 58, 59, 60, 61, 63, 64, 157, 158, 173], "qscorebenchmark": [55, 57, 157, 158, 161, 167], "qscoreconfigur": [55, 56, 157, 158, 161, 167], "backend_arg": [56, 69, 75, 90, 95, 100, 102, 103, 104, 117, 118, 119, 125, 126, 128, 129, 132, 138], "generate_maxcut_ansatz": 56, "theta": 56, "ansatz": [56, 58, 60, 62, 66], "qaoa": [56, 57, 58, 62, 66], "maxcut": [56, 58, 59, 60, 61, 62, 66, 157, 158, 161, 167], "end": [56, 69, 75, 154, 172], "variat": [56, 157, 158], "gamma": [56, 58], "beta": [56, 58, 63, 64, 157, 158, 161, 167], "add_all_meta_to_dataset": [56, 69, 75, 95, 100], "choose_qubits_na": 56, "sequenti": [56, 126, 159, 161], "choose_qubits_custom": 56, "match": [56, 162, 163], "num_inst": [57, 64, 157, 158, 161, 167], "num_qaoa_lay": [57, 157, 158, 161, 167], "min_num_nod": [57, 157, 158, 161, 167], "max_num_nod": [57, 157, 158, 161, 167], "use_virtual_nod": [57, 64, 157, 158, 161, 167], "use_classically_optimized_angl": [57, 64, 157, 158, 161, 167], "choose_qubits_routin": [57, 76, 157, 158, 161, 167, 168, 169, 173], "min_num_qubit": 57, "seed": [57, 157, 158, 161, 167], "qpu_topologi": [57, 157, 158, 167], "crystal": [57, 135, 139, 157, 167], "min": [57, 131, 157, 158], "node": [57, 59, 60, 64, 66, 135, 143, 157, 158, 167], "taken": [57, 157, 158], "max": [57, 157, 158], "increas": [57, 124, 164], "potenti": 57, "pre": 57, "optimis": 57, "tune": 57, "minumum": 57, "virtual_nod": [57, 59, 60, 66], "upon": [57, 70, 76], "qpu": [57, 130, 152, 157, 158, 163], "star": [57, 135, 139, 142, 147, 152, 156, 157, 162, 163, 171], "angl": [58, 62, 64, 66], "qubit_to_nod": [59, 60], "val": 59, "virtual": [59, 60, 64, 66, 142], "cut": [59, 60, 61, 66, 157, 158], "avg": [59, 161, 164, 167], "callabl": [60, 116, 122], "minu": 61, "sign": 61, "solut": [61, 157, 158], "obj": 61, "num_lay": 62, "approximation_ratio": [63, 161], "approxim": [63, 64, 157, 158, 161, 167], "ratio": [63, 64, 157, 158, 161, 167], "abov": [63, 83, 157, 158, 164, 172], "being": [63, 69, 75, 80, 83, 84, 101, 102, 114, 120, 138, 141, 157, 158], "beta_ratio": 64, "beta_std": 64, "backend_nam": [64, 84, 144, 159, 160, 166, 168, 169], "timestamp": [64, 84, 159, 166], "deviat": [64, 76, 79, 123, 138], "classic": [64, 66, 75], "graph_phys": 66, "qubit_nod": 66, "use_classical_angl": 66, "qaoa_lay": 66, "solv": [66, 157, 158], "averag": [66, 78, 83, 84, 90, 95, 101, 116, 152, 157, 158, 163, 164], "presenc": 66, "volum": [67, 74, 75, 76, 85, 152, 170, 171, 173], "reflect": [67, 69, 75, 86, 87, 92, 97], "deepest": [67, 75], "clop": [67, 152, 170, 171, 173], "speed": [67, 69, 157, 158], "clops_v": [67, 157, 158, 160], "qv": [67, 69, 70, 75, 76, 78, 79, 83, 84, 152, 157, 158, 160, 161, 170, 171], "clops_h": [67, 70, 160], "squar": [67, 157, 158, 164], "clopsbenchmark": [68, 70, 157, 158, 160, 161], "clopsconfigur": [68, 69, 157, 158, 160, 161], "h": [69, 71], "append_parameterized_unitari": 69, "q0": 69, "q1": 69, "decompos": [69, 157], "su": 69, "involv": [69, 157, 158], "belong": 69, "generate_single_circuit": [69, 75], "generate_circuit_list": [69, 75], "generate_random_paramet": 69, "templat": [69, 157, 158, 160, 161], "np": [69, 115, 122, 154, 157, 158, 161, 162, 164, 165], "float64": 69, "assign_random_parameters_to_al": 69, "dict_parametrized_circ": 69, "clops_cycl": 69, "sorted_transpiled_qc_list": [69, 75, 149], "cycl": 69, "elaps": [69, 72, 73, 150, 160, 161], "submiss": [69, 75, 100, 125, 126, 157, 158, 172], "generate_transpiled_clops_templ": 69, "num_upd": [70, 157, 158, 160, 161], "num_shot": [70, 157, 158, 160, 161], "clops_h_bool": [70, 160, 161], "establish": [70, 160, 161], "By": [70, 160, 161], "definit": [70, 157, 158, 160, 161, 172], "2110": [70, 173], "14108": [70, 173], "quant": [70, 102, 173], "ph": [70, 102, 173], "rigor": [70, 164], "loos": 70, "www": [70, 154, 172], "ibm": [70, 131], "com": [70, 158, 162, 163], "blog": 70, "restrict": [70, 76, 147, 161, 168, 169], "clops_data": 72, "job_meta": 73, "quantumvolumebenchmark": [74, 76, 157, 158, 161, 168, 169], "quantumvolumeconfigur": [74, 75, 157, 158, 161, 168, 169, 173], "add_all_circuits_to_dataset": [75, 90, 95], "classical_permut": 75, "permut": 75, "avoid": 75, "swap": [75, 154], "get_rem_quasidistro": 75, "sorted_qc_list_indic": [75, 80], "execution_result": [75, 77], "quasicollect": [75, 81, 132], "quasiprob": [75, 81, 132, 133], "qubii": 75, "submit_single_qv_job": 75, "submit": [75, 100, 125, 126, 149, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172], "vanilla": [75, 84, 100, 125, 126], "dd": [75, 84, 100, 125, 126], "num_sigma": [76, 83, 84, 157, 158, 161, 168, 169, 173], "criteria": 76, "consensu": 76, "unmitig": 76, "1_000": [76, 157, 158, 161, 168, 169, 173], "ideal_heavy_output": [77, 81], "hop": [77, 78, 79, 83, 84, 152], "heavi": [77, 78, 79, 80, 81, 82, 83, 157, 158], "cumul": [78, 79], "individu": [78, 79, 123, 152, 157, 162, 163, 164, 172, 173], "trial": [78, 79], "qc_list": [80, 142], "bitrstr": 80, "all_rem_quasidistro": 81, "noiseless": [81, 161, 168, 169], "project": [82, 173], "onto": 82, "associ": [82, 160, 161, 172], "heavy_output_prob": [83, 168, 169], "over": [83, 131, 141, 157], "within": [83, 172, 173], "sigma": [83, 84], "qv_result": [84, 157, 158, 168, 169], "qv_results_typ": [84, 168, 169], "in_volumetr": 84, "plot_rem": 84, "come": [84, 101, 133], "context": 84, "volumetr": 84, "rb": [87, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 114, 115, 116, 118, 120, 122, 123, 126, 127, 129, 152, 154, 157, 161, 165, 170, 171], "cliffordrandomizedbenchmark": [88, 89, 157, 159, 161], "cliffordrbconfigur": [88, 90, 157, 159, 161], "qubits_arrai": [89, 94, 99, 118, 123, 125, 127, 129, 157, 159, 161, 165, 166, 173], "sequence_length": [89, 94, 117, 118, 157, 159, 161, 165, 173], "num_circuit_sampl": [89, 94, 99, 117, 157, 159, 161, 165, 166, 173], "length": [89, 94, 101, 105, 117, 118, 119, 154, 157, 159, 161, 165], "add_all_metadata_to_dataset": 90, "interleav": [92, 93, 94, 95, 96, 99, 104, 115, 116, 117, 118, 119, 123, 152, 159, 170, 171, 173], "interleavedrandomizedbenchmark": [93, 94, 157, 161, 165], "interleavedrbconfigur": [93, 95, 157, 161, 165, 173], "interleaved_g": [94, 117, 118, 119, 123, 157, 161, 165, 173], "interleaved_gate_param": [94, 157, 161, 165, 173], "simultaneous_fit": [94, 157, 161, 165, 173], "amplitud": [94, 115, 157, 161, 165, 173], "offset": [94, 115, 157, 161, 165, 173], "irb": [94, 116, 152, 170, 171], "ygate": 94, "czgate": [94, 99, 154, 157, 161, 164, 165, 166, 173], "enter": [94, 116, 118], "simultan": [94, 116], "specif": [95, 142, 154, 156, 157, 158, 161, 164, 168, 169, 170, 172], "mirror": [97, 98, 99, 100, 104, 152, 170, 171, 173], "mirrorrandomizedbenchmark": [98, 99, 161, 166, 173], "mirrorrbconfigur": [98, 100, 161, 166, 173], "depths_arrai": [99, 161, 166, 173], "num_pauli_sampl": [99, 101, 105, 161, 166, 173], "two_qubit_gate_ensembl": [99, 102, 103, 104, 161, 166, 173], "density_2q_g": [99, 102, 103, 104, 161, 166, 173], "25": [99, 102, 103, 104, 157, 159, 160, 161, 162, 165, 166, 167, 168, 169, 173], "mrb": [99, 100, 103, 106, 116, 123, 125, 126, 152, 161, 170, 171], "len": [99, 154, 157, 158, 164], "ensembl": [99, 100, 102, 123], "cxgate": 99, "submit_single_mrb_job": 100, "sorted_transpiled_circuit_dict": [100, 125], "canon": [100, 103, 104, 125], "noisy_count": 101, "ideal_count": 101, "num_circ_sampl": [101, 105, 119], "polar": [101, 116], "noisi": 101, "rescal": 101, "few": [101, 157, 158], "effect": [101, 157, 158, 163], "real": [101, 173], "simul": [101, 131, 152, 160, 161, 166, 168, 169], "qubit_set": [102, 116], "n_layer": 102, "grab": [102, 131], "see": [102, 149, 152, 154, 157, 162, 163, 164, 172], "2204": 102, "07568": 102, "2q": [102, 104, 121, 123, 157, 160, 161], "subsequ": [102, 172], "valueerror": [102, 105, 129, 142, 147], "do": [102, 131, 165, 172], "up": [102, 157, 173], "uniti": 102, "circ_sampl": 103, "pauli_samples_per_circ": [103, 104], "dress": [103, 104, 105], "input_list": 105, "flat": 105, "shape": 105, "lmfit": [107, 108, 116], "extend": [107, 152], "shown": [107, 157, 158, 162, 163, 164], "document": [107, 149, 157, 158, 172, 173], "github": [107, 173], "io": 107, "py": [107, 163, 169, 173], "example_fit_multi_dataset": 107, "html": [107, 173], "sphx": 107, "glr": 107, "multi": [107, 157, 158], "func": [108, 109, 110, 111, 116, 122], "initial_guess": 108, "constraint": [108, 173], "simultaneously_fit_var": 108, "line": 108, "evalu": [109, 157, 158], "signatur": 110, "residu": 111, "sever": [111, 152, 157, 158], "techniqu": 112, "qc_inv": 113, "clifford_dictionari": 113, "invers": [113, 157], "invert": 113, "de": [113, 119], "stabil": [113, 119, 152], "ground": [114, 120, 155], "depolarization_prob": 115, "depolar": 115, "p": [115, 157], "decai": [115, 123, 152, 157], "rb_identifi": 116, "simultaneous_fit_var": 116, "interleaved_gate_str": 116, "0th": 116, "ap": [116, 164], "m": [116, 157, 158, 159, 161, 165, 166, 169, 173], "b": [116, 154, 157, 172], "stdrb": 116, "clifford_dict": [117, 119], "fir": 117, "cliffords_1q": 118, "cliffords_2q": 118, "num_sampl": [118, 119], "befor": [118, 157], "term": [118, 154, 164, 172], "r": [118, 138, 142, 154, 160, 164, 169], "seq_length": 119, "import": [121, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173], "fit_paramet": 122, "fit_data": 122, "minimizerresult": 122, "violin": 123, "scatter": 123, "shade_stdev": 123, "shade_meanerror": 123, "logscal": 123, "mrb_2q_densiti": 123, "mrb_2q_ensembl": 123, "shade": 123, "titl": [123, 172], "arr": 124, "helper": 124, "relabel": 124, "increasingli": 124, "zero": [124, 152, 157, 158], "5": [124, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173], "7": [124, 154, 157, 159, 160, 161, 162, 163, 164, 165, 166, 169, 172, 173], "note": [124, 133, 152, 162, 163, 164, 173], "sort": [124, 148, 166, 168, 169], "circuit_compilation_opt": [126, 149], "circuitcompilationopt": [126, 149], "compil": [126, 149, 152, 157, 164, 172], "submit_execut": 126, "margin": [127, 131, 141], "surviv": [127, 157], "gate_id": 128, "gate_param": 128, "m3": [130, 131, 132], "modif": [130, 172], "m3iqm": [130, 133], "mthree": [130, 133], "m3mitig": [130, 131], "iter_threshold": 131, "4096": 131, "modifi": [131, 152, 157, 158, 172], "work": [131, 133, 157, 158, 172, 173], "devic": [131, 152, 157, 158, 171, 173], "cals_from_system": 131, "initial_reset": 131, "rep_delai": [131, 163, 169], "cals_fil": 131, "async_c": 131, "cal_id": 131, "array_lik": 131, "1e4": 131, "max_shot": 131, "balanc": 131, "hardwar": [131, 171], "independ": [131, 157], "reset": 131, "begin": [131, 154], "delai": 131, "path": 131, "json": [131, 164], "async": 131, "separ": [131, 152, 168, 169, 172], "thread": 131, "m3error": 131, "call": [131, 152], "progress": 131, "against": [132, 172], "mit": [133, 172], "processor": [133, 157, 158], "argument": [133, 152, 162, 163, 173], "util": [133, 152, 162, 163], "final_measurement_map": 133, "qubit_name_to_index": 133, "quasiprobabilti": 133, "we": [133, 155, 157, 158, 164, 172], "could": 133, "would": 133, "out": [133, 172], "box": 133, "u": 133, "sinc": [133, 157, 158, 164], "graphposit": 134, "chip": [135, 139, 143], "variou": [135, 170], "garnet_posit": 135, "garnet": [135, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173], "deneb_posit": 135, "deneb": [135, 152, 158, 159, 160, 161, 163, 165, 166, 167, 168, 170, 171], "predefined_st": 135, "create_posit": 135, "pygraph": 135, "must": [135, 157, 158, 172, 173], "coordin": [135, 155], "original_count": 136, "num_bootstrap_sampl": 136, "rgen": 136, "include_original_count": 136, "default_rng": 136, "circuit_list": 137, "transpiled_qc_list": 138, "barrier": [138, 154, 155, 160], "outermost": 138, "under": [139, 152, 154, 157, 164, 172], "list_fid": 139, "list_coupl": 139, "backend_label": 140, "prob_dist": 141, "bit": 141, "basis_g": 142, "drop_final_rz": 142, "optimization_level": [142, 155, 157], "sqg": [142, 160, 161, 162, 163, 168, 169], "z": 142, "drop": 142, "rz": 142, "emploi": 142, "station": [143, 155, 162, 163, 173], "visual": [143, 152, 157, 162, 163], "thick": [143, 152], "thinner": [143, 162, 163], "better": [143, 162, 163], "highlight": 143, "orang": [143, 162, 163], "iqm_job": [145, 146], "iqmjob": [145, 146, 149], "relev": 146, "transpiled_circuit_list": 148, "sorted_indic": 148, "sorted_circuit": 148, "sent": [149, 172], "manag": [149, 172, 173], "abil": 149, "f": [150, 154, 155, 157, 158, 161, 162, 163, 164, 169], "decor": 150, "statement": [150, 172], "counts_rang": 151, "extract": [151, 157, 173], "were": [151, 152], "rustworkx": 152, "depend": [152, 162, 163, 164, 171], "wrong": 152, "benchmark": [152, 153, 154, 156, 164, 167, 168, 169, 170], "aid": 152, "notebook": [152, 155, 157, 158, 164, 170, 171], "don": [152, 172], "t": [152, 172], "overlap": 152, "improv": [152, 172], "bottom": 152, "top": 152, "qscore": [152, 157, 158], "iqm": [152, 153, 154, 155, 156, 162, 164, 165, 170, 172], "bug": 152, "done": [152, 154], "instal": [152, 157, 164, 171], "command": [152, 173], "develop": [152, 154, 163, 171], "mode": [152, 154, 173], "41": [152, 161, 165, 166, 167], "folder": [152, 172, 173], "doc": [152, 173], "spark": [152, 156, 171], "30": [152, 157, 159, 161, 165, 167, 173], "compat": 152, "adapt": [152, 173], "behavior": 152, "report": [152, 157], "displai": [152, 154, 157, 158, 159, 161, 164, 165, 169, 172], "publish": 152, "ci": 152, "secur": [152, 173], "scan": [152, 173], "lockfil": [152, 173], "relat": [152, 157], "modulenotfounderror": 152, "pyrit": [152, 167], "incorrect": 152, "revert": 152, "ones": [152, 157, 158, 173], "now": [152, 159, 160, 161, 162, 163, 164, 165], "instead": [152, 173], "port": 152, "subclass": 152, "usag": 152, "place": [152, 172], "miscellan": 152, "relax": 152, "api": [152, 162, 163, 171, 173], "build": [152, 173], "overwrit": 152, "tutori": 152, "remov": 152, "explicit": 152, "minor": 152, "longer": [152, 157], "renam": 152, "rebas": 152, "randomizedbenchmark": 152, "quantumvolum": 152, "serial": 152, "some": [152, 157, 158, 162, 163], "available_benchmark": 152, "__init__": 152, "public": 152, "hint": 152, "docstr": 152, "messag": 152, "prevent": 152, "exclus": [152, 172], "jupyt": 152, "section": [153, 156, 170, 172], "guidanc": [153, 156], "packag": [153, 157, 163, 169, 170, 173], "your": [153, 157, 171, 172, 173], "own": [153, 171, 172, 173], "decomposit": [153, 171], "1402": 154, "4848": 154, "copyright": [154, 172], "2024": [154, 159, 160, 169, 172], "licens": [154, 171], "apach": [154, 172], "you": [154, 157, 158, 162, 163, 165, 169, 172, 173], "except": [154, 155, 172], "complianc": [154, 172], "unless": [154, 172], "law": [154, 172], "agre": [154, 172], "softwar": [154, 172], "AS": [154, 172], "without": [154, 157, 158, 162, 163, 172], "warranti": [154, 172], "OR": [154, 172], "OF": [154, 172], "kind": [154, 172], "express": [154, 172], "impli": [154, 172], "languag": [154, 172], "govern": [154, 172], "permiss": [154, 172], "quantum_info": 154, "qi": 154, "c0": 154, "c": [154, 157, 163, 169, 172], "_": [154, 157, 162, 163, 164], "24": [154, 159, 160, 161, 165, 167, 171], "half": 154, "x2": 154, "to_gat": 154, "y2": 154, "x2m": 154, "y2m": 154, "compos": 154, "inplac": 154, "2pi": 154, "11": [154, 155, 157, 158, 159, 161, 162, 163, 165, 166, 169, 173], "13": [154, 159, 161, 162, 163, 165, 166, 169, 173], "15": [154, 157, 159, 160, 161, 165, 166, 169], "16": [154, 159, 160, 161, 162, 165, 166, 168], "17": [154, 159, 160, 161, 162, 165, 166, 168, 173], "18": [154, 159, 160, 161, 162, 163, 165, 166, 173], "19": [154, 160, 161, 162, 163, 164, 165, 166], "21": [154, 160, 161, 165], "22": [154, 160, 161, 164, 165, 166], "23": [154, 159, 160, 161, 162, 165, 166, 168, 169], "clifford_sqg": 154, "s1": 154, "s1x2": 154, "s1y2": 154, "displaystyl": 154, "sum_": [154, 164], "prime": 154, "left": 154, "mathrm": [154, 157, 158, 162, 163], "tr": [154, 164], "u_": 154, "dagger": [154, 157, 164], "u_k": 154, "right": [154, 172], "s2": 154, "satisfi": [154, 164], "c_kei": 154, "aux": 154, "total_triangl": 154, "c1": 154, "adjoint": 154, "c2": 154, "c3": 154, "to_matrix": 154, "trace": [154, 164], "print": [154, 157, 160, 161, 162, 163, 164, 166, 168, 169, 172], "0f": 154, "diagon": [154, 157, 158], "nsum": 154, "sum": 154, "clifford_2qg": 154, "product": [154, 172], "c2q_0": 154, "c2q": 154, "counter": 154, "to_label": 154, "sqg_class_": 154, "cnot": [154, 162, 163], "sy2": 154, "cnot_class_": 154, "iswap": 154, "sy1": 154, "sx2": 154, "i_swap_class_": 154, "swap_class_": 154, "clifford_1qg": 154, "open": 154, "clifford_1q": 154, "pkl": 154, "wb": 154, "clifford_2q": 154, "loaded_dict": 154, "def": [154, 155], "count_rcz": 154, "c_list": 154, "no_cz": 154, "no_r": 154, "count_op": 154, "num_2qcz": 154, "num_2qr": 154, "num_1qcz": 154, "num_1qr": 154, "875": [154, 157, 161, 165, 168], "200": [154, 161, 167], "randint": [154, 157, 158, 161, 167], "11520": 154, "draw": [154, 157, 158, 169], "mpl": 154, "style": 154, "iqp": 154, "fold": 154, "ninvers": 154, "qc_aux": 154, "qcinv": 154, "op_seq": 154, "ncomposit": 154, "ident": 154, "modulo": 154, "phase": 154, "equiv": 154, "latex": 154, "composit": 154, "bmatrix": 154, "520": [154, 161, 167], "132": [154, 161, 165], "710": [154, 167], "suffic": 154, "triangular": 154, "part": [154, 172], "howev": [154, 172, 173], "still": [154, 164], "op": 154, "adj": 154, "prod": 154, "100000": 154, "ndone": 154, "defit": 155, "anoth": 155, "excit": 155, "add_counts_to_dataset": 155, "pyplot": [155, 157, 158, 164], "plt": [155, 157, 158, 164], "generate_readout_test_circuit": 155, "n_qubit": 155, "qb_to_measur": 155, "qc_transpil": 155, "plot_histogram": [155, 157], "try": 155, "state_": 155, "counts_": 155, "break": 155, "xtick": 155, "90": 155, "legend": 155, "readout_analysi": 155, "histogram": [155, 157], "readouttest": 155, "default_opt": 155, "n_shot": 155, "2048": 155, "staticmethod": 155, "readout_test": 155, "iqmprovid": [155, 157, 158, 161, 163, 173], "iqm_server_url": 155, "fi": [155, 173], "coco": [155, 158, 173], "get_backend": [155, 157, 158, 161, 173], "480b": 155, "state_0": 155, "state_1": 155, "u4": 155, "144b": 155, "0000": 155, "0010": 155, "1010": 155, "1100": 155, "176b": 155, "0011": 155, "0101": 155, "0110": 155, "1101": 155, "1110": 155, "1111": 155, "counts_0": 155, "int64": 155, "72b": 155, "1924": 155, "26": [155, 161, 162, 165, 167], "39": [155, 161, 162, 164, 165, 167], "counts_1": 155, "88b": 155, "72": 155, "48": [155, 161, 163, 165, 167], "78": 155, "36": [155, 161, 162, 163, 167], "1801": 155, "sure": [157, 173], "pip": [157, 173], "ipykernel": 157, "o": [157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173], "environ": [157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173], "iqm_tokens_fil": 157, "token": [157, 158, 162, 165, 173], "iqm_url": [157, 158, 161], "access": [157, 158, 173], "everyth": [157, 158], "nx": [157, 158], "add_edges_from": [157, 158], "po": [157, 158], "spring_layout": [157, 158], "42": [157, 158, 161, 165, 167], "with_label": [157, 158], "node_color": [157, 158], "lightblu": [157, 158], "edge_color": [157, 158], "grai": [157, 158], "node_s": [157, 158], "font_siz": [157, 158], "linewidth": [157, 158], "ignor": [157, 158], "critic": [157, 158], "filterwarn": [157, 158], "action": [157, 158], "entangl": [157, 158, 161, 162, 163, 173], "more": [157, 158, 172, 173], "superposit": [157, 158], "rangl": [157, 158], "frac": [157, 158, 164], "sqrt": [157, 158], "otim": [157, 158], "act": [157, 158, 172], "wit": [157, 158], "genuin": [157, 158, 162, 163], "cannot": [157, 158, 172], "explain": [157, 158], "great": [157, 158], "rho_": [157, 158], "langl": [157, 158], "pure": [157, 158], "case": [157, 158], "entri": [157, 158, 164], "written": [157, 158, 172], "00": [157, 158, 161, 164, 166, 168], "corner": [157, 158], "simplifi": [157, 158], "four": [157, 158], "compon": [157, 158], "formula": [157, 158], "nullifi": [157, 158], "To": [157, 158, 159, 162, 163, 164, 172, 173], "off": [157, 158], "want": [157, 158, 162, 163, 173], "pleas": [157, 158], "refer": [157, 158, 164, 171, 173], "generate_ghz_spanning_tre": 157, "get_edg": 157, "ghz_circuit": 157, "qc_transp": 157, "re": [157, 165], "10000": [157, 158, 167], "get_count": 157, "benchmark_ghz": [157, 158, 161, 162, 163], "run_ghz": [157, 158, 161, 162, 163], "result_ghz": [157, 158], "introduc": [157, 158], "2019": [157, 158, 162, 163, 173], "unitari": [157, 158, 164, 169], "successfulli": [157, 158, 159, 161, 165, 166, 168, 169], "occcur": [157, 158], "greater": [157, 158], "median": [157, 158], "ask": [157, 158], "confid": [157, 158], "higher": [157, 158], "97": [157, 158], "85": [157, 158, 173], "asymptot": [157, 158], "log_2": [157, 158], "v_q": [157, 158], "underset": [157, 158], "argmax": [157, 158], "d": [157, 158, 162, 163, 172], "leq": [157, 158], "achiev": [157, 158], "quantum_volum": [157, 158, 160, 161, 168, 169, 173], "due": [157, 158], "topmost": 157, "500": [157, 158, 161, 166, 168, 169, 173], "60_000": [157, 161, 168, 169, 173], "minut": [157, 158, 164], "benchmark_qv": [157, 158, 161, 168, 169], "run_qv": [157, 158], "result_qv": [157, 158], "That": [157, 158], "wack": [157, 158], "constitut": [157, 158, 172], "_time": [157, 158], "notic": [157, 158, 172], "plot_tim": [157, 158], "benchmark_clop": [157, 158, 160, 161], "run_clop": [157, 158, 160, 161], "result_clop": [157, 158, 160, 161], "fig_clop": [157, 158], "idea": 157, "behind": 157, "crb": 157, "certain": [157, 158], "langle0": 157, "c_": 157, "inv": 157, "c_m": 157, "cdot": 157, "_2c_1": 157, "sim": 157, "c_1": 157, "c_2": 157, "ldot": 157, "c_1c_2": 157, "_m": 157, "leq1": 157, "constant": 157, "isol": 157, "magesan": 157, "2012": [157, 173], "infer": 157, "assumpt": 157, "markovian": 157, "stationari": 157, "theori": [157, 172], "fact": 157, "design": [157, 172, 173], "fulli": [157, 164], "ensur": 157, "our": 157, "overlin": 157, "intend": 157, "becaus": 157, "eventu": 157, "mention": 157, "barend": 157, "2014": 157, "approx": 157, "alwai": [157, 162, 163], "slightli": 157, "care": 157, "compar": 157, "spec": 157, "randomized_benchmark": [157, 159, 161, 165, 166, 173], "clifford_rb": [157, 159, 161], "benchmark_clifford_rb": [157, 159, 161], "run_clifford_rb": [157, 159, 161], "result_clifford_rb": [157, 159, 161], "previou": 157, "aim": [157, 162, 163], "interest": 157, "sole": [157, 172], "made": [157, 172], "rate": 157, "wish": [157, 169], "interleaved_rb": [157, 161, 165, 173], "irb_cz": 157, "nb": [157, 159, 160, 161], "benchmark_irb_cz": 157, "run_irb_cz": 157, "result_irb_cz": 157, "martiel": [157, 158], "erd\u0151": [157, 158], "r\u00e9nyi": [157, 158], "geq": [157, 158, 164], "999999": [157, 158, 161, 167], "benchmark_qscor": [157, 158, 161, 167], "run_qscor": [157, 158, 161], "result_qscor": [157, 158, 161], "summar": 157, "obs_ghz": [157, 158], "round": [157, 158], "obs_qv": [157, 158], "obs_clop": [157, 158], "item": [157, 158], "obs_crb": 157, "f_crb": 157, "obs_irb": 157, "f_irb": 157, "avg_gate_fidelity_interleav": [157, 161, 165], "obs_q": [157, 158], "argmin": [157, 158], "mean_approximation_ratio": [157, 158, 167], "3000": 157, "999": [157, 159, 160], "98": 157, "num": 157, "iqm_token": [158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173], "reson": [158, 162, 165, 173], "meetiqm": [158, 162, 163], "chosen_layout": 158, "10_000": 158, "load_ext": [159, 160, 161, 164, 165, 166, 167, 168, 169], "autoreload": [159, 160, 161, 164, 165, 166, 167, 168, 169], "extens": 159, "load": 159, "reload": 159, "reload_ext": 159, "fakeadoni": [159, 160, 161, 165, 166, 167, 168], "fakeapollo": [159, 160, 161, 162, 165, 166, 167, 168], "example_crb": [159, 161], "56": [159, 161, 167], "750": [159, 167], "logging_config": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "info": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "Will": [159, 160, 161, 164, 165, 166, 168, 169], "31": [159, 160, 161, 162, 165, 166, 167], "63": [159, 161, 165], "831": [159, 165, 167], "992": [159, 160, 167], "341": [159, 163, 167], "040": [159, 161, 165], "469": [159, 161], "291": 159, "292": [159, 161, 165], "349": 159, "541": [159, 166], "600": [159, 161, 162], "756": [159, 161], "837": [159, 165, 167, 168], "025": [159, 167], "171": [159, 161], "905": [159, 167], "544": [159, 161, 167], "899": [159, 161], "32": [159, 160, 161, 164, 166, 167], "624": [159, 161], "004": [159, 161, 165, 167], "43": [159, 161, 164, 165, 167], "319": 159, "569": [159, 166, 167], "777": [159, 161], "840": 159, "44": [159, 161, 164, 165, 167], "048": [159, 165], "098": [159, 160, 161, 167], "qubits_": [159, 161, 166], "_depth_1": [159, 161, 165], "323": 159, "45": [159, 161, 163, 165, 166, 167], "186": [159, 165], "_depth_3": [159, 161, 165], "225": [159, 161], "_depth_7": [159, 161, 165], "267": [159, 161, 167], "_depth_15": [159, 161, 165], "314": [159, 161], "_depth_31": [159, 161, 165], "315": [159, 161, 167], "364": [159, 161, 166], "_depth_63": [159, 161, 165], "416": [159, 167], "417": [159, 167, 169], "476": 159, "542": [159, 161, 166], "615": [159, 161], "616": [159, 161, 167], "697": [159, 167], "789": [159, 161, 165, 167], "890": [159, 161, 165], "conclud": [159, 161, 165, 166, 168, 169], "931": [159, 161, 167], "938": 159, "945": [159, 161, 166], "952": [159, 165], "959": [159, 161], "966": [159, 161, 167], "972": [159, 161, 167], "979": [159, 161, 167], "986": [159, 161], "993": [159, 161, 166], "46": [159, 161, 163, 164, 167, 169], "006": [159, 161, 167], "013": 159, "946844466999168": 159, "9429197366921651": 159, "attr": [159, 160, 164, 166, 168, 169], "session_timestamp": [159, 160, 166, 168, 169], "20241217": 159, "115553": 159, "execution_timestamp": [159, 160, 166, 168, 169], "backend_configuration_nam": [159, 160, 166, 168, 169], "iqmfakeapollobackend": [159, 160, 162, 164, 168], "depth_1": 159, "time_circuit_gener": [159, 160, 166, 168, 169], "541001081466675": 159, "time_submit": [159, 166, 168, 169], "0006990432739257812": 159, "time_retriev": [159, 166, 168, 169], "22491073608398438": 159, "all_job_metadata": [159, 166, 168, 169], "batch_job_1": [159, 166], "job_id": [159, 166], "8f305755": 159, "e038": 159, "4596": 159, "8617": 159, "d96ba3f42ca9": 159, "aer_simul": [159, 166], "statu": [159, 166], "circuits_in_batch": [159, 166], "depth_3": 159, "05647683143615723": 159, "0005230903625488281": 159, "2fe0b406": 159, "8977": 159, "4567": 159, "bba0": 159, "d4168f0883ed": 159, "depth_7": 159, "19257187843322754": 159, "0004839897155761719": 159, "8299918c": 159, "be26": 159, "40d5": 159, "8778": 159, "9ea4468a1df2": 159, "depth_15": 159, "05831408500671387": 159, "0004811286926269531": 159, "174640c4": 159, "9ff3": 159, "4ca3": 159, "9ffc": 159, "d6aa5be304f3": 159, "depth_31": 159, "1564040184020996": 159, "0006189346313476562": 159, "7bb739f2": 159, "31bc": 159, "40af": 159, "8dbf": 159, "1d60a9310391": 159, "depth_63": 159, "08135986328125": 159, "0004200935363769531": 159, "f414a2c1": 159, "75c8": 159, "4d5a": 159, "9e4b": 159, "ccce29903f5f": 159, "147684812545776": 159, "0005502700805664062": 159, "00039887428283691406": 159, "8832576a": 159, "6d6e": 159, "4abe": 159, "8cfa": 159, "5001e6bb98e": 159, "08015298843383789": 159, "00039315223693847656": 159, "ecc1bcea": 159, "ef4c": 159, "4f35": 159, "9284": 159, "ab49af0c5b9f": 159, "16936397552490234": 159, "0003960132598876953": 159, "5582c842": 159, "0f07": 159, "46b6": 159, "96be": 159, "2fb3925b19d9": 159, "20774221420288086": 159, "0004191398620605469": 159, "6423b02b": 159, "8417": 159, "4300": 159, "b7ac": 159, "84d59f87a51f": 159, "0635080337524414": 159, "0004169940948486328": 159, "0b324804": 159, "44fe": 159, "4c16": 159, "83eb": 159, "08e5cd67aa79": 159, "20784401893615723": 159, "0004961490631103516": 159, "6c633640": 159, "d4b4": 159, "47de": 159, "a46d": 159, "d3ae4c84d212": 159, "avg_gate_fidel": [159, 166], "0012220693932290373": 159, "001545469960991071": 159, "xxxxxx": 160, "example_clop": [160, 161], "06": [160, 161, 166], "07": [160, 161, 165, 166, 171], "198": [160, 161, 167], "199": 160, "828": [160, 165], "829": [160, 161, 165, 167], "383": [160, 165], "401": [160, 161, 167], "458": [160, 161], "010": [160, 163, 167], "428": [160, 163, 166, 167], "429": [160, 161], "497": [160, 161], "029": [160, 161], "482": [160, 161, 167], "483": [160, 161], "502": [160, 161, 167], "113": 160, "843": 160, "844": [160, 167], "906": [160, 165, 167], "527": [160, 167], "987": [160, 161, 167], "988": [160, 161], "050": [160, 161, 166, 167, 168], "636": [160, 161, 165, 167], "099": [160, 161], "166": [160, 165, 167], "712": [160, 167], "27": [160, 161, 162, 163, 165, 167], "328": [160, 161], "329": [160, 161], "404": [160, 161, 167], "766": [160, 161, 166, 167], "29": [160, 161, 162, 165, 167, 168], "386": [160, 161, 163], "387": [160, 161, 165, 166], "406": [160, 161, 167], "418": [160, 161, 169], "487": [160, 161, 167], "037": 160, "33": [160, 161, 166, 167], "488": [160, 161], "556": [160, 161, 167], "240": [160, 161, 163, 167], "916": [160, 165], "There": [160, 161], "all_times_parameter_assign": 160, "all_times_retriev": 160, "all_times_submit": 160, "assign_parameters_tot": 160, "clops_tim": 160, "counts_per_upd": 160, "job_meta_per_upd": 160, "num_paramet": 160, "operation_count": [160, 168, 169], "parallel_2q_lay": 160, "parameters_per_upd": 160, "time_count_lay": 160, "time_sort_batch": 160, "time_transpil": [160, 168, 169], "u_per_lay": 160, "user_retrieve_tot": 160, "user_submit_tot": 160, "9603960396039604": 160, "std": 160, "3960396039603959": 160, "285": [160, 161, 165], "970297029703": 160, "28": [160, 161, 162, 165, 167, 168], "718661075530303": 160, "40594059405941": 160, "915387814641763": 160, "9900990099009901": 160, "09900990099009897": 160, "18796": 160, "nan": [160, 164], "56388": 160, "iqm_provid": [161, 163, 169], "2025": [161, 162, 163, 164, 165, 166, 167, 168, 171], "01": [161, 164, 165, 166, 167, 168], "58": [161, 165, 167], "410": [161, 167], "411": [161, 167], "127": [161, 165], "639": [161, 162, 163], "949": [161, 167], "35": [161, 167], "841": 161, "251": [161, 167], "53": [161, 163, 165, 167], "648": [161, 167], "690": 161, "785": [161, 165], "953": [161, 167], "815": [161, 167], "59": [161, 165, 166, 167], "821": [161, 165, 167], "808": [161, 167], "834": 161, "860": [161, 165], "02": [161, 162, 163, 164, 166, 167], "350": [161, 167], "351": 161, "424": [161, 167], "466": 161, "510": [161, 163, 167], "511": [161, 167], "558": 161, "_depth_127": [161, 165], "559": [161, 167], "611": [161, 167], "643": [161, 167], "647": 161, "651": [161, 166, 167, 169], "655": [161, 167], "659": 161, "663": 161, "667": [161, 167], "9487496885745926": 161, "example_irb_1q": [161, 165], "rgate": [161, 164, 165], "benchmark_irb_1q": [161, 165], "run_irb_1q": [161, 165], "734": [161, 165, 167], "958": 161, "wxecut": 161, "255": [161, 165], "000": [161, 165, 167], "041": [161, 167], "122": 161, "925": 161, "229": 161, "054": 161, "37": [161, 162, 163, 167, 169], "672": 161, "694": 161, "753": 161, "849": [161, 166, 167], "38": [161, 162, 165, 167], "039": [161, 165, 167], "402": [161, 167], "108": [161, 167], "40": [161, 167], "570": [161, 167], "277": [161, 167], "331": [161, 166, 167], "399": [161, 167], "495": [161, 167], "650": [161, 165], "929": [161, 167], "51": [161, 164, 165, 167, 169], "439": 161, "52": [161, 162, 164, 165, 166, 167, 169], "352": [161, 167], "432": [161, 162, 165], "475": [161, 165], "666": [161, 167], "812": 161, "881": [161, 165, 167], "761": 161, "804": 161, "894": [161, 162], "907": [161, 167], "03": [161, 165, 166, 171], "020": 161, "188": [161, 165, 167], "270": 161, "426": [161, 167], "718": [161, 163], "04": [161, 165, 166], "307": [161, 166, 167], "05": [161, 165, 166], "836": [161, 165, 167], "904": [161, 167], "003": [161, 164, 165], "196": [161, 165, 167, 168], "557": [161, 166], "719": 161, "653": [161, 166, 167], "149": [161, 166], "754": [161, 167], "231": 161, "163": [161, 165], "261": 161, "446": [161, 163, 167], "524": 161, "635": [161, 165], "112": [161, 163], "693": [161, 167], "811": 161, "826": [161, 167], "920": [161, 167], "091": 161, "173": [161, 165], "338": [161, 163, 165, 167], "640": [161, 165, 167], "230": 161, "545": [161, 166], "54": [161, 163, 165, 167, 169], "939": [161, 165, 167], "961": 161, "55": [161, 163, 166, 167], "011": [161, 164], "105": [161, 167], "299": [161, 169], "384": 161, "57": [161, 165, 167], "824": [161, 167], "662": 161, "717": [161, 165, 167], "790": [161, 164, 165, 166], "889": [161, 166], "301": [161, 166, 167], "799": [161, 169], "083": [161, 167], "152": [161, 166, 167], "254": 161, "420": [161, 167], "758": [161, 164, 165, 166], "634": [161, 167], "947": [161, 166], "994": [161, 164, 167], "548": 161, "159": [161, 167], "724": 161, "746": 161, "791": [161, 166, 167], "884": [161, 166], "074": [161, 165, 167], "128": [161, 166, 167], "561": 161, "477": 161, "550": [161, 167], "623": [161, 164, 165, 167], "726": 161, "880": [161, 167], "47": [161, 163, 164, 165, 167], "508": 161, "606": [161, 166], "838": [161, 167], "944": [161, 166, 167], "49": [161, 163, 164, 165, 167], "427": 161, "963": [161, 167], "970": [161, 166], "008": [161, 165, 167], "071": 161, "305": 161, "391": [161, 164, 167], "555": [161, 167], "444": 161, "649": [161, 167, 169], "063": [161, 167], "119": [161, 166], "212": 161, "397": [161, 167], "467": [161, 167], "678": [161, 166, 167], "688": [161, 165, 168], "741": [161, 163], "810": [161, 167], "908": 161, "805": [161, 167], "682": [161, 165], "730": 161, "816": 161, "094": [161, 165, 167], "259": 161, "547": 161, "066": [161, 167], "138": [161, 167], "clifford_qubits_": [161, 165], "176": [161, 166, 167], "354": 161, "355": [161, 165, 167], "390": 161, "459": 161, "591": [161, 167], "592": [161, 167], "644": 161, "_depth_255": [161, 165], "703": [161, 165], "767": [161, 166], "768": [161, 167], "839": 161, "918": 161, "919": 161, "007": [161, 165], "104": [161, 167], "211": 161, "728": [161, 162], "971": 161, "232": [161, 167], "509": [161, 165], "151": [161, 167], "498": 161, "862": [161, 167], "248": 161, "249": 161, "654": [161, 167], "142": [161, 167], "143": 161, "085": 161, "626": [161, 166], "180": [161, 166], "732": 161, "733": [161, 167], "923": 161, "interleaved_qubits_": [161, 165], "924": [161, 167], "560": [161, 167], "237": 161, "940": [161, 166], "447": [161, 169], "075": [161, 162, 164, 167], "076": [161, 167], "845": [161, 165], "846": 161, "783": [161, 167, 168], "784": [161, 165, 167], "782": 161, "813": 161, "814": 161, "201": [161, 166, 167], "202": 161, "378": [161, 167], "379": 161, "909": 161, "910": [161, 167], "284": [161, 167], "658": 161, "111": [161, 167, 168], "571": [161, 164, 167], "572": [161, 167], "062": [161, 167], "021": [161, 168], "022": [161, 165], "735": 161, "736": [161, 167], "546": [161, 165, 166], "09": [161, 164, 165, 168], "361": [161, 167], "362": 161, "330": [161, 166], "304": [161, 167], "269": [161, 169], "471": [161, 167], "596": [161, 165, 166, 167], "842": [161, 165, 166], "086": [161, 167], "642": [161, 162, 163], "983": [161, 166], "460": 161, "result_irb_1q": [161, 165], "855": 161, "901": 161, "943": 161, "033": [161, 165, 168], "116": [161, 166], "161": 161, "206": [161, 165, 167], "300": [161, 164, 167], "344": 161, "433": [161, 167], "519": 161, "603": [161, 167], "686": [161, 167], "727": [161, 167], "769": [161, 167], "853": 161, "936": [161, 167], "978": [161, 167], "019": 161, "106": [161, 167], "191": [161, 164], "274": [161, 167], "316": 161, "357": [161, 166, 167], "440": [161, 165], "565": 161, "607": [161, 165], "774": 161, "858": [161, 167], "941": 161, "030": [161, 167], "072": [161, 162, 167], "114": 161, "156": [161, 167], "197": [161, 165], "239": 161, "280": 161, "322": 161, "405": 161, "489": 161, "531": 161, "614": 161, "656": [161, 167], "698": 161, "747": 161, "794": 161, "948": [161, 166], "061": [161, 167], "110": 161, "157": [161, 165], "9987487631380596": 161, "9976446981909068": 161, "9966759568052321": 161, "993530034195362": 161, "9990404653517758": 161, "9981264795208118": 161, "9993022807449614": 161, "9986351324410088": 161, "9973448276409616": 161, "9955188886796882": 161, "252344351282814e": 161, "avg_gate_fidelity_clifford": [161, 165], "427765436266417e": 161, "311072136492597e": 161, "508513064336435e": 161, "00011479325016746003": 161, "00013605231315518148": 161, "126965739294625e": 161, "500976481016944e": 161, "726101631810375e": 161, "232463034652631e": 161, "example_irb_2q": [161, 165], "benchmark_irb_2q": [161, 165], "run_irb_2q": [161, 165], "921": 161, "001": [161, 164, 167], "164": [161, 167], "481": 161, "08": [161, 164, 165, 166, 167], "367": [161, 167], "937": [161, 167], "095": [161, 165], "396": [161, 165, 167], "026": 161, "620": [161, 167], "765": [161, 165, 167], "930": [161, 167], "216": [161, 165], "738": 161, "729": [161, 162], "674": [161, 167], "965": 161, "264": [161, 166, 167], "470": 161, "463": [161, 163, 167], "078": 161, "370": [161, 167], "771": 161, "968": [161, 165], "140": [161, 162], "441": [161, 163, 165], "192": 161, "743": [161, 167], "268": 161, "298": 161, "625": [161, 167, 168], "461": 161, "009": 161, "991": [161, 165], "014": 161, "807": [161, 167], "165": 161, "817": 161, "295": [161, 167], "464": [161, 167], "721": [161, 167], "398": 161, "581": 161, "714": 161, "689": [161, 167], "801": [161, 167], "912": [161, 169], "891": 161, "435": 161, "484": 161, "181": [161, 166], "194": [161, 167], "451": 161, "290": [161, 165, 168], "955": 161, "359": 161, "096": [161, 166], "445": [161, 167], "521": 161, "681": [161, 165], "628": 161, "214": [161, 166], "385": [161, 163], "309": 161, "579": 161, "652": [161, 165, 166], "131": [161, 165, 167], "168": [161, 165], "169": [161, 167], "207": [161, 165], "208": [161, 165], "252": [161, 168], "253": [161, 167], "345": 161, "346": [161, 165, 167], "457": 161, "523": [161, 166], "595": [161, 165, 167], "676": [161, 166], "764": [161, 165, 167], "863": [161, 162], "969": 161, "088": [161, 168], "089": 161, "218": 161, "360": [161, 167, 169], "514": 161, "283": [161, 168], "034": [161, 165], "035": 161, "313": 161, "612": 161, "272": [161, 166], "637": [161, 169], "036": [161, 167], "876": [161, 165, 167], "877": [161, 165], "861": [161, 165], "365": [161, 166, 167], "366": 161, "897": [161, 167], "468": [161, 167], "051": 161, "661": 161, "028": [161, 167], "739": [161, 165, 167], "740": [161, 165], "241": [161, 167], "042": 161, "673": 161, "641": 161, "757": [161, 168], "866": 161, "005": [161, 164, 165, 167], "177": [161, 166, 167], "178": 161, "431": 161, "result_irb_2q": [161, 165], "704": [161, 162, 165], "795": 161, "888": 161, "070": [161, 167], "101": 161, "223": [161, 165, 167], "374": [161, 167], "465": 161, "526": 161, "586": [161, 167], "677": [161, 167], "707": 161, "798": [161, 167], "859": 161, "950": [161, 165], "981": [161, 165], "162": [161, 167], "9742310809885095": 161, "9459834045099638": 161, "9702389918426017": 161, "9373183372682623": 161, "9829862612568532": 161, "9651704260970525": 161, "9600628980342876": 161, "9331175707494691": 161, "example_irb_iswap": [161, 165], "iswapg": [161, 165, 166, 173], "benchmark_irb_iswap": [161, 165], "run_irb_iswap": [161, 165], "567": 161, "751": [161, 165, 167], "573": [161, 167], "742": [161, 167], "879": 161, "079": [161, 166, 167], "954": [161, 165, 167], "145": 161, "781": [161, 165, 168], "496": [161, 162, 165], "725": [161, 167], "408": [161, 164, 167], "895": 161, "788": [161, 165], "513": 161, "517": [161, 167], "087": [161, 167], "773": [161, 165], "684": [161, 167], "638": [161, 167], "691": [161, 165], "204": [161, 165, 168], "339": [161, 165], "580": 161, "608": 161, "609": [161, 166, 167], "336": [161, 167], "708": 161, "833": [161, 167], "990": 161, "084": 161, "187": 161, "303": 161, "576": [161, 167], "097": [161, 166], "530": [161, 165, 167], "776": 161, "044": 161, "045": 161, "332": [161, 167], "333": [161, 165, 167], "984": [161, 167], "985": 161, "result_irb_iswap": [161, 165], "796": 161, "902": [161, 167], "073": 161, "115": [161, 167], "136": 161, "179": [161, 167], "221": [161, 167], "296": [161, 166, 167], "325": [161, 167], "388": [161, 167], "9296485294294863": 161, "9468865104887559": 161, "9168663709049512": 161, "9389212110918619": 161, "mirror_rb": [161, 166, 173], "example_mrb": [161, 166, 173], "benchmark_mrb": [161, 166], "run_mrb": [161, 166], "10x5": [161, 166], "64": [161, 166], "512": [161, 166], "090": [161, 165, 167], "109": [161, 173], "775": 161, "802": [161, 167], "779": [161, 163, 164, 165, 167], "533": 161, "246": 161, "442": [161, 165], "369": 161, "491": [161, 163, 165], "092": [161, 167], "613": 161, "631": [161, 162, 165], "692": [161, 165], "375": [161, 166, 167], "723": [161, 167], "878": 161, "266": 161, "123": 161, "_depth_2": [161, 166], "_depth_4": [161, 166], "_depth_8": [161, 166], "_depth_16": [161, 166], "_depth_32": [161, 166], "822": 161, "_depth_64": [161, 166], "_depth_128": [161, 166], "174": [161, 165], "_depth_256": [161, 166], "175": 161, "_depth_512": [161, 166], "515": 161, "720": [161, 167], "219": 161, "857": [161, 167], "242": 161, "243": [161, 167, 169], "670": 161, "671": [161, 165], "147": [161, 166], "result_mrb": [161, 166], "706": [161, 165], "882": [161, 165], "962": 161, "067": [161, 165], "260": 161, "356": 161, "1600x1200": 161, "ax": 161, "all_qubit_layout": [161, 166], "key_mrb_plot": [161, 166], "example_qv": [161, 168, 169, 173], "run0_qv": [161, 168, 169], "iqmfakeadonisbackend": 161, "234": [161, 162, 167], "subbatch": [161, 168, 169], "562": 161, "588": 161, "093": 161, "023": [161, 162], "434": [161, 167], "587": 161, "result0_qv": [161, 168, 169], "413": [161, 166], "run1_qv": [161, 168, 169], "result1_qv": [161, 168, 169], "865": [161, 167, 169], "213": [161, 167], "800": [161, 162, 164], "321": 161, "887": [161, 166, 167], "024": [161, 169], "155": [161, 167], "516": [161, 167], "247": 161, "278": [161, 167], "347": 161, "265": [161, 167], "358": [161, 162], "453": [161, 162, 167, 168], "454": [161, 162], "554": 161, "552": 161, "minimal_ghz": [161, 162, 163], "745": [161, 165], "792": [161, 167], "900": 161, "049": [161, 165], "238": 161, "306": 161, "423": [161, 167], "8309361141069083": 161, "fidelity_rem": [161, 163], "8897643257271268": 161, "example_qscor": [161, 167], "20_000": 161, "4767": 161, "4900": 161, "6739": 161, "3733": 161, "6246": 161, "3894": 161, "4881": 161, "4714": 161, "4767012007999197": 161, "09979310484432205": 161, "is_succes": [161, 167, 168, 169], "qscore_result": [161, 167], "6738975057778192": 161, "07204344830310698": 161, "6246025280898877": 161, "04717318377784287": 161, "4881333882446109": 161, "04133470512287928": 161, "multipartit": [162, 163], "One": [162, 163, 168, 169], "larger": [162, 163, 164], "leibfri": [162, 163], "et": [162, 163], "al": [162, 163], "six": 162, "atom": 162, "schr\u00f6dinger": 162, "cat": 162, "natur": [162, 163], "438": [162, 163, 167], "2005": [162, 163], "offer": [162, 163, 172], "verif": [162, 171, 173], "superconduct": 162, "phy": [162, 163, 173], "commun": [162, 163, 172], "095004": [162, 163], "elben": [162, 163], "statist": 162, "toolbox": 162, "probe": 162, "bodi": 162, "rev": [162, 163, 173], "99": [162, 163], "052323": [162, 163], "ciruit": [162, 163], "hadamrd": 162, "addit": [162, 163, 164, 172, 173], "log_depth": [162, 163], "cruz": [162, 163], "yield": [162, 163], "lower": [162, 163, 164], "hous": 162, "reli": [162, 163], "dai": 162, "thu": [162, 163], "comparison": [162, 163], "best": [162, 163], "gme": [162, 163], "prefer": [162, 163, 172], "whenev": [162, 163], "mitgat": [162, 163], "arang": 162, "For": [162, 163, 164, 172, 173], "think": [162, 163], "help": [162, 163], "your_token": [162, 163, 173], "mark": [162, 163, 172], "w_": [162, 163], "ij": [162, 163, 164], "mathcal": [162, 163], "station_nam": [162, 163], "recogn": [162, 163], "grid": [162, 163], "plot_layout_fidelity_graph": [162, 163], "130": 162, "144": 162, "864": 162, "146": [162, 165], "601": [162, 167], "486": 162, "055": 162, "057": [162, 167], "854": 162, "490": [162, 165, 167], "645": [162, 167], "893": 162, "fidelitii": [162, 163], "filter": [162, 163], "descript": [162, 163, 172], "l0": [162, 163], "l1": [162, 163], "tailor": 163, "novel": 163, "281": [163, 167], "raphaelbrieg": 163, "miniconda3": 163, "env": [163, 169], "lib": [163, 169], "site": [163, 169], "170": [163, 167, 169], "userwarn": [163, 169], "unknown": [163, 169], "unknown_opt": [163, 169], "762": [163, 167], "873": 163, "872": 163, "381": [163, 165], "715": [163, 167], "8606413415449893": 163, "8995408735543517": 163, "introduct": 164, "what": [164, 165], "background": 164, "journal": 164, "prxquantum": 164, "1103": 164, "010325": [164, 173], "compressive_gst": 164, "iqmfakeadoni": 164, "iqmfakeapollo": 164, "k_i": 164, "trigger": 164, "benefit": 164, "less": [164, 166], "captur": 164, "domin": 164, "trustworthi": 164, "veri": 164, "consum": 164, "minimal_1q_gst": 164, "minimal_2q_gst": 164, "Be": 164, "extra": 164, "871": [164, 167], "20it": 164, "621": 164, "criterion": 164, "53e": 164, "uncertaintit": 164, "restult": 164, "idl": 164, "qb1": 164, "99693": 164, "00703": 164, "unitar": 164, "98781": 164, "99918": 164, "0013": 164, "99674": 164, "ry": 164, "99509": 164, "01332": 164, "98074": 164, "tvd": 164, "00698": 164, "03296": 164, "dist": 164, "00601": 164, "04366": 164, "results_layout_": 164, "dict_kei": 164, "raw_kraus_oper": 164, "raw_gat": 164, "raw_povm": 164, "raw_stat": 164, "gauge_opt_g": 164, "gauge_opt_gates_pauli_basi": 164, "gauge_opt_povm": 164, "gauge_opt_st": 164, "main_mgst_tim": 164, "gauge_optimization_tim": 164, "choi_ev": 164, "full_metr": 164, "raw": 164, "raw_result": 164, "array_str": 164, "precis": 164, "suppress_smal": 164, "995": [164, 167], "002": [164, 165, 167], "002j": 164, "003j": 164, "004j": 164, "998": 164, "These": 164, "diplai": 164, "disc": 164, "represent": 164, "sinlg": 164, "g_": 164, "p_i": 164, "p_j": 164, "layout_": 164, "_gate_metr": 164, "_choi_eigenvalu": 164, "_other_metr": 164, "_process_matrix_0": 164, "_process_matrix_1": 164, "_process_matrix_2": 164, "_spam_matrices_r": 164, "_spam_matrices_imag": 164, "altern": 164, "ourselv": 164, "xyi": 164, "instruct": 164, "gate_list": 164, "indentif": 164, "\u03c0": [164, 169], "custom_1q_gst": 164, "verbos": 164, "806": [164, 168], "61": 164, "803": 164, "42e": 164, "008j": 164, "989": [164, 165, 167], "001j": 164, "553": 165, "324": [165, 167], "964": 165, "064": 165, "065": 165, "294": 165, "664": 165, "107": 165, "982": [165, 166], "058": [165, 167], "538": [165, 167], "120": [165, 167], "121": [165, 167], "522": [165, 166], "103": [165, 167], "744": [165, 167], "780": [165, 166, 168], "818": 165, "819": [165, 166], "133": [165, 166], "286": 165, "287": 165, "376": [165, 167], "583": 165, "9975073376613797": 165, "9957157328789242": 165, "9976959612386156": 165, "9957310522299055": 165, "752861001879659e": 165, "028839025109517e": 165, "64196778583225e": 165, "243656712565855e": 165, "know": 165, "679": [165, 166, 167], "118": [165, 167], "820": [165, 167], "915": 165, "577": 165, "148": [165, 167], "874": [165, 167], "951": [165, 167], "205": [165, 167], "380": 165, "485": 165, "685": [165, 167], "9798030906041997": 165, "9431232937255942": 165, "9840858225184934": 165, "945382422883015": 165, "593": [165, 167], "885": [165, 167], "883": [165, 166, 167], "038": 165, "215": [165, 166], "282": 165, "348": 165, "394": 165, "395": [165, 167], "492": 165, "675": 165, "752": [165, 167], "932": 165, "933": 165, "158": [165, 167], "289": [165, 167], "436": [165, 167], "566": 165, "9344679810705316": 165, "9463377694591251": 165, "9267928870925659": 165, "943379008472002": 165, "892": 166, "125": [166, 167], "589": 166, "646": 166, "597": [166, 167], "702": 166, "244": 166, "996": 166, "598": [166, 167], "867": [166, 167], "117": 166, "271": [166, 167], "448": [166, 167], "449": [166, 167], "150": [166, 167], "450": [166, 167], "605": 166, "184": 166, "342": 166, "343": 166, "422": [166, 167], "134": 166, "456": 166, "529": [166, 167], "attr_kei": [166, 168, 169], "depth_2": 166, "14302134513855": 166, "007565975189208984": 166, "06883907318115234": 166, "f8d9d789": 166, "0e9a": 166, "4086": 166, "ab36": 166, "685064a7b66": 166, "depth_4": 166, "0004930496215820312": 166, "0007040500640869141": 166, "87e367b7": 166, "c3ae": 166, "4457": 166, "8a2d": 166, "7b169c528033": 166, "depth_8": 166, "0004889965057373047": 166, "0005979537963867188": 166, "d84330c9": 166, "101f": 166, "40ff": 166, "bea8": 166, "f5e4c0b41527": 166, "depth_16": 166, "0004627704620361328": 166, "0006148815155029297": 166, "1f58b4a0": 166, "fb16": 166, "4d12": 166, "a9e8": 166, "c9263da52418": 166, "depth_32": 166, "00047278404235839844": 166, "0005419254302978516": 166, "4e43834b": 166, "5694": 166, "4c6d": 166, "8a83": 166, "796913d67e40": 166, "depth_64": 166, "000469207763671875": 166, "0005609989166259766": 166, "036e1dd": 166, "ca95": 166, "42a1": 166, "ab68": 166, "30a243f6b4ba": 166, "depth_128": 166, "0004668235778808594": 166, "0005328655242919922": 166, "13a59ca8": 166, "2ab0": 166, "4de8": 166, "a643": 166, "5b3f318f03d4": 166, "depth_256": 166, "0004749298095703125": 166, "e673defd": 166, "039c": 166, "4c37": 166, "9ef3": 166, "d4734436f39a": 166, "depth_512": 166, "0005099773406982422": 166, "0005548000335693359": 166, "d83ac439": 166, "2929": 166, "4d78": 166, "b52b": 166, "f297873c3e44": 166, "9710221314803044": 166, "001462493086363885": 166, "9473471466489307": 166, "00285118172031131": 166, "xxxxxxxxxxxxxx": 167, "put": 167, "run0_qscor": 167, "549": 167, "594": 167, "680": 167, "622": 167, "772": 167, "869": 167, "898": 167, "462": 167, "563": 167, "027": 167, "235": 167, "602": 167, "928": 167, "193": 167, "353": 167, "494": 167, "539": 167, "568": 167, "696": 167, "167": 167, "293": 167, "472": 167, "505": 167, "632": 167, "778": 167, "851": 167, "210": [167, 168], "275": 167, "326": 167, "540": 167, "760": 167, "922": 167, "129": [167, 173], "302": 167, "506": 167, "683": 167, "016": 167, "141": 167, "478": 167, "056": 167, "135": 167, "493": 167, "528": 167, "599": 167, "687": 167, "047": 167, "228": 167, "317": 167, "452": 167, "759": 167, "809": 167, "957": 167, "913": 167, "183": 167, "430": 167, "480": 167, "716": 167, "926": 167, "974": 167, "052": 167, "793": 167, "847": 167, "419": 167, "850": 167, "903": 167, "081": 167, "474": 167, "507": 167, "564": 167, "711": 167, "823": 167, "189": 167, "273": [167, 169], "327": 167, "503": 167, "590": 167, "709": 167, "363": 167, "473": 167, "669": 167, "018": 167, "479": 167, "830": 167, "914": 167, "139": 167, "421": 167, "535": 167, "585": 167, "617": 167, "934": 167, "236": 167, "335": 167, "392": 167, "551": 167, "699": 167, "827": 167, "917": 167, "534": 167, "633": 167, "946": 167, "980": 167, "032": [167, 168], "209": 167, "340": 167, "337": 167, "310": 167, "203": 167, "258": 167, "318": 167, "124": 167, "226": 167, "956": 167, "017": 167, "053": 167, "137": 167, "result0_qscor": 167, "4370": 167, "4700": 167, "6695": 167, "3692": 167, "5902": 167, "3404": 167, "5068": 167, "5085": 167, "4374": 167, "8942": 167, "43697610073325965": 167, "09963324394097106": 167, "6694825328517715": 167, "07553199096996285": 167, "5901951757699432": 167, "04806723107119834": 167, "5067731707198324": 167, "03884606517763287": 167, "4373922810576933": 167, "034249084355823": 167, "217": 168, "082": 168, "rem_quasidistribut": [168, 169], "time_batch": [168, 169], "cumulative_average_heavy_output_prob": [168, 169], "cumulative_stddev_heavy_output_prob": [168, 169], "rem_cumulative_average_heavy_output_prob": [168, 169], "rem_cumulative_stddev_heavy_output_prob": [168, 169], "rem_heavy_output_prob": [168, 169], "60546875": 168, "71875": 168, "578125": 168, "74609375": 168, "6328125": 168, "546875": 168, "56640625": 168, "76953125": 168, "75390625": 168, "67578125": 168, "6171875": 168, "55078125": 168, "64453125": 168, "6875": 168, "7109375": 168, "82421875": 168, "76171875": 168, "6484375": 168, "6015625": 168, "73828125": 168, "63671875": 168, "69140625": 168, "61328125": 168, "734375": 168, "57421875": 168, "6953125": 168, "55859375": 168, "69921875": 168, "609375": 168, "671875": 168, "77734375": 168, "6796875": 168, "62890625": 168, "6640625": 168, "66796875": 168, "62109375": 168, "703125": 168, "68359375": 168, "58984375": 168, "71484375": 168, "59375": 168, "79296875": 168, "66015625": 168, "65234375": 168, "59765625": 168, "65625": 168, "84765625": 168, "5859375": 168, "5625": 168, "72265625": 168, "640625": 168, "58203125": 168, "54296875": 168, "8203125": 168, "78515625": 168, "7265625": 168, "53515625": 168, "5703125": 168, "5546875": 168, "5390625": 168, "828125": 168, "80859375": 168, "765625": 168, "81640625": 168, "5234375": 168, "75": 168, "73046875": 168, "87890625": 168, "7890625": 168, "7734375": 168, "7421875": 168, "70703125": 168, "50390625": 168, "7578125": 168, "52734375": 168, "78125": 168, "8125": 168, "average_heavy_output_prob": [168, 169], "649203125": 168, "021341903733745705": 168, "672703125": 168, "020984452845629994": 168, "rem_average_heavy_output_prob": [168, 169], "67954478782619": 168, "020869291754367154": 168, "rem_is_succes": [168, 169], "rem_qv_result": [168, 169], "710149650958595": 168, "020289757228807877": 168, "vanilla_4_qubits_": [168, 169], "vanilla_rem_4_qubits_": 168, "Or": [168, 169], "onc": [168, 169, 173], "668": 169, "pedrofigueroaromero": 169, "anaconda3": 169, "190": 169, "server": 169, "e48420cb": 169, "30dc": 169, "4274": 169, "9d7d": 169, "e5fffa68f73a": 169, "7404ae11": 169, "823a": 169, "4e66": 169, "b2c4": 169, "41361cf10c69": 169, "q_0": 169, "q_1": 169, "q_2": 169, "mea": 169, "48526": 169, "79781": 169, "58665": 169, "3705": 169, "1471": 169, "1775": 169, "1521": 169, "q_3": 169, "q_4": 169, "73475": 169, "1344": 169, "q_5": 169, "q_6": 169, "30103": 169, "7711": 169, "3108": 169, "6909": 169, "6665": 169, "65249": 169, "8837": 169, "24328": 169, "3169": 169, "6809": 169, "71478125": 169, "020192524094250205": 169, "7261292473074281": 169, "019943197512544274": 169, "vanilla_3_qubits_": 169, "vanilla_rem_3_qubits_": 169, "collect": 170, "demonstr": 170, "rest": 170, "summari": [170, 171], "releas": 171, "date": [171, 172], "finland": 171, "tool": [171, 173], "changelog": 171, "search": 171, "page": [171, 172], "januari": 172, "2004": 172, "AND": 172, "FOR": 172, "reproduct": 172, "shall": 172, "licensor": 172, "owner": 172, "entiti": 172, "author": 172, "grant": 172, "legal": 172, "power": 172, "direct": 172, "indirect": 172, "caus": 172, "contract": 172, "ownership": 172, "fifti": 172, "percent": 172, "outstand": 172, "iii": 172, "benefici": 172, "exercis": 172, "mechan": 172, "transform": 172, "translat": 172, "media": 172, "authorship": 172, "attach": 172, "appendix": 172, "editori": 172, "revis": 172, "elabor": 172, "whole": 172, "remain": 172, "mere": 172, "link": 172, "bind": 172, "interfac": 172, "thereof": 172, "contribut": 172, "intention": 172, "inclus": 172, "behalf": 172, "electron": 172, "verbal": 172, "mail": 172, "issu": 172, "track": 172, "discuss": 172, "exclud": 172, "conspicu": 172, "Not": 172, "contributor": 172, "whom": 172, "been": 172, "receiv": 172, "incorpor": 172, "subject": 172, "herebi": 172, "perpetu": 172, "worldwid": 172, "charg": 172, "royalti": 172, "irrevoc": 172, "reproduc": 172, "publicli": 172, "sublicens": 172, "patent": 172, "sell": 172, "transfer": 172, "claim": 172, "necessarili": 172, "infring": 172, "alon": 172, "institut": 172, "litig": 172, "counterclaim": 172, "lawsuit": 172, "alleg": 172, "contributori": 172, "redistribut": 172, "medium": 172, "meet": 172, "recipi": 172, "carri": 172, "promin": 172, "retain": 172, "trademark": 172, "pertain": 172, "readabl": 172, "wherev": 172, "third": 172, "parti": 172, "normal": 172, "appear": 172, "content": 172, "alongsid": 172, "addendum": 172, "constru": 172, "compli": 172, "explicitli": 172, "notwithstand": 172, "noth": 172, "herein": 172, "supersed": 172, "agreement": 172, "regard": 172, "trade": 172, "servic": [172, 173], "reason": 172, "customari": 172, "disclaim": 172, "merchant": 172, "particular": 172, "respons": 172, "appropri": 172, "risk": 172, "liabil": 172, "event": 172, "tort": 172, "neglig": 172, "deliber": [172, 173], "grossli": 172, "liabl": 172, "damag": 172, "special": 172, "incident": 172, "consequenti": 172, "charact": 172, "aris": 172, "inabl": 172, "loss": 172, "goodwil": 172, "stoppag": 172, "failur": 172, "malfunct": 172, "commerci": 172, "even": 172, "advis": 172, "fee": 172, "indemn": 172, "oblig": 172, "indemnifi": 172, "defend": 172, "hold": 172, "harmless": 172, "incur": 172, "assert": 172, "boilerpl": 172, "enclos": 172, "bracket": 172, "comment": 172, "syntax": 172, "easier": 172, "archiv": 172, "repositori": [172, 173], "licenc": 172, "src": 172, "raphael": 172, "brieger": 172, "ingo": 172, "roth": 172, "martin": 172, "kliesch": 172, "comprehens": 173, "modular": 173, "easi": 173, "042311": 173, "lett": 173, "080505": 173, "prx": 173, "2023": 173, "150502": 173, "2022": 173, "holist": 173, "032328": 173, "0712": 173, "0921": 173, "2007": 173, "ieee": 173, "tran": 173, "eng": 173, "split": 173, "legaci": 173, "wrap": 173, "benchmarkexperi": 173, "uv": 173, "highli": 173, "With": 173, "machin": 173, "venv": 173, "read": 173, "prompt": 173, "suppli": 173, "txt": 173, "lock": 173, "directli": 173, "repo": 173, "pypi": 173, "lint": 173, "cicd": 173, "clone": 173, "directori": 173, "edit": 173, "docbuild": 173, "pyproject": 173, "toml": 173, "commit": 173, "upgrad": 173, "transit": 173, "cloud": 173, "prem": 173, "platform": 173, "authent": 173, "example_irb": 173, "example_experi": 173, "setup": 173, "weekli": 173, "daili": 173, "gitlab": 173, "scheduled_experi": 173}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "compressive_gst"], [38, 0, 0, "-", "entanglement"], [53, 0, 0, "-", "logging_config"], [54, 0, 0, "-", "optimization"], [67, 0, 0, "-", "quantum_volume"], [86, 0, 0, "-", "randomized_benchmarking"], [130, 0, 0, "-", "readout_mitigation"], [134, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"], [4, 3, 1, "", "use_DD"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[20, 0, 0, "-", "compressive_gst"], [26, 0, 0, "-", "gst_analysis"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[21, 1, 1, "", "CompressiveGST"], [22, 1, 1, "", "GSTConfiguration"], [23, 5, 1, "", "create_predefined_gate_set"], [24, 5, 1, "", "parse_gate_set"], [25, 5, 1, "", "parse_layouts"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_meas_circuits"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, 3, 1, "", "batch_size"], [22, 3, 1, "", "benchmark"], [22, 3, 1, "", "bootstrap_samples"], [22, 3, 1, "", "convergence_criteria"], [22, 3, 1, "", "from_init"], [22, 3, 1, "", "gate_labels"], [22, 3, 1, "", "gate_set"], [22, 3, 1, "", "max_inits"], [22, 3, 1, "", "max_iterations"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_circuits"], [22, 3, 1, "", "opt_method"], [22, 3, 1, "", "parallel_execution"], [22, 3, 1, "", "qubit_layouts"], [22, 3, 1, "", "rank"], [22, 3, 1, "", "seq_len_list"], [22, 3, 1, "", "shots"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[27, 5, 1, "", "bootstrap_errors"], [28, 5, 1, "", "dataframe_to_figure"], [29, 5, 1, "", "dataset_counts_to_mgst_format"], [30, 5, 1, "", "generate_basis_labels"], [31, 5, 1, "", "generate_gate_results"], [32, 5, 1, "", "generate_non_gate_results"], [33, 5, 1, "", "generate_unit_rank_gate_results"], [34, 5, 1, "", "mgst_analysis"], [35, 5, 1, "", "pandas_results_to_observations"], [36, 5, 1, "", "result_str_to_floats"], [37, 5, 1, "", "run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[39, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[40, 1, 1, "", "GHZBenchmark"], [41, 1, 1, "", "GHZConfiguration"], [42, 5, 1, "", "fidelity_analysis"], [43, 5, 1, "", "fidelity_ghz_coherences"], [44, 5, 1, "", "fidelity_ghz_randomized_measurements"], [45, 5, 1, "", "generate_ghz_linear"], [46, 5, 1, "", "generate_ghz_log_cruz"], [47, 5, 1, "", "generate_ghz_log_mooney"], [48, 5, 1, "", "generate_ghz_spanning_tree"], [49, 5, 1, "", "generate_ghz_star"], [50, 5, 1, "", "get_cx_map"], [51, 5, 1, "", "get_edges"], [52, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, 2, 1, "", "add_configuration_to_dataset"], [40, 2, 1, "", "analysis_function"], [40, 2, 1, "", "append_rms"], [40, 2, 1, "", "execute"], [40, 2, 1, "", "generate_coherence_meas_circuits"], [40, 2, 1, "", "generate_native_ghz"], [40, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, 3, 1, "", "benchmark"], [41, 3, 1, "", "cal_url"], [41, 3, 1, "", "custom_qubits_array"], [41, 3, 1, "", "fidelity_routine"], [41, 3, 1, "", "mit_shots"], [41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "num_RMs"], [41, 3, 1, "", "optimize_sqg"], [41, 3, 1, "", "qiskit_optim_level"], [41, 3, 1, "", "qubit_counts"], [41, 3, 1, "", "rem"], [41, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[41, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[55, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[56, 1, 1, "", "QScoreBenchmark"], [57, 1, 1, "", "QScoreConfiguration"], [58, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [59, 5, 1, "", "compute_expectation_value"], [60, 5, 1, "", "create_objective_function"], [61, 5, 1, "", "cut_cost_function"], [62, 5, 1, "", "get_optimal_angles"], [63, 5, 1, "", "is_successful"], [64, 5, 1, "", "plot_approximation_ratios"], [65, 5, 1, "", "qscore_analysis"], [66, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[56, 2, 1, "", "add_all_meta_to_dataset"], [56, 2, 1, "", "analysis_function"], [56, 2, 1, "", "choose_qubits_custom"], [56, 2, 1, "", "choose_qubits_naive"], [56, 2, 1, "", "execute"], [56, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[57, 3, 1, "", "REM"], [57, 3, 1, "", "benchmark"], [57, 3, 1, "", "choose_qubits_routine"], [57, 3, 1, "", "custom_qubits_array"], [57, 3, 1, "", "max_num_nodes"], [57, 3, 1, "", "min_num_nodes"], [57, 3, 1, "", "min_num_qubits"], [57, 3, 1, "", "mit_shots"], [57, 3, 1, "", "model_computed_fields"], [57, 3, 1, "", "model_config"], [57, 3, 1, "", "model_fields"], [57, 3, 1, "", "num_instances"], [57, 3, 1, "", "num_qaoa_layers"], [57, 3, 1, "", "optimize_sqg"], [57, 3, 1, "", "qiskit_optim_level"], [57, 3, 1, "", "qpu_topology"], [57, 3, 1, "", "seed"], [57, 3, 1, "", "use_classically_optimized_angles"], [57, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[68, 0, 0, "-", "clops"], [74, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[69, 1, 1, "", "CLOPSBenchmark"], [70, 1, 1, "", "CLOPSConfiguration"], [71, 5, 1, "", "clops_analysis"], [72, 5, 1, "", "plot_times"], [73, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[69, 2, 1, "", "add_all_meta_to_dataset"], [69, 2, 1, "", "analysis_function"], [69, 2, 1, "", "append_parameterized_unitary"], [69, 2, 1, "", "assign_random_parameters_to_all"], [69, 2, 1, "", "clops_cycle"], [69, 2, 1, "", "execute"], [69, 2, 1, "", "generate_circuit_list"], [69, 2, 1, "", "generate_random_parameters"], [69, 2, 1, "", "generate_single_circuit"], [69, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[70, 3, 1, "", "benchmark"], [70, 3, 1, "", "clops_h_bool"], [70, 3, 1, "", "model_computed_fields"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "model_fields"], [70, 3, 1, "", "num_circuits"], [70, 3, 1, "", "num_shots"], [70, 3, 1, "", "num_updates"], [70, 3, 1, "", "optimize_sqg"], [70, 3, 1, "", "physical_layout"], [70, 3, 1, "", "qiskit_optim_level"], [70, 3, 1, "", "qubits"], [70, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[75, 1, 1, "", "QuantumVolumeBenchmark"], [76, 1, 1, "", "QuantumVolumeConfiguration"], [77, 5, 1, "", "compute_heavy_output_probabilities"], [78, 5, 1, "", "cumulative_hop"], [79, 5, 1, "", "cumulative_std"], [80, 5, 1, "", "get_ideal_heavy_outputs"], [81, 5, 1, "", "get_rem_hops"], [82, 5, 1, "", "heavy_projector"], [83, 5, 1, "", "is_successful"], [84, 5, 1, "", "plot_hop_threshold"], [85, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[75, 2, 1, "", "add_all_circuits_to_dataset"], [75, 2, 1, "", "add_all_meta_to_dataset"], [75, 2, 1, "", "analysis_function"], [75, 2, 1, "", "execute"], [75, 2, 1, "", "generate_circuit_list"], [75, 2, 1, "", "generate_single_circuit"], [75, 2, 1, "", "get_rem_quasidistro"], [75, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[76, 3, 1, "", "benchmark"], [76, 3, 1, "", "choose_qubits_routine"], [76, 3, 1, "", "custom_qubits_array"], [76, 3, 1, "", "mit_shots"], [76, 3, 1, "", "model_computed_fields"], [76, 3, 1, "", "model_config"], [76, 3, 1, "", "model_fields"], [76, 3, 1, "", "num_circuits"], [76, 3, 1, "", "num_sigmas"], [76, 3, 1, "", "optimize_sqg"], [76, 3, 1, "", "physical_layout"], [76, 3, 1, "", "qiskit_optim_level"], [76, 3, 1, "", "rem"], [76, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[87, 0, 0, "-", "clifford_rb"], [92, 0, 0, "-", "interleaved_rb"], [97, 0, 0, "-", "mirror_rb"], [107, 0, 0, "-", "multi_lmfit"], [112, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[88, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[89, 1, 1, "", "CliffordRBConfiguration"], [90, 1, 1, "", "CliffordRandomizedBenchmarking"], [91, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[89, 3, 1, "", "benchmark"], [89, 3, 1, "", "model_computed_fields"], [89, 3, 1, "", "model_config"], [89, 3, 1, "", "model_fields"], [89, 3, 1, "", "num_circuit_samples"], [89, 3, 1, "", "parallel_execution"], [89, 3, 1, "", "qubits_array"], [89, 3, 1, "", "sequence_lengths"], [89, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[90, 2, 1, "", "add_all_circuits_to_dataset"], [90, 2, 1, "", "add_all_metadata_to_dataset"], [90, 2, 1, "", "analysis_function"], [90, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[93, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[94, 1, 1, "", "InterleavedRBConfiguration"], [95, 1, 1, "", "InterleavedRandomizedBenchmarking"], [96, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[94, 3, 1, "", "interleaved_gate"], [94, 3, 1, "", "interleaved_gate_params"], [94, 3, 1, "", "model_computed_fields"], [94, 3, 1, "", "model_config"], [94, 3, 1, "", "model_fields"], [94, 3, 1, "", "num_circuit_samples"], [94, 3, 1, "", "parallel_execution"], [94, 3, 1, "", "qubits_array"], [94, 3, 1, "", "sequence_lengths"], [94, 3, 1, "", "shots"], [94, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[95, 2, 1, "", "add_all_circuits_to_dataset"], [95, 2, 1, "", "add_all_meta_to_dataset"], [95, 2, 1, "", "analysis_function"], [95, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[98, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[99, 1, 1, "", "MirrorRBConfiguration"], [100, 1, 1, "", "MirrorRandomizedBenchmarking"], [101, 5, 1, "", "compute_polarizations"], [102, 5, 1, "", "edge_grab"], [103, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [104, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [105, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [106, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[99, 3, 1, "", "benchmark"], [99, 3, 1, "", "density_2q_gates"], [99, 3, 1, "", "depths_array"], [99, 3, 1, "", "model_computed_fields"], [99, 3, 1, "", "model_config"], [99, 3, 1, "", "model_fields"], [99, 3, 1, "", "num_circuit_samples"], [99, 3, 1, "", "num_pauli_samples"], [99, 3, 1, "", "qiskit_optim_level"], [99, 3, 1, "", "qubits_array"], [99, 3, 1, "", "routing_method"], [99, 3, 1, "", "shots"], [99, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[100, 2, 1, "", "add_all_meta_to_dataset"], [100, 2, 1, "", "analysis_function"], [100, 2, 1, "", "execute"], [100, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[108, 5, 1, "", "create_multi_dataset_params"], [109, 5, 1, "", "eval_func_single_dataset"], [110, 5, 1, "", "get_param_names_from_func_signature"], [111, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[113, 5, 1, "", "compute_inverse_clifford"], [114, 5, 1, "", "estimate_survival_probabilities"], [115, 5, 1, "", "exponential_rb"], [116, 5, 1, "", "fit_decay_lmfit"], [117, 5, 1, "", "generate_all_rb_circuits"], [118, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [119, 5, 1, "", "generate_random_clifford_seq_circuits"], [120, 5, 1, "", "get_survival_probabilities"], [121, 5, 1, "", "import_native_gate_cliffords"], [122, 5, 1, "", "lmfit_minimizer"], [123, 5, 1, "", "plot_rb_decay"], [124, 5, 1, "", "relabel_qubits_array_from_zero"], [125, 5, 1, "", "submit_parallel_rb_job"], [126, 5, 1, "", "submit_sequential_rb_jobs"], [127, 5, 1, "", "survival_probabilities_parallel"], [128, 5, 1, "", "validate_irb_gate"], [129, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[131, 1, 1, "", "M3IQM"], [132, 5, 1, "", "apply_readout_error_mitigation"], [133, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[131, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[135, 1, 1, "", "GraphPositions"], [136, 5, 1, "", "bootstrap_counts"], [137, 5, 1, "", "count_2q_layers"], [138, 5, 1, "", "count_native_gates"], [139, 5, 1, "", "extract_fidelities"], [140, 5, 1, "", "get_iqm_backend"], [141, 5, 1, "", "marginal_distribution"], [142, 5, 1, "", "perform_backend_transpilation"], [143, 5, 1, "", "plot_layout_fidelity_graph"], [144, 5, 1, "", "reduce_to_active_qubits"], [145, 5, 1, "", "retrieve_all_counts"], [146, 5, 1, "", "retrieve_all_job_metadata"], [147, 5, 1, "", "set_coupling_map"], [148, 5, 1, "", "sort_batches_by_final_layout"], [149, 5, 1, "", "submit_execute"], [150, 5, 1, "", "timeit"], [151, 5, 1, "", "xrvariable_to_counts"]], "iqm.benchmarks.utils.GraphPositions": [[135, 2, 1, "", "create_positions"], [135, 3, 1, "", "deneb_positions"], [135, 3, 1, "", "garnet_positions"], [135, 3, 1, "", "predefined_stations"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 171, 173], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 171, 173], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 157, 158, 160, 169], "compressive_gst": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "compressivegst": 21, "gstconfigur": 22, "create_predefined_gate_set": 23, "parse_gate_set": 24, "parse_layout": 25, "gst_analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "bootstrap_error": 27, "dataframe_to_figur": 28, "dataset_counts_to_mgst_format": 29, "generate_basis_label": 30, "generate_gate_result": 31, "generate_non_gate_result": 32, "generate_unit_rank_gate_result": 33, "mgst_analysi": 34, "pandas_results_to_observ": 35, "result_str_to_float": 36, "run_mgst_wrapp": 37, "entangl": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "ghz": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 157, 158, 161, 162, 163], "ghzbenchmark": 40, "ghzconfigur": 41, "fidelity_analysi": 42, "fidelity_ghz_coher": 43, "fidelity_ghz_randomized_measur": 44, "generate_ghz_linear": 45, "generate_ghz_log_cruz": 46, "generate_ghz_log_moonei": 47, "generate_ghz_spanning_tre": 48, "generate_ghz_star": 49, "get_cx_map": 50, "get_edg": 51, "plot_fidel": 52, "logging_config": 53, "optim": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "qscore": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 161, 167], "qscorebenchmark": 56, "qscoreconfigur": 57, "calculate_optimal_angles_for_qaoa_p1": 58, "compute_expectation_valu": 59, "create_objective_funct": 60, "cut_cost_funct": 61, "get_optimal_angl": 62, "is_success": [63, 83], "plot_approximation_ratio": 64, "qscore_analysi": 65, "run_qaoa": 66, "quantum_volum": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "clop": [68, 69, 70, 71, 72, 73, 157, 158, 160, 161], "clopsbenchmark": 69, "clopsconfigur": 70, "clops_analysi": 71, "plot_tim": 72, "retrieve_clops_elapsed_tim": 73, "quantumvolumebenchmark": 75, "quantumvolumeconfigur": 76, "compute_heavy_output_prob": 77, "cumulative_hop": 78, "cumulative_std": 79, "get_ideal_heavy_output": 80, "get_rem_hop": 81, "heavy_projector": 82, "plot_hop_threshold": 84, "qv_analysi": 85, "randomized_benchmark": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "clifford_rb": [87, 88, 89, 90, 91], "cliffordrbconfigur": 89, "cliffordrandomizedbenchmark": 90, "clifford_rb_analysi": 91, "interleaved_rb": [92, 93, 94, 95, 96], "interleavedrbconfigur": 94, "interleavedrandomizedbenchmark": 95, "interleaved_rb_analysi": 96, "mirror_rb": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "mirrorrbconfigur": 99, "mirrorrandomizedbenchmark": 100, "compute_polar": 101, "edge_grab": 102, "generate_fixed_depth_mrb_circuit": 103, "generate_pauli_dressed_mrb_circuit": 104, "list_to_numcircuit_times_numpauli_matrix": 105, "mrb_analysi": 106, "multi_lmfit": [107, 108, 109, 110, 111], "create_multi_dataset_param": 108, "eval_func_single_dataset": 109, "get_param_names_from_func_signatur": 110, "multi_dataset_residu": 111, "randomized_benchmarking_common": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "compute_inverse_clifford": 113, "estimate_survival_prob": 114, "exponential_rb": 115, "fit_decay_lmfit": 116, "generate_all_rb_circuit": 117, "generate_fixed_depth_parallel_rb_circuit": 118, "generate_random_clifford_seq_circuit": 119, "get_survival_prob": 120, "import_native_gate_clifford": 121, "lmfit_minim": 122, "plot_rb_decai": 123, "relabel_qubits_array_from_zero": 124, "submit_parallel_rb_job": 125, "submit_sequential_rb_job": 126, "survival_probabilities_parallel": 127, "validate_irb_g": 128, "validate_rb_qubit": 129, "readout_mitig": [130, 131, 132, 133], "m3iqm": 131, "apply_readout_error_mitig": 132, "readout_error_m3": 133, "util": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "graphposit": 135, "bootstrap_count": 136, "count_2q_lay": 137, "count_native_g": 138, "extract_fidel": 139, "get_iqm_backend": 140, "marginal_distribut": 141, "perform_backend_transpil": 142, "plot_layout_fidelity_graph": 143, "reduce_to_active_qubit": 144, "retrieve_all_count": 145, "retrieve_all_job_metadata": 146, "set_coupling_map": 147, "sort_batches_by_final_layout": 148, "submit_execut": 149, "timeit": 150, "xrvariable_to_count": 151, "changelog": 152, "version": 152, "2": [152, 154], "24": 152, "23": 152, "22": 152, "21": 152, "20": 152, "19": 152, "18": 152, "17": 152, "16": 152, "15": 152, "14": 152, "13": 152, "12": 152, "11": 152, "10": 152, "9": 152, "8": 152, "7": 152, "6": 152, "5": 152, "4": 152, "3": 152, "1": [152, 158], "0": [152, 158], "develop": [153, 173], "qubit": [154, 158], "clifford": [154, 157, 159, 161], "group": 154, "decomposit": 154, "gener": [154, 160, 166, 168, 169], "1q": [154, 165], "2q": [154, 165], "dump": 154, "pickl": 154, "file": 154, "load": 154, "count": 154, "element": 154, "A": 154, "wai": 154, "work": 154, "out": [154, 164], "invers": 154, "sequenc": 154, "design": 154, "condit": 154, "how": 155, "make": 155, "your": 155, "own": 155, "devic": 156, "spark": 157, "connect": [157, 158], "backend": [157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169], "state": [157, 158, 161, 162, 163], "fidel": [157, 158, 161, 162, 163], "quantum": [157, 158, 161, 168, 169], "volum": [157, 158, 161, 168, 169], "layer": [157, 158, 160], "oper": [157, 158, 160], "per": [157, 158, 160], "second": [157, 158, 160], "random": [157, 159, 161, 165, 166], "interleav": [157, 161, 165], "irb": [157, 165], "q": [157, 158, 167], "score": [157, 158, 167], "summari": [157, 158, 161], "star": 158, "As": 158, "one": 158, "can": 158, "see": 158, "label": 158, "i": 158, "reserv": 158, "resontor": 158, "so": 158, "advis": 158, "defin": [158, 159, 160, 161, 164, 165, 166, 167, 168], "indic": [158, 171], "layout": 158, "interest": 158, "start": 158, "from": 158, "rb": [159, 166], "choos": [159, 160, 161, 164, 165, 166, 167, 168, 169], "set": [159, 160, 161, 163, 164, 166, 167, 168, 169], "token": [159, 160, 161, 163, 166, 167, 168, 169], "us": [159, 160, 161, 163, 166, 167, 168, 169, 173], "reson": [159, 160, 161, 163, 166, 167, 168, 169], "configur": [159, 160, 162, 163, 164, 165, 166, 167, 168, 169], "run": [159, 160, 162, 163, 165, 166, 167, 168, 169], "experi": [159, 160, 164, 165, 166, 167, 168, 169], "perform": [159, 160, 167, 168, 169], "analysi": [159, 160, 167, 168, 169], "list": [160, 166], "all": [160, 164, 166], "kei": [160, 166], "attribut": [160, 166], "dataset": [160, 166], "The": [160, 166], "observ": [160, 164, 166], "object": [160, 166], "contain": [160, 166], "result": [160, 162, 163, 164, 165, 166], "plot": [160, 164, 166, 168, 169], "notebook": [161, 173], "mirror": [161, 166], "greenberg": [162, 163], "horn": [162, 163], "zeiling": [162, 163], "definit": [162, 163], "access": [162, 163, 164], "compress": 164, "gate": [164, 165], "tomographi": 164, "gst": 164, "minim": 164, "execut": 164, "": 164, "examin": 164, "high": 164, "level": 164, "store": 164, "final": 164, "estim": 164, "further": 164, "process": 164, "creat": 164, "custom": 164, "check": 164, "matrix": 164, "correspond": 164, "pi": 164, "rotat": 164, "around": 164, "y": 164, "axi": 164, "analyz": [165, 166], "non": 165, "nativ": 165, "mrb": 166, "qv": [168, 169], "deneb": 169, "inspect": 169, "exampl": 170, "content": 171, "tabl": 171, "licens": 172, "instal": 173, "latest": 173, "releas": 173, "option": 173, "depend": 173, "chang": 173, "character": 173, "physic": 173, "hardwar": 173, "jupyt": 173, "python": 173, "script": 173, "schedul": 173, "ci": 173, "cd": 173, "pipelin": 173}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST": [[21, "iqm-benchmarks-compressive-gst-compressive-gst-compressivegst"]], "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration": [[22, "iqm-benchmarks-compressive-gst-compressive-gst-gstconfiguration"]], "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set": [[23, "iqm-benchmarks-compressive-gst-compressive-gst-create-predefined-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set": [[24, "iqm-benchmarks-compressive-gst-compressive-gst-parse-gate-set"]], "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts": [[25, "iqm-benchmarks-compressive-gst-compressive-gst-parse-layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors": [[27, "iqm-benchmarks-compressive-gst-gst-analysis-bootstrap-errors"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure": [[28, "iqm-benchmarks-compressive-gst-gst-analysis-dataframe-to-figure"]], "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format": [[29, "iqm-benchmarks-compressive-gst-gst-analysis-dataset-counts-to-mgst-format"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels": [[30, "iqm-benchmarks-compressive-gst-gst-analysis-generate-basis-labels"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results": [[31, "iqm-benchmarks-compressive-gst-gst-analysis-generate-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results": [[32, "iqm-benchmarks-compressive-gst-gst-analysis-generate-non-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results": [[33, "iqm-benchmarks-compressive-gst-gst-analysis-generate-unit-rank-gate-results"]], "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis": [[34, "iqm-benchmarks-compressive-gst-gst-analysis-mgst-analysis"]], "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations": [[35, "iqm-benchmarks-compressive-gst-gst-analysis-pandas-results-to-observations"]], "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats": [[36, "iqm-benchmarks-compressive-gst-gst-analysis-result-str-to-floats"]], "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper": [[37, "iqm-benchmarks-compressive-gst-gst-analysis-run-mgst-wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[40, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[41, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[42, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[43, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[44, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[45, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[46, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[47, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[48, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[49, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[50, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[51, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[52, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[53, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[54, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[55, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[56, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[57, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[58, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[59, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[60, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[61, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[62, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[63, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[64, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[65, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[66, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[67, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[68, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[69, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[70, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[71, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[72, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[73, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[74, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[75, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[76, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[77, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[78, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[79, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[80, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[81, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[82, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[83, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[84, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[85, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[86, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[87, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[89, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[90, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[91, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[92, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[94, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[95, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[96, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[97, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[99, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[100, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[101, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[102, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[103, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[104, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[105, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[106, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[107, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[108, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[109, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[110, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[111, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[112, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[113, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[114, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[115, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[116, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[117, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[118, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[119, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[120, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[121, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[122, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[123, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[124, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[125, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[126, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[127, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[128, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[129, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[130, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[131, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[132, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[133, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[134, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.GraphPositions": [[135, "iqm-benchmarks-utils-graphpositions"]], "iqm.benchmarks.utils.bootstrap_counts": [[136, "iqm-benchmarks-utils-bootstrap-counts"]], "iqm.benchmarks.utils.count_2q_layers": [[137, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[138, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.extract_fidelities": [[139, "iqm-benchmarks-utils-extract-fidelities"]], "iqm.benchmarks.utils.get_iqm_backend": [[140, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[141, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[142, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.plot_layout_fidelity_graph": [[143, "iqm-benchmarks-utils-plot-layout-fidelity-graph"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[144, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[145, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[146, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[147, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[148, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[149, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[150, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[151, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[152, "changelog"]], "Version 2.24": [[152, "version-2-24"]], "Version 2.23": [[152, "version-2-23"]], "Version 2.22": [[152, "version-2-22"]], "Version 2.21": [[152, "version-2-21"]], "Version 2.20": [[152, "version-2-20"]], "Version 2.19": [[152, "version-2-19"]], "Version 2.18": [[152, "version-2-18"]], "Version 2.17": [[152, "version-2-17"]], "Version 2.16": [[152, "version-2-16"]], "Version 2.15": [[152, "version-2-15"]], "Version 2.14": [[152, "version-2-14"]], "Version 2.13": [[152, "version-2-13"]], "Version 2.12": [[152, "version-2-12"]], "Version 2.11": [[152, "version-2-11"]], "Version 2.10": [[152, "version-2-10"]], "Version 2.9": [[152, "version-2-9"]], "Version 2.8": [[152, "version-2-8"]], "Version 2.7": [[152, "version-2-7"]], "Version 2.6": [[152, "version-2-6"]], "Version 2.5": [[152, "version-2-5"]], "Version 2.4": [[152, "version-2-4"]], "Version 2.3": [[152, "version-2-3"]], "Version 2.2": [[152, "version-2-2"]], "Version 2.1": [[152, "version-2-1"]], "Version 2.0": [[152, "version-2-0"]], "Version 1.12": [[152, "version-1-12"]], "Version 1.11": [[152, "version-1-11"]], "Version 1.10": [[152, "version-1-10"]], "Version 1.9": [[152, "version-1-9"]], "Version 1.8": [[152, "version-1-8"]], "Version 1.7": [[152, "version-1-7"]], "Version 1.6": [[152, "version-1-6"]], "Version 1.5": [[152, "version-1-5"]], "Version 1.4": [[152, "version-1-4"]], "Version 1.3": [[152, "version-1-3"]], "Version 1.2": [[152, "version-1-2"]], "Version 1.1": [[152, "version-1-1"]], "Version 1.0": [[152, "version-1-0"]], "Development": [[153, "development"]], "2-Qubit Clifford Group Decomposition": [[154, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[154, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[154, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[154, "dump-on-a-pickle-file"]], "Load": [[154, "load"]], "Count elements": [[154, "count-elements"]], "2Q": [[154, "q"]], "1Q": [[154, "id1"]], "A way to work out the inverse of sequences": [[154, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[154, "design-condition"]], "How to make your own benchmark?": [[155, "how-to-make-your-own-benchmark"]], "Devices": [[156, "devices"]], "Benchmarking IQM Spark": [[157, "benchmarking-iqm-spark"]], "Connect to the backend": [[157, "connect-to-the-backend"], [158, "connect-to-the-backend"]], "GHZ state fidelity": [[157, "ghz-state-fidelity"], [158, "ghz-state-fidelity"], [161, "ghz-state-fidelity"]], "Quantum Volume": [[157, "quantum-volume"], [158, "quantum-volume"], [161, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[157, "circuit-layer-operations-per-second-clops"], [158, "circuit-layer-operations-per-second-clops"], [160, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[157, "clifford-randomized-benchmarking"], [161, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[157, "interleaved-randomized-benchmarking-irb"], [165, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[157, "q-score"], [158, "q-score"], [167, "q-score"]], "Summary": [[157, "summary"], [158, "summary"]], "Benchmarking IQM Star": [[158, "benchmarking-iqm-star"]], "As one can see, the label \u201c0\u201d is reserved for the resontor. So it is advised to define the qubit indices in the layout of interest starting from 1.": [[158, "as-one-can-see-the-label-0-is-reserved-for-the-resontor-so-it-is-advised-to-define-the-qubit-indices-in-the-layout-of-interest-starting-from-1"]], "Clifford Randomized Benchmarking (RB)": [[159, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[159, "choose-or-define-a-backend"], [160, "choose-or-define-a-backend"], [161, "choose-or-define-a-backend"], [164, "choose-or-define-a-backend"], [165, "choose-or-define-a-backend"], [166, "choose-or-define-a-backend"], [167, "choose-or-define-a-backend"], [168, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[159, "set-iqm-token-if-using-resonance"], [161, "set-iqm-token-if-using-resonance"], [163, "set-iqm-token-if-using-resonance"], [166, "set-iqm-token-if-using-resonance"], [167, "set-iqm-token-if-using-resonance"], [168, "set-iqm-token-if-using-resonance"], [169, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[159, "randomized-benchmarking-configuration"]], "Run the experiment": [[159, "run-the-experiment"], [160, "run-the-experiment"], [166, "run-the-experiment"], [167, "run-the-experiment"], [168, "run-the-experiment"], [169, "run-the-experiment"]], "Perform the analysis": [[159, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[160, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[160, "clops-configuration"]], "Perform Analysis": [[160, "perform-analysis"], [167, "perform-analysis"], [168, "perform-analysis"], [169, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[160, "list-all-the-keys-in-the-attributes-of-the-dataset"], [166, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[160, "the-observation-object-contains-the-benchmark-results"], [166, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[160, "generate-plots"], [166, "generate-plots"], [168, "generate-plots"], [169, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[161, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[161, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[161, "mirror-randomized-benchmarking"]], "CLOPS": [[161, "clops"]], "QScore": [[161, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[162, "greenbergerhornezeilinger-ghz-state-fidelity"], [163, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[162, "definition-of-the-benchmark-configuration"], [163, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[162, "running-the-benchmark"], [163, "running-the-benchmark"]], "Accessing the results": [[162, "accessing-the-results"], [163, "accessing-the-results"]], "Compressive Gate Set Tomography (GST)": [[164, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[164, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[164, "execute-gst-experiment-s"]], "Examine the results": [[164, "examine-the-results"]], "High level results stored at result.observations": [[164, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[164, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[164, "plots"]], "Creating a custom gate set": [[164, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[164, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[164, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[165, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[165, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[165, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[165, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[165, "id1"]], "Run the experiment - 2Q gate IRB": [[165, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[165, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[165, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[166, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[166, "mirror-rb-configuration"]], "Analyze the results": [[166, "analyze-the-results"]], "Qscore Configuration": [[167, "qscore-configuration"]], "Quantum Volume (QV)": [[168, "quantum-volume-qv"]], "Quantum Volume Configuration": [[168, "quantum-volume-configuration"], [169, "quantum-volume-configuration"]], "QV on Deneb": [[169, "qv-on-deneb"]], "Choose Deneb as a backend": [[169, "choose-deneb-as-a-backend"]], "Inspect the circuits": [[169, "inspect-the-circuits"]], "Examples": [[170, "examples"]], "IQM Benchmarks": [[171, "iqm-benchmarks"], [173, "iqm-benchmarks"]], "Contents": [[171, "contents"]], "Indices and tables": [[171, "indices-and-tables"]], "License": [[172, "license"]], "Installation (latest release)": [[173, "installation-latest-release"]], "Optional dependencies": [[173, "optional-dependencies"]], "Development installation (latest changes)": [[173, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[173, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[173, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[173, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.compressive_gst"], [20, "module-iqm.benchmarks.compressive_gst.compressive_gst"], [26, "module-iqm.benchmarks.compressive_gst.gst_analysis"], [38, "module-iqm.benchmarks.entanglement"], [39, "module-iqm.benchmarks.entanglement.ghz"], [53, "module-iqm.benchmarks.logging_config"], [54, "module-iqm.benchmarks.optimization"], [55, "module-iqm.benchmarks.optimization.qscore"], [67, "module-iqm.benchmarks.quantum_volume"], [68, "module-iqm.benchmarks.quantum_volume.clops"], [74, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [86, "module-iqm.benchmarks.randomized_benchmarking"], [87, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [92, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [97, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [107, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [112, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [130, "module-iqm.benchmarks.readout_mitigation"], [134, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "use_dd (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.use_DD"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.compressive_gst": [[19, "module-iqm.benchmarks.compressive_gst"]], "iqm.benchmarks.compressive_gst.compressive_gst": [[20, "module-iqm.benchmarks.compressive_gst.compressive_gst"]], "compressivegst (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST"]], "add_configuration_to_dataset() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst static method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.analysis_function"]], "execute() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.execute"]], "generate_meas_circuits() (iqm.benchmarks.compressive_gst.compressive_gst.compressivegst method)": [[21, "iqm.benchmarks.compressive_gst.compressive_gst.CompressiveGST.generate_meas_circuits"]], "gstconfiguration (class in iqm.benchmarks.compressive_gst.compressive_gst)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration"]], "batch_size (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.batch_size"]], "benchmark (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.benchmark"]], "bootstrap_samples (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.bootstrap_samples"]], "convergence_criteria (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.convergence_criteria"]], "from_init (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.from_init"]], "gate_labels (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_labels"]], "gate_set (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.gate_set"]], "max_inits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_inits"]], "max_iterations (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.max_iterations"]], "model_computed_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_config"]], "model_fields (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.num_circuits"]], "opt_method (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.opt_method"]], "parallel_execution (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.parallel_execution"]], "qubit_layouts (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.qubit_layouts"]], "rank (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.rank"]], "seq_len_list (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.seq_len_list"]], "shots (iqm.benchmarks.compressive_gst.compressive_gst.gstconfiguration attribute)": [[22, "iqm.benchmarks.compressive_gst.compressive_gst.GSTConfiguration.shots"]], "create_predefined_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[23, "iqm.benchmarks.compressive_gst.compressive_gst.create_predefined_gate_set"]], "parse_gate_set() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[24, "iqm.benchmarks.compressive_gst.compressive_gst.parse_gate_set"]], "parse_layouts() (in module iqm.benchmarks.compressive_gst.compressive_gst)": [[25, "iqm.benchmarks.compressive_gst.compressive_gst.parse_layouts"]], "iqm.benchmarks.compressive_gst.gst_analysis": [[26, "module-iqm.benchmarks.compressive_gst.gst_analysis"]], "bootstrap_errors() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[27, "iqm.benchmarks.compressive_gst.gst_analysis.bootstrap_errors"]], "dataframe_to_figure() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[28, "iqm.benchmarks.compressive_gst.gst_analysis.dataframe_to_figure"]], "dataset_counts_to_mgst_format() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[29, "iqm.benchmarks.compressive_gst.gst_analysis.dataset_counts_to_mgst_format"]], "generate_basis_labels() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[30, "iqm.benchmarks.compressive_gst.gst_analysis.generate_basis_labels"]], "generate_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[31, "iqm.benchmarks.compressive_gst.gst_analysis.generate_gate_results"]], "generate_non_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[32, "iqm.benchmarks.compressive_gst.gst_analysis.generate_non_gate_results"]], "generate_unit_rank_gate_results() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[33, "iqm.benchmarks.compressive_gst.gst_analysis.generate_unit_rank_gate_results"]], "mgst_analysis() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[34, "iqm.benchmarks.compressive_gst.gst_analysis.mgst_analysis"]], "pandas_results_to_observations() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[35, "iqm.benchmarks.compressive_gst.gst_analysis.pandas_results_to_observations"]], "result_str_to_floats() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[36, "iqm.benchmarks.compressive_gst.gst_analysis.result_str_to_floats"]], "run_mgst_wrapper() (in module iqm.benchmarks.compressive_gst.gst_analysis)": [[37, "iqm.benchmarks.compressive_gst.gst_analysis.run_mGST_wrapper"]], "iqm.benchmarks.entanglement": [[38, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[39, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[40, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[41, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[42, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[43, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[44, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[45, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[46, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[47, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[48, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[49, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[50, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[51, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[52, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[53, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[54, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[55, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[56, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "qpu_topology (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qpu_topology"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[57, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[58, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[59, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[60, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[61, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[62, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[63, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[64, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[65, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[66, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[67, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[68, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[69, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[71, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[72, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[73, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[74, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[78, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[79, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[80, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[81, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[82, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[83, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[84, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[85, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[86, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[87, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[88, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[89, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[90, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[91, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[92, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[93, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[94, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[95, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[96, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[97, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[98, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[101, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[102, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[103, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[104, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[105, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[106, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[107, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[108, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[109, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[110, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[111, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[112, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[113, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[114, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[115, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[116, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[117, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[118, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[119, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[120, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[121, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[122, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[123, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[124, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[125, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[126, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[127, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[128, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[129, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[130, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[131, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[131, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[132, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[133, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[134, "module-iqm.benchmarks.utils"]], "graphpositions (class in iqm.benchmarks.utils)": [[135, "iqm.benchmarks.utils.GraphPositions"]], "create_positions() (iqm.benchmarks.utils.graphpositions static method)": [[135, "iqm.benchmarks.utils.GraphPositions.create_positions"]], "deneb_positions (iqm.benchmarks.utils.graphpositions attribute)": [[135, "iqm.benchmarks.utils.GraphPositions.deneb_positions"]], "garnet_positions (iqm.benchmarks.utils.graphpositions attribute)": [[135, "iqm.benchmarks.utils.GraphPositions.garnet_positions"]], "predefined_stations (iqm.benchmarks.utils.graphpositions attribute)": [[135, "iqm.benchmarks.utils.GraphPositions.predefined_stations"]], "bootstrap_counts() (in module iqm.benchmarks.utils)": [[136, "iqm.benchmarks.utils.bootstrap_counts"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[137, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[138, "iqm.benchmarks.utils.count_native_gates"]], "extract_fidelities() (in module iqm.benchmarks.utils)": [[139, "iqm.benchmarks.utils.extract_fidelities"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[140, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[141, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[142, "iqm.benchmarks.utils.perform_backend_transpilation"]], "plot_layout_fidelity_graph() (in module iqm.benchmarks.utils)": [[143, "iqm.benchmarks.utils.plot_layout_fidelity_graph"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[144, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[145, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[146, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[147, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[148, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[149, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[150, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[151, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})