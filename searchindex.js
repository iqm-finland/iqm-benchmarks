Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.benchmark_experiment", "api/iqm.benchmarks.benchmark_experiment.BenchmarkExperiment", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.append_rms", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "example_clifford_rb", "examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.benchmark_experiment.rst", "api/iqm.benchmarks.benchmark_experiment.BenchmarkExperiment.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.append_rms.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "example_clifford_rb.ipynb", "examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.benchmark_experiment", "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.append_rms", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Clifford Randomized Benchmarking (RB) Example", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 44, 89, 95, 103, 105, 114, 127, 128], "python": 1, "librari": [1, 69, 74, 103], "suit": [1, 128], "qcvv": [1, 126, 128], "subpackag": [1, 21, 38, 42, 61, 62, 67, 72], "modul": [1, 5, 17, 21, 37, 38, 42, 61, 62, 67, 72, 126], "gener": [2, 3, 15, 20, 21, 23, 24, 30, 31, 32, 33, 34, 40, 44, 47, 50, 59, 65, 69, 70, 74, 77, 78, 79, 82, 83, 92, 93, 94, 109, 123, 124, 127], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 39, 40, 41, 43, 44, 45, 49, 50, 51, 63, 64, 65, 68, 69, 70, 73, 74, 75, 92, 105, 106, 123, 127, 128], "inherit": [2, 3, 5, 15, 17, 22, 39, 43, 49, 63, 68, 73, 105], "benchmarkbas": [2, 4, 39, 40, 41, 128], "abc": [2, 3, 5, 6, 22, 39, 43, 49, 63, 68, 73], "benchmarkconfigurationbas": [2, 3, 6, 16, 22, 24, 39, 41, 43, 45, 49, 51, 63, 64, 68, 69, 73, 74, 128], "pydant": [2, 4, 22, 24, 39, 41, 43, 45, 49, 51, 63, 64, 68, 69, 73, 74], "main": [2, 7, 8, 22, 39, 43, 49, 63, 68, 73], "basemodel": [2, 4, 22, 39, 43, 49, 63, 68, 73], "backend": [3, 6, 16, 23, 24, 25, 26, 33, 40, 44, 45, 50, 51, 59, 65, 70, 75, 77, 78, 79, 92, 93, 100, 101, 103, 104, 106, 107, 108, 111, 112, 114, 115, 118, 119, 120, 123, 128], "iqmbackendbas": [3, 6, 16, 23, 25, 40, 44, 50, 65, 70, 75, 77, 78, 79, 92, 93, 94, 100, 101, 103, 104, 107, 111, 112, 114, 118, 120], "configur": [3, 4, 6, 16, 23, 24, 40, 41, 44, 45, 50, 51, 58, 64, 65, 69, 70, 74, 75, 123, 127, 128], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 18, 19, 20, 23, 24, 28, 34, 40, 41, 44, 45, 50, 51, 64, 65, 69, 70, 74, 75, 87, 106, 123, 127], "The": [3, 6, 7, 12, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 40, 44, 45, 47, 50, 51, 53, 54, 56, 57, 64, 65, 69, 70, 74, 75, 76, 77, 78, 88, 98, 102, 108, 111, 112, 114, 115, 116, 117, 121, 124, 127, 128], "implement": [3, 5, 6, 23, 24, 29], "all": [3, 4, 6, 7, 18, 19, 20, 24, 25, 34, 36, 40, 44, 48, 50, 52, 53, 54, 57, 58, 64, 65, 69, 70, 75, 92, 98, 100, 101, 106, 116, 117, 123, 124, 127, 128], "from": [3, 4, 6, 7, 11, 23, 24, 26, 33, 34, 35, 40, 41, 45, 47, 48, 50, 51, 52, 57, 59, 64, 69, 74, 76, 85, 98, 99, 102, 106, 108, 112, 116, 117, 118, 122, 123, 124, 127, 128], "which": [3, 6, 7, 8, 23, 24, 26, 33, 35, 42, 44, 45, 46, 50, 60, 64, 65, 66, 69, 70, 71, 74, 75, 81, 92, 98, 102, 106, 115, 127, 128], "thei": [3, 19], "method": [3, 4, 6, 7, 8, 9, 10, 16, 18, 19, 20, 23, 24, 28, 40, 41, 44, 45, 50, 51, 64, 65, 69, 70, 74, 75, 106, 114, 123], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "abstract": [3, 6], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 18, 19, 20, 24, 36, 40, 41, 45, 47, 51, 59, 64, 69, 74, 85, 92, 108, 112, 115, 123, 124, 127], "return": [3, 6, 9, 11, 12, 13, 16, 18, 19, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 70, 71, 75, 76, 77, 78, 79, 80, 81, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "execute_full_benchmark": [3, 40], "execut": [3, 4, 6, 9, 16, 18, 19, 20, 23, 34, 38, 40, 42, 44, 45, 50, 51, 52, 59, 64, 65, 69, 70, 74, 75, 76, 89, 95, 100, 101, 102, 114, 120, 121, 122, 123, 124, 127, 128], "full": [3, 40, 45, 51, 128], "given": [3, 6, 7, 11, 23, 24, 25, 33, 34, 35, 36, 38, 40, 42, 44, 50, 57, 58, 67, 76, 93, 94, 119, 128], "static": [3, 6, 23, 40, 44, 50, 65, 70, 75], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 18, 19, 20, 23, 24, 26, 28, 29, 40, 41, 44, 45, 47, 48, 50, 51, 52, 55, 56, 57, 59, 64, 65, 69, 70, 74, 75, 76, 77, 78, 79, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 122], "check": [3, 16, 40, 58], "whether": [3, 4, 24, 25, 40, 44, 45, 50, 51, 58, 59, 64, 69, 93, 98, 114, 127], "requir": [3, 4, 16, 24, 41, 45, 51, 64, 69, 74, 127, 128], "ar": [3, 4, 7, 11, 16, 18, 19, 20, 24, 25, 34, 35, 50, 51, 79, 98, 104, 113, 115, 123, 127, 128], "met": [3, 16], "valid": [3, 103, 104, 126, 128], "dictionari": [3, 4, 7, 11, 24, 41, 44, 45, 48, 50, 51, 52, 55, 56, 57, 64, 69, 74, 75, 77, 78, 88, 92, 93, 94, 96, 100, 101, 107, 108, 111, 113, 119, 122, 124], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 127, 128], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 18, 19, 20, 24, 33, 35, 41, 44, 45, 50, 51, 64, 69, 74, 77, 78, 79, 83, 88, 91, 92, 93, 94, 98, 100, 101, 103, 106, 114, 115, 116, 120, 124, 128], "attribut": [3, 4, 6, 7, 8, 9, 10, 18, 19, 20, 23, 24, 41, 44, 45, 50, 51, 64, 65, 69, 70, 74, 75, 121, 127], "shot": [4, 24, 41, 45, 50, 51, 64, 69, 74, 100, 101, 106, 107, 120, 124, 128], "int": [4, 9, 11, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 44, 45, 47, 50, 51, 52, 55, 58, 59, 64, 69, 74, 75, 76, 77, 78, 79, 80, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 106, 107, 110, 113, 114, 116, 118, 119, 120, 122], "256": [4, 41, 45, 51, 64, 69, 74, 124], "max_gates_per_batch": [4, 24, 41, 45, 51, 64, 69, 74, 100, 101, 120, 124, 128], "calset_id": [4, 24, 41, 45, 51, 64, 69, 74, 100, 101, 120, 124, 128], "routing_method": [4, 24, 41, 45, 51, 64, 69, 74, 78, 79, 114, 124, 128], "liter": [4, 24, 41, 45, 51, 64, 69, 74, 118], "basic": [4, 24, 41, 45, 51, 64, 69, 74, 78, 79], "lookahead": [4, 24, 41, 45, 51, 64, 69, 74], "stochast": [4, 24, 41, 45, 51, 64, 69, 74], "sabr": [4, 24, 41, 45, 51, 64, 69, 74, 114, 124, 128], "physical_layout": [4, 24, 41, 45, 51, 64, 69, 74, 118, 124, 128], "fix": [4, 24, 41, 45, 51, 64, 69, 74, 75, 78, 93, 100, 102, 118, 123, 124, 128], "batch": [4, 19, 24, 41, 45, 51, 64, 69, 74, 100, 101, 118, 119, 120, 124], "number": [4, 23, 24, 29, 30, 31, 32, 33, 34, 36, 38, 40, 42, 45, 50, 51, 58, 59, 61, 64, 69, 74, 75, 76, 77, 78, 79, 80, 89, 92, 93, 94, 95, 100, 101, 106, 107, 110, 111, 120], "us": [4, 6, 9, 18, 23, 24, 26, 28, 29, 33, 34, 35, 36, 37, 40, 44, 45, 51, 74, 76, 91, 98, 106, 108, 120, 123, 127], "circuit": [4, 7, 10, 17, 18, 19, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 40, 42, 44, 45, 50, 51, 52, 55, 58, 59, 64, 65, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 88, 89, 92, 93, 94, 95, 100, 101, 103, 106, 107, 110, 111, 114, 115, 119, 120, 122, 123, 124], "default": [4, 6, 12, 24, 41, 45, 50, 51, 59, 64, 69, 74, 94, 98, 106, 118, 124], "i": [4, 6, 7, 24, 26, 30, 33, 34, 36, 40, 44, 45, 46, 50, 51, 58, 59, 60, 64, 65, 66, 69, 70, 71, 74, 75, 76, 80, 81, 84, 99, 103, 106, 114, 118, 124, 127, 128], "2": [4, 35, 40, 41, 51, 58, 74, 93, 99, 110, 124, 126, 127, 128], "8": [4, 99, 124, 127, 128], "maximum": [4, 40, 100, 101, 120], "gate": [4, 23, 24, 25, 30, 34, 35, 42, 44, 45, 51, 61, 62, 65, 67, 69, 70, 74, 77, 79, 88, 92, 93, 94, 96, 98, 100, 101, 103, 110, 111, 114, 120, 128], "per": [4, 42, 45, 51, 64, 74, 76, 78, 79, 80, 100, 101, 106, 107, 120], "option": [4, 24, 25, 35, 50, 51, 69, 78, 79, 88, 91, 93, 94, 98, 100, 101, 103, 114, 115, 116, 120], "calibr": [4, 6, 24, 26, 35, 50, 51, 100, 101, 106, 107, 120], "id": [4, 120], "last": 4, "avail": [4, 127, 128], "qiskit": [4, 6, 45, 51, 69, 74, 103, 114, 123], "rout": [4, 45, 51, 74, 114], "transpil": [4, 18, 23, 24, 28, 29, 44, 45, 51, 74, 92, 93, 103, 107, 111, 114, 119], "physic": [4, 24, 44, 45, 50, 51, 55, 69, 74, 78, 118, 126], "layout": [4, 8, 11, 18, 19, 24, 36, 44, 45, 50, 51, 74, 75, 100, 101, 108, 118, 123], "constrain": [4, 118], "dure": [4, 13, 50, 65, 70], "select": [4, 24, 51, 57], "qubit": [4, 8, 9, 11, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 44, 45, 50, 51, 55, 59, 61, 64, 65, 69, 74, 75, 76, 77, 78, 79, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 106, 108, 110, 114, 115, 118, 119, 123, 124], "initi": [4, 6, 24, 37, 108], "allow": [4, 123, 128], "ani": [4, 8, 28, 29, 48, 50, 69, 75, 80, 98, 100, 101, 107, 115, 117, 127], "other": [4, 24, 123, 127, 128], "accord": [4, 23, 31, 32, 40, 77, 118, 119], "final": [4, 6, 35, 45, 50, 51, 55, 74, 114, 118, 119], "measur": [4, 23, 24, 28, 40, 44, 45, 50, 51, 55, 64, 69, 74, 102, 107, 111, 118, 119], "model_computed_field": [4, 24, 41, 45, 51, 64, 69, 74], "classvar": [4, 24, 41, 45, 51, 64, 69, 74], "dict": [4, 7, 11, 24, 28, 29, 40, 41, 44, 45, 47, 48, 50, 51, 52, 55, 56, 57, 64, 69, 74, 75, 76, 77, 78, 79, 88, 89, 92, 93, 94, 95, 96, 98, 100, 101, 102, 107, 108, 111, 113, 116, 117, 119, 120, 122], "computedfieldinfo": [4, 24, 41, 45, 51, 64, 69, 74], "A": [4, 6, 7, 9, 10, 11, 13, 16, 18, 19, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 41, 44, 45, 46, 48, 50, 51, 56, 57, 60, 64, 65, 66, 69, 74, 75, 77, 78, 81, 88, 91, 93, 94, 100, 101, 113, 114, 115, 118, 122, 127, 128], "comput": [4, 23, 24, 27, 33, 40, 41, 45, 50, 51, 52, 53, 54, 56, 64, 69, 74, 88, 89, 95, 113, 126, 127, 128], "field": [4, 6, 24, 41, 45, 51, 64, 69, 74, 127], "correspond": [4, 24, 41, 42, 44, 45, 46, 50, 51, 55, 59, 60, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 81, 98, 102, 107, 119, 124], "object": [4, 7, 8, 9, 10, 16, 18, 19, 20, 23, 24, 27, 36, 41, 45, 50, 51, 64, 69, 74, 75, 83, 100, 101, 112, 116, 117, 120, 127], "model_config": [4, 24, 41, 45, 51, 64, 69, 74], "configdict": [4, 24, 41, 45, 51, 64, 69, 74], "model": [4, 24, 41, 45, 51, 64, 69, 74, 91, 97, 98], "should": [4, 6, 8, 10, 23, 24, 33, 37, 41, 45, 51, 64, 69, 74, 93, 123, 127], "conform": [4, 24, 41, 45, 51, 64, 69, 74], "config": [4, 24, 41, 45, 51, 64, 69, 74], "model_field": [4, 24, 41, 45, 51, 64, 69, 74], "fieldinfo": [4, 24, 41, 45, 51, 64, 69, 74], "annot": [4, 24, 41, 45, 51, 64, 69, 74, 108, 127], "true": [4, 24, 28, 41, 45, 50, 51, 64, 69, 74, 98, 114, 128], "union": [4, 24, 41, 45, 51, 64, 69, 74, 108, 127], "nonetyp": [4, 24, 41, 45, 51, 64, 69, 74], "fals": [4, 24, 41, 45, 51, 59, 64, 69, 74, 98, 106, 114, 124], "metadata": [4, 23, 24, 41, 44, 45, 48, 50, 51, 64, 65, 69, 70, 74, 75, 117], "about": [4, 24, 41, 45, 51, 64, 69, 74], "defin": [4, 5, 6, 7, 24, 33, 34, 41, 45, 51, 64, 69, 74, 92, 115, 127, 128], "map": [4, 7, 24, 33, 35, 40, 41, 45, 51, 64, 69, 74, 114, 118, 119, 123], "thi": [4, 5, 6, 17, 18, 23, 24, 33, 36, 40, 41, 45, 51, 58, 64, 69, 74, 99, 108, 127, 128], "replac": [4, 24, 41, 45, 51, 64, 69, 74, 127], "__fields__": [4, 24, 41, 45, 51, 64, 69, 74], "v1": [4, 24, 41, 45, 51, 64, 69, 74], "function": [5, 6, 22, 40, 43, 44, 46, 49, 50, 60, 63, 65, 66, 68, 70, 71, 73, 75, 81, 82, 84, 85, 87, 88, 90, 91, 97, 99, 105, 109, 121, 123], "benchmarkobservationidentifi": [5, 8, 123, 124], "benchmarkobserv": [5, 7, 36, 123, 124], "benchmarkrunresult": [5, 6, 7, 12, 23, 27, 44, 46, 50, 60, 65, 66, 70, 71, 75, 81, 123], "benchmarkanalysisresult": [5, 6, 12, 23, 27, 44, 46, 50, 60, 65, 66, 70, 71, 75, 81, 123], "kwarg": 6, "run": [6, 7, 8, 10, 16, 23, 24, 27, 40, 44, 45, 46, 50, 60, 65, 66, 70, 71, 75, 81, 128], "cortex": [6, 11], "experi": [6, 15, 16, 44, 46, 47, 50, 51, 53, 54, 60, 65, 66, 70, 71, 75, 81, 90, 97, 98, 102, 104], "In": [6, 127, 128], "order": [6, 26, 35, 36, 91, 99, 128], "write": [6, 106, 127], "new": [6, 7, 11, 115, 123, 128], "recommend": [6, 126, 127], "deriv": [6, 127], "baseclass": 6, "addition": 6, "custom": [6, 41, 51, 128], "analysi": [6, 7, 12, 44, 46, 47, 50, 60, 65, 66, 70, 71, 75, 81, 123], "can": [6, 10, 18, 24, 26, 38, 40, 42, 50, 108, 123, 128], "give": [6, 40, 123, 127], "pointer": 6, "analysis_funct": [6, 23, 44, 50, 65, 70, 75], "accept": [6, 40, 123, 127], "analysisresult": [6, 7, 23, 27, 44, 46, 50, 60, 65, 66, 70, 71, 75, 81, 123], "its": [6, 85, 115, 123, 127], "input": [6, 11, 45, 51, 80, 99, 103, 104, 108, 118], "result": [6, 7, 8, 10, 11, 12, 16, 38, 40, 42, 44, 46, 50, 51, 58, 59, 60, 65, 66, 70, 71, 75, 81, 89, 95, 97, 118, 123, 127, 128], "onli": [6, 12, 45, 51, 115, 127], "pass": [6, 12, 80, 108, 114], "through": [6, 12, 29, 127], "iqmbackend": [6, 50, 75, 100, 101], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 23, 27, 28, 29, 44, 47, 50, 65, 70, 75, 82, 84, 98, 122, 123, 124], "overridden": 6, "an": [6, 18, 19, 23, 24, 27, 28, 40, 44, 70, 71, 99, 103, 107, 108, 123, 127, 128], "xarrai": [6, 7, 11, 13, 23, 28, 44, 50, 65, 70, 75, 122, 123], "contain": [6, 7, 9, 10, 13, 17, 18, 19, 20, 23, 26, 27, 28, 29, 75, 77, 100, 101, 115, 123, 127], "inform": [6, 10, 35, 37, 127], "necessari": 6, "analys": 6, "calibration_set_id": 6, "uuid": 6, "calibrationsetid": 6, "latest": [6, 120, 126], "set": [6, 18, 19, 23, 40, 45, 51, 77, 78, 80, 86, 98, 111, 118, 120, 128], "runresult": [6, 7, 10, 23, 27, 44, 46, 50, 60, 65, 66, 70, 71, 75, 81, 123], "analyz": [6, 10, 23, 27, 110, 124, 128], "run_index": 6, "1": [6, 40, 41, 57, 74, 78, 79, 90, 93, 99, 114, 124, 127, 128], "intern": [6, 19], "perform": [6, 45, 51, 91, 102, 114, 127, 128], "make": [6, 50, 120, 127, 128], "shallow": 6, "copi": [6, 127], "produc": [6, 35, 51, 128], "therefor": [6, 40, 58], "chang": [6, 123, 126, 127], "data": [6, 7, 11, 16, 23, 24, 26, 28, 35, 47, 59, 83, 86, 91, 97, 106], "just": 6, "structur": 6, "arrai": [6, 44, 64, 69, 74, 98, 99, 104, 108], "index": [6, 23, 26, 33, 34, 35, 44, 50, 78, 126], "construct": [6, 24, 30], "updat": [6, 44, 45, 123], "core": 7, "circuit_contain": 7, "plot": [7, 16, 23, 27, 36, 59, 98, 123, 124, 128], "matplotlib": 7, "figur": [7, 14, 16, 36, 40, 47, 59, 98], "factori": [7, 18, 19, 20], "observ": [7, 8, 9, 23, 27, 36, 47, 98, 123, 124], "list": [7, 9, 11, 13, 16, 18, 19, 20, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 40, 41, 44, 45, 50, 52, 53, 54, 55, 56, 58, 59, 74, 75, 76, 77, 78, 79, 80, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 111, 113, 114, 116, 117, 118, 119, 120, 122, 123, 127, 128], "dataclass": [7, 8, 10], "store": [7, 8, 10, 16, 36, 123, 128], "consist": [7, 127], "kei": [7, 40, 44, 50, 55, 74, 77, 111, 113, 119], "valu": [7, 8, 23, 24, 29, 33, 40, 44, 45, 74, 77, 90, 111, 113, 114, 119, 124], "pair": [7, 26, 35, 44, 104], "plot_nam": 7, "plot_al": 7, "from_run_result": 7, "creat": [7, 23, 24, 33, 40, 44, 46, 50, 60, 65, 66, 70, 71, 75, 81, 128], "identifi": [8, 9, 11, 50, 75, 91, 98, 100, 101, 103, 116, 122, 124, 127], "uncertainti": [8, 29, 124], "singl": [8, 10, 13, 18, 20, 24, 36, 40, 44, 45, 50, 51, 77, 84, 128], "string": [8, 9, 11, 19, 20, 116, 128], "qubit_indic": [9, 18, 124], "eas": 9, "indic": [9, 40, 50, 55, 113, 119, 127], "wa": [9, 40, 58, 102, 127], "properti": [9, 18, 19], "string_identifi": 9, "version": [9, 82, 127], "enough": 10, "those": [10, 50, 55, 118, 127], "count": [11, 23, 24, 27, 40, 50, 52, 76, 89, 95, 102, 107, 108, 111, 116, 117, 122, 124], "add": [11, 19, 23, 34, 44, 50, 65, 70, 75, 77, 121, 123, 127, 128], "job": [11, 44, 48, 50, 75, 100, 101, 116, 124], "If": [11, 24, 74, 127, 128], "same": [11, 19, 26, 35, 74, 127], "alreadi": [11, 124, 128], "present": 11, "old": 11, "both": [11, 51, 128], "ad": [11, 123, 124], "togeth": [11, 128], "bitstr": [11, 40, 57, 102, 113], "current": [11, 24, 44, 106, 128], "instanc": [11, 18, 19, 28, 29, 40, 123], "xr": [11, 13, 23, 28, 29, 44, 47, 50, 65, 70, 75, 98, 122], "merg": [11, 13], "where": [11, 18, 19, 24, 79, 127], "dataset_merg": 11, "recurs": 13, "minim": [13, 24, 33, 34, 97], "size": [13, 24, 33, 38, 40], "dateset": 13, "fig": [14, 36], "show": 14, "close": 14, "benchmarkexperi": [15, 128], "benchmark_configur": 16, "device_id": 16, "wrap": [16, 128], "one": [16, 45, 99, 120, 127, 128], "more": [16, 127, 128], "relev": [16, 117], "run_experi": 16, "raw": 16, "easili": [17, 123, 128], "interact": [17, 123], "quantum": [17, 23, 24, 28, 30, 31, 32, 33, 40, 42, 44, 45, 49, 50, 51, 52, 55, 58, 60, 77, 78, 89, 93, 94, 95, 106, 107, 110, 111, 114, 115, 120, 123, 126, 128], "circuitgroup": [17, 18, 23, 123], "benchmarkcircuit": [17, 20, 123], "circuit_group": 18, "group": [18, 19, 65], "purpos": [18, 19, 127], "typic": [18, 19], "repres": [18, 19, 47, 59, 113, 127], "exampl": [18, 82, 123, 126, 127, 128], "insid": [18, 123], "get_circuit_group_by_nam": 18, "get": [18, 85, 112, 128], "desir": [18, 19], "doe": [18, 24, 127], "exist": [18, 20, 123, 128], "group_nam": 18, "integ": [18, 19, 24, 50, 55, 78], "qubit_layouts_by_index": [18, 19], "tupl": [18, 19, 24, 26, 29, 33, 40, 44, 45, 47, 50, 55, 59, 75, 91, 92, 93, 94, 96, 98, 100, 107, 114, 119, 120], "qubit_layout": [18, 19, 23, 26, 28, 29, 33, 34, 35, 36], "qiskit_iqm": [19, 24, 123], "iqm_circuit": 19, "iqmcircuit": [19, 23, 25, 30, 31, 32, 33, 40, 44, 50, 55, 75, 77, 78, 79, 88, 92, 93, 94, 96, 100, 101, 103, 107, 110, 111, 114, 115, 119, 120, 123], "It": [19, 128], "common": [19, 87, 127], "activ": [19, 115, 128], "add_circuit": 19, "circuit_nam": 19, "get_circuits_by_nam": 19, "share": [19, 127, 128], "found": [19, 26, 128], "benchmark_circuit": 20, "get_benchmark_circuits_by_nam": 20, "request": 20, "otherwis": [20, 127], "ghz": [21, 123, 128], "verifi": [21, 103], "greenberg": [21, 23], "horn": [21, 23], "zeiling": [21, 23], "state": [21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 89, 95, 123, 127, 128], "ghzbenchmark": [22, 24], "benchmark_definit": [22, 24, 43, 45, 49, 51, 63, 64, 68, 69, 73, 74], "ghzconfigur": [22, 23], "estim": [23, 24, 28, 29, 38, 40, 45, 50, 65, 70, 75, 76, 102], "qualiti": 23, "fidel": [23, 24, 26, 27, 28, 29, 34, 35, 36, 45, 61, 62, 65, 67, 70, 72, 75, 76, 91, 98, 123, 128], "generate_native_ghz": 23, "qubit_count": [23, 24], "routin": [23, 24, 51, 91], "prepar": [23, 127], "nativ": [23, 35, 93, 94, 96, 103, 111], "topologi": 23, "subset": [23, 26, 28, 29, 33, 34, 35], "system": [23, 24, 26, 28, 29, 33, 34, 35, 106, 127, 128], "protocol": [23, 26, 28, 29, 33, 34, 35], "0": [23, 26, 33, 34, 35, 40, 51, 74, 77, 78, 79, 99, 124, 127, 128], "smaller": [23, 24, 33], "equal": [23, 33, 50, 123], "quantumcircuit": [23, 25, 33, 40, 44, 50, 55, 75, 77, 88, 92, 93, 94, 100, 101, 107, 110, 114, 115, 119, 120, 123], "generate_coherence_meas_circuit": 23, "take": [23, 24, 114, 121, 123, 128], "output": [23, 37, 52, 53, 54, 55, 56, 57, 58, 106], "need": [23, 44, 108, 128], "via": [23, 24], "mult": 23, "q": [23, 38, 39, 40, 41, 128], "coher": [23, 24, 28], "qc_list_transpil": 23, "generate_readout_circuit": 23, "wrapper": 23, "creation": 23, "differ": [23, 47, 74, 127, 128], "all_circuits_list": 23, "add_configuration_to_dataset": 23, "further": [23, 123], "storag": 23, "1024": 24, "state_generation_routin": 24, "tree": [24, 33, 34], "custom_qubits_arrai": [24, 40, 41, 51, 128], "sequenc": [24, 45, 50, 51, 64, 69, 74, 75, 76, 89, 92, 93, 94, 95, 114, 118, 124], "qiskit_optim_level": [24, 41, 45, 51, 74, 78, 79, 114, 128], "3": [24, 41, 45, 51, 58, 99, 124, 126, 127, 128], "optimize_sqg": [24, 41, 44, 45, 51, 114, 128], "bool": [24, 40, 41, 44, 45, 50, 51, 58, 59, 64, 69, 98, 106, 114], "fidelity_routin": 24, "num_rm": [24, 25], "100": [24, 45, 51, 128], "rem": [24, 28, 51, 59, 107, 128], "mit_shot": [24, 50, 51, 107, 128], "1000": [24, 51, 107], "cal_url": [24, 26], "possibl": [24, 127], "optim": [24, 44, 45, 51, 74, 114, 128], "log": [24, 31, 32, 33, 34], "depth": [24, 30, 31, 32, 33, 50, 59, 74, 75, 78, 79, 90, 93, 97, 100, 102, 124], "coupl": [24, 26, 33, 35, 45, 51, 114, 118], "cz": [24, 26, 34, 35, 93, 111, 114], "account": [24, 114, 128], "algorithm": [24, 34, 77], "span": [24, 33, 34], "choos": [24, 40, 127], "largest": 24, "weight": [24, 34, 35, 57], "distanc": [24, 34], "parallel": [24, 34, 42, 64, 69, 93, 100, 102, 110], "applic": [24, 34, 77, 127], "cx": [24, 30, 34, 44], "scale": 24, "logarithm": 24, "connect": [24, 34, 104], "naiv": [24, 41], "appli": [24, 30, 34, 44, 51, 123, 127], "textbook": 24, "linearli": 24, "specifi": [24, 45, 50, 51, 69, 75, 77, 78, 100, 101, 104, 111, 113, 118, 120, 128], "assum": [24, 36, 99, 127], "e": [24, 69, 74, 99, 122, 128], "g": [24, 69, 74, 99, 122, 128], "label": [24, 45, 59, 69, 78, 88, 94, 98], "meant": 24, "NOT": 24, "support": [24, 35, 127], "denot": 24, "provid": [24, 127], "here": [24, 76], "ha": [24, 124, 127], "than": 24, "small": [24, 123], "level": [24, 45, 51, 74], "architectur": 24, "consecut": 24, "reduc": [24, 115], "iqm_transpil": 24, "optimize_single_qubit_g": 24, "multipl": [24, 28, 82, 123], "moonei": [24, 28], "2021": [24, 28, 128], "randomized_measur": 24, "random": [24, 25, 44, 61, 63, 68, 69, 73, 74, 77, 79, 87, 93, 94, 123, 125, 126, 128], "outlin": 24, "http": [24, 29, 31, 32, 82, 127, 128], "arxiv": [24, 29, 31, 32, 45, 77, 128], "org": [24, 29, 31, 32, 127], "ab": [24, 29, 31, 32], "1812": [24, 29], "02624": [24, 29], "respect": [24, 74, 76], "chosen": 24, "boolean": 24, "flag": [24, 128], "determin": [24, 127], "readout": [24, 28, 50, 51, 56, 105, 106, 108], "error": [24, 28, 50, 51, 56, 98, 108, 123], "mitig": [24, 28, 50, 51, 56, 105, 106, 107, 108], "total": [24, 86], "url": [24, 26, 128], "retriev": [24, 44, 48, 116, 117, 122, 124], "priorit": 24, "high": 24, "append": [25, 44], "1q": [25, 96], "clifford": [25, 62, 63, 64, 65, 66, 68, 69, 70, 77, 88, 92, 93, 94, 96, 103, 104, 123, 125, 126, 128], "sampl": [25, 40, 51, 57, 69, 74, 76, 77, 78, 79, 80, 92, 93, 94], "uniformli": 25, "param": [25, 30, 31, 32, 44, 53, 65, 70, 80, 84, 86, 88, 89, 100, 101, 102, 104, 113, 116, 117], "decompos": [25, 44], "origin": [25, 50, 55, 114, 115, 127], "float": [26, 35, 40, 44, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 69, 74, 76, 77, 78, 79, 89, 90, 91, 95, 98, 102, 103, 106, 108, 111, 113], "under": [26, 123, 127], "each": [26, 34, 36, 40, 53, 54, 55, 59, 69, 74, 76, 79, 83, 102, 107, 111, 124, 127, 128], "list_fid": 26, "wai": [26, 35, 123, 128], "list_coupl": 26, "ideal_prob": 29, "num_qubit": [29, 30, 31, 32, 40, 50, 76, 89, 95], "cross": [29, 127], "correl": 29, "rm": 29, "eq": 29, "34": [29, 124], "hadamard": 30, "seri": 30, "linear": 30, "fashion": 30, "symmetr": 30, "halv": 30, "n": [30, 31, 32, 33, 65, 75, 128], "1807": 31, "05572": 31, "2101": 32, "08946": 32, "graph": [33, 34, 35, 40], "n_state": 33, "networkx": [33, 34, 35, 40], "participating_qubit": 33, "qc": [33, 44, 128], "calcul": [34, 40, 55, 86, 110, 121], "cx_map": 34, "particip": 34, "2qb": 34, "between": [34, 79, 106], "them": [34, 128], "subgraph": 34, "edg": [34, 35, 40, 77], "Then": [34, 128], "find": 34, "most": 34, "central": 34, "posit": 34, "next": 34, "start": [34, 40, 99, 128], "smallest": 34, "layer": [34, 40, 42, 44, 45, 50, 74, 75, 77, 78, 79, 100, 110, 128], "first": [34, 40, 44, 74], "coupling_map": [35, 114], "couplingmap": [35, 118], "edges_c": 35, "fidelities_c": 35, "have": [35, 93, 127, 128], "v": [36, 40, 44, 46], "user": [36, 128], "identif": [36, 127], "logger": [37, 121], "everi": 37, "warn": 37, "score": [38, 39, 40, 41, 128], "combinatori": [38, 40], "problem": [38, 40], "meaning": [38, 40, 42, 50, 51], "qscorebenchmark": [39, 41], "qscoreconfigur": [39, 40], "generate_maxcut_ansatz": 40, "theta": 40, "ansatz": 40, "qaoa": 40, "maxcut": 40, "end": [40, 44, 50, 127], "variat": 40, "gamma": 40, "beta": 40, "cost_funct": 40, "x": [40, 84, 86, 98], "cut": 40, "minu": 40, "sign": 40, "solut": 40, "multipli": 40, "obj": 40, "compute_expectation_valu": 40, "expect": [40, 74, 77, 79, 123], "val": 40, "avg": 40, "create_objective_funct": 40, "qubit_set": [40, 77, 91], "callabl": [40, 91, 97], "parametr": [40, 42, 44, 45], "calculate_optimal_angles_for_qaoa_p1": 40, "angl": 40, "run_qaoa": 40, "solv": 40, "averag": [40, 53, 58, 59, 65, 70, 76, 91], "is_success": 40, "approximation_ratio": 40, "approxim": 40, "ratio": 40, "abov": [40, 58, 127], "being": [40, 44, 50, 55, 58, 59, 76, 77, 89, 95, 111, 113], "success": [40, 58], "condit": [40, 58, 127], "mean": [40, 111, 127], "threshold": [40, 51, 58, 59], "choose_qubits_na": 40, "sequenti": [40, 101, 124], "choose_qubits_custom": 40, "element": 40, "match": 40, "plot_approximation_ratio": 40, "list_of_num_nod": 40, "list_of_cut_s": 40, "node": 40, "includ": [40, 47, 127], "standard": [40, 51, 54, 63, 98, 111, 128], "deviat": [40, 51, 54, 98, 111], "execute_single_benchmark": 40, "num_nod": 40, "self": [40, 94], "min_num_nod": [40, 41], "up": [40, 77, 128], "failur": [40, 127], "devic": [40, 106, 128], "ration": 40, "over": [40, 58, 106, 113], "num_inst": 41, "num_qaoa_lay": 41, "max_num_nod": 41, "use_virtual_nod": 41, "use_classically_optimized_angl": 41, "choose_qubits_routin": [41, 51, 128], "min_num_qubit": 41, "seed": 41, "volum": [42, 49, 50, 51, 60, 123, 128], "reflect": [42, 44, 50, 61, 62, 67, 72], "deepest": [42, 50], "oper": [42, 61, 103, 111, 123], "second": [42, 44], "clop": [42, 123, 128], "speed": [42, 44], "clops_v": 42, "qv": [42, 44, 45, 50, 51, 53, 54, 58, 59, 123], "clops_h": [42, 45], "squar": 42, "clopsbenchmark": [43, 45], "clopsconfigur": [43, 44], "backend_arg": [44, 50, 65, 70, 75, 77, 78, 79, 92, 93, 94, 100, 101, 103, 104, 107, 111], "h": [44, 46], "add_all_meta_to_dataset": [44, 50, 70, 75], "variabl": [44, 50, 65, 70, 75, 91, 128], "append_parameterized_unitari": 44, "q0": 44, "q1": 44, "su": 44, "4": [44, 99, 124, 127, 128], "involv": 44, "belong": 44, "generate_single_circuit": [44, 50], "generate_circuit_list": [44, 50], "generate_random_paramet": 44, "ndarrai": [44, 90, 91, 97], "mani": [44, 123], "templat": 44, "np": [44, 90, 97], "float64": 44, "assign_random_parameters_to_al": 44, "dict_parametrized_circ": 44, "clops_cycl": 44, "sorted_transpiled_qc_list": [44, 50, 120], "cycl": 44, "assign": [44, 45, 74], "elaps": [44, 47, 48, 121], "time": [44, 47, 48, 50, 75, 100, 101, 121], "submiss": [44, 50, 75, 100, 101, 127], "generate_transpiled_clops_templ": 44, "num_circuit": [45, 51, 128], "num_upd": 45, "10": [45, 124, 128], "num_shot": 45, "clops_h_bool": 45, "establish": 45, "By": 45, "definit": [45, 127], "2110": [45, 128], "14108": [45, 128], "quant": [45, 77, 128], "ph": [45, 77, 128], "rigor": 45, "loos": 45, "www": [45, 127], "ibm": [45, 106], "com": 45, "blog": 45, "metric": 45, "upon": [45, 51], "restrict": [45, 51, 118], "consid": [45, 51, 118], "clops_data": 47, "job_meta": 48, "quantumvolumebenchmark": [49, 51], "quantumvolumeconfigur": [49, 50, 128], "add_all_circuits_to_dataset": [50, 65, 70], "classical_permut": 50, "permut": 50, "classic": 50, "avoid": 50, "swap": 50, "get_rem_quasidistro": 50, "sorted_qc_list_indic": [50, 55], "execution_result": [50, 52], "quasicollect": [50, 56, 107], "quasiprob": [50, 56, 107, 108], "qubii": 50, "untranspil": [50, 55, 92, 114, 123], "submit_single_qv_job": 50, "submit": [50, 75, 100, 101, 120, 124, 127], "vanilla": [50, 59, 75, 100, 101], "dd": [50, 59, 75, 100, 101], "num_sigma": [51, 58, 59, 128], "least": [51, 127], "criteria": 51, "consensu": 51, "post": [51, 124], "process": [51, 124], "when": [51, 123], "unmitig": 51, "1_000": [51, 128], "ideal_heavy_output": [52, 56], "hop": [52, 53, 54, 58, 59, 123], "ideal": [52, 76], "heavi": [52, 53, 54, 55, 56, 57, 58], "cumul": [53, 54], "probabl": [53, 54, 56, 57, 74, 77, 89, 95, 102, 113, 128], "individu": [53, 54, 98, 123, 127, 128], "trial": [53, 54], "qc_list": [55, 114], "bitrstr": 55, "all_rem_quasidistro": 56, "distribut": [56, 57, 113, 127], "noiseless": 56, "project": [57, 128], "onto": 57, "associ": [57, 127], "heavy_output_prob": 58, "within": [58, 127], "sigma": [58, 59], "qv_result": 59, "qv_results_typ": 59, "backend_nam": [59, 115, 124], "timestamp": [59, 124], "in_volumetr": 59, "plot_rem": 59, "come": [59, 76, 108], "context": 59, "volumetr": 59, "correct": [59, 76, 106, 107], "rb": [62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 89, 90, 91, 93, 95, 97, 98, 101, 102, 104, 123, 125, 126], "cliffordrandomizedbenchmark": [63, 64, 124], "cliffordrbconfigur": [63, 65, 124], "qubits_arrai": [64, 69, 74, 93, 98, 100, 102, 104, 124, 128], "sequence_length": [64, 69, 92, 93, 124, 128], "num_circuit_sampl": [64, 69, 74, 92, 124, 128], "parallel_execut": [64, 69, 124, 128], "length": [64, 69, 76, 80, 92, 93, 94, 124], "add_all_metadata_to_dataset": 65, "interleav": [67, 68, 69, 70, 71, 74, 79, 90, 92, 93, 94, 98, 123, 124, 128], "interleavedrandomizedbenchmark": [68, 69], "interleavedrbconfigur": [68, 70, 128], "interleaved_g": [69, 92, 93, 94, 98, 128], "interleaved_gate_param": [69, 128], "simultaneous_fit": [69, 128], "amplitud": [69, 90, 128], "offset": [69, 90, 128], "irb": [69, 91], "ygate": 69, "czgate": [69, 74, 128], "enter": [69, 91, 93], "fit": [69, 82, 83, 84, 86, 90, 91, 97, 98, 123, 127], "simultan": [69, 91], "specif": [70, 114, 127], "mirror": [72, 73, 74, 75, 79, 123, 128], "mirrorrandomizedbenchmark": [73, 74, 128], "mirrorrbconfigur": [73, 75, 128], "depths_arrai": [74, 128], "num_pauli_sampl": [74, 76, 80, 128], "two_qubit_gate_ensembl": [74, 77, 78, 79, 128], "density_2q_g": [74, 77, 78, 79, 128], "25": [74, 77, 78, 79, 124, 128], "mrb": [74, 75, 78, 81, 91, 98, 100, 101], "len": 74, "pauli": [74, 76, 78, 79, 80], "two": [74, 77], "ensembl": [74, 75, 77, 98], "cxgate": 74, "densiti": [74, 77, 79, 98], "submit_single_mrb_job": 75, "sorted_transpiled_circuit_dict": [75, 100], "canon": [75, 78, 79, 100], "noisy_count": 76, "ideal_count": 76, "num_circ_sampl": [76, 80, 94], "polar": [76, 91], "noisi": 76, "rescal": 76, "few": 76, "effect": 76, "real": [76, 128], "simul": [76, 106, 123], "n_layer": 77, "grab": [77, 106], "see": [77, 127], "2204": 77, "07568": 77, "2q": [77, 79, 96, 98], "form": [77, 127], "subsequ": [77, 127], "rais": [77, 80, 104, 106], "valueerror": [77, 80, 104], "do": [77, 106, 127], "uniti": 77, "circ_sampl": 78, "pauli_samples_per_circ": [78, 79], "dress": [78, 79, 80], "input_list": 80, "convert": 80, "flat": 80, "matrix": 80, "shape": 80, "lmfit": [82, 83, 91], "extend": 82, "shown": 82, "document": [82, 127, 128], "github": [82, 128], "io": 82, "py": 82, "example_fit_multi_dataset": 82, "html": [82, 128], "sphx": 82, "glr": 82, "multi": 82, "func": [83, 84, 85, 86, 91, 97], "initial_guess": 83, "constraint": 83, "simultaneously_fit_var": 83, "line": 83, "evalu": 84, "signatur": 85, "residu": 86, "sever": 86, "techniqu": 87, "qc_inv": 88, "clifford_dictionari": 88, "invers": 88, "invert": 88, "de": [88, 94], "stabil": [88, 94], "ground": [89, 95], "depolarization_prob": 90, "non": [90, 127], "depolar": 90, "p": 90, "decai": [90, 98, 123], "exponenti": 90, "rb_identifi": 91, "simultaneous_fit_var": 91, "0th": 91, "ap": 91, "m": [91, 124, 128], "b": [91, 127], "either": [91, 108, 111, 127], "stdrb": 91, "clifford_dict": [92, 94], "fir": 92, "cliffords_1q": 93, "cliffords_2q": 93, "num_sampl": [93, 94], "befor": 93, "after": 93, "term": [93, 127], "r": [93, 111, 114], "seq_length": 94, "import": [96, 123, 124, 127, 128], "fit_paramet": 97, "fit_data": 97, "minimizerresult": 97, "violin": 98, "scatter": 98, "bar": 98, "shade_stdev": 98, "shade_meanerror": 98, "logscal": 98, "mrb_2q_densiti": 98, "mrb_2q_ensembl": 98, "point": 98, "shade": 98, "axi": 98, "titl": [98, 127], "arr": 99, "helper": 99, "relabel": 99, "increasingli": 99, "zero": [99, 123], "5": [99, 124, 127, 128], "7": [99, 124, 127, 128], "note": [99, 108], "sort": [99, 119], "increas": 99, "transpiled_circuit": [101, 107], "margin": [102, 106, 113], "surviv": 102, "gate_id": 103, "gate_param": 103, "basi": [103, 114, 127], "m3": [105, 106, 107], "modif": [105, 127], "qpu": 105, "m3iqm": [105, 108], "mthree": [105, 108], "m3mitig": [105, 106], "iter_threshold": 106, "4096": 106, "modifi": [106, 123, 127], "work": [106, 108, 127, 128], "cals_from_system": 106, "initial_reset": 106, "rep_delai": 106, "cals_fil": 106, "async_c": 106, "cal_id": 106, "array_lik": 106, "min": 106, "1e4": 106, "max_shot": 106, "balanc": 106, "hardwar": [106, 126], "independ": 106, "reset": 106, "begin": 106, "delai": 106, "path": 106, "json": 106, "async": 106, "separ": [106, 123, 127], "thread": 106, "m3error": 106, "call": [106, 123], "while": [106, 127], "progress": 106, "against": [107, 127], "outcom": 107, "mit": [108, 127], "iter": [108, 113], "processor": 108, "argument": [108, 123, 128], "util": 108, "final_measurement_map": 108, "like": 108, "qubit_name_to_index": 108, "quasiprobabilti": 108, "we": [108, 127], "could": 108, "also": [108, 123, 127, 128], "would": 108, "out": [108, 127], "box": 108, "u": 108, "sinc": 108, "circuit_list": 110, "transpiled_qc_list": 111, "barrier": 111, "outermost": 111, "backend_label": 112, "prob_dist": 113, "bit": 113, "basis_g": 114, "drop_final_rz": 114, "target": 114, "optimization_level": 114, "sqg": 114, "virtual": 114, "z": 114, "drop": 114, "rz": 114, "emploi": 114, "iqm_job": [116, 117], "iqmjob": [116, 117, 120], "transpiled_circuit_list": 119, "sorted_indic": 119, "sorted_circuit": 119, "sent": [120, 127], "manag": [120, 127], "f": 121, "amount": [121, 122], "decor": 121, "statement": [121, 127], "counts_rang": 122, "extract": 122, "rang": [122, 123, 124, 128], "were": 122, "revert": 123, "ones": [123, 128], "bug": 123, "notebook": 123, "doc": [123, 128], "20": [123, 124], "now": [123, 124], "instead": [123, 128], "port": 123, "benchmark": [123, 125], "subclass": 123, "usag": 123, "iqm": [123, 127], "place": [123, 127], "miscellan": 123, "relax": 123, "depend": [123, 128], "api": [123, 126, 128], "build": [123, 128], "publish": 123, "overwrit": 123, "compress": [123, 128], "gst": 123, "tutori": 123, "remov": 123, "explicit": 123, "minor": 123, "compat": 123, "longer": 123, "move": 123, "renam": 123, "so": 123, "rebas": 123, "randomizedbenchmark": 123, "quantumvolum": 123, "serial": 123, "some": 123, "available_benchmark": 123, "__init__": 123, "public": 123, "improv": [123, 127], "hint": 123, "docstr": 123, "messag": 123, "prevent": 123, "exclus": [123, 127], "jupyt": 123, "load_ext": 124, "autoreload": 124, "extens": 124, "load": 124, "To": [124, 127, 128], "reload": 124, "reload_ext": 124, "fakeadoni": 124, "fakeapollo": 124, "garnet": [124, 128], "deneb": 124, "o": [124, 128], "environ": [124, 128], "iqm_token": [124, 128], "nb": 124, "randomized_benchmark": [124, 128], "clifford_rb": 124, "example_crb": 124, "9": [124, 127, 128], "13": [124, 128], "14": [124, 128], "17": [124, 128], "18": [124, 126, 128], "6": [124, 127, 128], "11": [124, 128], "15": 124, "16": 124, "benchmark_clifford_rb": 124, "run_clifford_rb": 124, "2024": [124, 126, 127], "12": [124, 126], "56": 124, "750": 124, "logging_config": 124, "info": 124, "successfulli": 124, "Will": 124, "31": 124, "63": 124, "831": 124, "992": 124, "341": 124, "040": 124, "469": 124, "23": 124, "291": 124, "292": 124, "349": 124, "541": 124, "600": 124, "756": 124, "837": 124, "24": 124, "025": 124, "30": [124, 128], "171": 124, "905": 124, "544": 124, "899": 124, "32": 124, "624": 124, "004": 124, "43": 124, "319": 124, "400": 124, "569": 124, "777": 124, "840": 124, "44": 124, "048": 124, "098": 124, "qubits_": 124, "_depth_1": 124, "323": 124, "45": 124, "186": 124, "_depth_3": 124, "225": 124, "_depth_7": 124, "267": 124, "_depth_15": 124, "314": 124, "_depth_31": 124, "315": 124, "364": 124, "_depth_63": 124, "416": 124, "417": 124, "476": 124, "542": 124, "615": 124, "616": 124, "697": 124, "789": 124, "890": 124, "conclud": 124, "result_clifford_rb": 124, "931": 124, "938": 124, "945": 124, "952": 124, "959": 124, "966": 124, "972": 124, "979": 124, "986": 124, "993": 124, "999": 124, "46": 124, "006": 124, "013": 124, "946844466999168": 124, "9429197366921651": 124, "attr": 124, "session_timestamp": 124, "20241217": 124, "115553": 124, "execution_timestamp": 124, "backend_configuration_nam": 124, "iqmfakeapollobackend": 124, "depth_1": 124, "time_circuit_gener": 124, "541001081466675": 124, "time_submit": 124, "0006990432739257812": 124, "time_retriev": 124, "22491073608398438": 124, "all_job_metadata": 124, "batch_job_1": 124, "job_id": 124, "8f305755": 124, "e038": 124, "4596": 124, "8617": 124, "d96ba3f42ca9": 124, "aer_simul": 124, "statu": 124, "circuits_in_batch": 124, "depth_3": 124, "05647683143615723": 124, "0005230903625488281": 124, "2fe0b406": 124, "8977": 124, "4567": 124, "bba0": 124, "d4168f0883ed": 124, "depth_7": 124, "19257187843322754": 124, "0004839897155761719": 124, "8299918c": 124, "be26": 124, "40d5": 124, "8778": 124, "9ea4468a1df2": 124, "depth_15": 124, "05831408500671387": 124, "0004811286926269531": 124, "174640c4": 124, "9ff3": 124, "4ca3": 124, "9ffc": 124, "d6aa5be304f3": 124, "depth_31": 124, "1564040184020996": 124, "0006189346313476562": 124, "7bb739f2": 124, "31bc": 124, "40af": 124, "8dbf": 124, "1d60a9310391": 124, "depth_63": 124, "08135986328125": 124, "0004200935363769531": 124, "f414a2c1": 124, "75c8": 124, "4d5a": 124, "9e4b": 124, "ccce29903f5f": 124, "147684812545776": 124, "0005502700805664062": 124, "00039887428283691406": 124, "8832576a": 124, "6d6e": 124, "4abe": 124, "8cfa": 124, "5001e6bb98e": 124, "08015298843383789": 124, "00039315223693847656": 124, "ecc1bcea": 124, "ef4c": 124, "4f35": 124, "9284": 124, "ab49af0c5b9f": 124, "16936397552490234": 124, "0003960132598876953": 124, "5582c842": 124, "0f07": 124, "46b6": 124, "96be": 124, "2fb3925b19d9": 124, "20774221420288086": 124, "0004191398620605469": 124, "6423b02b": 124, "8417": 124, "4300": 124, "b7ac": 124, "84d59f87a51f": 124, "0635080337524414": 124, "0004169940948486328": 124, "0b324804": 124, "44fe": 124, "4c16": 124, "83eb": 124, "08e5cd67aa79": 124, "20784401893615723": 124, "0004961490631103516": 124, "6c633640": 124, "d4b4": 124, "47de": 124, "a46d": 124, "d3ae4c84d212": 124, "avg_gate_fidel": 124, "0012220693932290373": 124, "001545469960991071": 124, "displai": [124, 127], "releas": 126, "date": [126, 127], "sourc": [126, 127], "code": [126, 127], "finland": 126, "character": 126, "verif": [126, 128], "tool": [126, 128], "develop": 126, "instal": 126, "mode": 126, "refer": [126, 128], "licens": 126, "changelog": 126, "search": 126, "page": [126, 127], "apach": 127, "januari": 127, "2004": 127, "AND": 127, "FOR": 127, "reproduct": 127, "shall": 127, "section": 127, "licensor": 127, "copyright": 127, "owner": 127, "entiti": 127, "author": 127, "grant": 127, "legal": 127, "act": 127, "control": 127, "For": [127, 128], "power": 127, "direct": 127, "indirect": 127, "caus": 127, "contract": 127, "ii": 127, "ownership": 127, "fifti": 127, "percent": 127, "50": 127, "outstand": 127, "iii": 127, "benefici": 127, "you": [127, 128], "your": [127, 128], "exercis": 127, "permiss": 127, "prefer": 127, "limit": 127, "softwar": 127, "file": 127, "mechan": 127, "transform": 127, "translat": 127, "compil": 127, "convers": 127, "media": 127, "authorship": 127, "made": 127, "notic": 127, "attach": 127, "appendix": 127, "below": [127, 128], "editori": 127, "revis": 127, "elabor": 127, "whole": 127, "remain": 127, "mere": 127, "link": 127, "bind": 127, "interfac": 127, "thereof": 127, "contribut": 127, "addit": 127, "intention": 127, "inclus": 127, "behalf": 127, "electron": 127, "verbal": 127, "written": 127, "commun": 127, "mail": 127, "issu": 127, "track": 127, "discuss": 127, "exclud": 127, "conspicu": 127, "mark": 127, "design": [127, 128], "Not": 127, "contributor": 127, "whom": 127, "been": 127, "receiv": 127, "incorpor": 127, "subject": 127, "herebi": 127, "perpetu": 127, "worldwid": 127, "charg": 127, "royalti": 127, "free": 127, "irrevoc": 127, "reproduc": 127, "publicli": 127, "sublicens": 127, "patent": 127, "except": 127, "offer": 127, "sell": 127, "transfer": 127, "claim": 127, "necessarili": 127, "infring": 127, "alon": 127, "combin": 127, "institut": 127, "litig": 127, "counterclaim": 127, "lawsuit": 127, "alleg": 127, "constitut": 127, "contributori": 127, "termin": [127, 128], "redistribut": 127, "mai": 127, "medium": 127, "without": [127, 128], "meet": 127, "follow": [127, 128], "must": [127, 128], "recipi": 127, "carri": 127, "promin": 127, "c": 127, "retain": 127, "trademark": 127, "pertain": 127, "part": 127, "d": 127, "text": 127, "readabl": 127, "along": 127, "wherev": 127, "third": 127, "parti": 127, "normal": 127, "appear": 127, "content": 127, "own": [127, 128], "alongsid": 127, "addendum": 127, "cannot": 127, "constru": 127, "compli": 127, "unless": 127, "explicitli": 127, "notwithstand": 127, "noth": 127, "herein": 127, "supersed": 127, "agreement": 127, "regard": 127, "trade": 127, "servic": [127, 128], "product": 127, "reason": 127, "customari": 127, "describ": 127, "disclaim": 127, "warranti": 127, "law": 127, "agre": 127, "AS": 127, "OR": 127, "OF": 127, "kind": 127, "express": 127, "impli": 127, "merchant": 127, "particular": 127, "sole": 127, "respons": 127, "appropri": 127, "risk": 127, "liabil": 127, "event": 127, "theori": 127, "tort": 127, "neglig": 127, "deliber": 127, "grossli": 127, "liabl": 127, "damag": 127, "special": 127, "incident": 127, "consequenti": 127, "charact": 127, "aris": 127, "inabl": 127, "loss": 127, "goodwil": 127, "stoppag": 127, "malfunct": 127, "commerci": 127, "even": 127, "advis": 127, "fee": 127, "indemn": 127, "oblig": 127, "right": 127, "howev": 127, "indemnifi": 127, "defend": 127, "hold": 127, "harmless": 127, "incur": 127, "assert": 127, "how": [127, 128], "boilerpl": 127, "enclos": 127, "bracket": 127, "don": 127, "t": 127, "comment": 127, "syntax": 127, "format": 127, "descript": 127, "print": 127, "easier": 127, "archiv": 127, "complianc": 127, "obtain": [127, 128], "languag": 127, "govern": 127, "repositori": [127, 128], "licenc": 127, "mgst": 127, "src": 127, "raphael": 127, "brieger": 127, "ingo": 127, "roth": 127, "martin": 127, "kliesch": 127, "folder": [127, 128], "comprehens": 128, "modular": 128, "easi": 128, "simpl": 128, "command": 128, "phy": 128, "rev": 128, "85": 128, "042311": 128, "2012": 128, "lett": 128, "109": 128, "080505": 128, "tomographi": 128, "prx": 128, "010325": 128, "2023": 128, "129": 128, "150502": 128, "2022": 128, "holist": 128, "032328": 128, "2019": 128, "entangl": 128, "0712": 128, "0921": 128, "2007": 128, "ieee": 128, "tran": 128, "eng": 128, "split": 128, "legaci": 128, "onc": 128, "handl": 128, "among": 128, "usual": 128, "sens": 128, "conda": 128, "isol": 128, "setup": 128, "global": 128, "That": 128, "plai": 128, "around": 128, "mess": 128, "rest": 128, "machin": 128, "pip": 128, "want": 128, "upgrad": 128, "clone": 128, "directori": 128, "test": 128, "strategi": 128, "eager": 128, "tox": 128, "access": 128, "reson": 128, "cloud": 128, "prem": 128, "adapt": 128, "platform": 128, "token": 128, "automat": 128, "authent": 128, "your_token": 128, "interleaved_rb": 128, "mirror_rb": 128, "quantum_volum": 128, "example_irb": 128, "iswapg": 128, "example_mrb": 128, "example_qv": 128, "500": 128, "60_000": 128, "iqmprovid": 128, "station": 128, "fi": 128, "coco": 128, "get_backend": 128, "example_experi": 128, "weekli": 128, "daili": 128, "gitlab": 128, "scheduled_experi": 128}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "benchmark_experiment"], [17, 0, 0, "-", "circuit_containers"], [21, 0, 0, "-", "entanglement"], [37, 0, 0, "-", "logging_config"], [38, 0, 0, "-", "optimization"], [42, 0, 0, "-", "quantum_volume"], [61, 0, 0, "-", "randomized_benchmarking"], [105, 0, 0, "-", "readout_mitigation"], [109, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.benchmark_experiment": [[16, 1, 1, "", "BenchmarkExperiment"]], "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment": [[16, 2, 1, "", "run_experiment"]], "iqm.benchmarks.circuit_containers": [[18, 1, 1, "", "BenchmarkCircuit"], [19, 1, 1, "", "CircuitGroup"], [20, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[18, 3, 1, "", "circuit_groups"], [18, 2, 1, "", "get_circuit_group_by_name"], [18, 4, 1, "", "group_names"], [18, 4, 1, "", "groups"], [18, 3, 1, "", "name"], [18, 4, 1, "", "qubit_indices"], [18, 4, 1, "", "qubit_layouts"], [18, 4, 1, "", "qubit_layouts_by_index"], [18, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[19, 2, 1, "", "add_circuit"], [19, 4, 1, "", "circuit_names"], [19, 3, 1, "", "circuits"], [19, 2, 1, "", "get_circuits_by_name"], [19, 3, 1, "", "name"], [19, 4, 1, "", "qubit_layouts"], [19, 4, 1, "", "qubit_layouts_by_index"], [19, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[20, 3, 1, "", "benchmark_circuits"], [20, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[22, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[23, 1, 1, "", "GHZBenchmark"], [24, 1, 1, "", "GHZConfiguration"], [25, 5, 1, "", "append_rms"], [26, 5, 1, "", "extract_fidelities"], [27, 5, 1, "", "fidelity_analysis"], [28, 5, 1, "", "fidelity_ghz_coherences"], [29, 5, 1, "", "fidelity_ghz_randomized_measurements"], [30, 5, 1, "", "generate_ghz_linear"], [31, 5, 1, "", "generate_ghz_log_cruz"], [32, 5, 1, "", "generate_ghz_log_mooney"], [33, 5, 1, "", "generate_ghz_spanning_tree"], [34, 5, 1, "", "get_cx_map"], [35, 5, 1, "", "get_edges"], [36, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[23, 2, 1, "", "add_configuration_to_dataset"], [23, 2, 1, "", "analysis_function"], [23, 2, 1, "", "execute"], [23, 2, 1, "", "generate_coherence_meas_circuits"], [23, 2, 1, "", "generate_native_ghz"], [23, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[24, 3, 1, "", "benchmark"], [24, 3, 1, "", "cal_url"], [24, 3, 1, "", "custom_qubits_array"], [24, 3, 1, "", "fidelity_routine"], [24, 3, 1, "", "mit_shots"], [24, 3, 1, "", "model_computed_fields"], [24, 3, 1, "", "model_config"], [24, 3, 1, "", "model_fields"], [24, 3, 1, "", "num_RMs"], [24, 3, 1, "", "optimize_sqg"], [24, 3, 1, "", "qiskit_optim_level"], [24, 3, 1, "", "qubit_counts"], [24, 3, 1, "", "rem"], [24, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[24, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[39, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[40, 1, 1, "", "QScoreBenchmark"], [41, 1, 1, "", "QScoreConfiguration"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[40, 2, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [40, 2, 1, "", "choose_qubits_custom"], [40, 2, 1, "", "choose_qubits_naive"], [40, 2, 1, "", "compute_expectation_value"], [40, 2, 1, "", "cost_function"], [40, 2, 1, "", "create_objective_function"], [40, 2, 1, "", "execute_full_benchmark"], [40, 2, 1, "", "execute_single_benchmark"], [40, 2, 1, "", "generate_maxcut_ansatz"], [40, 2, 1, "", "is_successful"], [40, 2, 1, "", "name"], [40, 2, 1, "", "plot_approximation_ratios"], [40, 2, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"]], "iqm.benchmarks.quantum_volume": [[43, 0, 0, "-", "clops"], [49, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[44, 1, 1, "", "CLOPSBenchmark"], [45, 1, 1, "", "CLOPSConfiguration"], [46, 5, 1, "", "clops_analysis"], [47, 5, 1, "", "plot_times"], [48, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[44, 2, 1, "", "add_all_meta_to_dataset"], [44, 2, 1, "", "analysis_function"], [44, 2, 1, "", "append_parameterized_unitary"], [44, 2, 1, "", "assign_random_parameters_to_all"], [44, 2, 1, "", "clops_cycle"], [44, 2, 1, "", "execute"], [44, 2, 1, "", "generate_circuit_list"], [44, 2, 1, "", "generate_random_parameters"], [44, 2, 1, "", "generate_single_circuit"], [44, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[45, 3, 1, "", "benchmark"], [45, 3, 1, "", "clops_h_bool"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "num_circuits"], [45, 3, 1, "", "num_shots"], [45, 3, 1, "", "num_updates"], [45, 3, 1, "", "optimize_sqg"], [45, 3, 1, "", "physical_layout"], [45, 3, 1, "", "qiskit_optim_level"], [45, 3, 1, "", "qubits"], [45, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[50, 1, 1, "", "QuantumVolumeBenchmark"], [51, 1, 1, "", "QuantumVolumeConfiguration"], [52, 5, 1, "", "compute_heavy_output_probabilities"], [53, 5, 1, "", "cumulative_hop"], [54, 5, 1, "", "cumulative_std"], [55, 5, 1, "", "get_ideal_heavy_outputs"], [56, 5, 1, "", "get_rem_hops"], [57, 5, 1, "", "heavy_projector"], [58, 5, 1, "", "is_successful"], [59, 5, 1, "", "plot_hop_threshold"], [60, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[50, 2, 1, "", "add_all_circuits_to_dataset"], [50, 2, 1, "", "add_all_meta_to_dataset"], [50, 2, 1, "", "analysis_function"], [50, 2, 1, "", "execute"], [50, 2, 1, "", "generate_circuit_list"], [50, 2, 1, "", "generate_single_circuit"], [50, 2, 1, "", "get_rem_quasidistro"], [50, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[51, 3, 1, "", "benchmark"], [51, 3, 1, "", "choose_qubits_routine"], [51, 3, 1, "", "custom_qubits_array"], [51, 3, 1, "", "mit_shots"], [51, 3, 1, "", "model_computed_fields"], [51, 3, 1, "", "model_config"], [51, 3, 1, "", "model_fields"], [51, 3, 1, "", "num_circuits"], [51, 3, 1, "", "num_sigmas"], [51, 3, 1, "", "optimize_sqg"], [51, 3, 1, "", "physical_layout"], [51, 3, 1, "", "qiskit_optim_level"], [51, 3, 1, "", "rem"], [51, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[62, 0, 0, "-", "clifford_rb"], [67, 0, 0, "-", "interleaved_rb"], [72, 0, 0, "-", "mirror_rb"], [82, 0, 0, "-", "multi_lmfit"], [87, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[63, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[64, 1, 1, "", "CliffordRBConfiguration"], [65, 1, 1, "", "CliffordRandomizedBenchmarking"], [66, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[64, 3, 1, "", "benchmark"], [64, 3, 1, "", "model_computed_fields"], [64, 3, 1, "", "model_config"], [64, 3, 1, "", "model_fields"], [64, 3, 1, "", "num_circuit_samples"], [64, 3, 1, "", "parallel_execution"], [64, 3, 1, "", "qubits_array"], [64, 3, 1, "", "sequence_lengths"], [64, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[65, 2, 1, "", "add_all_circuits_to_dataset"], [65, 2, 1, "", "add_all_metadata_to_dataset"], [65, 2, 1, "", "analysis_function"], [65, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[68, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[69, 1, 1, "", "InterleavedRBConfiguration"], [70, 1, 1, "", "InterleavedRandomizedBenchmarking"], [71, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[69, 3, 1, "", "interleaved_gate"], [69, 3, 1, "", "interleaved_gate_params"], [69, 3, 1, "", "model_computed_fields"], [69, 3, 1, "", "model_config"], [69, 3, 1, "", "model_fields"], [69, 3, 1, "", "num_circuit_samples"], [69, 3, 1, "", "parallel_execution"], [69, 3, 1, "", "qubits_array"], [69, 3, 1, "", "sequence_lengths"], [69, 3, 1, "", "shots"], [69, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[70, 2, 1, "", "add_all_circuits_to_dataset"], [70, 2, 1, "", "add_all_meta_to_dataset"], [70, 2, 1, "", "analysis_function"], [70, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[73, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[74, 1, 1, "", "MirrorRBConfiguration"], [75, 1, 1, "", "MirrorRandomizedBenchmarking"], [76, 5, 1, "", "compute_polarizations"], [77, 5, 1, "", "edge_grab"], [78, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [79, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [80, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [81, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[74, 3, 1, "", "benchmark"], [74, 3, 1, "", "density_2q_gates"], [74, 3, 1, "", "depths_array"], [74, 3, 1, "", "model_computed_fields"], [74, 3, 1, "", "model_config"], [74, 3, 1, "", "model_fields"], [74, 3, 1, "", "num_circuit_samples"], [74, 3, 1, "", "num_pauli_samples"], [74, 3, 1, "", "qiskit_optim_level"], [74, 3, 1, "", "qubits_array"], [74, 3, 1, "", "routing_method"], [74, 3, 1, "", "shots"], [74, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[75, 2, 1, "", "add_all_meta_to_dataset"], [75, 2, 1, "", "analysis_function"], [75, 2, 1, "", "execute"], [75, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[83, 5, 1, "", "create_multi_dataset_params"], [84, 5, 1, "", "eval_func_single_dataset"], [85, 5, 1, "", "get_param_names_from_func_signature"], [86, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[88, 5, 1, "", "compute_inverse_clifford"], [89, 5, 1, "", "estimate_survival_probabilities"], [90, 5, 1, "", "exponential_rb"], [91, 5, 1, "", "fit_decay_lmfit"], [92, 5, 1, "", "generate_all_rb_circuits"], [93, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [94, 5, 1, "", "generate_random_clifford_seq_circuits"], [95, 5, 1, "", "get_survival_probabilities"], [96, 5, 1, "", "import_native_gate_cliffords"], [97, 5, 1, "", "lmfit_minimizer"], [98, 5, 1, "", "plot_rb_decay"], [99, 5, 1, "", "relabel_qubits_array_from_zero"], [100, 5, 1, "", "submit_parallel_rb_job"], [101, 5, 1, "", "submit_sequential_rb_jobs"], [102, 5, 1, "", "survival_probabilities_parallel"], [103, 5, 1, "", "validate_irb_gate"], [104, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[106, 1, 1, "", "M3IQM"], [107, 5, 1, "", "apply_readout_error_mitigation"], [108, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[106, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[110, 5, 1, "", "count_2q_layers"], [111, 5, 1, "", "count_native_gates"], [112, 5, 1, "", "get_iqm_backend"], [113, 5, 1, "", "marginal_distribution"], [114, 5, 1, "", "perform_backend_transpilation"], [115, 5, 1, "", "reduce_to_active_qubits"], [116, 5, 1, "", "retrieve_all_counts"], [117, 5, 1, "", "retrieve_all_job_metadata"], [118, 5, 1, "", "set_coupling_map"], [119, 5, 1, "", "sort_batches_by_final_layout"], [120, 5, 1, "", "submit_execute"], [121, 5, 1, "", "timeit"], [122, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "benchmark_experi": [15, 16], "benchmarkexperi": 16, "circuit_contain": [17, 18, 19, 20], "benchmarkcircuit": 18, "circuitgroup": 19, "circuit": 20, "entangl": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "ghz": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "ghzbenchmark": 23, "ghzconfigur": 24, "append_rm": 25, "extract_fidel": 26, "fidelity_analysi": 27, "fidelity_ghz_coher": 28, "fidelity_ghz_randomized_measur": 29, "generate_ghz_linear": 30, "generate_ghz_log_cruz": 31, "generate_ghz_log_moonei": 32, "generate_ghz_spanning_tre": 33, "get_cx_map": 34, "get_edg": 35, "plot_fidel": 36, "logging_config": 37, "optim": [38, 39, 40, 41], "qscore": [39, 40, 41], "qscorebenchmark": 40, "qscoreconfigur": 41, "quantum_volum": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "clop": [43, 44, 45, 46, 47, 48], "clopsbenchmark": 44, "clopsconfigur": 45, "clops_analysi": 46, "plot_tim": 47, "retrieve_clops_elapsed_tim": 48, "quantumvolumebenchmark": 50, "quantumvolumeconfigur": 51, "compute_heavy_output_prob": 52, "cumulative_hop": 53, "cumulative_std": 54, "get_ideal_heavy_output": 55, "get_rem_hop": 56, "heavy_projector": 57, "is_success": 58, "plot_hop_threshold": 59, "qv_analysi": 60, "randomized_benchmark": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "clifford_rb": [62, 63, 64, 65, 66], "cliffordrbconfigur": 64, "cliffordrandomizedbenchmark": 65, "clifford_rb_analysi": 66, "interleaved_rb": [67, 68, 69, 70, 71], "interleavedrbconfigur": 69, "interleavedrandomizedbenchmark": 70, "interleaved_rb_analysi": 71, "mirror_rb": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "mirrorrbconfigur": 74, "mirrorrandomizedbenchmark": 75, "compute_polar": 76, "edge_grab": 77, "generate_fixed_depth_mrb_circuit": 78, "generate_pauli_dressed_mrb_circuit": 79, "list_to_numcircuit_times_numpauli_matrix": 80, "mrb_analysi": 81, "multi_lmfit": [82, 83, 84, 85, 86], "create_multi_dataset_param": 83, "eval_func_single_dataset": 84, "get_param_names_from_func_signatur": 85, "multi_dataset_residu": 86, "randomized_benchmarking_common": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "compute_inverse_clifford": 88, "estimate_survival_prob": 89, "exponential_rb": 90, "fit_decay_lmfit": 91, "generate_all_rb_circuit": 92, "generate_fixed_depth_parallel_rb_circuit": 93, "generate_random_clifford_seq_circuit": 94, "get_survival_prob": 95, "import_native_gate_clifford": 96, "lmfit_minim": 97, "plot_rb_decai": 98, "relabel_qubits_array_from_zero": 99, "submit_parallel_rb_job": 100, "submit_sequential_rb_job": 101, "survival_probabilities_parallel": 102, "validate_irb_g": 103, "validate_rb_qubit": 104, "readout_mitig": [105, 106, 107, 108], "m3iqm": 106, "apply_readout_error_mitig": 107, "readout_error_m3": 108, "util": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "count_2q_lay": 110, "count_native_g": 111, "get_iqm_backend": 112, "marginal_distribut": 113, "perform_backend_transpil": 114, "reduce_to_active_qubit": 115, "retrieve_all_count": 116, "retrieve_all_job_metadata": 117, "set_coupling_map": 118, "sort_batches_by_final_layout": 119, "submit_execut": 120, "timeit": 121, "xrvariable_to_count": 122, "changelog": 123, "version": 123, "2": 123, "3": 123, "1": 123, "0": 123, "12": 123, "11": 123, "10": 123, "9": 123, "8": 123, "7": 123, "6": 123, "5": 123, "4": 123, "clifford": 124, "random": 124, "rb": 124, "exampl": [124, 125], "choos": 124, "defin": 124, "backend": 124, "set": 124, "token": 124, "us": [124, 128], "reson": 124, "configur": 124, "run": 124, "experi": 124, "perform": 124, "analysi": 124, "content": 126, "indic": 126, "tabl": 126, "licens": 127, "instal": 128, "latest": 128, "releas": 128, "develop": 128, "mode": 128, "chang": 128, "recommend": 128, "character": 128, "physic": 128, "hardwar": 128, "jupyt": 128, "notebook": 128, "python": 128, "script": 128, "schedul": 128, "ci": 128, "cd": 128, "pipelin": 128}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.benchmark_experiment": [[15, "module-iqm.benchmarks.benchmark_experiment"]], "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment": [[16, "iqm-benchmarks-benchmark-experiment-benchmarkexperiment"]], "iqm.benchmarks.circuit_containers": [[17, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[18, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[19, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[20, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.entanglement": [[21, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[22, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[23, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[24, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.append_rms": [[25, "iqm-benchmarks-entanglement-ghz-append-rms"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[26, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[27, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[28, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[29, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[30, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[31, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[32, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[33, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[34, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[35, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[36, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[37, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[38, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[39, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[40, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[41, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.quantum_volume": [[42, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[43, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[44, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[45, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[46, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[47, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[48, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[49, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[50, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[51, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[52, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[53, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[54, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[55, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[56, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[57, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[58, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[59, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[60, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[61, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[62, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[63, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[64, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[65, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[66, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[67, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[69, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[70, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[71, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[72, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[73, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[74, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[75, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[76, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[77, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[78, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[79, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[80, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[81, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[82, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[83, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[84, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[85, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[86, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[87, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[88, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[89, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[90, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[91, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[92, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[93, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[94, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[95, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[96, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[97, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[98, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[99, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[100, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[101, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[102, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[103, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[104, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[105, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[106, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[107, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[108, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[109, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.count_2q_layers": [[110, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[111, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[112, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[113, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[114, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[115, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[116, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[117, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[118, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[119, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[120, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[121, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[122, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[123, "changelog"]], "Version 2.3": [[123, "version-2-3"]], "Version 2.2": [[123, "version-2-2"]], "Version 2.1": [[123, "version-2-1"]], "Version 2.0": [[123, "version-2-0"]], "Version 1.12": [[123, "version-1-12"]], "Version 1.11": [[123, "version-1-11"]], "Version 1.10": [[123, "version-1-10"]], "Version 1.9": [[123, "version-1-9"]], "Version 1.8": [[123, "version-1-8"]], "Version 1.7": [[123, "version-1-7"]], "Version 1.6": [[123, "version-1-6"]], "Version 1.5": [[123, "version-1-5"]], "Version 1.4": [[123, "version-1-4"]], "Version 1.3": [[123, "version-1-3"]], "Version 1.2": [[123, "version-1-2"]], "Version 1.1": [[123, "version-1-1"]], "Version 1.0": [[123, "version-1-0"]], "Clifford Randomized Benchmarking (RB) Example": [[124, "clifford-randomized-benchmarking-rb-example"]], "Choose (or define) a backend": [[124, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[124, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[124, "randomized-benchmarking-configuration"]], "Run the experiment": [[124, "run-the-experiment"]], "Perform the analysis": [[124, "perform-the-analysis"]], "Examples": [[125, "examples"]], "IQM Benchmarks": [[126, "iqm-benchmarks"], [128, "iqm-benchmarks"]], "Contents": [[126, "contents"]], "Indices and tables": [[126, "indices-and-tables"]], "License": [[127, "license"]], "Installation (latest release)": [[128, "installation-latest-release"]], "Development mode (latest changes: recommended)": [[128, "development-mode-latest-changes-recommended"]], "Characterize Physical Hardware": [[128, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[128, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[128, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.benchmark_experiment"], [17, "module-iqm.benchmarks.circuit_containers"], [21, "module-iqm.benchmarks.entanglement"], [22, "module-iqm.benchmarks.entanglement.ghz"], [37, "module-iqm.benchmarks.logging_config"], [38, "module-iqm.benchmarks.optimization"], [39, "module-iqm.benchmarks.optimization.qscore"], [42, "module-iqm.benchmarks.quantum_volume"], [43, "module-iqm.benchmarks.quantum_volume.clops"], [49, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [61, "module-iqm.benchmarks.randomized_benchmarking"], [62, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [63, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [67, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [68, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [72, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [73, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [82, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [87, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [105, "module-iqm.benchmarks.readout_mitigation"], [109, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.benchmark_experiment": [[15, "module-iqm.benchmarks.benchmark_experiment"]], "benchmarkexperiment (class in iqm.benchmarks.benchmark_experiment)": [[16, "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment"]], "run_experiment() (iqm.benchmarks.benchmark_experiment.benchmarkexperiment method)": [[16, "iqm.benchmarks.benchmark_experiment.BenchmarkExperiment.run_experiment"]], "iqm.benchmarks.circuit_containers": [[17, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[18, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[19, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[19, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[19, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[19, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[19, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[19, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[19, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[19, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[19, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[20, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[20, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[20, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[21, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[22, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[23, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[23, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[23, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[23, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[23, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[23, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[24, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "append_rms() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.append_rms"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[33, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[34, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[35, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[36, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[37, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[38, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[39, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "calculate_optimal_angles_for_qaoa_p1() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.calculate_optimal_angles_for_QAOA_p1"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "compute_expectation_value() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.compute_expectation_value"]], "cost_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.cost_function"]], "create_objective_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.create_objective_function"]], "execute_full_benchmark() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute_full_benchmark"]], "execute_single_benchmark() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute_single_benchmark"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "is_successful() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.is_successful"]], "name() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.name"]], "plot_approximation_ratios() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.plot_approximation_ratios"]], "run_qaoa() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[40, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.run_QAOA"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[41, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[41, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[41, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[41, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "iqm.benchmarks.quantum_volume": [[42, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[43, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[44, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[45, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[46, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[47, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[48, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[49, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[50, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[52, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[53, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[54, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[55, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[59, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[60, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[61, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[62, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[63, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[64, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[65, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[65, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[65, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[65, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[65, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[66, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[67, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[69, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[70, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[70, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[70, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[70, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[70, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[71, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[72, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[73, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[74, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[75, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[75, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[75, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[75, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[75, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[76, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[77, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[78, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[79, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[82, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[83, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[84, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[85, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[86, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[87, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[88, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[89, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[90, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[91, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[92, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[93, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[94, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[95, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[96, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[97, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[98, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[99, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[100, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[101, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[102, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[103, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[104, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[105, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[106, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[106, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[107, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[108, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[109, "module-iqm.benchmarks.utils"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[110, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[111, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[112, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[113, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[114, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[115, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[116, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[117, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[118, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[119, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[120, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[121, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[122, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})